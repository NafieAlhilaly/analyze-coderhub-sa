{"ast":null,"code":"\"use strict\";\n\nmodule.exports = createTextSprites;\n\nvar createBuffer = require('gl-buffer');\n\nvar createVAO = require('gl-vao');\n\nvar vectorizeText = require('vectorize-text');\n\nvar createShader = require('./shaders').text;\n\nvar globals = window || process.global || {};\n\nvar __TEXT_CACHE = globals.__TEXT_CACHE || {};\n\nglobals.__TEXT_CACHE = {}; //Vertex buffer format for text is:\n//\n/// [x,y,z] = Spatial coordinate\n//\n\nvar VERTEX_SIZE = 3;\n\nfunction TextSprites(gl, shader, buffer, vao) {\n  this.gl = gl;\n  this.shader = shader;\n  this.buffer = buffer;\n  this.vao = vao;\n  this.tickOffset = this.tickCount = this.labelOffset = this.labelCount = null;\n}\n\nvar proto = TextSprites.prototype; //Bind textures for rendering\n\nvar SHAPE = [0, 0];\n\nproto.bind = function (model, view, projection, pixelScale) {\n  this.vao.bind();\n  this.shader.bind();\n  var uniforms = this.shader.uniforms;\n  uniforms.model = model;\n  uniforms.view = view;\n  uniforms.projection = projection;\n  uniforms.pixelScale = pixelScale;\n  SHAPE[0] = this.gl.drawingBufferWidth;\n  SHAPE[1] = this.gl.drawingBufferHeight;\n  this.shader.uniforms.resolution = SHAPE;\n};\n\nproto.unbind = function () {\n  this.vao.unbind();\n};\n\nproto.update = function (bounds, labels, labelFont, ticks, tickFont) {\n  var data = [];\n\n  function addItem(t, text, font, size, lineSpacing, styletags) {\n    var fontcache = __TEXT_CACHE[font];\n\n    if (!fontcache) {\n      fontcache = __TEXT_CACHE[font] = {};\n    }\n\n    var mesh = fontcache[text];\n\n    if (!mesh) {\n      mesh = fontcache[text] = tryVectorizeText(text, {\n        triangles: true,\n        font: font,\n        textAlign: 'center',\n        textBaseline: 'middle',\n        lineSpacing: lineSpacing,\n        styletags: styletags\n      });\n    }\n\n    var scale = (size || 12) / 12;\n    var positions = mesh.positions;\n    var cells = mesh.cells;\n\n    for (var i = 0, nc = cells.length; i < nc; ++i) {\n      var c = cells[i];\n\n      for (var j = 2; j >= 0; --j) {\n        var p = positions[c[j]];\n        data.push(scale * p[0], -scale * p[1], t);\n      }\n    }\n  } //Generate sprites for all 3 axes, store data in texture atlases\n\n\n  var tickOffset = [0, 0, 0];\n  var tickCount = [0, 0, 0];\n  var labelOffset = [0, 0, 0];\n  var labelCount = [0, 0, 0];\n  var lineSpacing = 1.25;\n  var styletags = {\n    breaklines: true,\n    bolds: true,\n    italics: true,\n    subscripts: true,\n    superscripts: true\n  };\n\n  for (var d = 0; d < 3; ++d) {\n    //Generate label\n    labelOffset[d] = data.length / VERTEX_SIZE | 0;\n    addItem(0.5 * (bounds[0][d] + bounds[1][d]), labels[d], labelFont[d], 12, // labelFontSize\n    lineSpacing, styletags);\n    labelCount[d] = (data.length / VERTEX_SIZE | 0) - labelOffset[d]; //Generate sprites for tick marks\n\n    tickOffset[d] = data.length / VERTEX_SIZE | 0;\n\n    for (var i = 0; i < ticks[d].length; ++i) {\n      if (!ticks[d][i].text) {\n        continue;\n      }\n\n      addItem(ticks[d][i].x, ticks[d][i].text, ticks[d][i].font || tickFont, ticks[d][i].fontSize || 12, lineSpacing, styletags);\n    }\n\n    tickCount[d] = (data.length / VERTEX_SIZE | 0) - tickOffset[d];\n  }\n\n  this.buffer.update(data);\n  this.tickOffset = tickOffset;\n  this.tickCount = tickCount;\n  this.labelOffset = labelOffset;\n  this.labelCount = labelCount;\n}; //Draws the tick marks for an axis\n\n\nproto.drawTicks = function (d, scale, angle, offset, color, axis, alignDir, alignOpt) {\n  if (!this.tickCount[d]) {\n    return;\n  }\n\n  this.shader.uniforms.axis = axis;\n  this.shader.uniforms.color = color;\n  this.shader.uniforms.angle = angle;\n  this.shader.uniforms.scale = scale;\n  this.shader.uniforms.offset = offset;\n  this.shader.uniforms.alignDir = alignDir;\n  this.shader.uniforms.alignOpt = alignOpt;\n  this.vao.draw(this.gl.TRIANGLES, this.tickCount[d], this.tickOffset[d]);\n}; //Draws the text label for an axis\n\n\nproto.drawLabel = function (d, scale, angle, offset, color, axis, alignDir, alignOpt) {\n  if (!this.labelCount[d]) {\n    return;\n  }\n\n  this.shader.uniforms.axis = axis;\n  this.shader.uniforms.color = color;\n  this.shader.uniforms.angle = angle;\n  this.shader.uniforms.scale = scale;\n  this.shader.uniforms.offset = offset;\n  this.shader.uniforms.alignDir = alignDir;\n  this.shader.uniforms.alignOpt = alignOpt;\n  this.vao.draw(this.gl.TRIANGLES, this.labelCount[d], this.labelOffset[d]);\n}; //Releases all resources attached to this object\n\n\nproto.dispose = function () {\n  this.shader.dispose();\n  this.vao.dispose();\n  this.buffer.dispose();\n};\n\nfunction tryVectorizeText(text, options) {\n  try {\n    return vectorizeText(text, options);\n  } catch (e) {\n    console.warn('error vectorizing text:\"' + text + '\" error:', e);\n    return {\n      cells: [],\n      positions: []\n    };\n  }\n}\n\nfunction createTextSprites(gl, bounds, labels, labelFont, ticks, tickFont) {\n  var buffer = createBuffer(gl);\n  var vao = createVAO(gl, [{\n    \"buffer\": buffer,\n    \"size\": 3\n  }]);\n  var shader = createShader(gl);\n  shader.attributes.position.location = 0;\n  var result = new TextSprites(gl, shader, buffer, vao);\n  result.update(bounds, labels, labelFont, ticks, tickFont);\n  return result;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/gl-axes3d/lib/text.js"],"names":["module","exports","createTextSprites","createBuffer","require","createVAO","vectorizeText","createShader","text","globals","window","process","global","__TEXT_CACHE","VERTEX_SIZE","TextSprites","gl","shader","buffer","vao","tickOffset","tickCount","labelOffset","labelCount","proto","prototype","SHAPE","bind","model","view","projection","pixelScale","uniforms","drawingBufferWidth","drawingBufferHeight","resolution","unbind","update","bounds","labels","labelFont","ticks","tickFont","data","addItem","t","font","size","lineSpacing","styletags","fontcache","mesh","tryVectorizeText","triangles","textAlign","textBaseline","scale","positions","cells","i","nc","length","c","j","p","push","breaklines","bolds","italics","subscripts","superscripts","d","x","fontSize","drawTicks","angle","offset","color","axis","alignDir","alignOpt","draw","TRIANGLES","drawLabel","dispose","options","e","console","warn","attributes","position","location","result"],"mappings":"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","sourcesContent":["\"use strict\"\n\nmodule.exports = createTextSprites\n\nvar createBuffer  = require('gl-buffer')\nvar createVAO     = require('gl-vao')\nvar vectorizeText = require('vectorize-text')\nvar createShader  = require('./shaders').text\n\nvar globals = window || process.global || {}\nvar __TEXT_CACHE  = globals.__TEXT_CACHE || {}\nglobals.__TEXT_CACHE = {}\n\n//Vertex buffer format for text is:\n//\n/// [x,y,z] = Spatial coordinate\n//\n\nvar VERTEX_SIZE = 3\n\nfunction TextSprites(\n  gl,\n  shader,\n  buffer,\n  vao) {\n  this.gl           = gl\n  this.shader       = shader\n  this.buffer       = buffer\n  this.vao          = vao\n  this.tickOffset   =\n  this.tickCount    =\n  this.labelOffset  =\n  this.labelCount   = null\n}\n\nvar proto = TextSprites.prototype\n\n//Bind textures for rendering\nvar SHAPE = [0,0]\nproto.bind = function(model, view, projection, pixelScale) {\n  this.vao.bind()\n  this.shader.bind()\n  var uniforms = this.shader.uniforms\n  uniforms.model = model\n  uniforms.view = view\n  uniforms.projection = projection\n  uniforms.pixelScale = pixelScale\n  SHAPE[0] = this.gl.drawingBufferWidth\n  SHAPE[1] = this.gl.drawingBufferHeight\n  this.shader.uniforms.resolution = SHAPE\n}\n\nproto.unbind = function() {\n  this.vao.unbind()\n}\n\nproto.update = function(bounds, labels, labelFont, ticks, tickFont) {\n  var data = []\n\n  function addItem(t, text, font, size, lineSpacing, styletags) {\n    var fontcache = __TEXT_CACHE[font]\n    if(!fontcache) {\n      fontcache = __TEXT_CACHE[font] = {}\n    }\n    var mesh = fontcache[text]\n    if(!mesh) {\n      mesh = fontcache[text] = tryVectorizeText(text, {\n        triangles: true,\n        font: font,\n        textAlign: 'center',\n        textBaseline: 'middle',\n        lineSpacing: lineSpacing,\n        styletags: styletags\n      })\n    }\n    var scale = (size || 12) / 12\n    var positions = mesh.positions\n    var cells = mesh.cells\n    for(var i=0, nc=cells.length; i<nc; ++i) {\n      var c = cells[i]\n      for(var j=2; j>=0; --j) {\n        var p = positions[c[j]]\n        data.push(scale*p[0], -scale*p[1], t)\n      }\n    }\n  }\n\n  //Generate sprites for all 3 axes, store data in texture atlases\n  var tickOffset  = [0,0,0]\n  var tickCount   = [0,0,0]\n  var labelOffset = [0,0,0]\n  var labelCount  = [0,0,0]\n  var lineSpacing = 1.25\n  var styletags = {\n    breaklines:true,\n    bolds: true,\n    italics: true,\n    subscripts:true,\n    superscripts:true\n  }\n  for(var d=0; d<3; ++d) {\n\n    //Generate label\n    labelOffset[d] = (data.length/VERTEX_SIZE)|0\n    addItem(\n      0.5*(bounds[0][d]+bounds[1][d]),\n      labels[d],\n      labelFont[d],\n      12, // labelFontSize\n      lineSpacing,\n      styletags\n    )\n    labelCount[d] = ((data.length/VERTEX_SIZE)|0) - labelOffset[d]\n\n    //Generate sprites for tick marks\n    tickOffset[d] = (data.length/VERTEX_SIZE)|0\n    for(var i=0; i<ticks[d].length; ++i) {\n      if(!ticks[d][i].text) {\n        continue\n      }\n      addItem(\n        ticks[d][i].x,\n        ticks[d][i].text,\n        ticks[d][i].font || tickFont,\n        ticks[d][i].fontSize || 12,\n        lineSpacing,\n        styletags\n      )\n    }\n    tickCount[d] = ((data.length/VERTEX_SIZE)|0) - tickOffset[d]\n  }\n\n  this.buffer.update(data)\n  this.tickOffset = tickOffset\n  this.tickCount = tickCount\n  this.labelOffset = labelOffset\n  this.labelCount = labelCount\n}\n\n//Draws the tick marks for an axis\nproto.drawTicks = function(d, scale, angle, offset, color, axis, alignDir, alignOpt) {\n  if(!this.tickCount[d]) {\n    return\n  }\n\n  this.shader.uniforms.axis = axis\n  this.shader.uniforms.color = color\n  this.shader.uniforms.angle = angle\n  this.shader.uniforms.scale = scale\n  this.shader.uniforms.offset = offset\n  this.shader.uniforms.alignDir = alignDir\n  this.shader.uniforms.alignOpt = alignOpt\n  this.vao.draw(this.gl.TRIANGLES, this.tickCount[d], this.tickOffset[d])\n}\n\n//Draws the text label for an axis\nproto.drawLabel = function(d, scale, angle, offset, color, axis, alignDir, alignOpt) {\n  if(!this.labelCount[d]) {\n    return\n  }\n\n  this.shader.uniforms.axis = axis\n  this.shader.uniforms.color = color\n  this.shader.uniforms.angle = angle\n  this.shader.uniforms.scale = scale\n  this.shader.uniforms.offset = offset\n  this.shader.uniforms.alignDir = alignDir\n  this.shader.uniforms.alignOpt = alignOpt\n  this.vao.draw(this.gl.TRIANGLES, this.labelCount[d], this.labelOffset[d])\n}\n\n//Releases all resources attached to this object\nproto.dispose = function() {\n  this.shader.dispose()\n  this.vao.dispose()\n  this.buffer.dispose()\n}\n\nfunction tryVectorizeText(text, options) {\n  try {\n    return vectorizeText(text, options)\n  } catch(e) {\n    console.warn('error vectorizing text:\"' + text + '\" error:', e)\n    return {\n      cells: [],\n      positions: []\n    }\n  }\n}\n\nfunction createTextSprites(\n    gl,\n    bounds,\n    labels,\n    labelFont,\n    ticks,\n    tickFont) {\n\n  var buffer = createBuffer(gl)\n  var vao = createVAO(gl, [\n    { \"buffer\": buffer,\n      \"size\": 3\n    }\n  ])\n\n  var shader = createShader(gl)\n  shader.attributes.position.location = 0\n\n  var result = new TextSprites(\n    gl,\n    shader,\n    buffer,\n    vao)\n\n  result.update(bounds, labels, labelFont, ticks, tickFont)\n\n  return result\n}\n"]},"metadata":{},"sourceType":"script"}