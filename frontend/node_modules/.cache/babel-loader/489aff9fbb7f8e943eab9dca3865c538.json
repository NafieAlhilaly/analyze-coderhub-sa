{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar _ = Lib._;\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar alignPeriod = require('../../plots/cartesian/align_period');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nfunction calc(gd, trace) {\n  var xa = Axes.getFromId(gd, trace.xaxis);\n  var ya = Axes.getFromId(gd, trace.yaxis);\n  var tickLen = convertTickWidth(gd, xa, trace);\n  var minDiff = trace._minDiff;\n  trace._minDiff = null;\n  var origX = trace._origX;\n  trace._origX = null;\n  var x = trace._xcalc;\n  trace._xcalc = null;\n  var cd = calcCommon(gd, trace, origX, x, ya, ptFunc);\n  trace._extremes[xa._id] = Axes.findExtremes(xa, x, {\n    vpad: minDiff / 2\n  });\n\n  if (cd.length) {\n    Lib.extendFlat(cd[0].t, {\n      wHover: minDiff / 2,\n      tickLen: tickLen\n    });\n    return cd;\n  } else {\n    return [{\n      t: {\n        empty: true\n      }\n    }];\n  }\n}\n\nfunction ptFunc(o, h, l, c) {\n  return {\n    o: o,\n    h: h,\n    l: l,\n    c: c\n  };\n} // shared between OHLC and candlestick\n// ptFunc makes a calcdata point specific to each trace type, from oi, hi, li, ci\n\n\nfunction calcCommon(gd, trace, origX, x, ya, ptFunc) {\n  var o = ya.makeCalcdata(trace, 'open');\n  var h = ya.makeCalcdata(trace, 'high');\n  var l = ya.makeCalcdata(trace, 'low');\n  var c = ya.makeCalcdata(trace, 'close');\n  var hasTextArray = Array.isArray(trace.text);\n  var hasHovertextArray = Array.isArray(trace.hovertext); // we're optimists - before we have any changing data, assume increasing\n\n  var increasing = true;\n  var cPrev = null;\n  var hasPeriod = !!trace.xperiodalignment;\n  var cd = [];\n\n  for (var i = 0; i < x.length; i++) {\n    var xi = x[i];\n    var oi = o[i];\n    var hi = h[i];\n    var li = l[i];\n    var ci = c[i];\n\n    if (xi !== BADNUM && oi !== BADNUM && hi !== BADNUM && li !== BADNUM && ci !== BADNUM) {\n      if (ci === oi) {\n        // if open == close, look for a change from the previous close\n        if (cPrev !== null && ci !== cPrev) increasing = ci > cPrev; // else (c === cPrev or cPrev is null) no change\n      } else increasing = ci > oi;\n\n      cPrev = ci;\n      var pt = ptFunc(oi, hi, li, ci);\n      pt.pos = xi;\n      pt.yc = (oi + ci) / 2;\n      pt.i = i;\n      pt.dir = increasing ? 'increasing' : 'decreasing'; // For categoryorder, store low and high\n\n      pt.x = pt.pos;\n      pt.y = [li, hi];\n      if (hasPeriod) pt.orig_p = origX[i]; // used by hover\n\n      if (hasTextArray) pt.tx = trace.text[i];\n      if (hasHovertextArray) pt.htx = trace.hovertext[i];\n      cd.push(pt);\n    } else {\n      cd.push({\n        pos: xi,\n        empty: true\n      });\n    }\n  }\n\n  trace._extremes[ya._id] = Axes.findExtremes(ya, Lib.concat(l, h), {\n    padded: true\n  });\n\n  if (cd.length) {\n    cd[0].t = {\n      labels: {\n        open: _(gd, 'open:') + ' ',\n        high: _(gd, 'high:') + ' ',\n        low: _(gd, 'low:') + ' ',\n        close: _(gd, 'close:') + ' '\n      }\n    };\n  }\n\n  return cd;\n}\n/*\n * find min x-coordinates difference of all traces\n * attached to this x-axis and stash the result in _minDiff\n * in all traces; when a trace uses this in its\n * calc step it deletes _minDiff, so that next calc this is\n * done again in case the data changed.\n * also since we need it here, stash _xcalc (and _origX) on the trace\n */\n\n\nfunction convertTickWidth(gd, xa, trace) {\n  var minDiff = trace._minDiff;\n\n  if (!minDiff) {\n    var fullData = gd._fullData;\n    var ohlcTracesOnThisXaxis = [];\n    minDiff = Infinity;\n    var i;\n\n    for (i = 0; i < fullData.length; i++) {\n      var tracei = fullData[i];\n\n      if (tracei.type === 'ohlc' && tracei.visible === true && tracei.xaxis === xa._id) {\n        ohlcTracesOnThisXaxis.push(tracei);\n        var origX = xa.makeCalcdata(tracei, 'x');\n        tracei._origX = origX;\n        var xcalc = alignPeriod(trace, xa, 'x', origX).vals;\n        tracei._xcalc = xcalc;\n        var _minDiff = Lib.distinctVals(xcalc).minDiff;\n\n        if (_minDiff && isFinite(_minDiff)) {\n          minDiff = Math.min(minDiff, _minDiff);\n        }\n      }\n    } // if minDiff is still Infinity here, set it to 1\n\n\n    if (minDiff === Infinity) minDiff = 1;\n\n    for (i = 0; i < ohlcTracesOnThisXaxis.length; i++) {\n      ohlcTracesOnThisXaxis[i]._minDiff = minDiff;\n    }\n  }\n\n  return minDiff * trace.tickwidth;\n}\n\nmodule.exports = {\n  calc: calc,\n  calcCommon: calcCommon\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/ohlc/calc.js"],"names":["Lib","require","_","Axes","alignPeriod","BADNUM","calc","gd","trace","xa","getFromId","xaxis","ya","yaxis","tickLen","convertTickWidth","minDiff","_minDiff","origX","_origX","x","_xcalc","cd","calcCommon","ptFunc","_extremes","_id","findExtremes","vpad","length","extendFlat","t","wHover","empty","o","h","l","c","makeCalcdata","hasTextArray","Array","isArray","text","hasHovertextArray","hovertext","increasing","cPrev","hasPeriod","xperiodalignment","i","xi","oi","hi","li","ci","pt","pos","yc","dir","y","orig_p","tx","htx","push","concat","padded","labels","open","high","low","close","fullData","_fullData","ohlcTracesOnThisXaxis","Infinity","tracei","type","visible","xcalc","vals","distinctVals","isFinite","Math","min","tickwidth","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar _ = Lib._;\nvar Axes = require('../../plots/cartesian/axes');\nvar alignPeriod = require('../../plots/cartesian/align_period');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nfunction calc(gd, trace) {\n    var xa = Axes.getFromId(gd, trace.xaxis);\n    var ya = Axes.getFromId(gd, trace.yaxis);\n\n    var tickLen = convertTickWidth(gd, xa, trace);\n    var minDiff = trace._minDiff;\n    trace._minDiff = null;\n    var origX = trace._origX;\n    trace._origX = null;\n    var x = trace._xcalc;\n    trace._xcalc = null;\n\n    var cd = calcCommon(gd, trace, origX, x, ya, ptFunc);\n\n    trace._extremes[xa._id] = Axes.findExtremes(xa, x, {vpad: minDiff / 2});\n    if(cd.length) {\n        Lib.extendFlat(cd[0].t, {\n            wHover: minDiff / 2,\n            tickLen: tickLen\n        });\n        return cd;\n    } else {\n        return [{t: {empty: true}}];\n    }\n}\n\nfunction ptFunc(o, h, l, c) {\n    return {\n        o: o,\n        h: h,\n        l: l,\n        c: c\n    };\n}\n\n\n// shared between OHLC and candlestick\n// ptFunc makes a calcdata point specific to each trace type, from oi, hi, li, ci\nfunction calcCommon(gd, trace, origX, x, ya, ptFunc) {\n    var o = ya.makeCalcdata(trace, 'open');\n    var h = ya.makeCalcdata(trace, 'high');\n    var l = ya.makeCalcdata(trace, 'low');\n    var c = ya.makeCalcdata(trace, 'close');\n\n    var hasTextArray = Array.isArray(trace.text);\n    var hasHovertextArray = Array.isArray(trace.hovertext);\n\n    // we're optimists - before we have any changing data, assume increasing\n    var increasing = true;\n    var cPrev = null;\n\n    var hasPeriod = !!trace.xperiodalignment;\n\n    var cd = [];\n    for(var i = 0; i < x.length; i++) {\n        var xi = x[i];\n        var oi = o[i];\n        var hi = h[i];\n        var li = l[i];\n        var ci = c[i];\n\n        if(xi !== BADNUM && oi !== BADNUM && hi !== BADNUM && li !== BADNUM && ci !== BADNUM) {\n            if(ci === oi) {\n                // if open == close, look for a change from the previous close\n                if(cPrev !== null && ci !== cPrev) increasing = ci > cPrev;\n                // else (c === cPrev or cPrev is null) no change\n            } else increasing = ci > oi;\n\n            cPrev = ci;\n\n            var pt = ptFunc(oi, hi, li, ci);\n\n            pt.pos = xi;\n            pt.yc = (oi + ci) / 2;\n            pt.i = i;\n            pt.dir = increasing ? 'increasing' : 'decreasing';\n\n            // For categoryorder, store low and high\n            pt.x = pt.pos;\n            pt.y = [li, hi];\n\n            if(hasPeriod) pt.orig_p = origX[i]; // used by hover\n            if(hasTextArray) pt.tx = trace.text[i];\n            if(hasHovertextArray) pt.htx = trace.hovertext[i];\n\n            cd.push(pt);\n        } else {\n            cd.push({pos: xi, empty: true});\n        }\n    }\n\n    trace._extremes[ya._id] = Axes.findExtremes(ya, Lib.concat(l, h), {padded: true});\n\n    if(cd.length) {\n        cd[0].t = {\n            labels: {\n                open: _(gd, 'open:') + ' ',\n                high: _(gd, 'high:') + ' ',\n                low: _(gd, 'low:') + ' ',\n                close: _(gd, 'close:') + ' '\n            }\n        };\n    }\n\n    return cd;\n}\n\n/*\n * find min x-coordinates difference of all traces\n * attached to this x-axis and stash the result in _minDiff\n * in all traces; when a trace uses this in its\n * calc step it deletes _minDiff, so that next calc this is\n * done again in case the data changed.\n * also since we need it here, stash _xcalc (and _origX) on the trace\n */\nfunction convertTickWidth(gd, xa, trace) {\n    var minDiff = trace._minDiff;\n\n    if(!minDiff) {\n        var fullData = gd._fullData;\n        var ohlcTracesOnThisXaxis = [];\n\n        minDiff = Infinity;\n\n        var i;\n\n        for(i = 0; i < fullData.length; i++) {\n            var tracei = fullData[i];\n\n            if(tracei.type === 'ohlc' &&\n                tracei.visible === true &&\n                tracei.xaxis === xa._id\n            ) {\n                ohlcTracesOnThisXaxis.push(tracei);\n\n                var origX = xa.makeCalcdata(tracei, 'x');\n                tracei._origX = origX;\n\n                var xcalc = alignPeriod(trace, xa, 'x', origX).vals;\n                tracei._xcalc = xcalc;\n\n                var _minDiff = Lib.distinctVals(xcalc).minDiff;\n                if(_minDiff && isFinite(_minDiff)) {\n                    minDiff = Math.min(minDiff, _minDiff);\n                }\n            }\n        }\n\n        // if minDiff is still Infinity here, set it to 1\n        if(minDiff === Infinity) minDiff = 1;\n\n        for(i = 0; i < ohlcTracesOnThisXaxis.length; i++) {\n            ohlcTracesOnThisXaxis[i]._minDiff = minDiff;\n        }\n    }\n\n    return minDiff * trace.tickwidth;\n}\n\nmodule.exports = {\n    calc: calc,\n    calcCommon: calcCommon\n};\n"]},"metadata":{},"sourceType":"script"}