{"ast":null,"code":"'use strict';\n\nvar hoverLabelText = require('../../plots/cartesian/axes').hoverLabelText;\n\nvar opacity = require('../../components/color').opacity;\n\nvar hoverOnBars = require('../bar/hover').hoverOnBars;\n\nvar delta = require('../../constants/delta.js');\n\nvar DIRSYMBOL = {\n  increasing: delta.INCREASING.SYMBOL,\n  decreasing: delta.DECREASING.SYMBOL\n};\n\nmodule.exports = function hoverPoints(pointData, xval, yval, hovermode, opts) {\n  var point = hoverOnBars(pointData, xval, yval, hovermode, opts);\n  if (!point) return;\n  var cd = point.cd;\n  var trace = cd[0].trace;\n  var isHorizontal = trace.orientation === 'h';\n  var vLetter = isHorizontal ? 'x' : 'y';\n  var vAxis = isHorizontal ? pointData.xa : pointData.ya;\n\n  function formatNumber(a) {\n    return hoverLabelText(vAxis, a, trace[vLetter + 'hoverformat']);\n  } // the closest data point\n\n\n  var index = point.index;\n  var di = cd[index];\n  var size = di.isSum ? di.b + di.s : di.rawS;\n\n  if (!di.isSum) {\n    point.initial = di.b + di.s - size;\n    point.delta = size;\n    point.final = point.initial + point.delta;\n    var v = formatNumber(Math.abs(point.delta));\n    point.deltaLabel = size < 0 ? '(' + v + ')' : v;\n    point.finalLabel = formatNumber(point.final);\n    point.initialLabel = formatNumber(point.initial);\n  }\n\n  var hoverinfo = di.hi || trace.hoverinfo;\n  var text = [];\n\n  if (hoverinfo && hoverinfo !== 'none' && hoverinfo !== 'skip') {\n    var isAll = hoverinfo === 'all';\n    var parts = hoverinfo.split('+');\n\n    var hasFlag = function (flag) {\n      return isAll || parts.indexOf(flag) !== -1;\n    };\n\n    if (!di.isSum) {\n      if (hasFlag('final') && (isHorizontal ? !hasFlag('x') : !hasFlag('y')) // don't display redundant info.\n      ) {\n        text.push(point.finalLabel);\n      }\n\n      if (hasFlag('delta')) {\n        if (size < 0) {\n          text.push(point.deltaLabel + ' ' + DIRSYMBOL.decreasing);\n        } else {\n          text.push(point.deltaLabel + ' ' + DIRSYMBOL.increasing);\n        }\n      }\n\n      if (hasFlag('initial')) {\n        text.push('Initial: ' + point.initialLabel);\n      }\n    }\n  }\n\n  if (text.length) point.extraText = text.join('<br>');\n  point.color = getTraceColor(trace, di);\n  return [point];\n};\n\nfunction getTraceColor(trace, di) {\n  var cont = trace[di.dir].marker;\n  var mc = cont.color;\n  var mlc = cont.line.color;\n  var mlw = cont.line.width;\n  if (opacity(mc)) return mc;else if (opacity(mlc) && mlw) return mlc;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/waterfall/hover.js"],"names":["hoverLabelText","require","opacity","hoverOnBars","delta","DIRSYMBOL","increasing","INCREASING","SYMBOL","decreasing","DECREASING","module","exports","hoverPoints","pointData","xval","yval","hovermode","opts","point","cd","trace","isHorizontal","orientation","vLetter","vAxis","xa","ya","formatNumber","a","index","di","size","isSum","b","s","rawS","initial","final","v","Math","abs","deltaLabel","finalLabel","initialLabel","hoverinfo","hi","text","isAll","parts","split","hasFlag","flag","indexOf","push","length","extraText","join","color","getTraceColor","cont","dir","marker","mc","mlc","line","mlw","width"],"mappings":"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","sourcesContent":["'use strict';\n\nvar hoverLabelText = require('../../plots/cartesian/axes').hoverLabelText;\nvar opacity = require('../../components/color').opacity;\nvar hoverOnBars = require('../bar/hover').hoverOnBars;\nvar delta = require('../../constants/delta.js');\n\nvar DIRSYMBOL = {\n    increasing: delta.INCREASING.SYMBOL,\n    decreasing: delta.DECREASING.SYMBOL\n};\n\nmodule.exports = function hoverPoints(pointData, xval, yval, hovermode, opts) {\n    var point = hoverOnBars(pointData, xval, yval, hovermode, opts);\n    if(!point) return;\n\n    var cd = point.cd;\n    var trace = cd[0].trace;\n    var isHorizontal = (trace.orientation === 'h');\n\n    var vLetter = isHorizontal ? 'x' : 'y';\n    var vAxis = isHorizontal ? pointData.xa : pointData.ya;\n\n    function formatNumber(a) {\n        return hoverLabelText(vAxis, a, trace[vLetter + 'hoverformat']);\n    }\n\n    // the closest data point\n    var index = point.index;\n    var di = cd[index];\n\n    var size = (di.isSum) ? di.b + di.s : di.rawS;\n\n    if(!di.isSum) {\n        point.initial = di.b + di.s - size;\n        point.delta = size;\n        point.final = point.initial + point.delta;\n\n        var v = formatNumber(Math.abs(point.delta));\n        point.deltaLabel = size < 0 ? '(' + v + ')' : v;\n        point.finalLabel = formatNumber(point.final);\n        point.initialLabel = formatNumber(point.initial);\n    }\n\n    var hoverinfo = di.hi || trace.hoverinfo;\n    var text = [];\n    if(hoverinfo && hoverinfo !== 'none' && hoverinfo !== 'skip') {\n        var isAll = (hoverinfo === 'all');\n        var parts = hoverinfo.split('+');\n\n        var hasFlag = function(flag) { return isAll || parts.indexOf(flag) !== -1; };\n\n        if(!di.isSum) {\n            if(hasFlag('final') &&\n                (isHorizontal ? !hasFlag('x') : !hasFlag('y')) // don't display redundant info.\n            ) {\n                text.push(point.finalLabel);\n            }\n            if(hasFlag('delta')) {\n                if(size < 0) {\n                    text.push(point.deltaLabel + ' ' + DIRSYMBOL.decreasing);\n                } else {\n                    text.push(point.deltaLabel + ' ' + DIRSYMBOL.increasing);\n                }\n            }\n            if(hasFlag('initial')) {\n                text.push('Initial: ' + point.initialLabel);\n            }\n        }\n    }\n\n    if(text.length) point.extraText = text.join('<br>');\n\n    point.color = getTraceColor(trace, di);\n\n    return [point];\n};\n\nfunction getTraceColor(trace, di) {\n    var cont = trace[di.dir].marker;\n    var mc = cont.color;\n    var mlc = cont.line.color;\n    var mlw = cont.line.width;\n    if(opacity(mc)) return mc;\n    else if(opacity(mlc) && mlw) return mlc;\n}\n"]},"metadata":{},"sourceType":"script"}