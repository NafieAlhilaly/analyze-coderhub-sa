{"ast":null,"code":"'use strict';\n\nvar carpetAttrs = require('./attributes');\n\nvar addOpacity = require('../../components/color').addOpacity;\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar handleTickValueDefaults = require('../../plots/cartesian/tick_value_defaults');\n\nvar handleTickLabelDefaults = require('../../plots/cartesian/tick_label_defaults');\n\nvar handleCategoryOrderDefaults = require('../../plots/cartesian/category_order_defaults');\n\nvar setConvert = require('../../plots/cartesian/set_convert');\n\nvar autoType = require('../../plots/cartesian/axis_autotype');\n/**\n * options: object containing:\n *\n *  letter: 'a' or 'b'\n *  title: name of the axis (ie 'Colorbar') to go in default title\n *  name: axis object name (ie 'xaxis') if one should be stored\n *  font: the default font to inherit\n *  outerTicks: boolean, should ticks default to outside?\n *  showGrid: boolean, should gridlines be shown by default?\n *  data: the plot data to use in choosing auto type\n *  bgColor: the plot background color, to calculate default gridline colors\n */\n\n\nmodule.exports = function handleAxisDefaults(containerIn, containerOut, options) {\n  var letter = options.letter;\n  var font = options.font || {};\n  var attributes = carpetAttrs[letter + 'axis'];\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n  }\n\n  function coerce2(attr, dflt) {\n    return Lib.coerce2(containerIn, containerOut, attributes, attr, dflt);\n  } // set up some private properties\n\n\n  if (options.name) {\n    containerOut._name = options.name;\n    containerOut._id = options.name;\n  } // now figure out type and do some more initialization\n\n\n  coerce('autotypenumbers', options.autotypenumbersDflt);\n  var axType = coerce('type');\n\n  if (axType === '-') {\n    if (options.data) setAutoType(containerOut, options.data);\n\n    if (containerOut.type === '-') {\n      containerOut.type = 'linear';\n    } else {\n      // copy autoType back to input axis\n      // note that if this object didn't exist\n      // in the input layout, we have to put it in\n      // this happens in the main supplyDefaults function\n      axType = containerIn.type = containerOut.type;\n    }\n  }\n\n  coerce('smoothing');\n  coerce('cheatertype');\n  coerce('showticklabels');\n  coerce('labelprefix', letter + ' = ');\n  coerce('labelsuffix');\n  coerce('showtickprefix');\n  coerce('showticksuffix');\n  coerce('separatethousands');\n  coerce('tickformat');\n  coerce('exponentformat');\n  coerce('minexponent');\n  coerce('showexponent');\n  coerce('categoryorder');\n  coerce('tickmode');\n  coerce('tickvals');\n  coerce('ticktext');\n  coerce('tick0');\n  coerce('dtick');\n\n  if (containerOut.tickmode === 'array') {\n    coerce('arraytick0');\n    coerce('arraydtick');\n  }\n\n  coerce('labelpadding');\n  containerOut._hovertitle = letter;\n\n  if (axType === 'date') {\n    var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleDefaults');\n    handleCalendarDefaults(containerIn, containerOut, 'calendar', options.calendar);\n  } // we need some of the other functions setConvert attaches, but for\n  // path finding, override pixel scaling to simple passthrough (identity)\n\n\n  setConvert(containerOut, options.fullLayout);\n  containerOut.c2p = Lib.identity;\n  var dfltColor = coerce('color', options.dfltColor); // if axis.color was provided, use it for fonts too; otherwise,\n  // inherit from global font color in case that was provided.\n\n  var dfltFontColor = dfltColor === containerIn.color ? dfltColor : font.color;\n  var title = coerce('title.text');\n\n  if (title) {\n    Lib.coerceFont(coerce, 'title.font', {\n      family: font.family,\n      size: Lib.bigFont(font.size),\n      color: dfltFontColor\n    });\n    coerce('title.offset');\n  }\n\n  coerce('tickangle');\n  var autoRange = coerce('autorange', !containerOut.isValidRange(containerIn.range));\n  if (autoRange) coerce('rangemode');\n  coerce('range');\n  containerOut.cleanRange();\n  coerce('fixedrange');\n  handleTickValueDefaults(containerIn, containerOut, coerce, axType);\n  handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options);\n  handleCategoryOrderDefaults(containerIn, containerOut, coerce, {\n    data: options.data,\n    dataAttr: letter\n  });\n  var gridColor = coerce2('gridcolor', addOpacity(dfltColor, 0.3));\n  var gridWidth = coerce2('gridwidth');\n  var showGrid = coerce('showgrid');\n\n  if (!showGrid) {\n    delete containerOut.gridcolor;\n    delete containerOut.gridwidth;\n  }\n\n  var startLineColor = coerce2('startlinecolor', dfltColor);\n  var startLineWidth = coerce2('startlinewidth', gridWidth);\n  var showStartLine = coerce('startline', containerOut.showgrid || !!startLineColor || !!startLineWidth);\n\n  if (!showStartLine) {\n    delete containerOut.startlinecolor;\n    delete containerOut.startlinewidth;\n  }\n\n  var endLineColor = coerce2('endlinecolor', dfltColor);\n  var endLineWidth = coerce2('endlinewidth', gridWidth);\n  var showEndLine = coerce('endline', containerOut.showgrid || !!endLineColor || !!endLineWidth);\n\n  if (!showEndLine) {\n    delete containerOut.endlinecolor;\n    delete containerOut.endlinewidth;\n  }\n\n  if (!showGrid) {\n    delete containerOut.gridcolor;\n    delete containerOut.gridWidth;\n  } else {\n    coerce('minorgridcount');\n    coerce('minorgridwidth', gridWidth);\n    coerce('minorgridcolor', addOpacity(gridColor, 0.06));\n\n    if (!containerOut.minorgridcount) {\n      delete containerOut.minorgridwidth;\n      delete containerOut.minorgridcolor;\n    }\n  }\n\n  if (containerOut.showticklabels === 'none') {\n    delete containerOut.tickfont;\n    delete containerOut.tickangle;\n    delete containerOut.showexponent;\n    delete containerOut.exponentformat;\n    delete containerOut.minexponent;\n    delete containerOut.tickformat;\n    delete containerOut.showticksuffix;\n    delete containerOut.showtickprefix;\n  }\n\n  if (!containerOut.showticksuffix) {\n    delete containerOut.ticksuffix;\n  }\n\n  if (!containerOut.showtickprefix) {\n    delete containerOut.tickprefix;\n  } // It needs to be coerced, then something above overrides this deep in the axis code,\n  // but no, we *actually* want to coerce this.\n\n\n  coerce('tickmode');\n  return containerOut;\n};\n\nfunction setAutoType(ax, data) {\n  // new logic: let people specify any type they want,\n  // only autotype if type is '-'\n  if (ax.type !== '-') return;\n  var id = ax._id;\n  var axLetter = id.charAt(0);\n  var calAttr = axLetter + 'calendar';\n  var calendar = ax[calAttr];\n  ax.type = autoType(data, calendar, {\n    autotypenumbers: ax.autotypenumbers\n  });\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/carpet/axis_defaults.js"],"names":["carpetAttrs","require","addOpacity","Registry","Lib","handleTickValueDefaults","handleTickLabelDefaults","handleCategoryOrderDefaults","setConvert","autoType","module","exports","handleAxisDefaults","containerIn","containerOut","options","letter","font","attributes","coerce","attr","dflt","coerce2","name","_name","_id","autotypenumbersDflt","axType","data","setAutoType","type","tickmode","_hovertitle","handleCalendarDefaults","getComponentMethod","calendar","fullLayout","c2p","identity","dfltColor","dfltFontColor","color","title","coerceFont","family","size","bigFont","autoRange","isValidRange","range","cleanRange","dataAttr","gridColor","gridWidth","showGrid","gridcolor","gridwidth","startLineColor","startLineWidth","showStartLine","showgrid","startlinecolor","startlinewidth","endLineColor","endLineWidth","showEndLine","endlinecolor","endlinewidth","minorgridcount","minorgridwidth","minorgridcolor","showticklabels","tickfont","tickangle","showexponent","exponentformat","minexponent","tickformat","showticksuffix","showtickprefix","ticksuffix","tickprefix","ax","id","axLetter","charAt","calAttr","autotypenumbers"],"mappings":"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","sourcesContent":["'use strict';\n\nvar carpetAttrs = require('./attributes');\n\nvar addOpacity = require('../../components/color').addOpacity;\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar handleTickValueDefaults = require('../../plots/cartesian/tick_value_defaults');\nvar handleTickLabelDefaults = require('../../plots/cartesian/tick_label_defaults');\nvar handleCategoryOrderDefaults = require('../../plots/cartesian/category_order_defaults');\nvar setConvert = require('../../plots/cartesian/set_convert');\nvar autoType = require('../../plots/cartesian/axis_autotype');\n\n/**\n * options: object containing:\n *\n *  letter: 'a' or 'b'\n *  title: name of the axis (ie 'Colorbar') to go in default title\n *  name: axis object name (ie 'xaxis') if one should be stored\n *  font: the default font to inherit\n *  outerTicks: boolean, should ticks default to outside?\n *  showGrid: boolean, should gridlines be shown by default?\n *  data: the plot data to use in choosing auto type\n *  bgColor: the plot background color, to calculate default gridline colors\n */\nmodule.exports = function handleAxisDefaults(containerIn, containerOut, options) {\n    var letter = options.letter;\n    var font = options.font || {};\n    var attributes = carpetAttrs[letter + 'axis'];\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n    }\n\n    function coerce2(attr, dflt) {\n        return Lib.coerce2(containerIn, containerOut, attributes, attr, dflt);\n    }\n\n    // set up some private properties\n    if(options.name) {\n        containerOut._name = options.name;\n        containerOut._id = options.name;\n    }\n\n    // now figure out type and do some more initialization\n    coerce('autotypenumbers', options.autotypenumbersDflt);\n    var axType = coerce('type');\n    if(axType === '-') {\n        if(options.data) setAutoType(containerOut, options.data);\n\n        if(containerOut.type === '-') {\n            containerOut.type = 'linear';\n        } else {\n            // copy autoType back to input axis\n            // note that if this object didn't exist\n            // in the input layout, we have to put it in\n            // this happens in the main supplyDefaults function\n            axType = containerIn.type = containerOut.type;\n        }\n    }\n\n    coerce('smoothing');\n    coerce('cheatertype');\n\n    coerce('showticklabels');\n    coerce('labelprefix', letter + ' = ');\n    coerce('labelsuffix');\n    coerce('showtickprefix');\n    coerce('showticksuffix');\n\n    coerce('separatethousands');\n    coerce('tickformat');\n    coerce('exponentformat');\n    coerce('minexponent');\n    coerce('showexponent');\n    coerce('categoryorder');\n\n    coerce('tickmode');\n    coerce('tickvals');\n    coerce('ticktext');\n    coerce('tick0');\n    coerce('dtick');\n\n    if(containerOut.tickmode === 'array') {\n        coerce('arraytick0');\n        coerce('arraydtick');\n    }\n\n    coerce('labelpadding');\n\n    containerOut._hovertitle = letter;\n\n\n    if(axType === 'date') {\n        var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleDefaults');\n        handleCalendarDefaults(containerIn, containerOut, 'calendar', options.calendar);\n    }\n\n    // we need some of the other functions setConvert attaches, but for\n    // path finding, override pixel scaling to simple passthrough (identity)\n    setConvert(containerOut, options.fullLayout);\n    containerOut.c2p = Lib.identity;\n\n    var dfltColor = coerce('color', options.dfltColor);\n    // if axis.color was provided, use it for fonts too; otherwise,\n    // inherit from global font color in case that was provided.\n    var dfltFontColor = (dfltColor === containerIn.color) ? dfltColor : font.color;\n\n    var title = coerce('title.text');\n    if(title) {\n        Lib.coerceFont(coerce, 'title.font', {\n            family: font.family,\n            size: Lib.bigFont(font.size),\n            color: dfltFontColor\n        });\n        coerce('title.offset');\n    }\n\n    coerce('tickangle');\n\n    var autoRange = coerce('autorange', !containerOut.isValidRange(containerIn.range));\n\n    if(autoRange) coerce('rangemode');\n\n    coerce('range');\n    containerOut.cleanRange();\n\n    coerce('fixedrange');\n\n    handleTickValueDefaults(containerIn, containerOut, coerce, axType);\n    handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options);\n    handleCategoryOrderDefaults(containerIn, containerOut, coerce, {\n        data: options.data,\n        dataAttr: letter\n    });\n\n    var gridColor = coerce2('gridcolor', addOpacity(dfltColor, 0.3));\n    var gridWidth = coerce2('gridwidth');\n    var showGrid = coerce('showgrid');\n\n    if(!showGrid) {\n        delete containerOut.gridcolor;\n        delete containerOut.gridwidth;\n    }\n\n    var startLineColor = coerce2('startlinecolor', dfltColor);\n    var startLineWidth = coerce2('startlinewidth', gridWidth);\n    var showStartLine = coerce('startline', containerOut.showgrid || !!startLineColor || !!startLineWidth);\n\n    if(!showStartLine) {\n        delete containerOut.startlinecolor;\n        delete containerOut.startlinewidth;\n    }\n\n    var endLineColor = coerce2('endlinecolor', dfltColor);\n    var endLineWidth = coerce2('endlinewidth', gridWidth);\n    var showEndLine = coerce('endline', containerOut.showgrid || !!endLineColor || !!endLineWidth);\n\n    if(!showEndLine) {\n        delete containerOut.endlinecolor;\n        delete containerOut.endlinewidth;\n    }\n\n    if(!showGrid) {\n        delete containerOut.gridcolor;\n        delete containerOut.gridWidth;\n    } else {\n        coerce('minorgridcount');\n        coerce('minorgridwidth', gridWidth);\n        coerce('minorgridcolor', addOpacity(gridColor, 0.06));\n\n        if(!containerOut.minorgridcount) {\n            delete containerOut.minorgridwidth;\n            delete containerOut.minorgridcolor;\n        }\n    }\n\n    if(containerOut.showticklabels === 'none') {\n        delete containerOut.tickfont;\n        delete containerOut.tickangle;\n        delete containerOut.showexponent;\n        delete containerOut.exponentformat;\n        delete containerOut.minexponent;\n        delete containerOut.tickformat;\n        delete containerOut.showticksuffix;\n        delete containerOut.showtickprefix;\n    }\n\n    if(!containerOut.showticksuffix) {\n        delete containerOut.ticksuffix;\n    }\n\n    if(!containerOut.showtickprefix) {\n        delete containerOut.tickprefix;\n    }\n\n    // It needs to be coerced, then something above overrides this deep in the axis code,\n    // but no, we *actually* want to coerce this.\n    coerce('tickmode');\n\n    return containerOut;\n};\n\nfunction setAutoType(ax, data) {\n    // new logic: let people specify any type they want,\n    // only autotype if type is '-'\n    if(ax.type !== '-') return;\n\n    var id = ax._id;\n    var axLetter = id.charAt(0);\n\n    var calAttr = axLetter + 'calendar';\n    var calendar = ax[calAttr];\n\n    ax.type = autoType(data, calendar, {\n        autotypenumbers: ax.autotypenumbers\n    });\n}\n"]},"metadata":{},"sourceType":"script"}