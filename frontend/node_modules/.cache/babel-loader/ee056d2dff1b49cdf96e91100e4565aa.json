{"ast":null,"code":"'use strict';\n\nmodule.exports = createLinePlot;\n\nvar createBuffer = require('gl-buffer');\n\nvar createVAO = require('gl-vao');\n\nvar createTexture = require('gl-texture2d');\n\nvar UINT8_VIEW = new Uint8Array(4);\nvar FLOAT_VIEW = new Float32Array(UINT8_VIEW.buffer); // https://github.com/mikolalysenko/glsl-read-float/blob/master/index.js\n\nfunction unpackFloat(x, y, z, w) {\n  UINT8_VIEW[0] = w;\n  UINT8_VIEW[1] = z;\n  UINT8_VIEW[2] = y;\n  UINT8_VIEW[3] = x;\n  return FLOAT_VIEW[0];\n}\n\nvar bsearch = require('binary-search-bounds');\n\nvar ndarray = require('ndarray');\n\nvar shaders = require('./lib/shaders');\n\nvar createShader = shaders.createShader;\nvar createPickShader = shaders.createPickShader;\nvar identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nfunction distance(a, b) {\n  var s = 0.0;\n\n  for (var i = 0; i < 3; ++i) {\n    var d = a[i] - b[i];\n    s += d * d;\n  }\n\n  return Math.sqrt(s);\n}\n\nfunction filterClipBounds(bounds) {\n  var result = [[-1e6, -1e6, -1e6], [1e6, 1e6, 1e6]];\n\n  for (var i = 0; i < 3; ++i) {\n    result[0][i] = Math.max(bounds[0][i], result[0][i]);\n    result[1][i] = Math.min(bounds[1][i], result[1][i]);\n  }\n\n  return result;\n}\n\nfunction PickResult(tau, position, index, dataCoordinate) {\n  this.arcLength = tau;\n  this.position = position;\n  this.index = index;\n  this.dataCoordinate = dataCoordinate;\n}\n\nfunction LinePlot(gl, shader, pickShader, buffer, vao, texture) {\n  this.gl = gl;\n  this.shader = shader;\n  this.pickShader = pickShader;\n  this.buffer = buffer;\n  this.vao = vao;\n  this.clipBounds = [[-Infinity, -Infinity, -Infinity], [Infinity, Infinity, Infinity]];\n  this.points = [];\n  this.arcLength = [];\n  this.vertexCount = 0;\n  this.bounds = [[0, 0, 0], [0, 0, 0]];\n  this.pickId = 0;\n  this.lineWidth = 1;\n  this.texture = texture;\n  this.dashScale = 1;\n  this.opacity = 1;\n  this.hasAlpha = false;\n  this.dirty = true;\n  this.pixelRatio = 1;\n}\n\nvar proto = LinePlot.prototype;\n\nproto.isTransparent = function () {\n  return this.hasAlpha;\n};\n\nproto.isOpaque = function () {\n  return !this.hasAlpha;\n};\n\nproto.pickSlots = 1;\n\nproto.setPickBase = function (id) {\n  this.pickId = id;\n};\n\nproto.drawTransparent = proto.draw = function (camera) {\n  if (!this.vertexCount) return;\n  var gl = this.gl;\n  var shader = this.shader;\n  var vao = this.vao;\n  shader.bind();\n  shader.uniforms = {\n    model: camera.model || identity,\n    view: camera.view || identity,\n    projection: camera.projection || identity,\n    clipBounds: filterClipBounds(this.clipBounds),\n    dashTexture: this.texture.bind(),\n    dashScale: this.dashScale / this.arcLength[this.arcLength.length - 1],\n    opacity: this.opacity,\n    screenShape: [gl.drawingBufferWidth, gl.drawingBufferHeight],\n    pixelRatio: this.pixelRatio\n  };\n  vao.bind();\n  vao.draw(gl.TRIANGLE_STRIP, this.vertexCount);\n  vao.unbind();\n};\n\nproto.drawPick = function (camera) {\n  if (!this.vertexCount) return;\n  var gl = this.gl;\n  var shader = this.pickShader;\n  var vao = this.vao;\n  shader.bind();\n  shader.uniforms = {\n    model: camera.model || identity,\n    view: camera.view || identity,\n    projection: camera.projection || identity,\n    pickId: this.pickId,\n    clipBounds: filterClipBounds(this.clipBounds),\n    screenShape: [gl.drawingBufferWidth, gl.drawingBufferHeight],\n    pixelRatio: this.pixelRatio\n  };\n  vao.bind();\n  vao.draw(gl.TRIANGLE_STRIP, this.vertexCount);\n  vao.unbind();\n};\n\nproto.update = function (options) {\n  var i, j;\n  this.dirty = true;\n  var connectGaps = !!options.connectGaps;\n\n  if ('dashScale' in options) {\n    this.dashScale = options.dashScale;\n  }\n\n  this.hasAlpha = false; // default to no transparent draw\n\n  if ('opacity' in options) {\n    this.opacity = +options.opacity;\n\n    if (this.opacity < 1) {\n      this.hasAlpha = true;\n    }\n  } // Recalculate buffer data\n\n\n  var buffer = [];\n  var arcLengthArray = [];\n  var pointArray = [];\n  var arcLength = 0.0;\n  var vertexCount = 0;\n  var bounds = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n  var positions = options.position || options.positions;\n\n  if (positions) {\n    // Default color\n    var colors = options.color || options.colors || [0, 0, 0, 1];\n    var lineWidth = options.lineWidth || 1;\n    var hadGap = false;\n\n    fill_loop: for (i = 1; i < positions.length; ++i) {\n      var a = positions[i - 1];\n      var b = positions[i];\n      arcLengthArray.push(arcLength);\n      pointArray.push(a.slice());\n\n      for (j = 0; j < 3; ++j) {\n        if (isNaN(a[j]) || isNaN(b[j]) || !isFinite(a[j]) || !isFinite(b[j])) {\n          if (!connectGaps && buffer.length > 0) {\n            for (var k = 0; k < 24; ++k) {\n              buffer.push(buffer[buffer.length - 12]);\n            }\n\n            vertexCount += 2;\n            hadGap = true;\n          }\n\n          continue fill_loop;\n        }\n\n        bounds[0][j] = Math.min(bounds[0][j], a[j], b[j]);\n        bounds[1][j] = Math.max(bounds[1][j], a[j], b[j]);\n      }\n\n      var acolor, bcolor;\n\n      if (Array.isArray(colors[0])) {\n        acolor = colors.length > i - 1 ? colors[i - 1] : // using index value\n        colors.length > 0 ? colors[colors.length - 1] : // using last item\n        [0, 0, 0, 1]; // using black\n\n        bcolor = colors.length > i ? colors[i] : // using index value\n        colors.length > 0 ? colors[colors.length - 1] : // using last item\n        [0, 0, 0, 1]; // using black\n      } else {\n        acolor = bcolor = colors;\n      }\n\n      if (acolor.length === 3) {\n        acolor = [acolor[0], acolor[1], acolor[2], 1];\n      }\n\n      if (bcolor.length === 3) {\n        bcolor = [bcolor[0], bcolor[1], bcolor[2], 1];\n      }\n\n      if (!this.hasAlpha && acolor[3] < 1) this.hasAlpha = true;\n      var w0;\n\n      if (Array.isArray(lineWidth)) {\n        w0 = lineWidth.length > i - 1 ? lineWidth[i - 1] : // using index value\n        lineWidth.length > 0 ? lineWidth[lineWidth.length - 1] : // using last item\n        [0, 0, 0, 1]; // using black\n      } else {\n        w0 = lineWidth;\n      }\n\n      var t0 = arcLength;\n      arcLength += distance(a, b);\n\n      if (hadGap) {\n        for (j = 0; j < 2; ++j) {\n          buffer.push(a[0], a[1], a[2], b[0], b[1], b[2], t0, w0, acolor[0], acolor[1], acolor[2], acolor[3]);\n        }\n\n        vertexCount += 2;\n        hadGap = false;\n      }\n\n      buffer.push(a[0], a[1], a[2], b[0], b[1], b[2], t0, w0, acolor[0], acolor[1], acolor[2], acolor[3], a[0], a[1], a[2], b[0], b[1], b[2], t0, -w0, acolor[0], acolor[1], acolor[2], acolor[3], b[0], b[1], b[2], a[0], a[1], a[2], arcLength, -w0, bcolor[0], bcolor[1], bcolor[2], bcolor[3], b[0], b[1], b[2], a[0], a[1], a[2], arcLength, w0, bcolor[0], bcolor[1], bcolor[2], bcolor[3]);\n      vertexCount += 4;\n    }\n  }\n\n  this.buffer.update(buffer);\n  arcLengthArray.push(arcLength);\n  pointArray.push(positions[positions.length - 1].slice());\n  this.bounds = bounds;\n  this.vertexCount = vertexCount;\n  this.points = pointArray;\n  this.arcLength = arcLengthArray;\n\n  if ('dashes' in options) {\n    var dashArray = options.dashes; // Calculate prefix sum\n\n    var prefixSum = dashArray.slice();\n    prefixSum.unshift(0);\n\n    for (i = 1; i < prefixSum.length; ++i) {\n      prefixSum[i] = prefixSum[i - 1] + prefixSum[i];\n    }\n\n    var dashTexture = ndarray(new Array(256 * 4), [256, 1, 4]);\n\n    for (i = 0; i < 256; ++i) {\n      for (j = 0; j < 4; ++j) {\n        dashTexture.set(i, 0, j, 0);\n      }\n\n      if (bsearch.le(prefixSum, prefixSum[prefixSum.length - 1] * i / 255.0) & 1) {\n        dashTexture.set(i, 0, 0, 0);\n      } else {\n        dashTexture.set(i, 0, 0, 255);\n      }\n    }\n\n    this.texture.setPixels(dashTexture);\n  }\n};\n\nproto.dispose = function () {\n  this.shader.dispose();\n  this.vao.dispose();\n  this.buffer.dispose();\n};\n\nproto.pick = function (selection) {\n  if (!selection) {\n    return null;\n  }\n\n  if (selection.id !== this.pickId) {\n    return null;\n  }\n\n  var tau = unpackFloat(selection.value[0], selection.value[1], selection.value[2], 0);\n  var index = bsearch.le(this.arcLength, tau);\n\n  if (index < 0) {\n    return null;\n  }\n\n  if (index === this.arcLength.length - 1) {\n    return new PickResult(this.arcLength[this.arcLength.length - 1], this.points[this.points.length - 1].slice(), index);\n  }\n\n  var a = this.points[index];\n  var b = this.points[Math.min(index + 1, this.points.length - 1)];\n  var t = (tau - this.arcLength[index]) / (this.arcLength[index + 1] - this.arcLength[index]);\n  var ti = 1.0 - t;\n  var x = [0, 0, 0];\n\n  for (var i = 0; i < 3; ++i) {\n    x[i] = ti * a[i] + t * b[i];\n  }\n\n  var dataIndex = Math.min(t < 0.5 ? index : index + 1, this.points.length - 1);\n  return new PickResult(tau, x, dataIndex, this.points[dataIndex]);\n};\n\nfunction createLinePlot(options) {\n  var gl = options.gl || options.scene && options.scene.gl;\n  var shader = createShader(gl);\n  shader.attributes.position.location = 0;\n  shader.attributes.nextPosition.location = 1;\n  shader.attributes.arcLength.location = 2;\n  shader.attributes.lineWidth.location = 3;\n  shader.attributes.color.location = 4;\n  var pickShader = createPickShader(gl);\n  pickShader.attributes.position.location = 0;\n  pickShader.attributes.nextPosition.location = 1;\n  pickShader.attributes.arcLength.location = 2;\n  pickShader.attributes.lineWidth.location = 3;\n  pickShader.attributes.color.location = 4;\n  var buffer = createBuffer(gl);\n  var vao = createVAO(gl, [{\n    'buffer': buffer,\n    'size': 3,\n    'offset': 0,\n    'stride': 48\n  }, {\n    'buffer': buffer,\n    'size': 3,\n    'offset': 12,\n    'stride': 48\n  }, {\n    'buffer': buffer,\n    'size': 1,\n    'offset': 24,\n    'stride': 48\n  }, {\n    'buffer': buffer,\n    'size': 1,\n    'offset': 28,\n    'stride': 48\n  }, {\n    'buffer': buffer,\n    'size': 4,\n    'offset': 32,\n    'stride': 48\n  }]); // Create texture for dash pattern\n\n  var defaultTexture = ndarray(new Array(256 * 4), [256, 1, 4]);\n\n  for (var i = 0; i < 256 * 4; ++i) {\n    defaultTexture.data[i] = 255;\n  }\n\n  var texture = createTexture(gl, defaultTexture);\n  texture.wrap = gl.REPEAT;\n  var linePlot = new LinePlot(gl, shader, pickShader, buffer, vao, texture);\n  linePlot.update(options);\n  return linePlot;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/gl-line3d/lines.js"],"names":["module","exports","createLinePlot","createBuffer","require","createVAO","createTexture","UINT8_VIEW","Uint8Array","FLOAT_VIEW","Float32Array","buffer","unpackFloat","x","y","z","w","bsearch","ndarray","shaders","createShader","createPickShader","identity","distance","a","b","s","i","d","Math","sqrt","filterClipBounds","bounds","result","max","min","PickResult","tau","position","index","dataCoordinate","arcLength","LinePlot","gl","shader","pickShader","vao","texture","clipBounds","Infinity","points","vertexCount","pickId","lineWidth","dashScale","opacity","hasAlpha","dirty","pixelRatio","proto","prototype","isTransparent","isOpaque","pickSlots","setPickBase","id","drawTransparent","draw","camera","bind","uniforms","model","view","projection","dashTexture","length","screenShape","drawingBufferWidth","drawingBufferHeight","TRIANGLE_STRIP","unbind","drawPick","update","options","j","connectGaps","arcLengthArray","pointArray","positions","colors","color","hadGap","fill_loop","push","slice","isNaN","isFinite","k","acolor","bcolor","Array","isArray","w0","t0","dashArray","dashes","prefixSum","unshift","set","le","setPixels","dispose","pick","selection","value","t","ti","dataIndex","scene","attributes","location","nextPosition","defaultTexture","data","wrap","REPEAT","linePlot"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = createLinePlot\n\nvar createBuffer = require('gl-buffer')\nvar createVAO = require('gl-vao')\nvar createTexture = require('gl-texture2d')\n\nvar UINT8_VIEW = new Uint8Array(4)\nvar FLOAT_VIEW = new Float32Array(UINT8_VIEW.buffer)\n// https://github.com/mikolalysenko/glsl-read-float/blob/master/index.js\nfunction unpackFloat(x, y, z, w) {\n  UINT8_VIEW[0] = w\n  UINT8_VIEW[1] = z\n  UINT8_VIEW[2] = y\n  UINT8_VIEW[3] = x\n  return FLOAT_VIEW[0]\n}\n\nvar bsearch = require('binary-search-bounds')\nvar ndarray = require('ndarray')\nvar shaders = require('./lib/shaders')\n\nvar createShader = shaders.createShader\nvar createPickShader = shaders.createPickShader\n\nvar identity = [1, 0, 0, 0,\n  0, 1, 0, 0,\n  0, 0, 1, 0,\n  0, 0, 0, 1]\n\nfunction distance (a, b) {\n  var s = 0.0\n  for (var i = 0; i < 3; ++i) {\n    var d = a[i] - b[i]\n    s += d * d\n  }\n  return Math.sqrt(s)\n}\n\nfunction filterClipBounds (bounds) {\n  var result = [[-1e6, -1e6, -1e6], [1e6, 1e6, 1e6]]\n  for (var i = 0; i < 3; ++i) {\n    result[0][i] = Math.max(bounds[0][i], result[0][i])\n    result[1][i] = Math.min(bounds[1][i], result[1][i])\n  }\n  return result\n}\n\nfunction PickResult (tau, position, index, dataCoordinate) {\n  this.arcLength = tau\n  this.position = position\n  this.index = index\n  this.dataCoordinate = dataCoordinate\n}\n\nfunction LinePlot (gl, shader, pickShader, buffer, vao, texture) {\n  this.gl = gl\n  this.shader = shader\n  this.pickShader = pickShader\n  this.buffer = buffer\n  this.vao = vao\n  this.clipBounds = [\n    [ -Infinity, -Infinity, -Infinity ],\n    [ Infinity, Infinity, Infinity ]]\n  this.points = []\n  this.arcLength = []\n  this.vertexCount = 0\n  this.bounds = [[0, 0, 0], [0, 0, 0]]\n  this.pickId = 0\n  this.lineWidth = 1\n  this.texture = texture\n  this.dashScale = 1\n  this.opacity = 1\n  this.hasAlpha = false\n  this.dirty = true\n  this.pixelRatio = 1\n}\n\nvar proto = LinePlot.prototype\n\nproto.isTransparent = function () {\n  return this.hasAlpha\n}\n\nproto.isOpaque = function () {\n  return !this.hasAlpha\n}\n\nproto.pickSlots = 1\n\nproto.setPickBase = function (id) {\n  this.pickId = id\n}\n\nproto.drawTransparent = proto.draw = function (camera) {\n  if (!this.vertexCount) return\n  var gl = this.gl\n  var shader = this.shader\n  var vao = this.vao\n  shader.bind()\n  shader.uniforms = {\n    model: camera.model || identity,\n    view: camera.view || identity,\n    projection: camera.projection || identity,\n    clipBounds: filterClipBounds(this.clipBounds),\n    dashTexture: this.texture.bind(),\n    dashScale: this.dashScale / this.arcLength[this.arcLength.length - 1],\n    opacity: this.opacity,\n    screenShape: [gl.drawingBufferWidth, gl.drawingBufferHeight],\n    pixelRatio: this.pixelRatio\n  }\n  vao.bind()\n  vao.draw(gl.TRIANGLE_STRIP, this.vertexCount)\n  vao.unbind()\n}\n\nproto.drawPick = function (camera) {\n  if (!this.vertexCount) return\n  var gl = this.gl\n  var shader = this.pickShader\n  var vao = this.vao\n  shader.bind()\n  shader.uniforms = {\n    model: camera.model || identity,\n    view: camera.view || identity,\n    projection: camera.projection || identity,\n    pickId: this.pickId,\n    clipBounds: filterClipBounds(this.clipBounds),\n    screenShape: [gl.drawingBufferWidth, gl.drawingBufferHeight],\n    pixelRatio: this.pixelRatio\n  }\n  vao.bind()\n  vao.draw(gl.TRIANGLE_STRIP, this.vertexCount)\n  vao.unbind()\n}\n\nproto.update = function (options) {\n  var i, j\n\n  this.dirty = true\n\n  var connectGaps = !!options.connectGaps\n\n  if ('dashScale' in options) {\n    this.dashScale = options.dashScale\n  }\n\n  this.hasAlpha = false // default to no transparent draw\n  if ('opacity' in options) {\n    this.opacity = +options.opacity\n    if(this.opacity < 1) {\n      this.hasAlpha = true;\n    }\n  }\n\n  // Recalculate buffer data\n  var buffer = []\n  var arcLengthArray = []\n  var pointArray = []\n  var arcLength = 0.0\n  var vertexCount = 0\n  var bounds = [\n    [ Infinity, Infinity, Infinity ],\n    [ -Infinity, -Infinity, -Infinity ]]\n\n  var positions = options.position || options.positions\n  if (positions) {\n\n    // Default color\n    var colors = options.color || options.colors || [0, 0, 0, 1]\n\n    var lineWidth = options.lineWidth || 1\n\n    var hadGap = false\n\n    fill_loop:\n    for (i = 1; i < positions.length; ++i) {\n      var a = positions[i - 1]\n      var b = positions[i]\n\n      arcLengthArray.push(arcLength)\n      pointArray.push(a.slice())\n\n      for (j = 0; j < 3; ++j) {\n        if (isNaN(a[j]) || isNaN(b[j]) ||\n          !isFinite(a[j]) || !isFinite(b[j])) {\n\n          if (!connectGaps && buffer.length > 0) {\n            for (var k = 0; k < 24; ++k) {\n              buffer.push(buffer[buffer.length - 12])\n            }\n            vertexCount += 2\n            hadGap = true\n          }\n\n          continue fill_loop\n        }\n        bounds[0][j] = Math.min(bounds[0][j], a[j], b[j])\n        bounds[1][j] = Math.max(bounds[1][j], a[j], b[j])\n      }\n\n      var acolor, bcolor\n      if (Array.isArray(colors[0])) {\n        acolor = (colors.length > i - 1) ? colors[i - 1] :             // using index value\n                 (colors.length > 0)     ? colors[colors.length - 1] : // using last item\n                                           [0, 0, 0, 1];               // using black\n\n        bcolor = (colors.length > i) ? colors[i] :                 // using index value\n                 (colors.length > 0) ? colors[colors.length - 1] : // using last item\n                                       [0, 0, 0, 1];               // using black\n      } else {\n        acolor = bcolor = colors\n      }\n\n      if (acolor.length === 3) {\n        acolor = [acolor[0], acolor[1], acolor[2], 1]\n      }\n      if (bcolor.length === 3) {\n        bcolor = [bcolor[0], bcolor[1], bcolor[2], 1]\n      }\n\n      if(!this.hasAlpha && acolor[3] < 1) this.hasAlpha = true\n\n      var w0\n      if (Array.isArray(lineWidth)) {\n        w0 = (lineWidth.length > i - 1) ? lineWidth[i - 1] :                // using index value\n             (lineWidth.length > 0)     ? lineWidth[lineWidth.length - 1] : // using last item\n                                          [0, 0, 0, 1];                     // using black\n      } else {\n        w0 = lineWidth\n      }\n\n      var t0 = arcLength\n      arcLength += distance(a, b)\n\n      if (hadGap) {\n        for (j = 0; j < 2; ++j) {\n          buffer.push(\n            a[0], a[1], a[2], b[0], b[1], b[2], t0, w0, acolor[0], acolor[1], acolor[2], acolor[3])\n        }\n        vertexCount += 2\n        hadGap = false\n      }\n\n      buffer.push(\n        a[0], a[1], a[2], b[0], b[1], b[2], t0, w0, acolor[0], acolor[1], acolor[2], acolor[3],\n        a[0], a[1], a[2], b[0], b[1], b[2], t0, -w0, acolor[0], acolor[1], acolor[2], acolor[3],\n        b[0], b[1], b[2], a[0], a[1], a[2], arcLength, -w0, bcolor[0], bcolor[1], bcolor[2], bcolor[3],\n        b[0], b[1], b[2], a[0], a[1], a[2], arcLength, w0, bcolor[0], bcolor[1], bcolor[2], bcolor[3])\n\n      vertexCount += 4\n    }\n  }\n  this.buffer.update(buffer)\n\n  arcLengthArray.push(arcLength)\n  pointArray.push(positions[positions.length - 1].slice())\n\n  this.bounds = bounds\n\n  this.vertexCount = vertexCount\n\n  this.points = pointArray\n  this.arcLength = arcLengthArray\n\n  if ('dashes' in options) {\n    var dashArray = options.dashes\n\n    // Calculate prefix sum\n    var prefixSum = dashArray.slice()\n    prefixSum.unshift(0)\n    for (i = 1; i < prefixSum.length; ++i) {\n      prefixSum[i] = prefixSum[i - 1] + prefixSum[i]\n    }\n\n    var dashTexture = ndarray(new Array(256 * 4), [256, 1, 4])\n    for (i = 0; i < 256; ++i) {\n      for (j = 0; j < 4; ++j) {\n        dashTexture.set(i, 0, j, 0)\n      }\n      if (bsearch.le(prefixSum, prefixSum[prefixSum.length - 1] * i / 255.0) & 1) {\n        dashTexture.set(i, 0, 0, 0)\n      } else {\n        dashTexture.set(i, 0, 0, 255)\n      }\n    }\n\n    this.texture.setPixels(dashTexture)\n  }\n}\n\nproto.dispose = function () {\n  this.shader.dispose()\n  this.vao.dispose()\n  this.buffer.dispose()\n}\n\nproto.pick = function (selection) {\n  if (!selection) {\n    return null\n  }\n  if (selection.id !== this.pickId) {\n    return null\n  }\n  var tau = unpackFloat(\n    selection.value[0],\n    selection.value[1],\n    selection.value[2],\n    0)\n  var index = bsearch.le(this.arcLength, tau)\n  if (index < 0) {\n    return null\n  }\n  if (index === this.arcLength.length - 1) {\n    return new PickResult(\n      this.arcLength[this.arcLength.length - 1],\n      this.points[this.points.length - 1].slice(),\n      index)\n  }\n  var a = this.points[index]\n  var b = this.points[Math.min(index + 1, this.points.length - 1)]\n  var t = (tau - this.arcLength[index]) / (this.arcLength[index + 1] - this.arcLength[index])\n  var ti = 1.0 - t\n  var x = [0, 0, 0]\n  for (var i = 0; i < 3; ++i) {\n    x[i] = ti * a[i] + t * b[i]\n  }\n  var dataIndex = Math.min((t < 0.5) ? index : (index + 1), this.points.length - 1)\n  return new PickResult(\n    tau,\n    x,\n    dataIndex,\n    this.points[dataIndex])\n}\n\nfunction createLinePlot (options) {\n  var gl = options.gl || (options.scene && options.scene.gl)\n\n  var shader = createShader(gl)\n  shader.attributes.position.location = 0\n  shader.attributes.nextPosition.location = 1\n  shader.attributes.arcLength.location = 2\n  shader.attributes.lineWidth.location = 3\n  shader.attributes.color.location = 4\n\n  var pickShader = createPickShader(gl)\n  pickShader.attributes.position.location = 0\n  pickShader.attributes.nextPosition.location = 1\n  pickShader.attributes.arcLength.location = 2\n  pickShader.attributes.lineWidth.location = 3\n  pickShader.attributes.color.location = 4\n\n  var buffer = createBuffer(gl)\n  var vao = createVAO(gl, [\n    {\n      'buffer': buffer,\n      'size': 3,\n      'offset': 0,\n      'stride': 48\n    },\n    {\n      'buffer': buffer,\n      'size': 3,\n      'offset': 12,\n      'stride': 48\n    },\n    {\n      'buffer': buffer,\n      'size': 1,\n      'offset': 24,\n      'stride': 48\n    },\n    {\n      'buffer': buffer,\n      'size': 1,\n      'offset': 28,\n      'stride': 48\n    },\n    {\n      'buffer': buffer,\n      'size': 4,\n      'offset': 32,\n      'stride': 48\n    }\n  ])\n\n  // Create texture for dash pattern\n  var defaultTexture = ndarray(new Array(256 * 4), [256, 1, 4])\n  for (var i = 0; i < 256 * 4; ++i) {\n    defaultTexture.data[i] = 255\n  }\n  var texture = createTexture(gl, defaultTexture)\n  texture.wrap = gl.REPEAT\n\n  var linePlot = new LinePlot(gl, shader, pickShader, buffer, vao, texture)\n  linePlot.update(options)\n  return linePlot\n}\n"]},"metadata":{},"sourceType":"script"}