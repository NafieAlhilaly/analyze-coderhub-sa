{"ast":null,"code":"'use strict';\n\nexports.dash = {\n  valType: 'string',\n  // string type usually doesn't take values... this one should really be\n  // a special type or at least a special coercion function, from the GUI\n  // you only get these values but elsewhere the user can supply a list of\n  // dash lengths in px, and it will be honored\n  values: ['solid', 'dot', 'dash', 'longdash', 'dashdot', 'longdashdot'],\n  dflt: 'solid',\n  editType: 'style',\n  description: ['Sets the dash style of lines. Set to a dash type string', '(*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*)', 'or a dash length list in px (eg *5px,10px,2px,2px*).'].join(' ')\n};\nexports.pattern = {\n  shape: {\n    valType: 'enumerated',\n    values: ['', '/', '\\\\', 'x', '-', '|', '+', '.'],\n    dflt: '',\n    arrayOk: true,\n    editType: 'style',\n    description: ['Sets the shape of the pattern fill.', 'By default, no pattern is used for filling the area.'].join(' ')\n  },\n  fillmode: {\n    valType: 'enumerated',\n    values: ['replace', 'overlay'],\n    dflt: 'replace',\n    editType: 'style',\n    description: ['Determines whether `marker.color` should be used', 'as a default to `bgcolor` or a `fgcolor`.'].join(' ')\n  },\n  bgcolor: {\n    valType: 'color',\n    arrayOk: true,\n    editType: 'style',\n    description: ['When there is no colorscale sets the color of background pattern fill.', 'Defaults to a `marker.color` background when `fillmode` is *overlay*.', 'Otherwise, defaults to a transparent background.'].join(' ')\n  },\n  fgcolor: {\n    valType: 'color',\n    arrayOk: true,\n    editType: 'style',\n    description: ['When there is no colorscale sets the color of foreground pattern fill.', 'Defaults to a `marker.color` background when `fillmode` is *replace*.', 'Otherwise, defaults to dark grey or white', 'to increase contrast with the `bgcolor`.'].join(' ')\n  },\n  fgopacity: {\n    valType: 'number',\n    editType: 'style',\n    min: 0,\n    max: 1,\n    description: ['Sets the opacity of the foreground pattern fill.', 'Defaults to a 0.5 when `fillmode` is *overlay*.', 'Otherwise, defaults to 1.'].join(' ')\n  },\n  size: {\n    valType: 'number',\n    min: 0,\n    dflt: 8,\n    arrayOk: true,\n    editType: 'style',\n    description: ['Sets the size of unit squares of the pattern fill in pixels,', 'which corresponds to the interval of repetition of the pattern.'].join(' ')\n  },\n  solidity: {\n    valType: 'number',\n    min: 0,\n    max: 1,\n    dflt: 0.3,\n    arrayOk: true,\n    editType: 'style',\n    description: ['Sets the solidity of the pattern fill.', 'Solidity is roughly the fraction of the area filled by the pattern.', 'Solidity of 0 shows only the background color without pattern', 'and solidty of 1 shows only the foreground color without pattern.'].join(' ')\n  },\n  editType: 'style',\n  description: ['Sets the pattern within the marker.'].join(' ')\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/drawing/attributes.js"],"names":["exports","dash","valType","values","dflt","editType","description","join","pattern","shape","arrayOk","fillmode","bgcolor","fgcolor","fgopacity","min","max","size","solidity"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.dash = {\n    valType: 'string',\n    // string type usually doesn't take values... this one should really be\n    // a special type or at least a special coercion function, from the GUI\n    // you only get these values but elsewhere the user can supply a list of\n    // dash lengths in px, and it will be honored\n    values: ['solid', 'dot', 'dash', 'longdash', 'dashdot', 'longdashdot'],\n    dflt: 'solid',\n    editType: 'style',\n    description: [\n        'Sets the dash style of lines. Set to a dash type string',\n        '(*solid*, *dot*, *dash*, *longdash*, *dashdot*, or *longdashdot*)',\n        'or a dash length list in px (eg *5px,10px,2px,2px*).'\n    ].join(' ')\n};\n\nexports.pattern = {\n    shape: {\n        valType: 'enumerated',\n        values: ['', '/', '\\\\', 'x', '-', '|', '+', '.'],\n        dflt: '',\n        arrayOk: true,\n        editType: 'style',\n        description: [\n            'Sets the shape of the pattern fill.',\n            'By default, no pattern is used for filling the area.',\n        ].join(' ')\n    },\n    fillmode: {\n        valType: 'enumerated',\n        values: ['replace', 'overlay'],\n        dflt: 'replace',\n        editType: 'style',\n        description: [\n            'Determines whether `marker.color` should be used',\n            'as a default to `bgcolor` or a `fgcolor`.'\n        ].join(' ')\n    },\n    bgcolor: {\n        valType: 'color',\n        arrayOk: true,\n        editType: 'style',\n        description: [\n            'When there is no colorscale sets the color of background pattern fill.',\n            'Defaults to a `marker.color` background when `fillmode` is *overlay*.',\n            'Otherwise, defaults to a transparent background.'\n        ].join(' ')\n    },\n    fgcolor: {\n        valType: 'color',\n        arrayOk: true,\n        editType: 'style',\n        description: [\n            'When there is no colorscale sets the color of foreground pattern fill.',\n            'Defaults to a `marker.color` background when `fillmode` is *replace*.',\n            'Otherwise, defaults to dark grey or white',\n            'to increase contrast with the `bgcolor`.',\n        ].join(' ')\n    },\n    fgopacity: {\n        valType: 'number',\n        editType: 'style',\n        min: 0,\n        max: 1,\n        description: [\n            'Sets the opacity of the foreground pattern fill.',\n            'Defaults to a 0.5 when `fillmode` is *overlay*.',\n            'Otherwise, defaults to 1.'\n        ].join(' ')\n    },\n    size: {\n        valType: 'number',\n        min: 0,\n        dflt: 8,\n        arrayOk: true,\n        editType: 'style',\n        description: [\n            'Sets the size of unit squares of the pattern fill in pixels,',\n            'which corresponds to the interval of repetition of the pattern.',\n        ].join(' ')\n    },\n    solidity: {\n        valType: 'number',\n        min: 0,\n        max: 1,\n        dflt: 0.3,\n        arrayOk: true,\n        editType: 'style',\n        description: [\n            'Sets the solidity of the pattern fill.',\n            'Solidity is roughly the fraction of the area filled by the pattern.',\n            'Solidity of 0 shows only the background color without pattern',\n            'and solidty of 1 shows only the foreground color without pattern.',\n        ].join(' ')\n    },\n    editType: 'style',\n    description: [\n        'Sets the pattern within the marker.'\n    ].join(' '),\n};\n"]},"metadata":{},"sourceType":"script"}