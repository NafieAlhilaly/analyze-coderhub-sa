{"ast":null,"code":"'use strict';\n\nvar cluster = require('@plotly/point-cluster');\n\nvar Lib = require('../../lib');\n\nvar AxisIDs = require('../../plots/cartesian/axis_ids');\n\nvar findExtremes = require('../../plots/cartesian/autorange').findExtremes;\n\nvar alignPeriod = require('../../plots/cartesian/align_period');\n\nvar scatterCalc = require('../scatter/calc');\n\nvar calcMarkerSize = scatterCalc.calcMarkerSize;\nvar calcAxisExpansion = scatterCalc.calcAxisExpansion;\nvar setFirstScatter = scatterCalc.setFirstScatter;\n\nvar calcColorscale = require('../scatter/colorscale_calc');\n\nvar convert = require('./convert');\n\nvar sceneUpdate = require('./scene_update');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar TOO_MANY_POINTS = require('./constants').TOO_MANY_POINTS;\n\nmodule.exports = function calc(gd, trace) {\n  var fullLayout = gd._fullLayout;\n  var xa = AxisIDs.getFromId(gd, trace.xaxis);\n  var ya = AxisIDs.getFromId(gd, trace.yaxis);\n  var subplot = fullLayout._plots[trace.xaxis + trace.yaxis];\n  var len = trace._length;\n  var hasTooManyPoints = len >= TOO_MANY_POINTS;\n  var len2 = len * 2;\n  var stash = {};\n  var i;\n  var origX = xa.makeCalcdata(trace, 'x');\n  var origY = ya.makeCalcdata(trace, 'y');\n  var xObj = alignPeriod(trace, xa, 'x', origX);\n  var yObj = alignPeriod(trace, ya, 'y', origY);\n  var x = xObj.vals;\n  var y = yObj.vals;\n  trace._x = x;\n  trace._y = y;\n\n  if (trace.xperiodalignment) {\n    trace._origX = origX;\n    trace._xStarts = xObj.starts;\n    trace._xEnds = xObj.ends;\n  }\n\n  if (trace.yperiodalignment) {\n    trace._origY = origY;\n    trace._yStarts = yObj.starts;\n    trace._yEnds = yObj.ends;\n  } // we need hi-precision for scatter2d,\n  // regl-scatter2d uses NaNs for bad/missing values\n\n\n  var positions = new Array(len2);\n\n  var _ids = new Array(len);\n\n  for (i = 0; i < len; i++) {\n    positions[i * 2] = x[i] === BADNUM ? NaN : x[i];\n    positions[i * 2 + 1] = y[i] === BADNUM ? NaN : y[i]; // Pre-compute ids.\n\n    _ids[i] = i;\n  }\n\n  if (xa.type === 'log') {\n    for (i = 0; i < len2; i += 2) {\n      positions[i] = xa.c2l(positions[i]);\n    }\n  }\n\n  if (ya.type === 'log') {\n    for (i = 1; i < len2; i += 2) {\n      positions[i] = ya.c2l(positions[i]);\n    }\n  } // we don't build a tree for log axes since it takes long to convert log2px\n  // and it is also\n\n\n  if (hasTooManyPoints && xa.type !== 'log' && ya.type !== 'log') {\n    // FIXME: delegate this to webworker\n    stash.tree = cluster(positions);\n  } else {\n    stash.ids = _ids;\n  } // create scene options and scene\n\n\n  calcColorscale(gd, trace);\n  var opts = sceneOptions(gd, subplot, trace, positions, x, y);\n  var scene = sceneUpdate(gd, subplot); // Reuse SVG scatter axis expansion routine.\n  // For graphs with very large number of points and array marker.size,\n  // use average marker size instead to speed things up.\n\n  setFirstScatter(fullLayout, trace);\n  var ppad;\n\n  if (!hasTooManyPoints) {\n    ppad = calcMarkerSize(trace, len);\n  } else if (opts.marker) {\n    ppad = opts.marker.sizeAvg || Math.max(opts.marker.size, 3);\n  }\n\n  calcAxisExpansion(gd, trace, xa, ya, x, y, ppad);\n  if (opts.errorX) expandForErrorBars(trace, xa, opts.errorX);\n  if (opts.errorY) expandForErrorBars(trace, ya, opts.errorY); // set flags to create scene renderers\n\n  if (opts.fill && !scene.fill2d) scene.fill2d = true;\n  if (opts.marker && !scene.scatter2d) scene.scatter2d = true;\n  if (opts.line && !scene.line2d) scene.line2d = true;\n  if ((opts.errorX || opts.errorY) && !scene.error2d) scene.error2d = true;\n  if (opts.text && !scene.glText) scene.glText = true;\n  if (opts.marker) opts.marker.snap = len;\n  scene.lineOptions.push(opts.line);\n  scene.errorXOptions.push(opts.errorX);\n  scene.errorYOptions.push(opts.errorY);\n  scene.fillOptions.push(opts.fill);\n  scene.markerOptions.push(opts.marker);\n  scene.markerSelectedOptions.push(opts.markerSel);\n  scene.markerUnselectedOptions.push(opts.markerUnsel);\n  scene.textOptions.push(opts.text);\n  scene.textSelectedOptions.push(opts.textSel);\n  scene.textUnselectedOptions.push(opts.textUnsel);\n  scene.selectBatch.push([]);\n  scene.unselectBatch.push([]);\n  stash._scene = scene;\n  stash.index = scene.count;\n  stash.x = x;\n  stash.y = y;\n  stash.positions = positions;\n  scene.count++;\n  return [{\n    x: false,\n    y: false,\n    t: stash,\n    trace: trace\n  }];\n};\n\nfunction expandForErrorBars(trace, ax, opts) {\n  var extremes = trace._extremes[ax._id];\n  var errExt = findExtremes(ax, opts._bnds, {\n    padded: true\n  });\n  extremes.min = extremes.min.concat(errExt.min);\n  extremes.max = extremes.max.concat(errExt.max);\n}\n\nfunction sceneOptions(gd, subplot, trace, positions, x, y) {\n  var opts = convert.style(gd, trace);\n\n  if (opts.marker) {\n    opts.marker.positions = positions;\n  }\n\n  if (opts.line && positions.length > 1) {\n    Lib.extendFlat(opts.line, convert.linePositions(gd, trace, positions));\n  }\n\n  if (opts.errorX || opts.errorY) {\n    var errors = convert.errorBarPositions(gd, trace, positions, x, y);\n\n    if (opts.errorX) {\n      Lib.extendFlat(opts.errorX, errors.x);\n    }\n\n    if (opts.errorY) {\n      Lib.extendFlat(opts.errorY, errors.y);\n    }\n  }\n\n  if (opts.text) {\n    Lib.extendFlat(opts.text, {\n      positions: positions\n    }, convert.textPosition(gd, trace, opts.text, opts.marker));\n    Lib.extendFlat(opts.textSel, {\n      positions: positions\n    }, convert.textPosition(gd, trace, opts.text, opts.markerSel));\n    Lib.extendFlat(opts.textUnsel, {\n      positions: positions\n    }, convert.textPosition(gd, trace, opts.text, opts.markerUnsel));\n  }\n\n  return opts;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/scattergl/calc.js"],"names":["cluster","require","Lib","AxisIDs","findExtremes","alignPeriod","scatterCalc","calcMarkerSize","calcAxisExpansion","setFirstScatter","calcColorscale","convert","sceneUpdate","BADNUM","TOO_MANY_POINTS","module","exports","calc","gd","trace","fullLayout","_fullLayout","xa","getFromId","xaxis","ya","yaxis","subplot","_plots","len","_length","hasTooManyPoints","len2","stash","i","origX","makeCalcdata","origY","xObj","yObj","x","vals","y","_x","_y","xperiodalignment","_origX","_xStarts","starts","_xEnds","ends","yperiodalignment","_origY","_yStarts","_yEnds","positions","Array","_ids","NaN","type","c2l","tree","ids","opts","sceneOptions","scene","ppad","marker","sizeAvg","Math","max","size","errorX","expandForErrorBars","errorY","fill","fill2d","scatter2d","line","line2d","error2d","text","glText","snap","lineOptions","push","errorXOptions","errorYOptions","fillOptions","markerOptions","markerSelectedOptions","markerSel","markerUnselectedOptions","markerUnsel","textOptions","textSelectedOptions","textSel","textUnselectedOptions","textUnsel","selectBatch","unselectBatch","_scene","index","count","t","ax","extremes","_extremes","_id","errExt","_bnds","padded","min","concat","style","length","extendFlat","linePositions","errors","errorBarPositions","textPosition"],"mappings":"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","sourcesContent":["'use strict';\n\nvar cluster = require('@plotly/point-cluster');\n\nvar Lib = require('../../lib');\nvar AxisIDs = require('../../plots/cartesian/axis_ids');\nvar findExtremes = require('../../plots/cartesian/autorange').findExtremes;\nvar alignPeriod = require('../../plots/cartesian/align_period');\n\nvar scatterCalc = require('../scatter/calc');\nvar calcMarkerSize = scatterCalc.calcMarkerSize;\nvar calcAxisExpansion = scatterCalc.calcAxisExpansion;\nvar setFirstScatter = scatterCalc.setFirstScatter;\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar convert = require('./convert');\nvar sceneUpdate = require('./scene_update');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar TOO_MANY_POINTS = require('./constants').TOO_MANY_POINTS;\n\nmodule.exports = function calc(gd, trace) {\n    var fullLayout = gd._fullLayout;\n    var xa = AxisIDs.getFromId(gd, trace.xaxis);\n    var ya = AxisIDs.getFromId(gd, trace.yaxis);\n    var subplot = fullLayout._plots[trace.xaxis + trace.yaxis];\n    var len = trace._length;\n    var hasTooManyPoints = len >= TOO_MANY_POINTS;\n    var len2 = len * 2;\n    var stash = {};\n    var i;\n\n    var origX = xa.makeCalcdata(trace, 'x');\n    var origY = ya.makeCalcdata(trace, 'y');\n    var xObj = alignPeriod(trace, xa, 'x', origX);\n    var yObj = alignPeriod(trace, ya, 'y', origY);\n    var x = xObj.vals;\n    var y = yObj.vals;\n    trace._x = x;\n    trace._y = y;\n\n    if(trace.xperiodalignment) {\n        trace._origX = origX;\n        trace._xStarts = xObj.starts;\n        trace._xEnds = xObj.ends;\n    }\n    if(trace.yperiodalignment) {\n        trace._origY = origY;\n        trace._yStarts = yObj.starts;\n        trace._yEnds = yObj.ends;\n    }\n\n    // we need hi-precision for scatter2d,\n    // regl-scatter2d uses NaNs for bad/missing values\n    var positions = new Array(len2);\n    var _ids = new Array(len);\n    for(i = 0; i < len; i++) {\n        positions[i * 2] = x[i] === BADNUM ? NaN : x[i];\n        positions[i * 2 + 1] = y[i] === BADNUM ? NaN : y[i];\n        // Pre-compute ids.\n        _ids[i] = i;\n    }\n\n    if(xa.type === 'log') {\n        for(i = 0; i < len2; i += 2) {\n            positions[i] = xa.c2l(positions[i]);\n        }\n    }\n    if(ya.type === 'log') {\n        for(i = 1; i < len2; i += 2) {\n            positions[i] = ya.c2l(positions[i]);\n        }\n    }\n\n    // we don't build a tree for log axes since it takes long to convert log2px\n    // and it is also\n    if(hasTooManyPoints && (xa.type !== 'log' && ya.type !== 'log')) {\n        // FIXME: delegate this to webworker\n        stash.tree = cluster(positions);\n    } else {\n        stash.ids = _ids;\n    }\n\n    // create scene options and scene\n    calcColorscale(gd, trace);\n    var opts = sceneOptions(gd, subplot, trace, positions, x, y);\n    var scene = sceneUpdate(gd, subplot);\n\n    // Reuse SVG scatter axis expansion routine.\n    // For graphs with very large number of points and array marker.size,\n    // use average marker size instead to speed things up.\n    setFirstScatter(fullLayout, trace);\n    var ppad;\n    if(!hasTooManyPoints) {\n        ppad = calcMarkerSize(trace, len);\n    } else if(opts.marker) {\n        ppad = opts.marker.sizeAvg || Math.max(opts.marker.size, 3);\n    }\n    calcAxisExpansion(gd, trace, xa, ya, x, y, ppad);\n    if(opts.errorX) expandForErrorBars(trace, xa, opts.errorX);\n    if(opts.errorY) expandForErrorBars(trace, ya, opts.errorY);\n\n    // set flags to create scene renderers\n    if(opts.fill && !scene.fill2d) scene.fill2d = true;\n    if(opts.marker && !scene.scatter2d) scene.scatter2d = true;\n    if(opts.line && !scene.line2d) scene.line2d = true;\n    if((opts.errorX || opts.errorY) && !scene.error2d) scene.error2d = true;\n    if(opts.text && !scene.glText) scene.glText = true;\n    if(opts.marker) opts.marker.snap = len;\n\n    scene.lineOptions.push(opts.line);\n    scene.errorXOptions.push(opts.errorX);\n    scene.errorYOptions.push(opts.errorY);\n    scene.fillOptions.push(opts.fill);\n    scene.markerOptions.push(opts.marker);\n    scene.markerSelectedOptions.push(opts.markerSel);\n    scene.markerUnselectedOptions.push(opts.markerUnsel);\n    scene.textOptions.push(opts.text);\n    scene.textSelectedOptions.push(opts.textSel);\n    scene.textUnselectedOptions.push(opts.textUnsel);\n    scene.selectBatch.push([]);\n    scene.unselectBatch.push([]);\n\n    stash._scene = scene;\n    stash.index = scene.count;\n    stash.x = x;\n    stash.y = y;\n    stash.positions = positions;\n    scene.count++;\n\n    return [{x: false, y: false, t: stash, trace: trace}];\n};\n\nfunction expandForErrorBars(trace, ax, opts) {\n    var extremes = trace._extremes[ax._id];\n    var errExt = findExtremes(ax, opts._bnds, {padded: true});\n    extremes.min = extremes.min.concat(errExt.min);\n    extremes.max = extremes.max.concat(errExt.max);\n}\n\nfunction sceneOptions(gd, subplot, trace, positions, x, y) {\n    var opts = convert.style(gd, trace);\n\n    if(opts.marker) {\n        opts.marker.positions = positions;\n    }\n\n    if(opts.line && positions.length > 1) {\n        Lib.extendFlat(\n            opts.line,\n            convert.linePositions(gd, trace, positions)\n        );\n    }\n\n    if(opts.errorX || opts.errorY) {\n        var errors = convert.errorBarPositions(gd, trace, positions, x, y);\n\n        if(opts.errorX) {\n            Lib.extendFlat(opts.errorX, errors.x);\n        }\n        if(opts.errorY) {\n            Lib.extendFlat(opts.errorY, errors.y);\n        }\n    }\n\n    if(opts.text) {\n        Lib.extendFlat(\n            opts.text,\n            {positions: positions},\n            convert.textPosition(gd, trace, opts.text, opts.marker)\n        );\n        Lib.extendFlat(\n            opts.textSel,\n            {positions: positions},\n            convert.textPosition(gd, trace, opts.text, opts.markerSel)\n        );\n        Lib.extendFlat(\n            opts.textUnsel,\n            {positions: positions},\n            convert.textPosition(gd, trace, opts.text, opts.markerUnsel)\n        );\n    }\n\n    return opts;\n}\n"]},"metadata":{},"sourceType":"script"}