{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar subTypes = require('../scatter/subtypes');\n\nvar helpers = require('./helpers');\n\nmodule.exports = function select(searchInfo, selectionTester) {\n  var cd = searchInfo.cd;\n  var trace = cd[0].trace;\n  var stash = cd[0].t;\n  var scene = searchInfo.scene;\n  var cdata = scene.matrixOptions.cdata;\n  var xa = searchInfo.xaxis;\n  var ya = searchInfo.yaxis;\n  var selection = [];\n  if (!scene) return selection;\n  var hasOnlyLines = !subTypes.hasMarkers(trace) && !subTypes.hasText(trace);\n  if (trace.visible !== true || hasOnlyLines) return selection;\n  var xi = helpers.getDimIndex(trace, xa);\n  var yi = helpers.getDimIndex(trace, ya);\n  if (xi === false || yi === false) return selection;\n  var xpx = stash.xpx[xi];\n  var ypx = stash.ypx[yi];\n  var x = cdata[xi];\n  var y = cdata[yi];\n  var els = [];\n  var unels = []; // degenerate polygon does not enable selection\n  // filter out points by visible scatter ones\n\n  if (selectionTester !== false && !selectionTester.degenerate) {\n    for (var i = 0; i < x.length; i++) {\n      if (selectionTester.contains([xpx[i], ypx[i]], null, i, searchInfo)) {\n        els.push(i);\n        selection.push({\n          pointNumber: i,\n          x: x[i],\n          y: y[i]\n        });\n      } else {\n        unels.push(i);\n      }\n    }\n  }\n\n  var matrixOpts = scene.matrixOptions;\n\n  if (!els.length && !unels.length) {\n    scene.matrix.update(matrixOpts, null);\n  } else if (!scene.selectBatch.length && !scene.unselectBatch.length) {\n    scene.matrix.update(scene.unselectedOptions, Lib.extendFlat({}, matrixOpts, scene.selectedOptions, scene.viewOpts));\n  }\n\n  scene.selectBatch = els;\n  scene.unselectBatch = unels;\n  return selection;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/splom/select.js"],"names":["Lib","require","subTypes","helpers","module","exports","select","searchInfo","selectionTester","cd","trace","stash","t","scene","cdata","matrixOptions","xa","xaxis","ya","yaxis","selection","hasOnlyLines","hasMarkers","hasText","visible","xi","getDimIndex","yi","xpx","ypx","x","y","els","unels","degenerate","i","length","contains","push","pointNumber","matrixOpts","matrix","update","selectBatch","unselectBatch","unselectedOptions","extendFlat","selectedOptions","viewOpts"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar subTypes = require('../scatter/subtypes');\nvar helpers = require('./helpers');\n\nmodule.exports = function select(searchInfo, selectionTester) {\n    var cd = searchInfo.cd;\n    var trace = cd[0].trace;\n    var stash = cd[0].t;\n    var scene = searchInfo.scene;\n    var cdata = scene.matrixOptions.cdata;\n    var xa = searchInfo.xaxis;\n    var ya = searchInfo.yaxis;\n    var selection = [];\n\n    if(!scene) return selection;\n\n    var hasOnlyLines = (!subTypes.hasMarkers(trace) && !subTypes.hasText(trace));\n    if(trace.visible !== true || hasOnlyLines) return selection;\n\n    var xi = helpers.getDimIndex(trace, xa);\n    var yi = helpers.getDimIndex(trace, ya);\n    if(xi === false || yi === false) return selection;\n\n    var xpx = stash.xpx[xi];\n    var ypx = stash.ypx[yi];\n    var x = cdata[xi];\n    var y = cdata[yi];\n    var els = [];\n    var unels = [];\n\n    // degenerate polygon does not enable selection\n    // filter out points by visible scatter ones\n    if(selectionTester !== false && !selectionTester.degenerate) {\n        for(var i = 0; i < x.length; i++) {\n            if(selectionTester.contains([xpx[i], ypx[i]], null, i, searchInfo)) {\n                els.push(i);\n                selection.push({\n                    pointNumber: i,\n                    x: x[i],\n                    y: y[i]\n                });\n            } else {\n                unels.push(i);\n            }\n        }\n    }\n\n    var matrixOpts = scene.matrixOptions;\n\n    if(!els.length && !unels.length) {\n        scene.matrix.update(matrixOpts, null);\n    } else if(!scene.selectBatch.length && !scene.unselectBatch.length) {\n        scene.matrix.update(\n            scene.unselectedOptions,\n            Lib.extendFlat({}, matrixOpts, scene.selectedOptions, scene.viewOpts)\n        );\n    }\n\n    scene.selectBatch = els;\n    scene.unselectBatch = unels;\n\n    return selection;\n};\n"]},"metadata":{},"sourceType":"script"}