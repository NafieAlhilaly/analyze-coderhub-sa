{"ast":null,"code":"'use strict';\n\nmodule.exports = createGLPlot2D;\n\nvar createPick = require('gl-select-static');\n\nvar createGrid = require('./lib/grid');\n\nvar createText = require('./lib/text');\n\nvar createLine = require('./lib/line');\n\nvar createBox = require('./lib/box');\n\nfunction GLPlot2D(gl, pickBuffer) {\n  this.gl = gl;\n  this.pickBuffer = pickBuffer;\n  this.screenBox = [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight];\n  this.viewBox = [0, 0, 0, 0];\n  this.dataBox = [-10, -10, 10, 10];\n  this.gridLineEnable = [true, true];\n  this.gridLineWidth = [1, 1];\n  this.gridLineColor = [[0, 0, 0, 1], [0, 0, 0, 1]];\n  this.pixelRatio = 1;\n  this.tickMarkLength = [0, 0, 0, 0];\n  this.tickMarkWidth = [0, 0, 0, 0];\n  this.tickMarkColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.tickPad = [15, 15, 15, 15];\n  this.tickAngle = [0, 0, 0, 0];\n  this.tickEnable = [true, true, true, true];\n  this.tickColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.labelPad = [15, 15, 15, 15];\n  this.labelAngle = [0, Math.PI / 2, 0, 3.0 * Math.PI / 2];\n  this.labelEnable = [true, true, true, true];\n  this.labelColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.titleCenter = [0, 0];\n  this.titleEnable = true;\n  this.titleAngle = 0;\n  this.titleColor = [0, 0, 0, 1];\n  this.borderColor = [0, 0, 0, 0];\n  this.backgroundColor = [0, 0, 0, 0];\n  this.zeroLineEnable = [true, true];\n  this.zeroLineWidth = [4, 4];\n  this.zeroLineColor = [[0, 0, 0, 1], [0, 0, 0, 1]];\n  this.borderLineEnable = [true, true, true, true];\n  this.borderLineWidth = [2, 2, 2, 2];\n  this.borderLineColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]]; //Drawing parameters\n\n  this.grid = null;\n  this.text = null;\n  this.line = null;\n  this.box = null;\n  this.objects = [];\n  this.overlays = [];\n  this._tickBounds = [Infinity, Infinity, -Infinity, -Infinity];\n  this.static = false;\n  this.dirty = false;\n  this.pickDirty = false;\n  this.pickDelay = 120;\n  this.pickRadius = 10;\n  this._pickTimeout = null;\n  this._drawPick = this.drawPick.bind(this);\n  this._depthCounter = 0;\n}\n\nvar proto = GLPlot2D.prototype;\n\nproto.setDirty = function () {\n  this.dirty = this.pickDirty = true;\n};\n\nproto.setOverlayDirty = function () {\n  this.dirty = true;\n};\n\nproto.nextDepthValue = function () {\n  return this._depthCounter++ / 65536.0;\n};\n\nfunction lerp(a, b, t) {\n  var s = 0.5 * (t + 1.0);\n  return Math.floor((1.0 - s) * a + s * b) | 0;\n}\n\nproto.draw = function () {\n  var TICK_MARK_BOX = [0, 0, 0, 0];\n  return function () {\n    var gl = this.gl;\n    var screenBox = this.screenBox;\n    var viewPixels = this.viewBox;\n    var dataBox = this.dataBox;\n    var pixelRatio = this.pixelRatio;\n    var grid = this.grid;\n    var line = this.line;\n    var text = this.text;\n    var objects = this.objects;\n    this._depthCounter = 0;\n\n    if (this.pickDirty) {\n      if (this._pickTimeout) {\n        clearTimeout(this._pickTimeout);\n      }\n\n      this.pickDirty = false;\n      this._pickTimeout = setTimeout(this._drawPick, this.pickDelay);\n    }\n\n    if (!this.dirty) {\n      return;\n    }\n\n    this.dirty = false;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null); //Turn on scissor\n\n    gl.enable(gl.SCISSOR_TEST); //Turn off depth buffer\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LESS);\n    gl.depthMask(false); //Configure premultiplied alpha blending\n\n    gl.enable(gl.BLEND);\n    gl.blendEquation(gl.FUNC_ADD, gl.FUNC_ADD);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA); //Draw border\n\n    if (this.borderColor) {\n      gl.scissor(screenBox[0], screenBox[1], screenBox[2] - screenBox[0], screenBox[3] - screenBox[1]);\n      var borderColor = this.borderColor;\n      gl.clearColor(borderColor[0] * borderColor[3], borderColor[1] * borderColor[3], borderColor[2] * borderColor[3], borderColor[3]);\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    } //Draw center pane\n\n\n    gl.scissor(viewPixels[0], viewPixels[1], viewPixels[2] - viewPixels[0], viewPixels[3] - viewPixels[1]);\n    gl.viewport(viewPixels[0], viewPixels[1], viewPixels[2] - viewPixels[0], viewPixels[3] - viewPixels[1]);\n    var backgroundColor = this.backgroundColor;\n    gl.clearColor(backgroundColor[0] * backgroundColor[3], backgroundColor[1] * backgroundColor[3], backgroundColor[2] * backgroundColor[3], backgroundColor[3]);\n    gl.clear(gl.COLOR_BUFFER_BIT); //Draw grid\n\n    grid.draw(); //Draw zero lines separately\n\n    var zeroLineEnable = this.zeroLineEnable;\n    var zeroLineColor = this.zeroLineColor;\n    var zeroLineWidth = this.zeroLineWidth;\n\n    if (zeroLineEnable[0] || zeroLineEnable[1]) {\n      line.bind();\n\n      for (var i = 0; i < 2; ++i) {\n        if (!zeroLineEnable[i] || !(dataBox[i] <= 0 && dataBox[i + 2] >= 0)) {\n          continue;\n        }\n\n        var zeroIntercept = screenBox[i] - dataBox[i] * (screenBox[i + 2] - screenBox[i]) / (dataBox[i + 2] - dataBox[i]);\n\n        if (i === 0) {\n          line.drawLine(zeroIntercept, screenBox[1], zeroIntercept, screenBox[3], zeroLineWidth[i], zeroLineColor[i]);\n        } else {\n          line.drawLine(screenBox[0], zeroIntercept, screenBox[2], zeroIntercept, zeroLineWidth[i], zeroLineColor[i]);\n        }\n      }\n    } //Draw traces\n\n\n    for (var i = 0; i < objects.length; ++i) {\n      objects[i].draw();\n    } //Return viewport to default\n\n\n    gl.viewport(screenBox[0], screenBox[1], screenBox[2] - screenBox[0], screenBox[3] - screenBox[1]);\n    gl.scissor(screenBox[0], screenBox[1], screenBox[2] - screenBox[0], screenBox[3] - screenBox[1]); //Draw tick marks\n\n    this.grid.drawTickMarks(); //Draw line elements\n\n    line.bind(); //Draw border lines\n\n    var borderLineEnable = this.borderLineEnable;\n    var borderLineWidth = this.borderLineWidth;\n    var borderLineColor = this.borderLineColor;\n\n    if (borderLineEnable[1]) {\n      line.drawLine(viewPixels[0], viewPixels[1] - 0.5 * borderLineWidth[1] * pixelRatio, viewPixels[0], viewPixels[3] + 0.5 * borderLineWidth[3] * pixelRatio, borderLineWidth[1], borderLineColor[1]);\n    }\n\n    if (borderLineEnable[0]) {\n      line.drawLine(viewPixels[0] - 0.5 * borderLineWidth[0] * pixelRatio, viewPixels[1], viewPixels[2] + 0.5 * borderLineWidth[2] * pixelRatio, viewPixels[1], borderLineWidth[0], borderLineColor[0]);\n    }\n\n    if (borderLineEnable[3]) {\n      line.drawLine(viewPixels[2], viewPixels[1] - 0.5 * borderLineWidth[1] * pixelRatio, viewPixels[2], viewPixels[3] + 0.5 * borderLineWidth[3] * pixelRatio, borderLineWidth[3], borderLineColor[3]);\n    }\n\n    if (borderLineEnable[2]) {\n      line.drawLine(viewPixels[0] - 0.5 * borderLineWidth[0] * pixelRatio, viewPixels[3], viewPixels[2] + 0.5 * borderLineWidth[2] * pixelRatio, viewPixels[3], borderLineWidth[2], borderLineColor[2]);\n    } //Draw text elements\n\n\n    text.bind();\n\n    for (var i = 0; i < 2; ++i) {\n      text.drawTicks(i);\n    }\n\n    if (this.titleEnable) {\n      text.drawTitle();\n    } //Draw other overlay elements (select boxes, etc.)\n\n\n    var overlays = this.overlays;\n\n    for (var i = 0; i < overlays.length; ++i) {\n      overlays[i].draw();\n    } //Turn off scissor test\n\n\n    gl.disable(gl.SCISSOR_TEST);\n    gl.disable(gl.BLEND);\n    gl.depthMask(true);\n  };\n}();\n\nproto.drawPick = function () {\n  return function () {\n    if (this.static) return;\n    var pickBuffer = this.pickBuffer;\n    var gl = this.gl;\n    this._pickTimeout = null;\n    pickBuffer.begin();\n    var pickOffset = 1;\n    var objects = this.objects;\n\n    for (var i = 0; i < objects.length; ++i) {\n      pickOffset = objects[i].drawPick(pickOffset);\n    }\n\n    pickBuffer.end();\n  };\n}();\n\nproto.pick = function () {\n  return function (x, y) {\n    if (this.static) return;\n    var pixelRatio = this.pixelRatio;\n    var pickPixelRatio = this.pickPixelRatio;\n    var viewBox = this.viewBox;\n    var scrX = Math.round((x - viewBox[0] / pixelRatio) * pickPixelRatio) | 0;\n    var scrY = Math.round((y - viewBox[1] / pixelRatio) * pickPixelRatio) | 0;\n    var pickResult = this.pickBuffer.query(scrX, scrY, this.pickRadius);\n\n    if (!pickResult) {\n      return null;\n    }\n\n    var pickValue = pickResult.id + (pickResult.value[0] << 8) + (pickResult.value[1] << 16) + (pickResult.value[2] << 24);\n    var objects = this.objects;\n\n    for (var i = 0; i < objects.length; ++i) {\n      var result = objects[i].pick(scrX, scrY, pickValue);\n\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  };\n}();\n\nfunction deepClone(array) {\n  var result = array.slice();\n\n  for (var i = 0; i < result.length; ++i) {\n    result[i] = result[i].slice();\n  }\n\n  return result;\n}\n\nfunction compareTicks(a, b) {\n  return a.x - b.x;\n}\n\nproto.setScreenBox = function (nbox) {\n  var screenBox = this.screenBox;\n  var pixelRatio = this.pixelRatio;\n  screenBox[0] = Math.round(nbox[0] * pixelRatio) | 0;\n  screenBox[1] = Math.round(nbox[1] * pixelRatio) | 0;\n  screenBox[2] = Math.round(nbox[2] * pixelRatio) | 0;\n  screenBox[3] = Math.round(nbox[3] * pixelRatio) | 0;\n  this.setDirty();\n};\n\nproto.setDataBox = function (nbox) {\n  var dataBox = this.dataBox;\n  var different = dataBox[0] !== nbox[0] || dataBox[1] !== nbox[1] || dataBox[2] !== nbox[2] || dataBox[3] !== nbox[3];\n\n  if (different) {\n    dataBox[0] = nbox[0];\n    dataBox[1] = nbox[1];\n    dataBox[2] = nbox[2];\n    dataBox[3] = nbox[3];\n    this.setDirty();\n  }\n};\n\nproto.setViewBox = function (nbox) {\n  var pixelRatio = this.pixelRatio;\n  var viewBox = this.viewBox;\n  viewBox[0] = Math.round(nbox[0] * pixelRatio) | 0;\n  viewBox[1] = Math.round(nbox[1] * pixelRatio) | 0;\n  viewBox[2] = Math.round(nbox[2] * pixelRatio) | 0;\n  viewBox[3] = Math.round(nbox[3] * pixelRatio) | 0;\n  var pickPixelRatio = this.pickPixelRatio;\n  this.pickBuffer.shape = [Math.round((nbox[2] - nbox[0]) * pickPixelRatio) | 0, Math.round((nbox[3] - nbox[1]) * pickPixelRatio) | 0];\n  this.setDirty();\n};\n\nproto.update = function (options) {\n  options = options || {};\n  var gl = this.gl;\n  this.pixelRatio = options.pixelRatio || 1;\n  var pixelRatio = this.pixelRatio;\n  this.pickPixelRatio = Math.max(pixelRatio, 1);\n  this.setScreenBox(options.screenBox || [0, 0, gl.drawingBufferWidth / pixelRatio, gl.drawingBufferHeight / pixelRatio]);\n  var screenBox = this.screenBox;\n  this.setViewBox(options.viewBox || [0.125 * (this.screenBox[2] - this.screenBox[0]) / pixelRatio, 0.125 * (this.screenBox[3] - this.screenBox[1]) / pixelRatio, 0.875 * (this.screenBox[2] - this.screenBox[0]) / pixelRatio, 0.875 * (this.screenBox[3] - this.screenBox[1]) / pixelRatio]);\n  var viewBox = this.viewBox;\n  var aspectRatio = (viewBox[2] - viewBox[0]) / (viewBox[3] - viewBox[1]);\n  this.setDataBox(options.dataBox || [-10, -10 / aspectRatio, 10, 10 / aspectRatio]);\n  this.borderColor = options.borderColor !== false ? (options.borderColor || [0, 0, 0, 0]).slice() : false;\n  this.backgroundColor = (options.backgroundColor || [0, 0, 0, 0]).slice();\n  this.gridLineEnable = (options.gridLineEnable || [true, true]).slice();\n  this.gridLineWidth = (options.gridLineWidth || [1, 1]).slice();\n  this.gridLineColor = deepClone(options.gridLineColor || [[0.5, 0.5, 0.5, 1], [0.5, 0.5, 0.5, 1]]);\n  this.zeroLineEnable = (options.zeroLineEnable || [true, true]).slice();\n  this.zeroLineWidth = (options.zeroLineWidth || [4, 4]).slice();\n  this.zeroLineColor = deepClone(options.zeroLineColor || [[0, 0, 0, 1], [0, 0, 0, 1]]);\n  this.tickMarkLength = (options.tickMarkLength || [0, 0, 0, 0]).slice();\n  this.tickMarkWidth = (options.tickMarkWidth || [0, 0, 0, 0]).slice();\n  this.tickMarkColor = deepClone(options.tickMarkColor || [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]]);\n  this.titleCenter = (options.titleCenter || [0.5 * (viewBox[0] + viewBox[2]) / pixelRatio, (viewBox[3] + 120) / pixelRatio]).slice();\n  this.titleEnable = !('titleEnable' in options) || !!options.titleEnable;\n  this.titleAngle = options.titleAngle || 0;\n  this.titleColor = (options.titleColor || [0, 0, 0, 1]).slice();\n  this.labelPad = (options.labelPad || [15, 15, 15, 15]).slice();\n  this.labelAngle = (options.labelAngle || [0, Math.PI / 2, 0, 3.0 * Math.PI / 2]).slice();\n  this.labelEnable = (options.labelEnable || [true, true, true, true]).slice();\n  this.labelColor = deepClone(options.labelColor || [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]]);\n  this.tickPad = (options.tickPad || [15, 15, 15, 15]).slice();\n  this.tickAngle = (options.tickAngle || [0, 0, 0, 0]).slice();\n  this.tickEnable = (options.tickEnable || [true, true, true, true]).slice();\n  this.tickColor = deepClone(options.tickColor || [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]]);\n  this.borderLineEnable = (options.borderLineEnable || [true, true, true, true]).slice();\n  this.borderLineWidth = (options.borderLineWidth || [2, 2, 2, 2]).slice();\n  this.borderLineColor = deepClone(options.borderLineColor || [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]]);\n  var ticks = options.ticks || [[], []]; //Compute bounds on ticks\n\n  var bounds = this._tickBounds;\n  bounds[0] = bounds[1] = Infinity;\n  bounds[2] = bounds[3] = -Infinity;\n\n  for (var i = 0; i < 2; ++i) {\n    var axisTicks = ticks[i].slice(0);\n\n    if (axisTicks.length === 0) {\n      continue;\n    }\n\n    axisTicks.sort(compareTicks);\n    bounds[i] = Math.min(bounds[i], axisTicks[0].x);\n    bounds[i + 2] = Math.max(bounds[i + 2], axisTicks[axisTicks.length - 1].x);\n  } //Update grid\n\n\n  this.grid.update({\n    bounds: bounds,\n    ticks: ticks\n  }); //Update text\n\n  this.text.update({\n    bounds: bounds,\n    ticks: ticks,\n    labels: options.labels || ['x', 'y'],\n    labelSize: options.labelSize || [12, 12],\n    labelFont: options.labelFont || ['sans-serif', 'sans-serif'],\n    title: options.title || '',\n    titleSize: options.titleSize || 18,\n    titleFont: options.titleFont || 'sans-serif'\n  });\n  this.static = !!options.static;\n  this.setDirty();\n};\n\nproto.dispose = function () {\n  this.box.dispose();\n  this.grid.dispose();\n  this.text.dispose();\n  this.line.dispose();\n\n  for (var i = this.objects.length - 1; i >= 0; --i) {\n    this.objects[i].dispose();\n  }\n\n  this.objects.length = 0;\n\n  for (var i = this.overlays.length - 1; i >= 0; --i) {\n    this.overlays[i].dispose();\n  }\n\n  this.overlays.length = 0;\n  this.gl = null;\n};\n\nproto.addObject = function (object) {\n  if (this.objects.indexOf(object) < 0) {\n    this.objects.push(object);\n    this.setDirty();\n  }\n};\n\nproto.removeObject = function (object) {\n  var objects = this.objects;\n\n  for (var i = 0; i < objects.length; ++i) {\n    if (objects[i] === object) {\n      objects.splice(i, 1);\n      this.setDirty();\n      break;\n    }\n  }\n};\n\nproto.addOverlay = function (object) {\n  if (this.overlays.indexOf(object) < 0) {\n    this.overlays.push(object);\n    this.setOverlayDirty();\n  }\n};\n\nproto.removeOverlay = function (object) {\n  var objects = this.overlays;\n\n  for (var i = 0; i < objects.length; ++i) {\n    if (objects[i] === object) {\n      objects.splice(i, 1);\n      this.setOverlayDirty();\n      break;\n    }\n  }\n};\n\nfunction createGLPlot2D(options) {\n  var gl = options.gl;\n  var pickBuffer = createPick(gl, [gl.drawingBufferWidth, gl.drawingBufferHeight]);\n  var plot = new GLPlot2D(gl, pickBuffer);\n  plot.grid = createGrid(plot);\n  plot.text = createText(plot);\n  plot.line = createLine(plot);\n  plot.box = createBox(plot);\n  plot.update(options);\n  return plot;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/gl-plot2d/plot.js"],"names":["module","exports","createGLPlot2D","createPick","require","createGrid","createText","createLine","createBox","GLPlot2D","gl","pickBuffer","screenBox","drawingBufferWidth","drawingBufferHeight","viewBox","dataBox","gridLineEnable","gridLineWidth","gridLineColor","pixelRatio","tickMarkLength","tickMarkWidth","tickMarkColor","tickPad","tickAngle","tickEnable","tickColor","labelPad","labelAngle","Math","PI","labelEnable","labelColor","titleCenter","titleEnable","titleAngle","titleColor","borderColor","backgroundColor","zeroLineEnable","zeroLineWidth","zeroLineColor","borderLineEnable","borderLineWidth","borderLineColor","grid","text","line","box","objects","overlays","_tickBounds","Infinity","static","dirty","pickDirty","pickDelay","pickRadius","_pickTimeout","_drawPick","drawPick","bind","_depthCounter","proto","prototype","setDirty","setOverlayDirty","nextDepthValue","lerp","a","b","t","s","floor","draw","TICK_MARK_BOX","viewPixels","clearTimeout","setTimeout","bindFramebuffer","FRAMEBUFFER","enable","SCISSOR_TEST","disable","DEPTH_TEST","depthFunc","LESS","depthMask","BLEND","blendEquation","FUNC_ADD","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","scissor","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","i","zeroIntercept","drawLine","length","drawTickMarks","drawTicks","drawTitle","begin","pickOffset","end","pick","x","y","pickPixelRatio","scrX","round","scrY","pickResult","query","pickValue","id","value","result","deepClone","array","slice","compareTicks","setScreenBox","nbox","setDataBox","different","setViewBox","shape","update","options","max","aspectRatio","ticks","bounds","axisTicks","sort","min","labels","labelSize","labelFont","title","titleSize","titleFont","dispose","addObject","object","indexOf","push","removeObject","splice","addOverlay","removeOverlay","plot"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = createGLPlot2D\n\nvar createPick = require('gl-select-static')\n\nvar createGrid = require('./lib/grid')\nvar createText = require('./lib/text')\nvar createLine = require('./lib/line')\nvar createBox  = require('./lib/box')\n\nfunction GLPlot2D(gl, pickBuffer) {\n  this.gl               = gl\n  this.pickBuffer       = pickBuffer\n\n  this.screenBox        = [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]\n  this.viewBox          = [0, 0, 0, 0]\n  this.dataBox          = [-10, -10, 10, 10]\n\n  this.gridLineEnable   = [true,true]\n  this.gridLineWidth    = [1,1]\n  this.gridLineColor    = [[0,0,0,1],\n                           [0,0,0,1]]\n\n  this.pixelRatio       = 1\n\n  this.tickMarkLength   = [0,0,0,0]\n  this.tickMarkWidth    = [0,0,0,0]\n  this.tickMarkColor    = [[0,0,0,1],\n                           [0,0,0,1],\n                           [0,0,0,1],\n                           [0,0,0,1]]\n\n  this.tickPad          = [15,15,15,15]\n  this.tickAngle        = [0,0,0,0]\n  this.tickEnable       = [true,true,true,true]\n  this.tickColor        = [[0,0,0,1],\n                           [0,0,0,1],\n                           [0,0,0,1],\n                           [0,0,0,1]]\n\n  this.labelPad         = [15,15,15,15]\n  this.labelAngle       = [0,Math.PI/2,0,3.0*Math.PI/2]\n  this.labelEnable      = [true,true,true,true]\n  this.labelColor       = [[0,0,0,1],\n                           [0,0,0,1],\n                           [0,0,0,1],\n                           [0,0,0,1]]\n\n  this.titleCenter      = [0,0]\n  this.titleEnable      = true\n  this.titleAngle       = 0\n  this.titleColor       = [0,0,0,1]\n\n  this.borderColor      = [0,0,0,0]\n  this.backgroundColor  = [0,0,0,0]\n\n  this.zeroLineEnable   = [true, true]\n  this.zeroLineWidth    = [4, 4]\n  this.zeroLineColor    = [[0, 0, 0, 1],[0, 0, 0, 1]]\n\n  this.borderLineEnable = [true,true,true,true]\n  this.borderLineWidth  = [2,2,2,2]\n  this.borderLineColor  = [[0,0,0,1],\n                           [0,0,0,1],\n                           [0,0,0,1],\n                           [0,0,0,1]]\n\n  //Drawing parameters\n  this.grid             = null\n  this.text             = null\n  this.line             = null\n  this.box              = null\n  this.objects          = []\n  this.overlays         = []\n\n  this._tickBounds      = [Infinity, Infinity, -Infinity, -Infinity]\n\n  this.static = false\n\n  this.dirty        = false\n  this.pickDirty    = false\n  this.pickDelay    = 120\n  this.pickRadius   = 10\n  this._pickTimeout = null\n  this._drawPick    = this.drawPick.bind(this)\n\n  this._depthCounter = 0\n}\n\nvar proto = GLPlot2D.prototype\n\nproto.setDirty = function() {\n  this.dirty = this.pickDirty = true\n}\n\nproto.setOverlayDirty = function() {\n  this.dirty = true\n}\n\nproto.nextDepthValue = function() {\n  return (this._depthCounter++) / 65536.0\n}\n\nfunction lerp(a, b, t) {\n  var s = 0.5 * (t + 1.0)\n  return Math.floor((1.0-s)*a + s*b)|0\n}\n\nproto.draw = (function() {\nvar TICK_MARK_BOX = [0,0,0,0]\nreturn function() {\n  var gl         = this.gl\n  var screenBox  = this.screenBox\n  var viewPixels = this.viewBox\n  var dataBox    = this.dataBox\n  var pixelRatio = this.pixelRatio\n  var grid       = this.grid\n  var line       = this.line\n  var text       = this.text\n  var objects    = this.objects\n\n  this._depthCounter = 0\n\n  if(this.pickDirty) {\n    if(this._pickTimeout) {\n      clearTimeout(this._pickTimeout)\n    }\n    this.pickDirty = false\n    this._pickTimeout = setTimeout(this._drawPick, this.pickDelay)\n  }\n\n  if(!this.dirty) {\n    return\n  }\n  this.dirty = false\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n  //Turn on scissor\n  gl.enable(gl.SCISSOR_TEST)\n\n  //Turn off depth buffer\n  gl.disable(gl.DEPTH_TEST)\n  gl.depthFunc(gl.LESS)\n  gl.depthMask(false)\n\n  //Configure premultiplied alpha blending\n  gl.enable(gl.BLEND)\n  gl.blendEquation(gl.FUNC_ADD, gl.FUNC_ADD);\n  gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n  //Draw border\n  if (this.borderColor) {\n    gl.scissor(\n      screenBox[0],\n      screenBox[1],\n      screenBox[2]-screenBox[0],\n      screenBox[3]-screenBox[1])\n    var borderColor = this.borderColor\n    gl.clearColor(\n      borderColor[0]*borderColor[3],\n      borderColor[1]*borderColor[3],\n      borderColor[2]*borderColor[3],\n      borderColor[3])\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n  }\n\n  //Draw center pane\n  gl.scissor(\n    viewPixels[0],\n    viewPixels[1],\n    viewPixels[2]-viewPixels[0],\n    viewPixels[3]-viewPixels[1])\n  gl.viewport(\n    viewPixels[0],\n    viewPixels[1],\n    viewPixels[2]-viewPixels[0],\n    viewPixels[3]-viewPixels[1])\n  var backgroundColor = this.backgroundColor\n  gl.clearColor(\n    backgroundColor[0]*backgroundColor[3],\n    backgroundColor[1]*backgroundColor[3],\n    backgroundColor[2]*backgroundColor[3],\n    backgroundColor[3])\n  gl.clear(gl.COLOR_BUFFER_BIT)\n\n  //Draw grid\n  grid.draw()\n\n  //Draw zero lines separately\n  var zeroLineEnable = this.zeroLineEnable\n  var zeroLineColor  = this.zeroLineColor\n  var zeroLineWidth  = this.zeroLineWidth\n  if(zeroLineEnable[0] || zeroLineEnable[1]) {\n    line.bind()\n    for(var i=0; i<2; ++i) {\n      if(!zeroLineEnable[i] ||\n        !(dataBox[i] <= 0 && dataBox[i+2] >= 0)) {\n        continue\n      }\n\n      var zeroIntercept = screenBox[i] -\n        dataBox[i] * (screenBox[i+2] - screenBox[i]) / (dataBox[i+2] - dataBox[i])\n\n      if(i === 0) {\n        line.drawLine(\n          zeroIntercept, screenBox[1], zeroIntercept, screenBox[3],\n          zeroLineWidth[i],\n          zeroLineColor[i])\n      } else {\n        line.drawLine(\n          screenBox[0], zeroIntercept, screenBox[2], zeroIntercept,\n          zeroLineWidth[i],\n          zeroLineColor[i])\n      }\n    }\n  }\n\n  //Draw traces\n  for(var i=0; i<objects.length; ++i) {\n    objects[i].draw()\n  }\n\n  //Return viewport to default\n  gl.viewport(\n    screenBox[0],\n    screenBox[1],\n    screenBox[2]-screenBox[0],\n    screenBox[3]-screenBox[1])\n  gl.scissor(\n    screenBox[0],\n    screenBox[1],\n    screenBox[2]-screenBox[0],\n    screenBox[3]-screenBox[1])\n\n  //Draw tick marks\n  this.grid.drawTickMarks()\n\n  //Draw line elements\n  line.bind()\n\n  //Draw border lines\n  var borderLineEnable = this.borderLineEnable\n  var borderLineWidth  = this.borderLineWidth\n  var borderLineColor  = this.borderLineColor\n  if(borderLineEnable[1]) {\n    line.drawLine(\n      viewPixels[0], viewPixels[1] - 0.5*borderLineWidth[1]*pixelRatio,\n      viewPixels[0], viewPixels[3] + 0.5*borderLineWidth[3]*pixelRatio,\n      borderLineWidth[1], borderLineColor[1])\n  }\n  if(borderLineEnable[0]) {\n    line.drawLine(\n      viewPixels[0] - 0.5*borderLineWidth[0]*pixelRatio, viewPixels[1],\n      viewPixels[2] + 0.5*borderLineWidth[2]*pixelRatio, viewPixels[1],\n      borderLineWidth[0], borderLineColor[0])\n  }\n  if(borderLineEnable[3]) {\n    line.drawLine(\n      viewPixels[2], viewPixels[1] - 0.5*borderLineWidth[1]*pixelRatio,\n      viewPixels[2], viewPixels[3] + 0.5*borderLineWidth[3]*pixelRatio,\n      borderLineWidth[3], borderLineColor[3])\n  }\n  if(borderLineEnable[2]) {\n    line.drawLine(\n      viewPixels[0] - 0.5*borderLineWidth[0]*pixelRatio, viewPixels[3],\n      viewPixels[2] + 0.5*borderLineWidth[2]*pixelRatio, viewPixels[3],\n      borderLineWidth[2], borderLineColor[2])\n  }\n\n  //Draw text elements\n  text.bind()\n  for(var i=0; i<2; ++i) {\n    text.drawTicks(i)\n  }\n  if(this.titleEnable) {\n    text.drawTitle()\n  }\n\n  //Draw other overlay elements (select boxes, etc.)\n  var overlays = this.overlays\n  for(var i=0; i<overlays.length; ++i) {\n    overlays[i].draw()\n  }\n\n  //Turn off scissor test\n  gl.disable(gl.SCISSOR_TEST)\n  gl.disable(gl.BLEND)\n  gl.depthMask(true)\n}\n})()\n\nproto.drawPick = (function() {\n\nreturn function() {\n  if (this.static) return;\n\n  var pickBuffer = this.pickBuffer\n  var gl = this.gl\n\n  this._pickTimeout = null\n  pickBuffer.begin()\n\n  var pickOffset = 1\n  var objects = this.objects\n  for(var i=0; i<objects.length; ++i) {\n    pickOffset = objects[i].drawPick(pickOffset)\n  }\n\n  pickBuffer.end()\n}\n})()\n\nproto.pick = (function() {\nreturn function(x, y) {\n  if (this.static) return;\n\n  var pixelRatio     = this.pixelRatio\n  var pickPixelRatio = this.pickPixelRatio\n  var viewBox        = this.viewBox\n\n  var scrX = Math.round((x - viewBox[0] / pixelRatio) * pickPixelRatio)|0\n  var scrY = Math.round((y - viewBox[1] / pixelRatio) * pickPixelRatio)|0\n\n  var pickResult = this.pickBuffer.query(scrX, scrY, this.pickRadius)\n  if(!pickResult) {\n    return null\n  }\n\n  var pickValue = pickResult.id +\n    (pickResult.value[0]<<8)  +\n    (pickResult.value[1]<<16) +\n    (pickResult.value[2]<<24)\n\n  var objects = this.objects\n  for(var i=0; i<objects.length; ++i) {\n    var result = objects[i].pick(scrX, scrY, pickValue)\n    if(result) {\n      return result\n    }\n  }\n\n  return null\n}\n})()\n\nfunction deepClone(array) {\n  var result = array.slice()\n  for(var i=0; i<result.length; ++i) {\n    result[i] = result[i].slice()\n  }\n  return result\n}\n\nfunction compareTicks(a, b) {\n  return a.x - b.x\n}\n\nproto.setScreenBox = function(nbox) {\n  var screenBox = this.screenBox\n  var pixelRatio = this.pixelRatio\n\n  screenBox[0] = Math.round(nbox[0] * pixelRatio) | 0\n  screenBox[1] = Math.round(nbox[1] * pixelRatio) | 0\n  screenBox[2] = Math.round(nbox[2] * pixelRatio) | 0\n  screenBox[3] = Math.round(nbox[3] * pixelRatio) | 0\n\n  this.setDirty()\n}\n\nproto.setDataBox = function(nbox) {\n  var dataBox = this.dataBox\n\n  var different =\n    dataBox[0] !== nbox[0] ||\n    dataBox[1] !== nbox[1] ||\n    dataBox[2] !== nbox[2] ||\n    dataBox[3] !== nbox[3]\n\n  if(different) {\n    dataBox[0] = nbox[0]\n    dataBox[1] = nbox[1]\n    dataBox[2] = nbox[2]\n    dataBox[3] = nbox[3]\n\n    this.setDirty()\n  }\n}\n\nproto.setViewBox = function(nbox) {\n  var pixelRatio = this.pixelRatio\n  var viewBox = this.viewBox\n\n  viewBox[0] = Math.round(nbox[0] * pixelRatio)|0\n  viewBox[1] = Math.round(nbox[1] * pixelRatio)|0\n  viewBox[2] = Math.round(nbox[2] * pixelRatio)|0\n  viewBox[3] = Math.round(nbox[3] * pixelRatio)|0\n\n  var pickPixelRatio = this.pickPixelRatio\n  this.pickBuffer.shape = [\n    Math.round((nbox[2] - nbox[0]) * pickPixelRatio)|0,\n    Math.round((nbox[3] - nbox[1]) * pickPixelRatio)|0 ]\n\n  this.setDirty()\n}\n\nproto.update = function(options) {\n  options = options || {}\n\n  var gl = this.gl\n\n  this.pixelRatio      = options.pixelRatio || 1\n\n  var pixelRatio       = this.pixelRatio\n  this.pickPixelRatio  = Math.max(pixelRatio, 1)\n\n  this.setScreenBox(options.screenBox ||\n    [0, 0, gl.drawingBufferWidth/pixelRatio, gl.drawingBufferHeight/pixelRatio])\n\n  var screenBox = this.screenBox\n  this.setViewBox(options.viewBox ||\n    [0.125*(this.screenBox[2]-this.screenBox[0])/pixelRatio,\n     0.125*(this.screenBox[3]-this.screenBox[1])/pixelRatio,\n     0.875*(this.screenBox[2]-this.screenBox[0])/pixelRatio,\n     0.875*(this.screenBox[3]-this.screenBox[1])/pixelRatio])\n\n  var viewBox = this.viewBox\n  var aspectRatio = (viewBox[2] - viewBox[0]) / (viewBox[3] - viewBox[1])\n  this.setDataBox(options.dataBox || [-10, -10/aspectRatio, 10, 10/aspectRatio])\n\n  this.borderColor     = options.borderColor !== false ? (options.borderColor || [0,0,0,0]).slice() : false\n  this.backgroundColor = (options.backgroundColor || [0,0,0,0]).slice()\n\n  this.gridLineEnable  = (options.gridLineEnable || [true,true]).slice()\n  this.gridLineWidth   = (options.gridLineWidth || [1,1]).slice()\n  this.gridLineColor   = deepClone(options.gridLineColor ||\n    [[0.5,0.5,0.5,1],[0.5,0.5,0.5,1]])\n\n  this.zeroLineEnable   = (options.zeroLineEnable || [true, true]).slice()\n  this.zeroLineWidth    = (options.zeroLineWidth || [4, 4]).slice()\n  this.zeroLineColor    = deepClone(options.zeroLineColor ||\n    [[0, 0, 0, 1],[0, 0, 0, 1]])\n\n  this.tickMarkLength   = (options.tickMarkLength || [0,0,0,0]).slice()\n  this.tickMarkWidth    = (options.tickMarkWidth || [0,0,0,0]).slice()\n  this.tickMarkColor    = deepClone(options.tickMarkColor ||\n    [[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1]])\n\n  this.titleCenter      = (options.titleCenter || [\n    0.5*(viewBox[0]+viewBox[2])/pixelRatio,(viewBox[3]+120)/pixelRatio]).slice()\n  this.titleEnable      = !('titleEnable' in options) || !!options.titleEnable\n  this.titleAngle       = options.titleAngle || 0\n  this.titleColor       = (options.titleColor || [0,0,0,1]).slice()\n\n  this.labelPad         = (options.labelPad || [15,15,15,15]).slice()\n  this.labelAngle       = (options.labelAngle ||\n    [0,Math.PI/2,0,3.0*Math.PI/2]).slice()\n  this.labelEnable      = (options.labelEnable || [true,true,true,true]).slice()\n  this.labelColor       = deepClone(options.labelColor ||\n    [[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1]])\n\n  this.tickPad         = (options.tickPad || [15,15,15,15]).slice()\n  this.tickAngle       = (options.tickAngle || [0,0,0,0]).slice()\n  this.tickEnable      = (options.tickEnable || [true,true,true,true]).slice()\n  this.tickColor       = deepClone(options.tickColor ||\n    [[0,0,0,1],[0,0,0,1],[0,0,0,1],[0,0,0,1]])\n\n  this.borderLineEnable = (options.borderLineEnable ||\n                            [true,true,true,true]).slice()\n  this.borderLineWidth  = (options.borderLineWidth || [2,2,2,2]).slice()\n  this.borderLineColor  = deepClone(options.borderLineColor ||\n                          [[0,0,0,1],\n                           [0,0,0,1],\n                           [0,0,0,1],\n                           [0,0,0,1]])\n\n  var ticks = options.ticks || [ [], [] ]\n\n  //Compute bounds on ticks\n  var bounds = this._tickBounds\n  bounds[0] = bounds[1] =  Infinity\n  bounds[2] = bounds[3] = -Infinity\n  for(var i=0; i<2; ++i) {\n    var axisTicks = ticks[i].slice(0)\n    if(axisTicks.length === 0) {\n      continue\n    }\n    axisTicks.sort(compareTicks)\n    bounds[i]   = Math.min(bounds[i], axisTicks[0].x)\n    bounds[i+2] = Math.max(bounds[i+2], axisTicks[axisTicks.length-1].x)\n  }\n\n  //Update grid\n  this.grid.update({\n    bounds: bounds,\n    ticks:  ticks\n  })\n\n  //Update text\n  this.text.update({\n    bounds:     bounds,\n    ticks:      ticks,\n    labels:     options.labels    || ['x', 'y'],\n    labelSize:  options.labelSize || [12,12],\n    labelFont:  options.labelFont || ['sans-serif', 'sans-serif'],\n    title:      options.title     || '',\n    titleSize:  options.titleSize || 18,\n    titleFont:  options.titleFont || 'sans-serif'\n  })\n\n  this.static = !!options.static;\n\n  this.setDirty()\n}\n\nproto.dispose = function() {\n  this.box.dispose()\n  this.grid.dispose()\n  this.text.dispose()\n  this.line.dispose()\n  for(var i=this.objects.length-1; i>=0; --i) {\n    this.objects[i].dispose()\n  }\n  this.objects.length = 0\n  for(var i=this.overlays.length-1; i>=0; --i) {\n    this.overlays[i].dispose()\n  }\n  this.overlays.length = 0\n\n  this.gl = null\n}\n\nproto.addObject = function(object) {\n  if(this.objects.indexOf(object) < 0) {\n    this.objects.push(object)\n    this.setDirty()\n  }\n}\n\nproto.removeObject = function(object) {\n  var objects = this.objects\n  for(var i=0; i<objects.length; ++i) {\n    if(objects[i] === object) {\n      objects.splice(i,1)\n      this.setDirty()\n      break\n    }\n  }\n}\n\nproto.addOverlay = function(object) {\n  if(this.overlays.indexOf(object) < 0) {\n    this.overlays.push(object)\n    this.setOverlayDirty()\n  }\n}\n\nproto.removeOverlay = function(object) {\n  var objects = this.overlays\n  for(var i=0; i<objects.length; ++i) {\n    if(objects[i] === object) {\n      objects.splice(i,1)\n      this.setOverlayDirty()\n      break\n    }\n  }\n}\n\nfunction createGLPlot2D(options) {\n  var gl = options.gl\n  var pickBuffer = createPick(gl, [\n    gl.drawingBufferWidth, gl.drawingBufferHeight])\n  var plot = new GLPlot2D(gl, pickBuffer)\n  plot.grid = createGrid(plot)\n  plot.text = createText(plot)\n  plot.line = createLine(plot)\n  plot.box  = createBox(plot)\n  plot.update(options)\n  return plot\n}\n"]},"metadata":{},"sourceType":"script"}