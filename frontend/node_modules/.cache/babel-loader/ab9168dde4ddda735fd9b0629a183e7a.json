{"ast":null,"code":"/** @module  color-rgba */\n'use strict';\n\nvar parse = require('color-parse');\n\nvar hsl = require('color-space/hsl');\n\nvar clamp = require('clamp');\n\nmodule.exports = function rgba(color) {\n  var values, i, l; //attempt to parse non-array arguments\n\n  var parsed = parse(color);\n  if (!parsed.space) return [];\n  values = Array(3);\n  values[0] = clamp(parsed.values[0], 0, 255);\n  values[1] = clamp(parsed.values[1], 0, 255);\n  values[2] = clamp(parsed.values[2], 0, 255);\n\n  if (parsed.space[0] === 'h') {\n    values = hsl.rgb(values);\n  }\n\n  values.push(clamp(parsed.alpha, 0, 1));\n  return values;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/color-rgba/index.js"],"names":["parse","require","hsl","clamp","module","exports","rgba","color","values","i","l","parsed","space","Array","rgb","push","alpha"],"mappings":"AAAA;AAEA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,iBAAD,CAAjB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAeC,KAAf,EAAsB;AACtC,MAAIC,MAAJ,EAAYC,CAAZ,EAAeC,CAAf,CADsC,CAGtC;;AACA,MAAIC,MAAM,GAAGX,KAAK,CAACO,KAAD,CAAlB;AAEA,MAAI,CAACI,MAAM,CAACC,KAAZ,EAAmB,OAAO,EAAP;AAEnBJ,EAAAA,MAAM,GAAGK,KAAK,CAAC,CAAD,CAAd;AACAL,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAYL,KAAK,CAACQ,MAAM,CAACH,MAAP,CAAc,CAAd,CAAD,EAAmB,CAAnB,EAAsB,GAAtB,CAAjB;AACAA,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAYL,KAAK,CAACQ,MAAM,CAACH,MAAP,CAAc,CAAd,CAAD,EAAmB,CAAnB,EAAsB,GAAtB,CAAjB;AACAA,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAYL,KAAK,CAACQ,MAAM,CAACH,MAAP,CAAc,CAAd,CAAD,EAAmB,CAAnB,EAAsB,GAAtB,CAAjB;;AAEA,MAAIG,MAAM,CAACC,KAAP,CAAa,CAAb,MAAoB,GAAxB,EAA6B;AAC5BJ,IAAAA,MAAM,GAAGN,GAAG,CAACY,GAAJ,CAAQN,MAAR,CAAT;AACA;;AAEDA,EAAAA,MAAM,CAACO,IAAP,CAAYZ,KAAK,CAACQ,MAAM,CAACK,KAAR,EAAe,CAAf,EAAkB,CAAlB,CAAjB;AAEA,SAAOR,MAAP;AACA,CApBD","sourcesContent":["/** @module  color-rgba */\n\n'use strict'\n\nvar parse = require('color-parse')\nvar hsl = require('color-space/hsl')\nvar clamp = require('clamp')\n\nmodule.exports = function rgba (color) {\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tvalues = Array(3)\n\tvalues[0] = clamp(parsed.values[0], 0, 255)\n\tvalues[1] = clamp(parsed.values[1], 0, 255)\n\tvalues[2] = clamp(parsed.values[2], 0, 255)\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(clamp(parsed.alpha, 0, 1))\n\n\treturn values\n}\n"]},"metadata":{},"sourceType":"script"}