{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Color = require('../../components/color');\n\nvar Drawing = require('../../components/drawing');\n\nfunction style(gd, cd, sel) {\n  var s = sel ? sel : d3.select(gd).selectAll('g.trace.boxes');\n  s.style('opacity', function (d) {\n    return d[0].trace.opacity;\n  });\n  s.each(function (d) {\n    var el = d3.select(this);\n    var trace = d[0].trace;\n    var lineWidth = trace.line.width;\n\n    function styleBox(boxSel, lineWidth, lineColor, fillColor) {\n      boxSel.style('stroke-width', lineWidth + 'px').call(Color.stroke, lineColor).call(Color.fill, fillColor);\n    }\n\n    var allBoxes = el.selectAll('path.box');\n\n    if (trace.type === 'candlestick') {\n      allBoxes.each(function (boxData) {\n        if (boxData.empty) return;\n        var thisBox = d3.select(this);\n        var container = trace[boxData.dir]; // dir = 'increasing' or 'decreasing'\n\n        styleBox(thisBox, container.line.width, container.line.color, container.fillcolor); // TODO: custom selection style for candlesticks\n\n        thisBox.style('opacity', trace.selectedpoints && !boxData.selected ? 0.3 : 1);\n      });\n    } else {\n      styleBox(allBoxes, lineWidth, trace.line.color, trace.fillcolor);\n      el.selectAll('path.mean').style({\n        'stroke-width': lineWidth,\n        'stroke-dasharray': 2 * lineWidth + 'px,' + lineWidth + 'px'\n      }).call(Color.stroke, trace.line.color);\n      var pts = el.selectAll('path.point');\n      Drawing.pointStyle(pts, trace, gd);\n    }\n  });\n}\n\nfunction styleOnSelect(gd, cd, sel) {\n  var trace = cd[0].trace;\n  var pts = sel.selectAll('path.point');\n\n  if (trace.selectedpoints) {\n    Drawing.selectedPointStyle(pts, trace);\n  } else {\n    Drawing.pointStyle(pts, trace, gd);\n  }\n}\n\nmodule.exports = {\n  style: style,\n  styleOnSelect: styleOnSelect\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/box/style.js"],"names":["d3","require","Color","Drawing","style","gd","cd","sel","s","select","selectAll","d","trace","opacity","each","el","lineWidth","line","width","styleBox","boxSel","lineColor","fillColor","call","stroke","fill","allBoxes","type","boxData","empty","thisBox","container","dir","color","fillcolor","selectedpoints","selected","pts","pointStyle","styleOnSelect","selectedPointStyle","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\n\nfunction style(gd, cd, sel) {\n    var s = sel ? sel : d3.select(gd).selectAll('g.trace.boxes');\n\n    s.style('opacity', function(d) { return d[0].trace.opacity; });\n\n    s.each(function(d) {\n        var el = d3.select(this);\n        var trace = d[0].trace;\n        var lineWidth = trace.line.width;\n\n        function styleBox(boxSel, lineWidth, lineColor, fillColor) {\n            boxSel.style('stroke-width', lineWidth + 'px')\n                .call(Color.stroke, lineColor)\n                .call(Color.fill, fillColor);\n        }\n\n        var allBoxes = el.selectAll('path.box');\n\n        if(trace.type === 'candlestick') {\n            allBoxes.each(function(boxData) {\n                if(boxData.empty) return;\n\n                var thisBox = d3.select(this);\n                var container = trace[boxData.dir]; // dir = 'increasing' or 'decreasing'\n                styleBox(thisBox, container.line.width, container.line.color, container.fillcolor);\n                // TODO: custom selection style for candlesticks\n                thisBox.style('opacity', trace.selectedpoints && !boxData.selected ? 0.3 : 1);\n            });\n        } else {\n            styleBox(allBoxes, lineWidth, trace.line.color, trace.fillcolor);\n            el.selectAll('path.mean')\n                .style({\n                    'stroke-width': lineWidth,\n                    'stroke-dasharray': (2 * lineWidth) + 'px,' + lineWidth + 'px'\n                })\n                .call(Color.stroke, trace.line.color);\n\n            var pts = el.selectAll('path.point');\n            Drawing.pointStyle(pts, trace, gd);\n        }\n    });\n}\n\nfunction styleOnSelect(gd, cd, sel) {\n    var trace = cd[0].trace;\n    var pts = sel.selectAll('path.point');\n\n    if(trace.selectedpoints) {\n        Drawing.selectedPointStyle(pts, trace);\n    } else {\n        Drawing.pointStyle(pts, trace, gd);\n    }\n}\n\nmodule.exports = {\n    style: style,\n    styleOnSelect: styleOnSelect\n};\n"]},"metadata":{},"sourceType":"script"}