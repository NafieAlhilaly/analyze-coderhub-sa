{"ast":null,"code":"'use strict';\n\nvar createLinePlot = require('gl-line3d');\n\nvar createScatterPlot = require('gl-scatter3d');\n\nvar createErrorBars = require('gl-error3d');\n\nvar createMesh = require('gl-mesh3d');\n\nvar triangulate = require('delaunay-triangulate');\n\nvar Lib = require('../../lib');\n\nvar str2RgbaArray = require('../../lib/str2rgbarray');\n\nvar formatColor = require('../../lib/gl_format_color').formatColor;\n\nvar makeBubbleSizeFn = require('../scatter/make_bubble_size_func');\n\nvar DASH_PATTERNS = require('../../constants/gl3d_dashes');\n\nvar MARKER_SYMBOLS = require('../../constants/gl3d_markers');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar appendArrayPointValue = require('../../components/fx/helpers').appendArrayPointValue;\n\nvar calculateError = require('./calc_errors');\n\nfunction LineWithMarkers(scene, uid) {\n  this.scene = scene;\n  this.uid = uid;\n  this.linePlot = null;\n  this.scatterPlot = null;\n  this.errorBars = null;\n  this.textMarkers = null;\n  this.delaunayMesh = null;\n  this.color = null;\n  this.mode = '';\n  this.dataPoints = [];\n  this.axesBounds = [[-Infinity, -Infinity, -Infinity], [Infinity, Infinity, Infinity]];\n  this.textLabels = null;\n  this.data = null;\n}\n\nvar proto = LineWithMarkers.prototype;\n\nproto.handlePick = function (selection) {\n  if (selection.object && (selection.object === this.linePlot || selection.object === this.delaunayMesh || selection.object === this.textMarkers || selection.object === this.scatterPlot)) {\n    var ind = selection.index = selection.data.index;\n\n    if (selection.object.highlight) {\n      selection.object.highlight(null);\n    }\n\n    if (this.scatterPlot) {\n      selection.object = this.scatterPlot;\n      this.scatterPlot.highlight(selection.data);\n    }\n\n    selection.textLabel = '';\n\n    if (this.textLabels) {\n      if (Array.isArray(this.textLabels)) {\n        if (this.textLabels[ind] || this.textLabels[ind] === 0) {\n          selection.textLabel = this.textLabels[ind];\n        }\n      } else {\n        selection.textLabel = this.textLabels;\n      }\n    }\n\n    selection.traceCoordinate = [this.data.x[ind], this.data.y[ind], this.data.z[ind]];\n    return true;\n  }\n};\n\nfunction constructDelaunay(points, color, axis) {\n  var u = (axis + 1) % 3;\n  var v = (axis + 2) % 3;\n  var filteredPoints = [];\n  var filteredIds = [];\n  var i;\n\n  for (i = 0; i < points.length; ++i) {\n    var p = points[i];\n\n    if (isNaN(p[u]) || !isFinite(p[u]) || isNaN(p[v]) || !isFinite(p[v])) {\n      continue;\n    }\n\n    filteredPoints.push([p[u], p[v]]);\n    filteredIds.push(i);\n  }\n\n  var cells = triangulate(filteredPoints);\n\n  for (i = 0; i < cells.length; ++i) {\n    var c = cells[i];\n\n    for (var j = 0; j < c.length; ++j) {\n      c[j] = filteredIds[c[j]];\n    }\n  }\n\n  return {\n    positions: points,\n    cells: cells,\n    meshColor: color\n  };\n}\n\nfunction calculateErrorParams(errors) {\n  var capSize = [0.0, 0.0, 0.0];\n  var color = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n  var lineWidth = [1.0, 1.0, 1.0];\n\n  for (var i = 0; i < 3; i++) {\n    var e = errors[i];\n    if (e && e.copy_zstyle !== false && errors[2].visible !== false) e = errors[2];\n    if (!e || !e.visible) continue;\n    capSize[i] = e.width / 2; // ballpark rescaling\n\n    color[i] = str2RgbaArray(e.color);\n    lineWidth[i] = e.thickness;\n  }\n\n  return {\n    capSize: capSize,\n    color: color,\n    lineWidth: lineWidth\n  };\n}\n\nfunction parseAlignmentX(a) {\n  if (a === null || a === undefined) return 0;\n  return a.indexOf('left') > -1 ? -1 : a.indexOf('right') > -1 ? 1 : 0;\n}\n\nfunction parseAlignmentY(a) {\n  if (a === null || a === undefined) return 0;\n  return a.indexOf('top') > -1 ? -1 : a.indexOf('bottom') > -1 ? 1 : 0;\n}\n\nfunction calculateTextOffset(tp) {\n  // Read out text properties\n  var defaultAlignmentX = 0;\n  var defaultAlignmentY = 0;\n  var textOffset = [defaultAlignmentX, defaultAlignmentY];\n\n  if (Array.isArray(tp)) {\n    for (var i = 0; i < tp.length; i++) {\n      textOffset[i] = [defaultAlignmentX, defaultAlignmentY];\n\n      if (tp[i]) {\n        textOffset[i][0] = parseAlignmentX(tp[i]);\n        textOffset[i][1] = parseAlignmentY(tp[i]);\n      }\n    }\n  } else {\n    textOffset[0] = parseAlignmentX(tp);\n    textOffset[1] = parseAlignmentY(tp);\n  }\n\n  return textOffset;\n}\n\nfunction calculateSize(sizeIn, sizeFn) {\n  // rough parity with Plotly 2D markers\n  return sizeFn(sizeIn * 4);\n}\n\nfunction calculateSymbol(symbolIn) {\n  return MARKER_SYMBOLS[symbolIn];\n}\n\nfunction formatParam(paramIn, len, calculate, dflt, extraFn) {\n  var paramOut = null;\n\n  if (Lib.isArrayOrTypedArray(paramIn)) {\n    paramOut = [];\n\n    for (var i = 0; i < len; i++) {\n      if (paramIn[i] === undefined) paramOut[i] = dflt;else paramOut[i] = calculate(paramIn[i], extraFn);\n    }\n  } else paramOut = calculate(paramIn, Lib.identity);\n\n  return paramOut;\n}\n\nfunction convertPlotlyOptions(scene, data) {\n  var points = [];\n  var sceneLayout = scene.fullSceneLayout;\n  var scaleFactor = scene.dataScale;\n  var xaxis = sceneLayout.xaxis;\n  var yaxis = sceneLayout.yaxis;\n  var zaxis = sceneLayout.zaxis;\n  var marker = data.marker;\n  var line = data.line;\n  var x = data.x || [];\n  var y = data.y || [];\n  var z = data.z || [];\n  var len = x.length;\n  var xcalendar = data.xcalendar;\n  var ycalendar = data.ycalendar;\n  var zcalendar = data.zcalendar;\n  var xc, yc, zc;\n  var params, i;\n  var text; // Convert points\n\n  for (i = 0; i < len; i++) {\n    // sanitize numbers and apply transforms based on axes.type\n    xc = xaxis.d2l(x[i], 0, xcalendar) * scaleFactor[0];\n    yc = yaxis.d2l(y[i], 0, ycalendar) * scaleFactor[1];\n    zc = zaxis.d2l(z[i], 0, zcalendar) * scaleFactor[2];\n    points[i] = [xc, yc, zc];\n  } // convert text\n\n\n  if (Array.isArray(data.text)) text = data.text;else if (data.text !== undefined) {\n    text = new Array(len);\n\n    for (i = 0; i < len; i++) {\n      text[i] = data.text;\n    }\n  }\n\n  function formatter(axName, val) {\n    var ax = sceneLayout[axName];\n    return Axes.tickText(ax, ax.d2l(val), true).text;\n  } // check texttemplate\n\n\n  var texttemplate = data.texttemplate;\n\n  if (texttemplate) {\n    var fullLayout = scene.fullLayout;\n    var d3locale = fullLayout._d3locale;\n    var isArray = Array.isArray(texttemplate);\n    var N = isArray ? Math.min(texttemplate.length, len) : len;\n    var txt = isArray ? function (i) {\n      return texttemplate[i];\n    } : function () {\n      return texttemplate;\n    };\n    text = new Array(N);\n\n    for (i = 0; i < N; i++) {\n      var d = {\n        x: x[i],\n        y: y[i],\n        z: z[i]\n      };\n      var labels = {\n        xLabel: formatter('xaxis', x[i]),\n        yLabel: formatter('yaxis', y[i]),\n        zLabel: formatter('zaxis', z[i])\n      };\n      var pointValues = {};\n      appendArrayPointValue(pointValues, data, i);\n      var meta = data._meta || {};\n      text[i] = Lib.texttemplateString(txt(i), labels, d3locale, pointValues, d, meta);\n    }\n  } // Build object parameters\n\n\n  params = {\n    position: points,\n    mode: data.mode,\n    text: text\n  };\n\n  if ('line' in data) {\n    params.lineColor = formatColor(line, 1, len);\n    params.lineWidth = line.width;\n    params.lineDashes = line.dash;\n  }\n\n  if ('marker' in data) {\n    var sizeFn = makeBubbleSizeFn(data);\n    params.scatterColor = formatColor(marker, 1, len);\n    params.scatterSize = formatParam(marker.size, len, calculateSize, 20, sizeFn);\n    params.scatterMarker = formatParam(marker.symbol, len, calculateSymbol, '●');\n    params.scatterLineWidth = marker.line.width; // arrayOk === false\n\n    params.scatterLineColor = formatColor(marker.line, 1, len);\n    params.scatterAngle = 0;\n  }\n\n  if ('textposition' in data) {\n    params.textOffset = calculateTextOffset(data.textposition);\n    params.textColor = formatColor(data.textfont, 1, len);\n    params.textSize = formatParam(data.textfont.size, len, Lib.identity, 12);\n    params.textFont = data.textfont.family; // arrayOk === false\n\n    params.textAngle = 0;\n  }\n\n  var dims = ['x', 'y', 'z'];\n  params.project = [false, false, false];\n  params.projectScale = [1, 1, 1];\n  params.projectOpacity = [1, 1, 1];\n\n  for (i = 0; i < 3; ++i) {\n    var projection = data.projection[dims[i]];\n\n    if (params.project[i] = projection.show) {\n      params.projectOpacity[i] = projection.opacity;\n      params.projectScale[i] = projection.scale;\n    }\n  }\n\n  params.errorBounds = calculateError(data, scaleFactor, sceneLayout);\n  var errorParams = calculateErrorParams([data.error_x, data.error_y, data.error_z]);\n  params.errorColor = errorParams.color;\n  params.errorLineWidth = errorParams.lineWidth;\n  params.errorCapSize = errorParams.capSize;\n  params.delaunayAxis = data.surfaceaxis;\n  params.delaunayColor = str2RgbaArray(data.surfacecolor);\n  return params;\n}\n\nfunction _arrayToColor(color) {\n  if (Lib.isArrayOrTypedArray(color)) {\n    var c = color[0];\n    if (Lib.isArrayOrTypedArray(c)) color = c;\n    return 'rgb(' + color.slice(0, 3).map(function (x) {\n      return Math.round(x * 255);\n    }) + ')';\n  }\n\n  return null;\n}\n\nfunction arrayToColor(colors) {\n  if (!Lib.isArrayOrTypedArray(colors)) {\n    return null;\n  }\n\n  if (colors.length === 4 && typeof colors[0] === 'number') {\n    return _arrayToColor(colors);\n  }\n\n  return colors.map(_arrayToColor);\n}\n\nproto.update = function (data) {\n  var gl = this.scene.glplot.gl;\n  var lineOptions;\n  var scatterOptions;\n  var errorOptions;\n  var textOptions;\n  var dashPattern = DASH_PATTERNS.solid; // Save data\n\n  this.data = data; // Run data conversion\n\n  var options = convertPlotlyOptions(this.scene, data);\n\n  if ('mode' in options) {\n    this.mode = options.mode;\n  }\n\n  if ('lineDashes' in options) {\n    if (options.lineDashes in DASH_PATTERNS) {\n      dashPattern = DASH_PATTERNS[options.lineDashes];\n    }\n  }\n\n  this.color = arrayToColor(options.scatterColor) || arrayToColor(options.lineColor); // Save data points\n\n  this.dataPoints = options.position;\n  lineOptions = {\n    gl: this.scene.glplot.gl,\n    position: options.position,\n    color: options.lineColor,\n    lineWidth: options.lineWidth || 1,\n    dashes: dashPattern[0],\n    dashScale: dashPattern[1],\n    opacity: data.opacity,\n    connectGaps: data.connectgaps\n  };\n\n  if (this.mode.indexOf('lines') !== -1) {\n    if (this.linePlot) this.linePlot.update(lineOptions);else {\n      this.linePlot = createLinePlot(lineOptions);\n      this.linePlot._trace = this;\n      this.scene.glplot.add(this.linePlot);\n    }\n  } else if (this.linePlot) {\n    this.scene.glplot.remove(this.linePlot);\n    this.linePlot.dispose();\n    this.linePlot = null;\n  } // N.B. marker.opacity must be a scalar for performance\n\n\n  var scatterOpacity = data.opacity;\n  if (data.marker && data.marker.opacity) scatterOpacity *= data.marker.opacity;\n  scatterOptions = {\n    gl: this.scene.glplot.gl,\n    position: options.position,\n    color: options.scatterColor,\n    size: options.scatterSize,\n    glyph: options.scatterMarker,\n    opacity: scatterOpacity,\n    orthographic: true,\n    lineWidth: options.scatterLineWidth,\n    lineColor: options.scatterLineColor,\n    project: options.project,\n    projectScale: options.projectScale,\n    projectOpacity: options.projectOpacity\n  };\n\n  if (this.mode.indexOf('markers') !== -1) {\n    if (this.scatterPlot) this.scatterPlot.update(scatterOptions);else {\n      this.scatterPlot = createScatterPlot(scatterOptions);\n      this.scatterPlot._trace = this;\n      this.scatterPlot.highlightScale = 1;\n      this.scene.glplot.add(this.scatterPlot);\n    }\n  } else if (this.scatterPlot) {\n    this.scene.glplot.remove(this.scatterPlot);\n    this.scatterPlot.dispose();\n    this.scatterPlot = null;\n  }\n\n  textOptions = {\n    gl: this.scene.glplot.gl,\n    position: options.position,\n    glyph: options.text,\n    color: options.textColor,\n    size: options.textSize,\n    angle: options.textAngle,\n    alignment: options.textOffset,\n    font: options.textFont,\n    orthographic: true,\n    lineWidth: 0,\n    project: false,\n    opacity: data.opacity\n  };\n  this.textLabels = data.hovertext || data.text;\n\n  if (this.mode.indexOf('text') !== -1) {\n    if (this.textMarkers) this.textMarkers.update(textOptions);else {\n      this.textMarkers = createScatterPlot(textOptions);\n      this.textMarkers._trace = this;\n      this.textMarkers.highlightScale = 1;\n      this.scene.glplot.add(this.textMarkers);\n    }\n  } else if (this.textMarkers) {\n    this.scene.glplot.remove(this.textMarkers);\n    this.textMarkers.dispose();\n    this.textMarkers = null;\n  }\n\n  errorOptions = {\n    gl: this.scene.glplot.gl,\n    position: options.position,\n    color: options.errorColor,\n    error: options.errorBounds,\n    lineWidth: options.errorLineWidth,\n    capSize: options.errorCapSize,\n    opacity: data.opacity\n  };\n\n  if (this.errorBars) {\n    if (options.errorBounds) {\n      this.errorBars.update(errorOptions);\n    } else {\n      this.scene.glplot.remove(this.errorBars);\n      this.errorBars.dispose();\n      this.errorBars = null;\n    }\n  } else if (options.errorBounds) {\n    this.errorBars = createErrorBars(errorOptions);\n    this.errorBars._trace = this;\n    this.scene.glplot.add(this.errorBars);\n  }\n\n  if (options.delaunayAxis >= 0) {\n    var delaunayOptions = constructDelaunay(options.position, options.delaunayColor, options.delaunayAxis);\n    delaunayOptions.opacity = data.opacity;\n\n    if (this.delaunayMesh) {\n      this.delaunayMesh.update(delaunayOptions);\n    } else {\n      delaunayOptions.gl = gl;\n      this.delaunayMesh = createMesh(delaunayOptions);\n      this.delaunayMesh._trace = this;\n      this.scene.glplot.add(this.delaunayMesh);\n    }\n  } else if (this.delaunayMesh) {\n    this.scene.glplot.remove(this.delaunayMesh);\n    this.delaunayMesh.dispose();\n    this.delaunayMesh = null;\n  }\n};\n\nproto.dispose = function () {\n  if (this.linePlot) {\n    this.scene.glplot.remove(this.linePlot);\n    this.linePlot.dispose();\n  }\n\n  if (this.scatterPlot) {\n    this.scene.glplot.remove(this.scatterPlot);\n    this.scatterPlot.dispose();\n  }\n\n  if (this.errorBars) {\n    this.scene.glplot.remove(this.errorBars);\n    this.errorBars.dispose();\n  }\n\n  if (this.textMarkers) {\n    this.scene.glplot.remove(this.textMarkers);\n    this.textMarkers.dispose();\n  }\n\n  if (this.delaunayMesh) {\n    this.scene.glplot.remove(this.delaunayMesh);\n    this.delaunayMesh.dispose();\n  }\n};\n\nfunction createLineWithMarkers(scene, data) {\n  var plot = new LineWithMarkers(scene, data.uid);\n  plot.update(data);\n  return plot;\n}\n\nmodule.exports = createLineWithMarkers;","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/scatter3d/convert.js"],"names":["createLinePlot","require","createScatterPlot","createErrorBars","createMesh","triangulate","Lib","str2RgbaArray","formatColor","makeBubbleSizeFn","DASH_PATTERNS","MARKER_SYMBOLS","Axes","appendArrayPointValue","calculateError","LineWithMarkers","scene","uid","linePlot","scatterPlot","errorBars","textMarkers","delaunayMesh","color","mode","dataPoints","axesBounds","Infinity","textLabels","data","proto","prototype","handlePick","selection","object","ind","index","highlight","textLabel","Array","isArray","traceCoordinate","x","y","z","constructDelaunay","points","axis","u","v","filteredPoints","filteredIds","i","length","p","isNaN","isFinite","push","cells","c","j","positions","meshColor","calculateErrorParams","errors","capSize","lineWidth","e","copy_zstyle","visible","width","thickness","parseAlignmentX","a","undefined","indexOf","parseAlignmentY","calculateTextOffset","tp","defaultAlignmentX","defaultAlignmentY","textOffset","calculateSize","sizeIn","sizeFn","calculateSymbol","symbolIn","formatParam","paramIn","len","calculate","dflt","extraFn","paramOut","isArrayOrTypedArray","identity","convertPlotlyOptions","sceneLayout","fullSceneLayout","scaleFactor","dataScale","xaxis","yaxis","zaxis","marker","line","xcalendar","ycalendar","zcalendar","xc","yc","zc","params","text","d2l","formatter","axName","val","ax","tickText","texttemplate","fullLayout","d3locale","_d3locale","N","Math","min","txt","d","labels","xLabel","yLabel","zLabel","pointValues","meta","_meta","texttemplateString","position","lineColor","lineDashes","dash","scatterColor","scatterSize","size","scatterMarker","symbol","scatterLineWidth","scatterLineColor","scatterAngle","textposition","textColor","textfont","textSize","textFont","family","textAngle","dims","project","projectScale","projectOpacity","projection","show","opacity","scale","errorBounds","errorParams","error_x","error_y","error_z","errorColor","errorLineWidth","errorCapSize","delaunayAxis","surfaceaxis","delaunayColor","surfacecolor","_arrayToColor","slice","map","round","arrayToColor","colors","update","gl","glplot","lineOptions","scatterOptions","errorOptions","textOptions","dashPattern","solid","options","dashes","dashScale","connectGaps","connectgaps","_trace","add","remove","dispose","scatterOpacity","glyph","orthographic","highlightScale","angle","alignment","font","hovertext","error","delaunayOptions","createLineWithMarkers","plot","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar createLinePlot = require('gl-line3d');\nvar createScatterPlot = require('gl-scatter3d');\nvar createErrorBars = require('gl-error3d');\nvar createMesh = require('gl-mesh3d');\nvar triangulate = require('delaunay-triangulate');\n\nvar Lib = require('../../lib');\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar formatColor = require('../../lib/gl_format_color').formatColor;\nvar makeBubbleSizeFn = require('../scatter/make_bubble_size_func');\nvar DASH_PATTERNS = require('../../constants/gl3d_dashes');\nvar MARKER_SYMBOLS = require('../../constants/gl3d_markers');\n\nvar Axes = require('../../plots/cartesian/axes');\nvar appendArrayPointValue = require('../../components/fx/helpers').appendArrayPointValue;\n\nvar calculateError = require('./calc_errors');\n\nfunction LineWithMarkers(scene, uid) {\n    this.scene = scene;\n    this.uid = uid;\n    this.linePlot = null;\n    this.scatterPlot = null;\n    this.errorBars = null;\n    this.textMarkers = null;\n    this.delaunayMesh = null;\n    this.color = null;\n    this.mode = '';\n    this.dataPoints = [];\n    this.axesBounds = [\n        [-Infinity, -Infinity, -Infinity],\n        [Infinity, Infinity, Infinity]\n    ];\n    this.textLabels = null;\n    this.data = null;\n}\n\nvar proto = LineWithMarkers.prototype;\n\nproto.handlePick = function(selection) {\n    if(selection.object &&\n        (selection.object === this.linePlot ||\n         selection.object === this.delaunayMesh ||\n         selection.object === this.textMarkers ||\n         selection.object === this.scatterPlot)\n    ) {\n        var ind = selection.index = selection.data.index;\n\n        if(selection.object.highlight) {\n            selection.object.highlight(null);\n        }\n        if(this.scatterPlot) {\n            selection.object = this.scatterPlot;\n            this.scatterPlot.highlight(selection.data);\n        }\n\n        selection.textLabel = '';\n        if(this.textLabels) {\n            if(Array.isArray(this.textLabels)) {\n                if(this.textLabels[ind] || this.textLabels[ind] === 0) {\n                    selection.textLabel = this.textLabels[ind];\n                }\n            } else {\n                selection.textLabel = this.textLabels;\n            }\n        }\n\n        selection.traceCoordinate = [\n            this.data.x[ind],\n            this.data.y[ind],\n            this.data.z[ind]\n        ];\n\n        return true;\n    }\n};\n\nfunction constructDelaunay(points, color, axis) {\n    var u = (axis + 1) % 3;\n    var v = (axis + 2) % 3;\n    var filteredPoints = [];\n    var filteredIds = [];\n    var i;\n\n    for(i = 0; i < points.length; ++i) {\n        var p = points[i];\n        if(isNaN(p[u]) || !isFinite(p[u]) ||\n           isNaN(p[v]) || !isFinite(p[v])) {\n            continue;\n        }\n        filteredPoints.push([p[u], p[v]]);\n        filteredIds.push(i);\n    }\n    var cells = triangulate(filteredPoints);\n    for(i = 0; i < cells.length; ++i) {\n        var c = cells[i];\n        for(var j = 0; j < c.length; ++j) {\n            c[j] = filteredIds[c[j]];\n        }\n    }\n    return {\n        positions: points,\n        cells: cells,\n        meshColor: color\n    };\n}\n\nfunction calculateErrorParams(errors) {\n    var capSize = [0.0, 0.0, 0.0];\n    var color = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n    var lineWidth = [1.0, 1.0, 1.0];\n\n    for(var i = 0; i < 3; i++) {\n        var e = errors[i];\n\n        if(e && e.copy_zstyle !== false && errors[2].visible !== false) e = errors[2];\n        if(!e || !e.visible) continue;\n\n        capSize[i] = e.width / 2;  // ballpark rescaling\n        color[i] = str2RgbaArray(e.color);\n        lineWidth[i] = e.thickness;\n    }\n\n    return {capSize: capSize, color: color, lineWidth: lineWidth};\n}\n\nfunction parseAlignmentX(a) {\n    if(a === null || a === undefined) return 0;\n\n    return (a.indexOf('left') > -1) ? -1 :\n           (a.indexOf('right') > -1) ? 1 : 0;\n}\n\nfunction parseAlignmentY(a) {\n    if(a === null || a === undefined) return 0;\n\n    return (a.indexOf('top') > -1) ? -1 :\n           (a.indexOf('bottom') > -1) ? 1 : 0;\n}\n\nfunction calculateTextOffset(tp) {\n    // Read out text properties\n\n    var defaultAlignmentX = 0;\n    var defaultAlignmentY = 0;\n\n    var textOffset = [\n        defaultAlignmentX,\n        defaultAlignmentY\n    ];\n\n    if(Array.isArray(tp)) {\n        for(var i = 0; i < tp.length; i++) {\n            textOffset[i] = [\n                defaultAlignmentX,\n                defaultAlignmentY\n            ];\n            if(tp[i]) {\n                textOffset[i][0] = parseAlignmentX(tp[i]);\n                textOffset[i][1] = parseAlignmentY(tp[i]);\n            }\n        }\n    } else {\n        textOffset[0] = parseAlignmentX(tp);\n        textOffset[1] = parseAlignmentY(tp);\n    }\n\n    return textOffset;\n}\n\n\nfunction calculateSize(sizeIn, sizeFn) {\n    // rough parity with Plotly 2D markers\n    return sizeFn(sizeIn * 4);\n}\n\nfunction calculateSymbol(symbolIn) {\n    return MARKER_SYMBOLS[symbolIn];\n}\n\nfunction formatParam(paramIn, len, calculate, dflt, extraFn) {\n    var paramOut = null;\n\n    if(Lib.isArrayOrTypedArray(paramIn)) {\n        paramOut = [];\n\n        for(var i = 0; i < len; i++) {\n            if(paramIn[i] === undefined) paramOut[i] = dflt;\n            else paramOut[i] = calculate(paramIn[i], extraFn);\n        }\n    } else paramOut = calculate(paramIn, Lib.identity);\n\n    return paramOut;\n}\n\n\nfunction convertPlotlyOptions(scene, data) {\n    var points = [];\n    var sceneLayout = scene.fullSceneLayout;\n    var scaleFactor = scene.dataScale;\n    var xaxis = sceneLayout.xaxis;\n    var yaxis = sceneLayout.yaxis;\n    var zaxis = sceneLayout.zaxis;\n    var marker = data.marker;\n    var line = data.line;\n    var x = data.x || [];\n    var y = data.y || [];\n    var z = data.z || [];\n    var len = x.length;\n    var xcalendar = data.xcalendar;\n    var ycalendar = data.ycalendar;\n    var zcalendar = data.zcalendar;\n    var xc, yc, zc;\n    var params, i;\n    var text;\n\n    // Convert points\n    for(i = 0; i < len; i++) {\n        // sanitize numbers and apply transforms based on axes.type\n        xc = xaxis.d2l(x[i], 0, xcalendar) * scaleFactor[0];\n        yc = yaxis.d2l(y[i], 0, ycalendar) * scaleFactor[1];\n        zc = zaxis.d2l(z[i], 0, zcalendar) * scaleFactor[2];\n\n        points[i] = [xc, yc, zc];\n    }\n\n    // convert text\n    if(Array.isArray(data.text)) text = data.text;\n    else if(data.text !== undefined) {\n        text = new Array(len);\n        for(i = 0; i < len; i++) text[i] = data.text;\n    }\n\n    function formatter(axName, val) {\n        var ax = sceneLayout[axName];\n        return Axes.tickText(ax, ax.d2l(val), true).text;\n    }\n\n    // check texttemplate\n    var texttemplate = data.texttemplate;\n    if(texttemplate) {\n        var fullLayout = scene.fullLayout;\n        var d3locale = fullLayout._d3locale;\n        var isArray = Array.isArray(texttemplate);\n        var N = isArray ? Math.min(texttemplate.length, len) : len;\n        var txt = isArray ?\n            function(i) { return texttemplate[i]; } :\n            function() { return texttemplate; };\n\n        text = new Array(N);\n\n        for(i = 0; i < N; i++) {\n            var d = {x: x[i], y: y[i], z: z[i]};\n            var labels = {\n                xLabel: formatter('xaxis', x[i]),\n                yLabel: formatter('yaxis', y[i]),\n                zLabel: formatter('zaxis', z[i])\n            };\n            var pointValues = {};\n            appendArrayPointValue(pointValues, data, i);\n            var meta = data._meta || {};\n            text[i] = Lib.texttemplateString(txt(i), labels, d3locale, pointValues, d, meta);\n        }\n    }\n\n    // Build object parameters\n    params = {\n        position: points,\n        mode: data.mode,\n        text: text\n    };\n\n    if('line' in data) {\n        params.lineColor = formatColor(line, 1, len);\n        params.lineWidth = line.width;\n        params.lineDashes = line.dash;\n    }\n\n    if('marker' in data) {\n        var sizeFn = makeBubbleSizeFn(data);\n\n        params.scatterColor = formatColor(marker, 1, len);\n        params.scatterSize = formatParam(marker.size, len, calculateSize, 20, sizeFn);\n        params.scatterMarker = formatParam(marker.symbol, len, calculateSymbol, '●');\n        params.scatterLineWidth = marker.line.width;  // arrayOk === false\n        params.scatterLineColor = formatColor(marker.line, 1, len);\n        params.scatterAngle = 0;\n    }\n\n    if('textposition' in data) {\n        params.textOffset = calculateTextOffset(data.textposition);\n        params.textColor = formatColor(data.textfont, 1, len);\n        params.textSize = formatParam(data.textfont.size, len, Lib.identity, 12);\n        params.textFont = data.textfont.family;  // arrayOk === false\n        params.textAngle = 0;\n    }\n\n    var dims = ['x', 'y', 'z'];\n    params.project = [false, false, false];\n    params.projectScale = [1, 1, 1];\n    params.projectOpacity = [1, 1, 1];\n    for(i = 0; i < 3; ++i) {\n        var projection = data.projection[dims[i]];\n        if((params.project[i] = projection.show)) {\n            params.projectOpacity[i] = projection.opacity;\n            params.projectScale[i] = projection.scale;\n        }\n    }\n\n    params.errorBounds = calculateError(data, scaleFactor, sceneLayout);\n\n    var errorParams = calculateErrorParams([data.error_x, data.error_y, data.error_z]);\n    params.errorColor = errorParams.color;\n    params.errorLineWidth = errorParams.lineWidth;\n    params.errorCapSize = errorParams.capSize;\n\n    params.delaunayAxis = data.surfaceaxis;\n    params.delaunayColor = str2RgbaArray(data.surfacecolor);\n\n    return params;\n}\n\nfunction _arrayToColor(color) {\n    if(Lib.isArrayOrTypedArray(color)) {\n        var c = color[0];\n\n        if(Lib.isArrayOrTypedArray(c)) color = c;\n\n        return 'rgb(' + color.slice(0, 3).map(function(x) {\n            return Math.round(x * 255);\n        }) + ')';\n    }\n\n    return null;\n}\n\nfunction arrayToColor(colors) {\n    if(!Lib.isArrayOrTypedArray(colors)) {\n        return null;\n    }\n\n    if((colors.length === 4) && (typeof colors[0] === 'number')) {\n        return _arrayToColor(colors);\n    }\n\n    return colors.map(_arrayToColor);\n}\n\nproto.update = function(data) {\n    var gl = this.scene.glplot.gl;\n    var lineOptions;\n    var scatterOptions;\n    var errorOptions;\n    var textOptions;\n    var dashPattern = DASH_PATTERNS.solid;\n\n    // Save data\n    this.data = data;\n\n    // Run data conversion\n    var options = convertPlotlyOptions(this.scene, data);\n\n    if('mode' in options) {\n        this.mode = options.mode;\n    }\n    if('lineDashes' in options) {\n        if(options.lineDashes in DASH_PATTERNS) {\n            dashPattern = DASH_PATTERNS[options.lineDashes];\n        }\n    }\n\n    this.color = arrayToColor(options.scatterColor) ||\n                 arrayToColor(options.lineColor);\n\n    // Save data points\n    this.dataPoints = options.position;\n\n    lineOptions = {\n        gl: this.scene.glplot.gl,\n        position: options.position,\n        color: options.lineColor,\n        lineWidth: options.lineWidth || 1,\n        dashes: dashPattern[0],\n        dashScale: dashPattern[1],\n        opacity: data.opacity,\n        connectGaps: data.connectgaps\n    };\n\n    if(this.mode.indexOf('lines') !== -1) {\n        if(this.linePlot) this.linePlot.update(lineOptions);\n        else {\n            this.linePlot = createLinePlot(lineOptions);\n            this.linePlot._trace = this;\n            this.scene.glplot.add(this.linePlot);\n        }\n    } else if(this.linePlot) {\n        this.scene.glplot.remove(this.linePlot);\n        this.linePlot.dispose();\n        this.linePlot = null;\n    }\n\n    // N.B. marker.opacity must be a scalar for performance\n    var scatterOpacity = data.opacity;\n    if(data.marker && data.marker.opacity) scatterOpacity *= data.marker.opacity;\n\n    scatterOptions = {\n        gl: this.scene.glplot.gl,\n        position: options.position,\n        color: options.scatterColor,\n        size: options.scatterSize,\n        glyph: options.scatterMarker,\n        opacity: scatterOpacity,\n        orthographic: true,\n        lineWidth: options.scatterLineWidth,\n        lineColor: options.scatterLineColor,\n        project: options.project,\n        projectScale: options.projectScale,\n        projectOpacity: options.projectOpacity\n    };\n\n    if(this.mode.indexOf('markers') !== -1) {\n        if(this.scatterPlot) this.scatterPlot.update(scatterOptions);\n        else {\n            this.scatterPlot = createScatterPlot(scatterOptions);\n            this.scatterPlot._trace = this;\n            this.scatterPlot.highlightScale = 1;\n            this.scene.glplot.add(this.scatterPlot);\n        }\n    } else if(this.scatterPlot) {\n        this.scene.glplot.remove(this.scatterPlot);\n        this.scatterPlot.dispose();\n        this.scatterPlot = null;\n    }\n\n    textOptions = {\n        gl: this.scene.glplot.gl,\n        position: options.position,\n        glyph: options.text,\n        color: options.textColor,\n        size: options.textSize,\n        angle: options.textAngle,\n        alignment: options.textOffset,\n        font: options.textFont,\n        orthographic: true,\n        lineWidth: 0,\n        project: false,\n        opacity: data.opacity\n    };\n\n    this.textLabels = data.hovertext || data.text;\n\n    if(this.mode.indexOf('text') !== -1) {\n        if(this.textMarkers) this.textMarkers.update(textOptions);\n        else {\n            this.textMarkers = createScatterPlot(textOptions);\n            this.textMarkers._trace = this;\n            this.textMarkers.highlightScale = 1;\n            this.scene.glplot.add(this.textMarkers);\n        }\n    } else if(this.textMarkers) {\n        this.scene.glplot.remove(this.textMarkers);\n        this.textMarkers.dispose();\n        this.textMarkers = null;\n    }\n\n    errorOptions = {\n        gl: this.scene.glplot.gl,\n        position: options.position,\n        color: options.errorColor,\n        error: options.errorBounds,\n        lineWidth: options.errorLineWidth,\n        capSize: options.errorCapSize,\n        opacity: data.opacity\n    };\n    if(this.errorBars) {\n        if(options.errorBounds) {\n            this.errorBars.update(errorOptions);\n        } else {\n            this.scene.glplot.remove(this.errorBars);\n            this.errorBars.dispose();\n            this.errorBars = null;\n        }\n    } else if(options.errorBounds) {\n        this.errorBars = createErrorBars(errorOptions);\n        this.errorBars._trace = this;\n        this.scene.glplot.add(this.errorBars);\n    }\n\n    if(options.delaunayAxis >= 0) {\n        var delaunayOptions = constructDelaunay(\n            options.position,\n            options.delaunayColor,\n            options.delaunayAxis\n        );\n        delaunayOptions.opacity = data.opacity;\n\n        if(this.delaunayMesh) {\n            this.delaunayMesh.update(delaunayOptions);\n        } else {\n            delaunayOptions.gl = gl;\n            this.delaunayMesh = createMesh(delaunayOptions);\n            this.delaunayMesh._trace = this;\n            this.scene.glplot.add(this.delaunayMesh);\n        }\n    } else if(this.delaunayMesh) {\n        this.scene.glplot.remove(this.delaunayMesh);\n        this.delaunayMesh.dispose();\n        this.delaunayMesh = null;\n    }\n};\n\nproto.dispose = function() {\n    if(this.linePlot) {\n        this.scene.glplot.remove(this.linePlot);\n        this.linePlot.dispose();\n    }\n    if(this.scatterPlot) {\n        this.scene.glplot.remove(this.scatterPlot);\n        this.scatterPlot.dispose();\n    }\n    if(this.errorBars) {\n        this.scene.glplot.remove(this.errorBars);\n        this.errorBars.dispose();\n    }\n    if(this.textMarkers) {\n        this.scene.glplot.remove(this.textMarkers);\n        this.textMarkers.dispose();\n    }\n    if(this.delaunayMesh) {\n        this.scene.glplot.remove(this.delaunayMesh);\n        this.delaunayMesh.dispose();\n    }\n};\n\nfunction createLineWithMarkers(scene, data) {\n    var plot = new LineWithMarkers(scene, data.uid);\n    plot.update(data);\n    return plot;\n}\n\nmodule.exports = createLineWithMarkers;\n"]},"metadata":{},"sourceType":"script"}