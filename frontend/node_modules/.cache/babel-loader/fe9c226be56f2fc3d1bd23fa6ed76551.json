{"ast":null,"code":"'use strict';\n\nvar Registry = require('../../registry');\n\nvar hover = require('./hover').hover;\n\nmodule.exports = function click(gd, evt, subplot) {\n  var annotationsDone = Registry.getComponentMethod('annotations', 'onClick')(gd, gd._hoverdata); // fallback to fail-safe in case the plot type's hover method doesn't pass the subplot.\n  // Ternary, for example, didn't, but it was caught because tested.\n\n  if (subplot !== undefined) {\n    // The true flag at the end causes it to re-run the hover computation to figure out *which*\n    // point is being clicked. Without this, clicking is somewhat unreliable.\n    hover(gd, evt, subplot, true);\n  }\n\n  function emitClick() {\n    gd.emit('plotly_click', {\n      points: gd._hoverdata,\n      event: evt\n    });\n  }\n\n  if (gd._hoverdata && evt && evt.target) {\n    if (annotationsDone && annotationsDone.then) {\n      annotationsDone.then(emitClick);\n    } else emitClick(); // why do we get a double event without this???\n\n\n    if (evt.stopImmediatePropagation) evt.stopImmediatePropagation();\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/fx/click.js"],"names":["Registry","require","hover","module","exports","click","gd","evt","subplot","annotationsDone","getComponentMethod","_hoverdata","undefined","emitClick","emit","points","event","target","then","stopImmediatePropagation"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAP,CAAmBC,KAA/B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,EAAf,EAAmBC,GAAnB,EAAwBC,OAAxB,EAAiC;AAC9C,MAAIC,eAAe,GAAGT,QAAQ,CAACU,kBAAT,CAA4B,aAA5B,EAA2C,SAA3C,EAAsDJ,EAAtD,EAA0DA,EAAE,CAACK,UAA7D,CAAtB,CAD8C,CAG9C;AACA;;AACA,MAAGH,OAAO,KAAKI,SAAf,EAA0B;AACtB;AACA;AACAV,IAAAA,KAAK,CAACI,EAAD,EAAKC,GAAL,EAAUC,OAAV,EAAmB,IAAnB,CAAL;AACH;;AAED,WAASK,SAAT,GAAqB;AAAEP,IAAAA,EAAE,CAACQ,IAAH,CAAQ,cAAR,EAAwB;AAACC,MAAAA,MAAM,EAAET,EAAE,CAACK,UAAZ;AAAwBK,MAAAA,KAAK,EAAET;AAA/B,KAAxB;AAA+D;;AAEtF,MAAGD,EAAE,CAACK,UAAH,IAAiBJ,GAAjB,IAAwBA,GAAG,CAACU,MAA/B,EAAuC;AACnC,QAAGR,eAAe,IAAIA,eAAe,CAACS,IAAtC,EAA4C;AACxCT,MAAAA,eAAe,CAACS,IAAhB,CAAqBL,SAArB;AACH,KAFD,MAEOA,SAAS,GAHmB,CAKnC;;;AACA,QAAGN,GAAG,CAACY,wBAAP,EAAiCZ,GAAG,CAACY,wBAAJ;AACpC;AACJ,CArBD","sourcesContent":["'use strict';\n\nvar Registry = require('../../registry');\nvar hover = require('./hover').hover;\n\nmodule.exports = function click(gd, evt, subplot) {\n    var annotationsDone = Registry.getComponentMethod('annotations', 'onClick')(gd, gd._hoverdata);\n\n    // fallback to fail-safe in case the plot type's hover method doesn't pass the subplot.\n    // Ternary, for example, didn't, but it was caught because tested.\n    if(subplot !== undefined) {\n        // The true flag at the end causes it to re-run the hover computation to figure out *which*\n        // point is being clicked. Without this, clicking is somewhat unreliable.\n        hover(gd, evt, subplot, true);\n    }\n\n    function emitClick() { gd.emit('plotly_click', {points: gd._hoverdata, event: evt}); }\n\n    if(gd._hoverdata && evt && evt.target) {\n        if(annotationsDone && annotationsDone.then) {\n            annotationsDone.then(emitClick);\n        } else emitClick();\n\n        // why do we get a double event without this???\n        if(evt.stopImmediatePropagation) evt.stopImmediatePropagation();\n    }\n};\n"]},"metadata":{},"sourceType":"script"}