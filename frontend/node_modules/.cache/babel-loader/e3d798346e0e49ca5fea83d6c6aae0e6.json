{"ast":null,"code":"'use strict';\n\nvar Color = require('../../components/color');\n\nvar subtypes = require('./subtypes');\n\nmodule.exports = function getTraceColor(trace, di) {\n  var lc, tc; // TODO: text modes\n\n  if (trace.mode === 'lines') {\n    lc = trace.line.color;\n    return lc && Color.opacity(lc) ? lc : trace.fillcolor;\n  } else if (trace.mode === 'none') {\n    return trace.fill ? trace.fillcolor : '';\n  } else {\n    var mc = di.mcc || (trace.marker || {}).color;\n    var mlc = di.mlcc || ((trace.marker || {}).line || {}).color;\n    tc = mc && Color.opacity(mc) ? mc : mlc && Color.opacity(mlc) && (di.mlw || ((trace.marker || {}).line || {}).width) ? mlc : '';\n\n    if (tc) {\n      // make sure the points aren't TOO transparent\n      if (Color.opacity(tc) < 0.3) {\n        return Color.addOpacity(tc, 0.3);\n      } else return tc;\n    } else {\n      lc = (trace.line || {}).color;\n      return lc && Color.opacity(lc) && subtypes.hasLines(trace) && trace.line.width ? lc : trace.fillcolor;\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/scatter/get_trace_color.js"],"names":["Color","require","subtypes","module","exports","getTraceColor","trace","di","lc","tc","mode","line","color","opacity","fillcolor","fill","mc","mcc","marker","mlc","mlcc","mlw","width","addOpacity","hasLines"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,wBAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAtB;;AAGAE,MAAM,CAACC,OAAP,GAAiB,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,EAA9B,EAAkC;AAC/C,MAAIC,EAAJ,EAAQC,EAAR,CAD+C,CAG/C;;AAEA,MAAGH,KAAK,CAACI,IAAN,KAAe,OAAlB,EAA2B;AACvBF,IAAAA,EAAE,GAAGF,KAAK,CAACK,IAAN,CAAWC,KAAhB;AACA,WAAQJ,EAAE,IAAIR,KAAK,CAACa,OAAN,CAAcL,EAAd,CAAP,GACHA,EADG,GACEF,KAAK,CAACQ,SADf;AAEH,GAJD,MAIO,IAAGR,KAAK,CAACI,IAAN,KAAe,MAAlB,EAA0B;AAC7B,WAAOJ,KAAK,CAACS,IAAN,GAAaT,KAAK,CAACQ,SAAnB,GAA+B,EAAtC;AACH,GAFM,MAEA;AACH,QAAIE,EAAE,GAAGT,EAAE,CAACU,GAAH,IAAU,CAACX,KAAK,CAACY,MAAN,IAAgB,EAAjB,EAAqBN,KAAxC;AACA,QAAIO,GAAG,GAAGZ,EAAE,CAACa,IAAH,IAAW,CAAC,CAACd,KAAK,CAACY,MAAN,IAAgB,EAAjB,EAAqBP,IAArB,IAA6B,EAA9B,EAAkCC,KAAvD;AAEAH,IAAAA,EAAE,GAAIO,EAAE,IAAIhB,KAAK,CAACa,OAAN,CAAcG,EAAd,CAAP,GAA4BA,EAA5B,GACAG,GAAG,IAAInB,KAAK,CAACa,OAAN,CAAcM,GAAd,CAAP,KACIZ,EAAE,CAACc,GAAH,IAAU,CAAC,CAACf,KAAK,CAACY,MAAN,IAAgB,EAAjB,EAAqBP,IAArB,IAA6B,EAA9B,EAAkCW,KADhD,CAAD,GAC2DH,GAD3D,GACiE,EAFrE;;AAIA,QAAGV,EAAH,EAAO;AACH;AACA,UAAGT,KAAK,CAACa,OAAN,CAAcJ,EAAd,IAAoB,GAAvB,EAA4B;AACxB,eAAOT,KAAK,CAACuB,UAAN,CAAiBd,EAAjB,EAAqB,GAArB,CAAP;AACH,OAFD,MAEO,OAAOA,EAAP;AACV,KALD,MAKO;AACHD,MAAAA,EAAE,GAAG,CAACF,KAAK,CAACK,IAAN,IAAc,EAAf,EAAmBC,KAAxB;AACA,aAAQJ,EAAE,IAAIR,KAAK,CAACa,OAAN,CAAcL,EAAd,CAAN,IACJN,QAAQ,CAACsB,QAAT,CAAkBlB,KAAlB,CADI,IACwBA,KAAK,CAACK,IAAN,CAAWW,KADpC,GAECd,EAFD,GAEMF,KAAK,CAACQ,SAFnB;AAGH;AACJ;AACJ,CA/BD","sourcesContent":["'use strict';\n\nvar Color = require('../../components/color');\nvar subtypes = require('./subtypes');\n\n\nmodule.exports = function getTraceColor(trace, di) {\n    var lc, tc;\n\n    // TODO: text modes\n\n    if(trace.mode === 'lines') {\n        lc = trace.line.color;\n        return (lc && Color.opacity(lc)) ?\n            lc : trace.fillcolor;\n    } else if(trace.mode === 'none') {\n        return trace.fill ? trace.fillcolor : '';\n    } else {\n        var mc = di.mcc || (trace.marker || {}).color;\n        var mlc = di.mlcc || ((trace.marker || {}).line || {}).color;\n\n        tc = (mc && Color.opacity(mc)) ? mc :\n            (mlc && Color.opacity(mlc) &&\n                (di.mlw || ((trace.marker || {}).line || {}).width)) ? mlc : '';\n\n        if(tc) {\n            // make sure the points aren't TOO transparent\n            if(Color.opacity(tc) < 0.3) {\n                return Color.addOpacity(tc, 0.3);\n            } else return tc;\n        } else {\n            lc = (trace.line || {}).color;\n            return (lc && Color.opacity(lc) &&\n                subtypes.hasLines(trace) && trace.line.width) ?\n                    lc : trace.fillcolor;\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}