{"ast":null,"code":"'use strict';\n\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl-unminified');\n\nvar Lib = require('../../lib');\n\nvar strTranslate = Lib.strTranslate;\nvar strScale = Lib.strScale;\n\nvar getSubplotCalcData = require('../../plots/get_data').getSubplotCalcData;\n\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nvar d3 = require('@plotly/d3');\n\nvar Drawing = require('../../components/drawing');\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar Mapbox = require('./mapbox');\n\nvar MAPBOX = 'mapbox';\n\nvar constants = exports.constants = require('./constants');\n\nexports.name = MAPBOX;\nexports.attr = 'subplot';\nexports.idRoot = MAPBOX;\nexports.idRegex = exports.attrRegex = Lib.counterRegex(MAPBOX);\nexports.attributes = {\n  subplot: {\n    valType: 'subplotid',\n    dflt: 'mapbox',\n    editType: 'calc',\n    description: ['Sets a reference between this trace\\'s data coordinates and', 'a mapbox subplot.', 'If *mapbox* (the default value), the data refer to `layout.mapbox`.', 'If *mapbox2*, the data refer to `layout.mapbox2`, and so on.'].join(' ')\n  }\n};\nexports.layoutAttributes = require('./layout_attributes');\nexports.supplyLayoutDefaults = require('./layout_defaults');\n\nexports.plot = function plot(gd) {\n  var fullLayout = gd._fullLayout;\n  var calcData = gd.calcdata;\n  var mapboxIds = fullLayout._subplots[MAPBOX];\n\n  if (mapboxgl.version !== constants.requiredVersion) {\n    throw new Error(constants.wrongVersionErrorMsg);\n  }\n\n  var accessToken = findAccessToken(gd, mapboxIds);\n  mapboxgl.accessToken = accessToken;\n\n  for (var i = 0; i < mapboxIds.length; i++) {\n    var id = mapboxIds[i];\n    var subplotCalcData = getSubplotCalcData(calcData, MAPBOX, id);\n    var opts = fullLayout[id];\n    var mapbox = opts._subplot;\n\n    if (!mapbox) {\n      mapbox = new Mapbox(gd, id);\n      fullLayout[id]._subplot = mapbox;\n    }\n\n    if (!mapbox.viewInitial) {\n      mapbox.viewInitial = {\n        center: Lib.extendFlat({}, opts.center),\n        zoom: opts.zoom,\n        bearing: opts.bearing,\n        pitch: opts.pitch\n      };\n    }\n\n    mapbox.plot(subplotCalcData, fullLayout, gd._promises);\n  }\n};\n\nexports.clean = function (newFullData, newFullLayout, oldFullData, oldFullLayout) {\n  var oldMapboxKeys = oldFullLayout._subplots[MAPBOX] || [];\n\n  for (var i = 0; i < oldMapboxKeys.length; i++) {\n    var oldMapboxKey = oldMapboxKeys[i];\n\n    if (!newFullLayout[oldMapboxKey] && !!oldFullLayout[oldMapboxKey]._subplot) {\n      oldFullLayout[oldMapboxKey]._subplot.destroy();\n    }\n  }\n};\n\nexports.toSVG = function (gd) {\n  var fullLayout = gd._fullLayout;\n  var subplotIds = fullLayout._subplots[MAPBOX];\n  var size = fullLayout._size;\n\n  for (var i = 0; i < subplotIds.length; i++) {\n    var opts = fullLayout[subplotIds[i]];\n    var domain = opts.domain;\n    var mapbox = opts._subplot;\n    var imageData = mapbox.toImage('png');\n\n    var image = fullLayout._glimages.append('svg:image');\n\n    image.attr({\n      xmlns: xmlnsNamespaces.svg,\n      'xlink:href': imageData,\n      x: size.l + size.w * domain.x[0],\n      y: size.t + size.h * (1 - domain.y[1]),\n      width: size.w * (domain.x[1] - domain.x[0]),\n      height: size.h * (domain.y[1] - domain.y[0]),\n      preserveAspectRatio: 'none'\n    });\n    var subplotDiv = d3.select(opts._subplot.div); // Append logo if visible\n\n    var hidden = subplotDiv.select('.mapboxgl-ctrl-logo').node().offsetParent === null;\n\n    if (!hidden) {\n      var logo = fullLayout._glimages.append('g');\n\n      logo.attr('transform', strTranslate(size.l + size.w * domain.x[0] + 10, size.t + size.h * (1 - domain.y[0]) - 31));\n      logo.append('path').attr('d', constants.mapboxLogo.path0).style({\n        opacity: 0.9,\n        fill: '#ffffff',\n        'enable-background': 'new'\n      });\n      logo.append('path').attr('d', constants.mapboxLogo.path1).style('opacity', 0.35).style('enable-background', 'new');\n      logo.append('path').attr('d', constants.mapboxLogo.path2).style('opacity', 0.35).style('enable-background', 'new');\n      logo.append('polygon').attr('points', constants.mapboxLogo.polygon).style({\n        opacity: 0.9,\n        fill: '#ffffff',\n        'enable-background': 'new'\n      });\n    } // Add attributions\n\n\n    var attributions = subplotDiv.select('.mapboxgl-ctrl-attrib').text().replace('Improve this map', '');\n\n    var attributionGroup = fullLayout._glimages.append('g');\n\n    var attributionText = attributionGroup.append('text');\n    attributionText.text(attributions).classed('static-attribution', true).attr({\n      'font-size': 12,\n      'font-family': 'Arial',\n      'color': 'rgba(0, 0, 0, 0.75)',\n      'text-anchor': 'end',\n      'data-unformatted': attributions\n    });\n    var bBox = Drawing.bBox(attributionText.node()); // Break into multiple lines twice larger than domain\n\n    var maxWidth = size.w * (domain.x[1] - domain.x[0]);\n\n    if (bBox.width > maxWidth / 2) {\n      var multilineAttributions = attributions.split('|').join('<br>');\n      attributionText.text(multilineAttributions).attr('data-unformatted', multilineAttributions).call(svgTextUtils.convertToTspans, gd);\n      bBox = Drawing.bBox(attributionText.node());\n    }\n\n    attributionText.attr('transform', strTranslate(-3, -bBox.height + 8)); // Draw white rectangle behind text\n\n    attributionGroup.insert('rect', '.static-attribution').attr({\n      x: -bBox.width - 6,\n      y: -bBox.height - 3,\n      width: bBox.width + 6,\n      height: bBox.height + 3,\n      fill: 'rgba(255, 255, 255, 0.75)'\n    }); // Scale down if larger than domain\n\n    var scaleRatio = 1;\n    if (bBox.width + 6 > maxWidth) scaleRatio = maxWidth / (bBox.width + 6);\n    var offset = [size.l + size.w * domain.x[1], size.t + size.h * (1 - domain.y[0])];\n    attributionGroup.attr('transform', strTranslate(offset[0], offset[1]) + strScale(scaleRatio));\n  }\n}; // N.B. mapbox-gl only allows one accessToken to be set per page:\n// https://github.com/mapbox/mapbox-gl-js/issues/6331\n\n\nfunction findAccessToken(gd, mapboxIds) {\n  var fullLayout = gd._fullLayout;\n  var context = gd._context; // special case for Mapbox Atlas users\n\n  if (context.mapboxAccessToken === '') return '';\n  var tokensUseful = [];\n  var tokensListed = [];\n  var hasOneSetMapboxStyle = false;\n  var wontWork = false; // Take the first token we find in a mapbox subplot.\n  // These default to the context value but may be overridden.\n\n  for (var i = 0; i < mapboxIds.length; i++) {\n    var opts = fullLayout[mapboxIds[i]];\n    var token = opts.accesstoken;\n\n    if (isMapboxStyle(opts.style)) {\n      if (token) {\n        Lib.pushUnique(tokensUseful, token);\n      } else {\n        if (isMapboxStyle(opts._input.style)) {\n          Lib.error('Uses Mapbox map style, but did not set an access token.');\n          hasOneSetMapboxStyle = true;\n        }\n\n        wontWork = true;\n      }\n    }\n\n    if (token) {\n      Lib.pushUnique(tokensListed, token);\n    }\n  }\n\n  if (wontWork) {\n    var msg = hasOneSetMapboxStyle ? constants.noAccessTokenErrorMsg : constants.missingStyleErrorMsg;\n    Lib.error(msg);\n    throw new Error(msg);\n  }\n\n  if (tokensUseful.length) {\n    if (tokensUseful.length > 1) {\n      Lib.warn(constants.multipleTokensErrorMsg);\n    }\n\n    return tokensUseful[0];\n  } else {\n    if (tokensListed.length) {\n      Lib.log(['Listed mapbox access token(s)', tokensListed.join(','), 'but did not use a Mapbox map style, ignoring token(s).'].join(' '));\n    }\n\n    return '';\n  }\n}\n\nfunction isMapboxStyle(s) {\n  return typeof s === 'string' && (constants.styleValuesMapbox.indexOf(s) !== -1 || s.indexOf('mapbox://') === 0);\n}\n\nexports.updateFx = function (gd) {\n  var fullLayout = gd._fullLayout;\n  var subplotIds = fullLayout._subplots[MAPBOX];\n\n  for (var i = 0; i < subplotIds.length; i++) {\n    var subplotObj = fullLayout[subplotIds[i]]._subplot;\n    subplotObj.updateFx(fullLayout);\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/plots/mapbox/index.js"],"names":["mapboxgl","require","Lib","strTranslate","strScale","getSubplotCalcData","xmlnsNamespaces","d3","Drawing","svgTextUtils","Mapbox","MAPBOX","constants","exports","name","attr","idRoot","idRegex","attrRegex","counterRegex","attributes","subplot","valType","dflt","editType","description","join","layoutAttributes","supplyLayoutDefaults","plot","gd","fullLayout","_fullLayout","calcData","calcdata","mapboxIds","_subplots","version","requiredVersion","Error","wrongVersionErrorMsg","accessToken","findAccessToken","i","length","id","subplotCalcData","opts","mapbox","_subplot","viewInitial","center","extendFlat","zoom","bearing","pitch","_promises","clean","newFullData","newFullLayout","oldFullData","oldFullLayout","oldMapboxKeys","oldMapboxKey","destroy","toSVG","subplotIds","size","_size","domain","imageData","toImage","image","_glimages","append","xmlns","svg","x","l","w","y","t","h","width","height","preserveAspectRatio","subplotDiv","select","div","hidden","node","offsetParent","logo","mapboxLogo","path0","style","opacity","fill","path1","path2","polygon","attributions","text","replace","attributionGroup","attributionText","classed","bBox","maxWidth","multilineAttributions","split","call","convertToTspans","insert","scaleRatio","offset","context","_context","mapboxAccessToken","tokensUseful","tokensListed","hasOneSetMapboxStyle","wontWork","token","accesstoken","isMapboxStyle","pushUnique","_input","error","msg","noAccessTokenErrorMsg","missingStyleErrorMsg","warn","multipleTokensErrorMsg","log","s","styleValuesMapbox","indexOf","updateFx","subplotObj"],"mappings":"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","sourcesContent":["'use strict';\n\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl-unminified');\n\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar strScale = Lib.strScale;\nvar getSubplotCalcData = require('../../plots/get_data').getSubplotCalcData;\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\nvar d3 = require('@plotly/d3');\nvar Drawing = require('../../components/drawing');\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar Mapbox = require('./mapbox');\n\nvar MAPBOX = 'mapbox';\n\nvar constants = exports.constants = require('./constants');\n\nexports.name = MAPBOX;\n\nexports.attr = 'subplot';\n\nexports.idRoot = MAPBOX;\n\nexports.idRegex = exports.attrRegex = Lib.counterRegex(MAPBOX);\n\nexports.attributes = {\n    subplot: {\n        valType: 'subplotid',\n        dflt: 'mapbox',\n        editType: 'calc',\n        description: [\n            'Sets a reference between this trace\\'s data coordinates and',\n            'a mapbox subplot.',\n            'If *mapbox* (the default value), the data refer to `layout.mapbox`.',\n            'If *mapbox2*, the data refer to `layout.mapbox2`, and so on.'\n        ].join(' ')\n    }\n};\n\nexports.layoutAttributes = require('./layout_attributes');\n\nexports.supplyLayoutDefaults = require('./layout_defaults');\n\nexports.plot = function plot(gd) {\n    var fullLayout = gd._fullLayout;\n    var calcData = gd.calcdata;\n    var mapboxIds = fullLayout._subplots[MAPBOX];\n\n    if(mapboxgl.version !== constants.requiredVersion) {\n        throw new Error(constants.wrongVersionErrorMsg);\n    }\n\n    var accessToken = findAccessToken(gd, mapboxIds);\n    mapboxgl.accessToken = accessToken;\n\n    for(var i = 0; i < mapboxIds.length; i++) {\n        var id = mapboxIds[i];\n        var subplotCalcData = getSubplotCalcData(calcData, MAPBOX, id);\n        var opts = fullLayout[id];\n        var mapbox = opts._subplot;\n\n        if(!mapbox) {\n            mapbox = new Mapbox(gd, id);\n            fullLayout[id]._subplot = mapbox;\n        }\n\n        if(!mapbox.viewInitial) {\n            mapbox.viewInitial = {\n                center: Lib.extendFlat({}, opts.center),\n                zoom: opts.zoom,\n                bearing: opts.bearing,\n                pitch: opts.pitch\n            };\n        }\n\n        mapbox.plot(subplotCalcData, fullLayout, gd._promises);\n    }\n};\n\nexports.clean = function(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n    var oldMapboxKeys = oldFullLayout._subplots[MAPBOX] || [];\n\n    for(var i = 0; i < oldMapboxKeys.length; i++) {\n        var oldMapboxKey = oldMapboxKeys[i];\n\n        if(!newFullLayout[oldMapboxKey] && !!oldFullLayout[oldMapboxKey]._subplot) {\n            oldFullLayout[oldMapboxKey]._subplot.destroy();\n        }\n    }\n};\n\nexports.toSVG = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var subplotIds = fullLayout._subplots[MAPBOX];\n    var size = fullLayout._size;\n\n    for(var i = 0; i < subplotIds.length; i++) {\n        var opts = fullLayout[subplotIds[i]];\n        var domain = opts.domain;\n        var mapbox = opts._subplot;\n\n        var imageData = mapbox.toImage('png');\n        var image = fullLayout._glimages.append('svg:image');\n\n        image.attr({\n            xmlns: xmlnsNamespaces.svg,\n            'xlink:href': imageData,\n            x: size.l + size.w * domain.x[0],\n            y: size.t + size.h * (1 - domain.y[1]),\n            width: size.w * (domain.x[1] - domain.x[0]),\n            height: size.h * (domain.y[1] - domain.y[0]),\n            preserveAspectRatio: 'none'\n        });\n\n        var subplotDiv = d3.select(opts._subplot.div);\n\n        // Append logo if visible\n        var hidden = subplotDiv.select('.mapboxgl-ctrl-logo').node().offsetParent === null;\n        if(!hidden) {\n            var logo = fullLayout._glimages.append('g');\n            logo.attr('transform', strTranslate(size.l + size.w * domain.x[0] + 10, size.t + size.h * (1 - domain.y[0]) - 31));\n            logo.append('path')\n              .attr('d', constants.mapboxLogo.path0)\n              .style({\n                  opacity: 0.9,\n                  fill: '#ffffff',\n                  'enable-background': 'new'\n              });\n\n            logo.append('path')\n              .attr('d', constants.mapboxLogo.path1)\n              .style('opacity', 0.35)\n              .style('enable-background', 'new');\n\n            logo.append('path')\n              .attr('d', constants.mapboxLogo.path2)\n              .style('opacity', 0.35)\n              .style('enable-background', 'new');\n\n            logo.append('polygon')\n              .attr('points', constants.mapboxLogo.polygon)\n              .style({\n                  opacity: 0.9,\n                  fill: '#ffffff',\n                  'enable-background': 'new'\n              });\n        }\n\n        // Add attributions\n        var attributions = subplotDiv\n                              .select('.mapboxgl-ctrl-attrib').text()\n                              .replace('Improve this map', '');\n\n        var attributionGroup = fullLayout._glimages.append('g');\n\n        var attributionText = attributionGroup.append('text');\n        attributionText\n          .text(attributions)\n          .classed('static-attribution', true)\n          .attr({\n              'font-size': 12,\n              'font-family': 'Arial',\n              'color': 'rgba(0, 0, 0, 0.75)',\n              'text-anchor': 'end',\n              'data-unformatted': attributions\n          });\n\n        var bBox = Drawing.bBox(attributionText.node());\n\n        // Break into multiple lines twice larger than domain\n        var maxWidth = size.w * (domain.x[1] - domain.x[0]);\n        if((bBox.width > maxWidth / 2)) {\n            var multilineAttributions = attributions.split('|').join('<br>');\n            attributionText\n              .text(multilineAttributions)\n              .attr('data-unformatted', multilineAttributions)\n              .call(svgTextUtils.convertToTspans, gd);\n\n            bBox = Drawing.bBox(attributionText.node());\n        }\n        attributionText.attr('transform', strTranslate(-3, -bBox.height + 8));\n\n        // Draw white rectangle behind text\n        attributionGroup\n          .insert('rect', '.static-attribution')\n          .attr({\n              x: -bBox.width - 6,\n              y: -bBox.height - 3,\n              width: bBox.width + 6,\n              height: bBox.height + 3,\n              fill: 'rgba(255, 255, 255, 0.75)'\n          });\n\n        // Scale down if larger than domain\n        var scaleRatio = 1;\n        if((bBox.width + 6) > maxWidth) scaleRatio = maxWidth / (bBox.width + 6);\n\n        var offset = [(size.l + size.w * domain.x[1]), (size.t + size.h * (1 - domain.y[0]))];\n        attributionGroup.attr('transform', strTranslate(offset[0], offset[1]) + strScale(scaleRatio));\n    }\n};\n\n// N.B. mapbox-gl only allows one accessToken to be set per page:\n// https://github.com/mapbox/mapbox-gl-js/issues/6331\nfunction findAccessToken(gd, mapboxIds) {\n    var fullLayout = gd._fullLayout;\n    var context = gd._context;\n\n    // special case for Mapbox Atlas users\n    if(context.mapboxAccessToken === '') return '';\n\n    var tokensUseful = [];\n    var tokensListed = [];\n    var hasOneSetMapboxStyle = false;\n    var wontWork = false;\n\n    // Take the first token we find in a mapbox subplot.\n    // These default to the context value but may be overridden.\n    for(var i = 0; i < mapboxIds.length; i++) {\n        var opts = fullLayout[mapboxIds[i]];\n        var token = opts.accesstoken;\n\n        if(isMapboxStyle(opts.style)) {\n            if(token) {\n                Lib.pushUnique(tokensUseful, token);\n            } else {\n                if(isMapboxStyle(opts._input.style)) {\n                    Lib.error('Uses Mapbox map style, but did not set an access token.');\n                    hasOneSetMapboxStyle = true;\n                }\n                wontWork = true;\n            }\n        }\n\n        if(token) {\n            Lib.pushUnique(tokensListed, token);\n        }\n    }\n\n    if(wontWork) {\n        var msg = hasOneSetMapboxStyle ?\n            constants.noAccessTokenErrorMsg :\n            constants.missingStyleErrorMsg;\n        Lib.error(msg);\n        throw new Error(msg);\n    }\n\n    if(tokensUseful.length) {\n        if(tokensUseful.length > 1) {\n            Lib.warn(constants.multipleTokensErrorMsg);\n        }\n        return tokensUseful[0];\n    } else {\n        if(tokensListed.length) {\n            Lib.log([\n                'Listed mapbox access token(s)', tokensListed.join(','),\n                'but did not use a Mapbox map style, ignoring token(s).'\n            ].join(' '));\n        }\n        return '';\n    }\n}\n\nfunction isMapboxStyle(s) {\n    return typeof s === 'string' && (\n        constants.styleValuesMapbox.indexOf(s) !== -1 ||\n        s.indexOf('mapbox://') === 0\n    );\n}\n\nexports.updateFx = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var subplotIds = fullLayout._subplots[MAPBOX];\n\n    for(var i = 0; i < subplotIds.length; i++) {\n        var subplotObj = fullLayout[subplotIds[i]]._subplot;\n        subplotObj.updateFx(fullLayout);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}