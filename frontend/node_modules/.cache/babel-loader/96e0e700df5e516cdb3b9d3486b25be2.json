{"ast":null,"code":"'use strict';\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\nvar Colorscale = require('../../components/colorscale');\n\nvar wrap = require('../../lib/gup').wrap;\n\nmodule.exports = function calc(gd, trace) {\n  var lineColor;\n  var cscale;\n\n  if (Colorscale.hasColorscale(trace, 'line') && isArrayOrTypedArray(trace.line.color)) {\n    lineColor = trace.line.color;\n    cscale = Colorscale.extractOpts(trace.line).colorscale;\n    Colorscale.calc(gd, trace, {\n      vals: lineColor,\n      containerStr: 'line',\n      cLetter: 'c'\n    });\n  } else {\n    lineColor = constHalf(trace._length);\n    cscale = [[0, trace.line.color], [1, trace.line.color]];\n  }\n\n  return wrap({\n    lineColor: lineColor,\n    cscale: cscale\n  });\n};\n\nfunction constHalf(len) {\n  var out = new Array(len);\n\n  for (var i = 0; i < len; i++) {\n    out[i] = 0.5;\n  }\n\n  return out;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/parcoords/calc.js"],"names":["isArrayOrTypedArray","require","Colorscale","wrap","module","exports","calc","gd","trace","lineColor","cscale","hasColorscale","line","color","extractOpts","colorscale","vals","containerStr","cLetter","constHalf","_length","len","out","Array","i"],"mappings":"AAAA;;AAEA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBD,mBAA/C;;AACA,IAAIE,UAAU,GAAGD,OAAO,CAAC,6BAAD,CAAxB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,eAAD,CAAP,CAAyBE,IAApC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,EAAd,EAAkBC,KAAlB,EAAyB;AACtC,MAAIC,SAAJ;AACA,MAAIC,MAAJ;;AAEA,MAAGR,UAAU,CAACS,aAAX,CAAyBH,KAAzB,EAAgC,MAAhC,KAA2CR,mBAAmB,CAACQ,KAAK,CAACI,IAAN,CAAWC,KAAZ,CAAjE,EAAqF;AACjFJ,IAAAA,SAAS,GAAGD,KAAK,CAACI,IAAN,CAAWC,KAAvB;AACAH,IAAAA,MAAM,GAAGR,UAAU,CAACY,WAAX,CAAuBN,KAAK,CAACI,IAA7B,EAAmCG,UAA5C;AAEAb,IAAAA,UAAU,CAACI,IAAX,CAAgBC,EAAhB,EAAoBC,KAApB,EAA2B;AACvBQ,MAAAA,IAAI,EAAEP,SADiB;AAEvBQ,MAAAA,YAAY,EAAE,MAFS;AAGvBC,MAAAA,OAAO,EAAE;AAHc,KAA3B;AAKH,GATD,MASO;AACHT,IAAAA,SAAS,GAAGU,SAAS,CAACX,KAAK,CAACY,OAAP,CAArB;AACAV,IAAAA,MAAM,GAAG,CAAC,CAAC,CAAD,EAAIF,KAAK,CAACI,IAAN,CAAWC,KAAf,CAAD,EAAwB,CAAC,CAAD,EAAIL,KAAK,CAACI,IAAN,CAAWC,KAAf,CAAxB,CAAT;AACH;;AAED,SAAOV,IAAI,CAAC;AAACM,IAAAA,SAAS,EAAEA,SAAZ;AAAuBC,IAAAA,MAAM,EAAEA;AAA/B,GAAD,CAAX;AACH,CAnBD;;AAqBA,SAASS,SAAT,CAAmBE,GAAnB,EAAwB;AACpB,MAAIC,GAAG,GAAG,IAAIC,KAAJ,CAAUF,GAAV,CAAV;;AACA,OAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,GAAnB,EAAwBG,CAAC,EAAzB,EAA6B;AACzBF,IAAAA,GAAG,CAACE,CAAD,CAAH,GAAS,GAAT;AACH;;AACD,SAAOF,GAAP;AACH","sourcesContent":["'use strict';\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar Colorscale = require('../../components/colorscale');\nvar wrap = require('../../lib/gup').wrap;\n\nmodule.exports = function calc(gd, trace) {\n    var lineColor;\n    var cscale;\n\n    if(Colorscale.hasColorscale(trace, 'line') && isArrayOrTypedArray(trace.line.color)) {\n        lineColor = trace.line.color;\n        cscale = Colorscale.extractOpts(trace.line).colorscale;\n\n        Colorscale.calc(gd, trace, {\n            vals: lineColor,\n            containerStr: 'line',\n            cLetter: 'c'\n        });\n    } else {\n        lineColor = constHalf(trace._length);\n        cscale = [[0, trace.line.color], [1, trace.line.color]];\n    }\n\n    return wrap({lineColor: lineColor, cscale: cscale});\n};\n\nfunction constHalf(len) {\n    var out = new Array(len);\n    for(var i = 0; i < len; i++) {\n        out[i] = 0.5;\n    }\n    return out;\n}\n"]},"metadata":{},"sourceType":"script"}