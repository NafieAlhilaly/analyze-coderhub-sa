{"ast":null,"code":"module.exports = absolutize;\n/**\n * redefine `path` with absolute coordinates\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction absolutize(path) {\n  var startX = 0;\n  var startY = 0;\n  var x = 0;\n  var y = 0;\n  return path.map(function (seg) {\n    seg = seg.slice();\n    var type = seg[0];\n    var command = type.toUpperCase(); // is relative\n\n    if (type != command) {\n      seg[0] = command;\n\n      switch (type) {\n        case 'a':\n          seg[6] += x;\n          seg[7] += y;\n          break;\n\n        case 'v':\n          seg[1] += y;\n          break;\n\n        case 'h':\n          seg[1] += x;\n          break;\n\n        default:\n          for (var i = 1; i < seg.length;) {\n            seg[i++] += x;\n            seg[i++] += y;\n          }\n\n      }\n    } // update cursor state\n\n\n    switch (command) {\n      case 'Z':\n        x = startX;\n        y = startY;\n        break;\n\n      case 'H':\n        x = seg[1];\n        break;\n\n      case 'V':\n        y = seg[1];\n        break;\n\n      case 'M':\n        x = startX = seg[1];\n        y = startY = seg[2];\n        break;\n\n      default:\n        x = seg[seg.length - 2];\n        y = seg[seg.length - 1];\n    }\n\n    return seg;\n  });\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/abs-svg-path/index.js"],"names":["module","exports","absolutize","path","startX","startY","x","y","map","seg","slice","type","command","toUpperCase","i","length"],"mappings":"AACAA,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAT,CAAoBC,IAApB,EAAyB;AACxB,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AAEA,SAAOJ,IAAI,CAACK,GAAL,CAAS,UAASC,GAAT,EAAa;AAC5BA,IAAAA,GAAG,GAAGA,GAAG,CAACC,KAAJ,EAAN;AACA,QAAIC,IAAI,GAAGF,GAAG,CAAC,CAAD,CAAd;AACA,QAAIG,OAAO,GAAGD,IAAI,CAACE,WAAL,EAAd,CAH4B,CAK5B;;AACA,QAAIF,IAAI,IAAIC,OAAZ,EAAqB;AACpBH,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASG,OAAT;;AACA,cAAQD,IAAR;AACC,aAAK,GAAL;AACCF,UAAAA,GAAG,CAAC,CAAD,CAAH,IAAUH,CAAV;AACAG,UAAAA,GAAG,CAAC,CAAD,CAAH,IAAUF,CAAV;AACA;;AACD,aAAK,GAAL;AACCE,UAAAA,GAAG,CAAC,CAAD,CAAH,IAAUF,CAAV;AACA;;AACD,aAAK,GAAL;AACCE,UAAAA,GAAG,CAAC,CAAD,CAAH,IAAUH,CAAV;AACA;;AACD;AACC,eAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACM,MAAxB,GAAiC;AAChCN,YAAAA,GAAG,CAACK,CAAC,EAAF,CAAH,IAAYR,CAAZ;AACAG,YAAAA,GAAG,CAACK,CAAC,EAAF,CAAH,IAAYP,CAAZ;AACA;;AAfH;AAiBA,KAzB2B,CA2B5B;;;AACA,YAAQK,OAAR;AACC,WAAK,GAAL;AACCN,QAAAA,CAAC,GAAGF,MAAJ;AACAG,QAAAA,CAAC,GAAGF,MAAJ;AACA;;AACD,WAAK,GAAL;AACCC,QAAAA,CAAC,GAAGG,GAAG,CAAC,CAAD,CAAP;AACA;;AACD,WAAK,GAAL;AACCF,QAAAA,CAAC,GAAGE,GAAG,CAAC,CAAD,CAAP;AACA;;AACD,WAAK,GAAL;AACCH,QAAAA,CAAC,GAAGF,MAAM,GAAGK,GAAG,CAAC,CAAD,CAAhB;AACAF,QAAAA,CAAC,GAAGF,MAAM,GAAGI,GAAG,CAAC,CAAD,CAAhB;AACA;;AACD;AACCH,QAAAA,CAAC,GAAGG,GAAG,CAACA,GAAG,CAACM,MAAJ,GAAa,CAAd,CAAP;AACAR,QAAAA,CAAC,GAAGE,GAAG,CAACA,GAAG,CAACM,MAAJ,GAAa,CAAd,CAAP;AAjBF;;AAoBA,WAAON,GAAP;AACA,GAjDM,CAAP;AAkDA","sourcesContent":["\nmodule.exports = absolutize\n\n/**\n * redefine `path` with absolute coordinates\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction absolutize(path){\n\tvar startX = 0\n\tvar startY = 0\n\tvar x = 0\n\tvar y = 0\n\n\treturn path.map(function(seg){\n\t\tseg = seg.slice()\n\t\tvar type = seg[0]\n\t\tvar command = type.toUpperCase()\n\n\t\t// is relative\n\t\tif (type != command) {\n\t\t\tseg[0] = command\n\t\t\tswitch (type) {\n\t\t\t\tcase 'a':\n\t\t\t\t\tseg[6] += x\n\t\t\t\t\tseg[7] += y\n\t\t\t\t\tbreak\n\t\t\t\tcase 'v':\n\t\t\t\t\tseg[1] += y\n\t\t\t\t\tbreak\n\t\t\t\tcase 'h':\n\t\t\t\t\tseg[1] += x\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tfor (var i = 1; i < seg.length;) {\n\t\t\t\t\t\tseg[i++] += x\n\t\t\t\t\t\tseg[i++] += y\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// update cursor state\n\t\tswitch (command) {\n\t\t\tcase 'Z':\n\t\t\t\tx = startX\n\t\t\t\ty = startY\n\t\t\t\tbreak\n\t\t\tcase 'H':\n\t\t\t\tx = seg[1]\n\t\t\t\tbreak\n\t\t\tcase 'V':\n\t\t\t\ty = seg[1]\n\t\t\t\tbreak\n\t\t\tcase 'M':\n\t\t\t\tx = startX = seg[1]\n\t\t\t\ty = startY = seg[2]\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tx = seg[seg.length - 2]\n\t\t\t\ty = seg[seg.length - 1]\n\t\t}\n\n\t\treturn seg\n\t})\n}\n"]},"metadata":{},"sourceType":"script"}