{"ast":null,"code":"'use strict';\n\nvar tinycolor = require('tinycolor2');\n\nvar scales = {\n  'Greys': [[0, 'rgb(0,0,0)'], [1, 'rgb(255,255,255)']],\n  'YlGnBu': [[0, 'rgb(8,29,88)'], [0.125, 'rgb(37,52,148)'], [0.25, 'rgb(34,94,168)'], [0.375, 'rgb(29,145,192)'], [0.5, 'rgb(65,182,196)'], [0.625, 'rgb(127,205,187)'], [0.75, 'rgb(199,233,180)'], [0.875, 'rgb(237,248,217)'], [1, 'rgb(255,255,217)']],\n  'Greens': [[0, 'rgb(0,68,27)'], [0.125, 'rgb(0,109,44)'], [0.25, 'rgb(35,139,69)'], [0.375, 'rgb(65,171,93)'], [0.5, 'rgb(116,196,118)'], [0.625, 'rgb(161,217,155)'], [0.75, 'rgb(199,233,192)'], [0.875, 'rgb(229,245,224)'], [1, 'rgb(247,252,245)']],\n  'YlOrRd': [[0, 'rgb(128,0,38)'], [0.125, 'rgb(189,0,38)'], [0.25, 'rgb(227,26,28)'], [0.375, 'rgb(252,78,42)'], [0.5, 'rgb(253,141,60)'], [0.625, 'rgb(254,178,76)'], [0.75, 'rgb(254,217,118)'], [0.875, 'rgb(255,237,160)'], [1, 'rgb(255,255,204)']],\n  'Bluered': [[0, 'rgb(0,0,255)'], [1, 'rgb(255,0,0)']],\n  // modified RdBu based on\n  // http://www.kennethmoreland.com/color-maps/\n  'RdBu': [[0, 'rgb(5,10,172)'], [0.35, 'rgb(106,137,247)'], [0.5, 'rgb(190,190,190)'], [0.6, 'rgb(220,170,132)'], [0.7, 'rgb(230,145,90)'], [1, 'rgb(178,10,28)']],\n  // Scale for non-negative numeric values\n  'Reds': [[0, 'rgb(220,220,220)'], [0.2, 'rgb(245,195,157)'], [0.4, 'rgb(245,160,105)'], [1, 'rgb(178,10,28)']],\n  // Scale for non-positive numeric values\n  'Blues': [[0, 'rgb(5,10,172)'], [0.35, 'rgb(40,60,190)'], [0.5, 'rgb(70,100,245)'], [0.6, 'rgb(90,120,245)'], [0.7, 'rgb(106,137,247)'], [1, 'rgb(220,220,220)']],\n  'Picnic': [[0, 'rgb(0,0,255)'], [0.1, 'rgb(51,153,255)'], [0.2, 'rgb(102,204,255)'], [0.3, 'rgb(153,204,255)'], [0.4, 'rgb(204,204,255)'], [0.5, 'rgb(255,255,255)'], [0.6, 'rgb(255,204,255)'], [0.7, 'rgb(255,153,255)'], [0.8, 'rgb(255,102,204)'], [0.9, 'rgb(255,102,102)'], [1, 'rgb(255,0,0)']],\n  'Rainbow': [[0, 'rgb(150,0,90)'], [0.125, 'rgb(0,0,200)'], [0.25, 'rgb(0,25,255)'], [0.375, 'rgb(0,152,255)'], [0.5, 'rgb(44,255,150)'], [0.625, 'rgb(151,255,0)'], [0.75, 'rgb(255,234,0)'], [0.875, 'rgb(255,111,0)'], [1, 'rgb(255,0,0)']],\n  'Portland': [[0, 'rgb(12,51,131)'], [0.25, 'rgb(10,136,186)'], [0.5, 'rgb(242,211,56)'], [0.75, 'rgb(242,143,56)'], [1, 'rgb(217,30,30)']],\n  'Jet': [[0, 'rgb(0,0,131)'], [0.125, 'rgb(0,60,170)'], [0.375, 'rgb(5,255,255)'], [0.625, 'rgb(255,255,0)'], [0.875, 'rgb(250,0,0)'], [1, 'rgb(128,0,0)']],\n  'Hot': [[0, 'rgb(0,0,0)'], [0.3, 'rgb(230,0,0)'], [0.6, 'rgb(255,210,0)'], [1, 'rgb(255,255,255)']],\n  'Blackbody': [[0, 'rgb(0,0,0)'], [0.2, 'rgb(230,0,0)'], [0.4, 'rgb(230,210,0)'], [0.7, 'rgb(255,255,255)'], [1, 'rgb(160,200,255)']],\n  'Earth': [[0, 'rgb(0,0,130)'], [0.1, 'rgb(0,180,180)'], [0.2, 'rgb(40,210,40)'], [0.4, 'rgb(230,230,50)'], [0.6, 'rgb(120,70,20)'], [1, 'rgb(255,255,255)']],\n  'Electric': [[0, 'rgb(0,0,0)'], [0.15, 'rgb(30,0,100)'], [0.4, 'rgb(120,0,100)'], [0.6, 'rgb(160,90,0)'], [0.8, 'rgb(230,200,0)'], [1, 'rgb(255,250,220)']],\n  'Viridis': [[0, '#440154'], [0.06274509803921569, '#48186a'], [0.12549019607843137, '#472d7b'], [0.18823529411764706, '#424086'], [0.25098039215686274, '#3b528b'], [0.3137254901960784, '#33638d'], [0.3764705882352941, '#2c728e'], [0.4392156862745098, '#26828e'], [0.5019607843137255, '#21918c'], [0.5647058823529412, '#1fa088'], [0.6274509803921569, '#28ae80'], [0.6901960784313725, '#3fbc73'], [0.7529411764705882, '#5ec962'], [0.8156862745098039, '#84d44b'], [0.8784313725490196, '#addc30'], [0.9411764705882353, '#d8e219'], [1, '#fde725']],\n  'Cividis': [[0.000000, 'rgb(0,32,76)'], [0.058824, 'rgb(0,42,102)'], [0.117647, 'rgb(0,52,110)'], [0.176471, 'rgb(39,63,108)'], [0.235294, 'rgb(60,74,107)'], [0.294118, 'rgb(76,85,107)'], [0.352941, 'rgb(91,95,109)'], [0.411765, 'rgb(104,106,112)'], [0.470588, 'rgb(117,117,117)'], [0.529412, 'rgb(131,129,120)'], [0.588235, 'rgb(146,140,120)'], [0.647059, 'rgb(161,152,118)'], [0.705882, 'rgb(176,165,114)'], [0.764706, 'rgb(192,177,109)'], [0.823529, 'rgb(209,191,102)'], [0.882353, 'rgb(225,204,92)'], [0.941176, 'rgb(243,219,79)'], [1.000000, 'rgb(255,233,69)']]\n};\nvar defaultScale = scales.RdBu;\n\nfunction getScale(scl, dflt) {\n  if (!dflt) dflt = defaultScale;\n  if (!scl) return dflt;\n\n  function parseScale() {\n    try {\n      scl = scales[scl] || JSON.parse(scl);\n    } catch (e) {\n      scl = dflt;\n    }\n  }\n\n  if (typeof scl === 'string') {\n    parseScale(); // occasionally scl is double-JSON encoded...\n\n    if (typeof scl === 'string') parseScale();\n  }\n\n  if (!isValidScaleArray(scl)) return dflt;\n  return scl;\n}\n\nfunction isValidScaleArray(scl) {\n  var highestVal = 0;\n  if (!Array.isArray(scl) || scl.length < 2) return false;\n  if (!scl[0] || !scl[scl.length - 1]) return false;\n  if (+scl[0][0] !== 0 || +scl[scl.length - 1][0] !== 1) return false;\n\n  for (var i = 0; i < scl.length; i++) {\n    var si = scl[i];\n\n    if (si.length !== 2 || +si[0] < highestVal || !tinycolor(si[1]).isValid()) {\n      return false;\n    }\n\n    highestVal = +si[0];\n  }\n\n  return true;\n}\n\nfunction isValidScale(scl) {\n  if (scales[scl] !== undefined) return true;else return isValidScaleArray(scl);\n}\n\nmodule.exports = {\n  scales: scales,\n  defaultScale: defaultScale,\n  get: getScale,\n  isValid: isValidScale\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/colorscale/scales.js"],"names":["tinycolor","require","scales","defaultScale","RdBu","getScale","scl","dflt","parseScale","JSON","parse","e","isValidScaleArray","highestVal","Array","isArray","length","i","si","isValid","isValidScale","undefined","module","exports","get"],"mappings":"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","sourcesContent":["'use strict';\n\nvar tinycolor = require('tinycolor2');\n\nvar scales = {\n    'Greys': [\n        [0, 'rgb(0,0,0)'], [1, 'rgb(255,255,255)']\n    ],\n\n    'YlGnBu': [\n        [0, 'rgb(8,29,88)'], [0.125, 'rgb(37,52,148)'],\n        [0.25, 'rgb(34,94,168)'], [0.375, 'rgb(29,145,192)'],\n        [0.5, 'rgb(65,182,196)'], [0.625, 'rgb(127,205,187)'],\n        [0.75, 'rgb(199,233,180)'], [0.875, 'rgb(237,248,217)'],\n        [1, 'rgb(255,255,217)']\n    ],\n\n    'Greens': [\n        [0, 'rgb(0,68,27)'], [0.125, 'rgb(0,109,44)'],\n        [0.25, 'rgb(35,139,69)'], [0.375, 'rgb(65,171,93)'],\n        [0.5, 'rgb(116,196,118)'], [0.625, 'rgb(161,217,155)'],\n        [0.75, 'rgb(199,233,192)'], [0.875, 'rgb(229,245,224)'],\n        [1, 'rgb(247,252,245)']\n    ],\n\n    'YlOrRd': [\n        [0, 'rgb(128,0,38)'], [0.125, 'rgb(189,0,38)'],\n        [0.25, 'rgb(227,26,28)'], [0.375, 'rgb(252,78,42)'],\n        [0.5, 'rgb(253,141,60)'], [0.625, 'rgb(254,178,76)'],\n        [0.75, 'rgb(254,217,118)'], [0.875, 'rgb(255,237,160)'],\n        [1, 'rgb(255,255,204)']\n    ],\n\n    'Bluered': [\n        [0, 'rgb(0,0,255)'], [1, 'rgb(255,0,0)']\n    ],\n\n    // modified RdBu based on\n    // http://www.kennethmoreland.com/color-maps/\n    'RdBu': [\n        [0, 'rgb(5,10,172)'], [0.35, 'rgb(106,137,247)'],\n        [0.5, 'rgb(190,190,190)'], [0.6, 'rgb(220,170,132)'],\n        [0.7, 'rgb(230,145,90)'], [1, 'rgb(178,10,28)']\n    ],\n\n    // Scale for non-negative numeric values\n    'Reds': [\n        [0, 'rgb(220,220,220)'], [0.2, 'rgb(245,195,157)'],\n        [0.4, 'rgb(245,160,105)'], [1, 'rgb(178,10,28)']\n    ],\n\n    // Scale for non-positive numeric values\n    'Blues': [\n        [0, 'rgb(5,10,172)'], [0.35, 'rgb(40,60,190)'],\n        [0.5, 'rgb(70,100,245)'], [0.6, 'rgb(90,120,245)'],\n        [0.7, 'rgb(106,137,247)'], [1, 'rgb(220,220,220)']\n    ],\n\n    'Picnic': [\n        [0, 'rgb(0,0,255)'], [0.1, 'rgb(51,153,255)'],\n        [0.2, 'rgb(102,204,255)'], [0.3, 'rgb(153,204,255)'],\n        [0.4, 'rgb(204,204,255)'], [0.5, 'rgb(255,255,255)'],\n        [0.6, 'rgb(255,204,255)'], [0.7, 'rgb(255,153,255)'],\n        [0.8, 'rgb(255,102,204)'], [0.9, 'rgb(255,102,102)'],\n        [1, 'rgb(255,0,0)']\n    ],\n\n    'Rainbow': [\n        [0, 'rgb(150,0,90)'], [0.125, 'rgb(0,0,200)'],\n        [0.25, 'rgb(0,25,255)'], [0.375, 'rgb(0,152,255)'],\n        [0.5, 'rgb(44,255,150)'], [0.625, 'rgb(151,255,0)'],\n        [0.75, 'rgb(255,234,0)'], [0.875, 'rgb(255,111,0)'],\n        [1, 'rgb(255,0,0)']\n    ],\n\n    'Portland': [\n        [0, 'rgb(12,51,131)'], [0.25, 'rgb(10,136,186)'],\n        [0.5, 'rgb(242,211,56)'], [0.75, 'rgb(242,143,56)'],\n        [1, 'rgb(217,30,30)']\n    ],\n\n    'Jet': [\n        [0, 'rgb(0,0,131)'], [0.125, 'rgb(0,60,170)'],\n        [0.375, 'rgb(5,255,255)'], [0.625, 'rgb(255,255,0)'],\n        [0.875, 'rgb(250,0,0)'], [1, 'rgb(128,0,0)']\n    ],\n\n    'Hot': [\n        [0, 'rgb(0,0,0)'], [0.3, 'rgb(230,0,0)'],\n        [0.6, 'rgb(255,210,0)'], [1, 'rgb(255,255,255)']\n    ],\n\n    'Blackbody': [\n        [0, 'rgb(0,0,0)'], [0.2, 'rgb(230,0,0)'],\n        [0.4, 'rgb(230,210,0)'], [0.7, 'rgb(255,255,255)'],\n        [1, 'rgb(160,200,255)']\n    ],\n\n    'Earth': [\n        [0, 'rgb(0,0,130)'], [0.1, 'rgb(0,180,180)'],\n        [0.2, 'rgb(40,210,40)'], [0.4, 'rgb(230,230,50)'],\n        [0.6, 'rgb(120,70,20)'], [1, 'rgb(255,255,255)']\n    ],\n\n    'Electric': [\n        [0, 'rgb(0,0,0)'], [0.15, 'rgb(30,0,100)'],\n        [0.4, 'rgb(120,0,100)'], [0.6, 'rgb(160,90,0)'],\n        [0.8, 'rgb(230,200,0)'], [1, 'rgb(255,250,220)']\n    ],\n\n    'Viridis': [\n        [0, '#440154'], [0.06274509803921569, '#48186a'],\n        [0.12549019607843137, '#472d7b'], [0.18823529411764706, '#424086'],\n        [0.25098039215686274, '#3b528b'], [0.3137254901960784, '#33638d'],\n        [0.3764705882352941, '#2c728e'], [0.4392156862745098, '#26828e'],\n        [0.5019607843137255, '#21918c'], [0.5647058823529412, '#1fa088'],\n        [0.6274509803921569, '#28ae80'], [0.6901960784313725, '#3fbc73'],\n        [0.7529411764705882, '#5ec962'], [0.8156862745098039, '#84d44b'],\n        [0.8784313725490196, '#addc30'], [0.9411764705882353, '#d8e219'],\n        [1, '#fde725']\n    ],\n\n    'Cividis': [\n        [0.000000, 'rgb(0,32,76)'], [0.058824, 'rgb(0,42,102)'],\n        [0.117647, 'rgb(0,52,110)'], [0.176471, 'rgb(39,63,108)'],\n        [0.235294, 'rgb(60,74,107)'], [0.294118, 'rgb(76,85,107)'],\n        [0.352941, 'rgb(91,95,109)'], [0.411765, 'rgb(104,106,112)'],\n        [0.470588, 'rgb(117,117,117)'], [0.529412, 'rgb(131,129,120)'],\n        [0.588235, 'rgb(146,140,120)'], [0.647059, 'rgb(161,152,118)'],\n        [0.705882, 'rgb(176,165,114)'], [0.764706, 'rgb(192,177,109)'],\n        [0.823529, 'rgb(209,191,102)'], [0.882353, 'rgb(225,204,92)'],\n        [0.941176, 'rgb(243,219,79)'], [1.000000, 'rgb(255,233,69)']\n    ]\n};\n\nvar defaultScale = scales.RdBu;\n\nfunction getScale(scl, dflt) {\n    if(!dflt) dflt = defaultScale;\n    if(!scl) return dflt;\n\n    function parseScale() {\n        try {\n            scl = scales[scl] || JSON.parse(scl);\n        } catch(e) {\n            scl = dflt;\n        }\n    }\n\n    if(typeof scl === 'string') {\n        parseScale();\n        // occasionally scl is double-JSON encoded...\n        if(typeof scl === 'string') parseScale();\n    }\n\n    if(!isValidScaleArray(scl)) return dflt;\n    return scl;\n}\n\n\nfunction isValidScaleArray(scl) {\n    var highestVal = 0;\n\n    if(!Array.isArray(scl) || scl.length < 2) return false;\n\n    if(!scl[0] || !scl[scl.length - 1]) return false;\n\n    if(+scl[0][0] !== 0 || +scl[scl.length - 1][0] !== 1) return false;\n\n    for(var i = 0; i < scl.length; i++) {\n        var si = scl[i];\n\n        if(si.length !== 2 || +si[0] < highestVal || !tinycolor(si[1]).isValid()) {\n            return false;\n        }\n\n        highestVal = +si[0];\n    }\n\n    return true;\n}\n\nfunction isValidScale(scl) {\n    if(scales[scl] !== undefined) return true;\n    else return isValidScaleArray(scl);\n}\n\nmodule.exports = {\n    scales: scales,\n    defaultScale: defaultScale,\n\n    get: getScale,\n    isValid: isValidScale\n};\n"]},"metadata":{},"sourceType":"script"}