{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\reactApp\\\\frontend\\\\src\\\\components\\\\userSearchPage\\\\cards\\\\TableCard.js\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TotalPointsCard from './TotalPointsCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14\n  }\n}));\nconst StyledTableRow = styled(TableRow)(({\n  theme\n}) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0\n  }\n}));\n\nfunction createData(programmingLanguageName, easySolved, mediumSolved, HardSolved, totalSolved, totalPoints) {\n  console.log(programmingLanguageName);\n  return {\n    programmingLanguageName,\n    easySolved,\n    mediumSolved,\n    HardSolved,\n    totalSolved,\n    totalPoints\n  };\n}\n\nconst TableCard = ({\n  languages,\n  easySolved,\n  mediumSolved,\n  hardSolved,\n  totalSolved,\n  totalPoints\n}) => {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 700\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Proramming language name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"Easy solved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"Meduim solved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"Hard solved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"Total solved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"Total points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: (languages, totalSolved, totalPoints, totalSolved, TotalPoints) && languages[0].map((row, inx) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: easySolved[0][inx]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: mediumSolved[0][inx]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: hardSolved[0][inx]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: totalSolved[0][inx]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: totalPoints[0][inx]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, row, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TableCard;\nexport default TableCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCard\");","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/src/components/userSearchPage/cards/TableCard.js"],"names":["React","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","TotalPointsCard","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","action","hover","border","createData","programmingLanguageName","easySolved","mediumSolved","HardSolved","totalSolved","totalPoints","console","log","TableCard","languages","hardSolved","minWidth","TotalPoints","map","row","inx"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport TotalPointsCard from './TotalPointsCard';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction createData(programmingLanguageName, \r\n                easySolved, \r\n                mediumSolved, \r\n                HardSolved, \r\n                totalSolved, \r\n                totalPoints) {\r\n                    console.log(programmingLanguageName)\r\n  return { programmingLanguageName, \r\n        easySolved, \r\n        mediumSolved, \r\n        HardSolved, \r\n        totalSolved,\r\n        totalPoints };\r\n}\r\n\r\n\r\nconst TableCard =  ({languages, \r\n    easySolved,\r\n    mediumSolved,\r\n    hardSolved,\r\n    totalSolved,\r\n    totalPoints }) =>  \r\n{\r\n    \r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 700 }} >\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Proramming language name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Easy solved</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Meduim solved</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Hard solved</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Total solved</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Total points</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(languages, totalSolved, totalPoints, totalSolved, TotalPoints)&&\r\n          (languages[0].map((row, inx) => (\r\n            <StyledTableRow key={row}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{easySolved[0][inx]}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{mediumSolved[0][inx]}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{hardSolved[0][inx]}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{totalSolved[0][inx]}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{totalPoints[0][inx]}</StyledTableCell>\r\n            </StyledTableRow>\r\n          )))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default TableCard;"]},"metadata":{},"sourceType":"module"}