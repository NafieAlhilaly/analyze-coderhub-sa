{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar hasColorscale = require('../../components/colorscale/helpers').hasColorscale;\n\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\n\nvar handleDomainDefaults = require('../../plots/domain').defaults;\n\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\n\nvar mergeLength = require('../parcoords/merge_length');\n\nfunction handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce) {\n  coerce('line.shape');\n  coerce('line.hovertemplate');\n  var lineColor = coerce('line.color', layout.colorway[0]);\n\n  if (hasColorscale(traceIn, 'line') && Lib.isArrayOrTypedArray(lineColor)) {\n    if (lineColor.length) {\n      coerce('line.colorscale');\n      colorscaleDefaults(traceIn, traceOut, layout, coerce, {\n        prefix: 'line.',\n        cLetter: 'c'\n      });\n      return lineColor.length;\n    } else {\n      traceOut.line.color = defaultColor;\n    }\n  }\n\n  return Infinity;\n}\n\nfunction dimensionDefaults(dimensionIn, dimensionOut) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(dimensionIn, dimensionOut, attributes.dimensions, attr, dflt);\n  }\n\n  var values = coerce('values');\n  var visible = coerce('visible');\n\n  if (!(values && values.length)) {\n    visible = dimensionOut.visible = false;\n  }\n\n  if (visible) {\n    // Dimension level\n    coerce('label');\n    coerce('displayindex', dimensionOut._index); // Category level\n\n    var arrayIn = dimensionIn.categoryarray;\n    var isValidArray = Array.isArray(arrayIn) && arrayIn.length > 0;\n    var orderDefault;\n    if (isValidArray) orderDefault = 'array';\n    var order = coerce('categoryorder', orderDefault); // coerce 'categoryarray' only in array order case\n\n    if (order === 'array') {\n      coerce('categoryarray');\n      coerce('ticktext');\n    } else {\n      delete dimensionIn.categoryarray;\n      delete dimensionIn.ticktext;\n    } // cannot set 'categoryorder' to 'array' with an invalid 'categoryarray'\n\n\n    if (!isValidArray && order === 'array') {\n      dimensionOut.categoryorder = 'trace';\n    }\n  }\n}\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var dimensions = handleArrayContainerDefaults(traceIn, traceOut, {\n    name: 'dimensions',\n    handleItemDefaults: dimensionDefaults\n  });\n  var len = handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n  handleDomainDefaults(traceOut, layout, coerce);\n\n  if (!Array.isArray(dimensions) || !dimensions.length) {\n    traceOut.visible = false;\n  }\n\n  mergeLength(traceOut, dimensions, 'values', len);\n  coerce('hoveron');\n  coerce('hovertemplate');\n  coerce('arrangement');\n  coerce('bundlecolors');\n  coerce('sortpaths');\n  coerce('counts');\n  var labelfontDflt = {\n    family: layout.font.family,\n    size: Math.round(layout.font.size),\n    color: layout.font.color\n  };\n  Lib.coerceFont(coerce, 'labelfont', labelfontDflt);\n  var categoryfontDefault = {\n    family: layout.font.family,\n    size: Math.round(layout.font.size / 1.2),\n    color: layout.font.color\n  };\n  Lib.coerceFont(coerce, 'tickfont', categoryfontDefault);\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/parcats/defaults.js"],"names":["Lib","require","hasColorscale","colorscaleDefaults","handleDomainDefaults","defaults","handleArrayContainerDefaults","attributes","mergeLength","handleLineDefaults","traceIn","traceOut","defaultColor","layout","coerce","lineColor","colorway","isArrayOrTypedArray","length","prefix","cLetter","line","color","Infinity","dimensionDefaults","dimensionIn","dimensionOut","attr","dflt","dimensions","values","visible","_index","arrayIn","categoryarray","isValidArray","Array","isArray","orderDefault","order","ticktext","categoryorder","module","exports","supplyDefaults","name","handleItemDefaults","len","labelfontDflt","family","font","size","Math","round","coerceFont","categoryfontDefault"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar hasColorscale = require('../../components/colorscale/helpers').hasColorscale;\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\nvar handleDomainDefaults = require('../../plots/domain').defaults;\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\nvar mergeLength = require('../parcoords/merge_length');\n\nfunction handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce) {\n    coerce('line.shape');\n    coerce('line.hovertemplate');\n\n    var lineColor = coerce('line.color', layout.colorway[0]);\n    if(hasColorscale(traceIn, 'line') && Lib.isArrayOrTypedArray(lineColor)) {\n        if(lineColor.length) {\n            coerce('line.colorscale');\n            colorscaleDefaults(traceIn, traceOut, layout, coerce, {prefix: 'line.', cLetter: 'c'});\n            return lineColor.length;\n        } else {\n            traceOut.line.color = defaultColor;\n        }\n    }\n    return Infinity;\n}\n\nfunction dimensionDefaults(dimensionIn, dimensionOut) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(dimensionIn, dimensionOut, attributes.dimensions, attr, dflt);\n    }\n\n    var values = coerce('values');\n    var visible = coerce('visible');\n    if(!(values && values.length)) {\n        visible = dimensionOut.visible = false;\n    }\n\n    if(visible) {\n        // Dimension level\n        coerce('label');\n        coerce('displayindex', dimensionOut._index);\n\n        // Category level\n        var arrayIn = dimensionIn.categoryarray;\n        var isValidArray = (Array.isArray(arrayIn) && arrayIn.length > 0);\n\n        var orderDefault;\n        if(isValidArray) orderDefault = 'array';\n        var order = coerce('categoryorder', orderDefault);\n\n        // coerce 'categoryarray' only in array order case\n        if(order === 'array') {\n            coerce('categoryarray');\n            coerce('ticktext');\n        } else {\n            delete dimensionIn.categoryarray;\n            delete dimensionIn.ticktext;\n        }\n\n        // cannot set 'categoryorder' to 'array' with an invalid 'categoryarray'\n        if(!isValidArray && order === 'array') {\n            dimensionOut.categoryorder = 'trace';\n        }\n    }\n}\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var dimensions = handleArrayContainerDefaults(traceIn, traceOut, {\n        name: 'dimensions',\n        handleItemDefaults: dimensionDefaults\n    });\n\n    var len = handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n\n    handleDomainDefaults(traceOut, layout, coerce);\n\n    if(!Array.isArray(dimensions) || !dimensions.length) {\n        traceOut.visible = false;\n    }\n\n    mergeLength(traceOut, dimensions, 'values', len);\n\n    coerce('hoveron');\n    coerce('hovertemplate');\n    coerce('arrangement');\n    coerce('bundlecolors');\n    coerce('sortpaths');\n    coerce('counts');\n\n    var labelfontDflt = {\n        family: layout.font.family,\n        size: Math.round(layout.font.size),\n        color: layout.font.color\n    };\n\n    Lib.coerceFont(coerce, 'labelfont', labelfontDflt);\n\n    var categoryfontDefault = {\n        family: layout.font.family,\n        size: Math.round(layout.font.size / 1.2),\n        color: layout.font.color\n    };\n\n    Lib.coerceFont(coerce, 'tickfont', categoryfontDefault);\n};\n"]},"metadata":{},"sourceType":"script"}