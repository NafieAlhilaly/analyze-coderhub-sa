{"ast":null,"code":"'use strict';\n\nvar docs = require('../constants/docs');\n\nvar FORMAT_LINK = docs.FORMAT_LINK;\nvar DATE_FORMAT_LINK = docs.DATE_FORMAT_LINK;\n\nfunction templateFormatStringDescription(opts) {\n  var supportOther = opts && opts.supportOther;\n  return ['Variables are inserted using %{variable},', 'for example \"y: %{y}\"' + (supportOther ? ' as well as %{xother}, {%_xother}, {%_xother_}, {%xother_}. When showing info for several points, *xother* will be added to those with different x positions from the first point. An underscore before or after *(x|y)other* will add a space on that side, only when this field is shown.' : '.'), 'Numbers are formatted using d3-format\\'s syntax %{variable:d3-format}, for example \"Price: %{y:$.2f}\".', FORMAT_LINK, 'for details on the formatting syntax.', 'Dates are formatted using d3-time-format\\'s syntax %{variable|d3-time-format}, for example \"Day: %{2019-01-01|%A}\".', DATE_FORMAT_LINK, 'for details on the date formatting syntax.'].join(' ');\n}\n\nfunction describeVariables(extra) {\n  var descPart = extra.description ? ' ' + extra.description : '';\n  var keys = extra.keys || [];\n\n  if (keys.length > 0) {\n    var quotedKeys = [];\n\n    for (var i = 0; i < keys.length; i++) {\n      quotedKeys[i] = '`' + keys[i] + '`';\n    }\n\n    descPart = descPart + 'Finally, the template string has access to ';\n\n    if (keys.length === 1) {\n      descPart = 'variable ' + quotedKeys[0];\n    } else {\n      descPart = 'variables ' + quotedKeys.slice(0, -1).join(', ') + ' and ' + quotedKeys.slice(-1) + '.';\n    }\n  }\n\n  return descPart;\n}\n\nexports.hovertemplateAttrs = function (opts, extra) {\n  opts = opts || {};\n  extra = extra || {};\n  var descPart = describeVariables(extra);\n  var hovertemplate = {\n    valType: 'string',\n    dflt: '',\n    editType: opts.editType || 'none',\n    description: ['Template string used for rendering the information that appear on hover box.', 'Note that this will override `hoverinfo`.', templateFormatStringDescription({\n      supportOther: true\n    }), 'The variables available in `hovertemplate` are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.', 'Additionally, every attributes that can be specified per-point (the ones that are `arrayOk: true`) are available.', descPart, 'Anything contained in tag `<extra>` is displayed in the secondary box, for example \"<extra>{fullData.name}</extra>\".', 'To hide the secondary box completely, use an empty tag `<extra></extra>`.'].join(' ')\n  };\n\n  if (opts.arrayOk !== false) {\n    hovertemplate.arrayOk = true;\n  }\n\n  return hovertemplate;\n};\n\nexports.texttemplateAttrs = function (opts, extra) {\n  opts = opts || {};\n  extra = extra || {};\n  var descPart = describeVariables(extra);\n  var texttemplate = {\n    valType: 'string',\n    dflt: '',\n    editType: opts.editType || 'calc',\n    description: ['Template string used for rendering the information text that appear on points.', 'Note that this will override `textinfo`.', templateFormatStringDescription(), 'Every attributes that can be specified per-point (the ones that are `arrayOk: true`) are available.', descPart].join(' ')\n  };\n\n  if (opts.arrayOk !== false) {\n    texttemplate.arrayOk = true;\n  }\n\n  return texttemplate;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/plots/template_attributes.js"],"names":["docs","require","FORMAT_LINK","DATE_FORMAT_LINK","templateFormatStringDescription","opts","supportOther","join","describeVariables","extra","descPart","description","keys","length","quotedKeys","i","slice","exports","hovertemplateAttrs","hovertemplate","valType","dflt","editType","arrayOk","texttemplateAttrs","texttemplate"],"mappings":"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","sourcesContent":["'use strict';\n\nvar docs = require('../constants/docs');\nvar FORMAT_LINK = docs.FORMAT_LINK;\nvar DATE_FORMAT_LINK = docs.DATE_FORMAT_LINK;\n\nfunction templateFormatStringDescription(opts) {\n    var supportOther = opts && opts.supportOther;\n\n    return [\n        'Variables are inserted using %{variable},',\n        'for example \"y: %{y}\"' + (\n            supportOther ?\n                ' as well as %{xother}, {%_xother}, {%_xother_}, {%xother_}. When showing info for several points, *xother* will be added to those with different x positions from the first point. An underscore before or after *(x|y)other* will add a space on that side, only when this field is shown.' :\n                '.'\n        ),\n        'Numbers are formatted using d3-format\\'s syntax %{variable:d3-format}, for example \"Price: %{y:$.2f}\".',\n        FORMAT_LINK,\n        'for details on the formatting syntax.',\n        'Dates are formatted using d3-time-format\\'s syntax %{variable|d3-time-format}, for example \"Day: %{2019-01-01|%A}\".',\n        DATE_FORMAT_LINK,\n        'for details on the date formatting syntax.'\n    ].join(' ');\n}\n\nfunction describeVariables(extra) {\n    var descPart = extra.description ? ' ' + extra.description : '';\n    var keys = extra.keys || [];\n    if(keys.length > 0) {\n        var quotedKeys = [];\n        for(var i = 0; i < keys.length; i++) {\n            quotedKeys[i] = '`' + keys[i] + '`';\n        }\n        descPart = descPart + 'Finally, the template string has access to ';\n        if(keys.length === 1) {\n            descPart = 'variable ' + quotedKeys[0];\n        } else {\n            descPart = 'variables ' + quotedKeys.slice(0, -1).join(', ') + ' and ' + quotedKeys.slice(-1) + '.';\n        }\n    }\n    return descPart;\n}\n\nexports.hovertemplateAttrs = function(opts, extra) {\n    opts = opts || {};\n    extra = extra || {};\n\n    var descPart = describeVariables(extra);\n\n    var hovertemplate = {\n        valType: 'string',\n        dflt: '',\n        editType: opts.editType || 'none',\n        description: [\n            'Template string used for rendering the information that appear on hover box.',\n            'Note that this will override `hoverinfo`.',\n            templateFormatStringDescription({supportOther: true}),\n            'The variables available in `hovertemplate` are the ones emitted as event data described at this link https://plotly.com/javascript/plotlyjs-events/#event-data.',\n            'Additionally, every attributes that can be specified per-point (the ones that are `arrayOk: true`) are available.',\n            descPart,\n            'Anything contained in tag `<extra>` is displayed in the secondary box, for example \"<extra>{fullData.name}</extra>\".',\n            'To hide the secondary box completely, use an empty tag `<extra></extra>`.'\n        ].join(' ')\n    };\n\n    if(opts.arrayOk !== false) {\n        hovertemplate.arrayOk = true;\n    }\n\n    return hovertemplate;\n};\n\nexports.texttemplateAttrs = function(opts, extra) {\n    opts = opts || {};\n    extra = extra || {};\n\n    var descPart = describeVariables(extra);\n\n    var texttemplate = {\n        valType: 'string',\n        dflt: '',\n        editType: opts.editType || 'calc',\n        description: [\n            'Template string used for rendering the information text that appear on points.',\n            'Note that this will override `textinfo`.',\n            templateFormatStringDescription(),\n            'Every attributes that can be specified per-point (the ones that are `arrayOk: true`) are available.',\n            descPart\n        ].join(' ')\n    };\n\n    if(opts.arrayOk !== false) {\n        texttemplate.arrayOk = true;\n    }\n    return texttemplate;\n};\n"]},"metadata":{},"sourceType":"script"}