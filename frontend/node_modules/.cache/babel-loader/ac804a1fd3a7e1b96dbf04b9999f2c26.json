{"ast":null,"code":"\"use strict\";\n\nvar twoProduct = require(\"two-product\");\n\nvar robustSum = require(\"robust-sum\");\n\nvar robustScale = require(\"robust-scale\");\n\nvar robustSubtract = require(\"robust-subtract\");\n\nvar NUM_EXPAND = 5;\nvar EPSILON = 1.1102230246251565e-16;\nvar ERRBOUND3 = (3.0 + 16.0 * EPSILON) * EPSILON;\nvar ERRBOUND4 = (7.0 + 56.0 * EPSILON) * EPSILON;\n\nfunction orientation_3(sum, prod, scale, sub) {\n  return function orientation3Exact(m0, m1, m2) {\n    var p = sum(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])));\n    var n = sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0]));\n    var d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\n\nfunction orientation_4(sum, prod, scale, sub) {\n  return function orientation4Exact(m0, m1, m2, m3) {\n    var p = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))));\n    var n = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))));\n    var d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\n\nfunction orientation_5(sum, prod, scale, sub) {\n  return function orientation5Exact(m0, m1, m2, m3, m4) {\n    var p = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m1[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), -m2[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m3[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), -m4[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m1[3])))), sum(sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m3[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), -m4[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), m0[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m1[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m3[3])))));\n    var n = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m2[3])), sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), m3[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m4[3]))), sum(sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), -m1[3])), sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m4[3]))));\n    var d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\n\nfunction orientation(n) {\n  var fn = n === 3 ? orientation_3 : n === 4 ? orientation_4 : orientation_5;\n  return fn(robustSum, twoProduct, robustScale, robustSubtract);\n}\n\nvar orientation3Exact = orientation(3);\nvar orientation4Exact = orientation(4);\nvar CACHED = [function orientation0() {\n  return 0;\n}, function orientation1() {\n  return 0;\n}, function orientation2(a, b) {\n  return b[0] - a[0];\n}, function orientation3(a, b, c) {\n  var l = (a[1] - c[1]) * (b[0] - c[0]);\n  var r = (a[0] - c[0]) * (b[1] - c[1]);\n  var det = l - r;\n  var s;\n\n  if (l > 0) {\n    if (r <= 0) {\n      return det;\n    } else {\n      s = l + r;\n    }\n  } else if (l < 0) {\n    if (r >= 0) {\n      return det;\n    } else {\n      s = -(l + r);\n    }\n  } else {\n    return det;\n  }\n\n  var tol = ERRBOUND3 * s;\n\n  if (det >= tol || det <= -tol) {\n    return det;\n  }\n\n  return orientation3Exact(a, b, c);\n}, function orientation4(a, b, c, d) {\n  var adx = a[0] - d[0];\n  var bdx = b[0] - d[0];\n  var cdx = c[0] - d[0];\n  var ady = a[1] - d[1];\n  var bdy = b[1] - d[1];\n  var cdy = c[1] - d[1];\n  var adz = a[2] - d[2];\n  var bdz = b[2] - d[2];\n  var cdz = c[2] - d[2];\n  var bdxcdy = bdx * cdy;\n  var cdxbdy = cdx * bdy;\n  var cdxady = cdx * ady;\n  var adxcdy = adx * cdy;\n  var adxbdy = adx * bdy;\n  var bdxady = bdx * ady;\n  var det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);\n  var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n  var tol = ERRBOUND4 * permanent;\n\n  if (det > tol || -det > tol) {\n    return det;\n  }\n\n  return orientation4Exact(a, b, c, d);\n}];\n\nfunction slowOrient(args) {\n  var proc = CACHED[args.length];\n\n  if (!proc) {\n    proc = CACHED[args.length] = orientation(args.length);\n  }\n\n  return proc.apply(undefined, args);\n}\n\nfunction proc(slow, o0, o1, o2, o3, o4, o5) {\n  return function getOrientation(a0, a1, a2, a3, a4) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return 0;\n\n      case 2:\n        return o2(a0, a1);\n\n      case 3:\n        return o3(a0, a1, a2);\n\n      case 4:\n        return o4(a0, a1, a2, a3);\n\n      case 5:\n        return o5(a0, a1, a2, a3, a4);\n    }\n\n    var s = new Array(arguments.length);\n\n    for (var i = 0; i < arguments.length; ++i) {\n      s[i] = arguments[i];\n    }\n\n    return slow(s);\n  };\n}\n\nfunction generateOrientationProc() {\n  while (CACHED.length <= NUM_EXPAND) {\n    CACHED.push(orientation(CACHED.length));\n  }\n\n  module.exports = proc.apply(undefined, [slowOrient].concat(CACHED));\n\n  for (var i = 0; i <= NUM_EXPAND; ++i) {\n    module.exports[i] = CACHED[i];\n  }\n}\n\ngenerateOrientationProc();","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/robust-orientation/orientation.js"],"names":["twoProduct","require","robustSum","robustScale","robustSubtract","NUM_EXPAND","EPSILON","ERRBOUND3","ERRBOUND4","orientation_3","sum","prod","scale","sub","orientation3Exact","m0","m1","m2","p","n","d","length","orientation_4","orientation4Exact","m3","orientation_5","orientation5Exact","m4","orientation","fn","CACHED","orientation0","orientation1","orientation2","a","b","orientation3","c","l","r","det","s","tol","orientation4","adx","bdx","cdx","ady","bdy","cdy","adz","bdz","cdz","bdxcdy","cdxbdy","cdxady","adxcdy","adxbdy","bdxady","permanent","Math","abs","slowOrient","args","proc","apply","undefined","slow","o0","o1","o2","o3","o4","o5","getOrientation","a0","a1","a2","a3","a4","arguments","Array","i","generateOrientationProc","push","module","exports","concat"],"mappings":"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","sourcesContent":["\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar robustSum = require(\"robust-sum\")\nvar robustScale = require(\"robust-scale\")\nvar robustSubtract = require(\"robust-subtract\")\n\nvar NUM_EXPAND = 5\n\nvar EPSILON     = 1.1102230246251565e-16\nvar ERRBOUND3   = (3.0 + 16.0 * EPSILON) * EPSILON\nvar ERRBOUND4   = (7.0 + 56.0 * EPSILON) * EPSILON\n\nfunction orientation_3(sum, prod, scale, sub) {\n  return function orientation3Exact(m0, m1, m2) {\n    var p = sum(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])))\n    var n = sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0]))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation_4(sum, prod, scale, sub) {\n  return function orientation4Exact(m0, m1, m2, m3) {\n    var p = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))))\n    var n = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation_5(sum, prod, scale, sub) {\n  return function orientation5Exact(m0, m1, m2, m3, m4) {\n    var p = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m1[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), -m2[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m3[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), -m4[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m1[3])))), sum(sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m3[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), -m4[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), m0[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m1[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m3[3])))))\n    var n = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m2[3])), sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), m3[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m4[3]))), sum(sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), -m1[3])), sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m4[3]))))\n    var d = sub(p, n)\n    return d[d.length - 1]\n  }\n}\n\nfunction orientation(n) {\n  var fn =\n    n === 3 ? orientation_3 :\n    n === 4 ? orientation_4 : orientation_5\n\n  return fn(robustSum, twoProduct, robustScale, robustSubtract)\n}\n\nvar orientation3Exact = orientation(3)\nvar orientation4Exact = orientation(4)\n\nvar CACHED = [\n  function orientation0() { return 0 },\n  function orientation1() { return 0 },\n  function orientation2(a, b) {\n    return b[0] - a[0]\n  },\n  function orientation3(a, b, c) {\n    var l = (a[1] - c[1]) * (b[0] - c[0])\n    var r = (a[0] - c[0]) * (b[1] - c[1])\n    var det = l - r\n    var s\n    if(l > 0) {\n      if(r <= 0) {\n        return det\n      } else {\n        s = l + r\n      }\n    } else if(l < 0) {\n      if(r >= 0) {\n        return det\n      } else {\n        s = -(l + r)\n      }\n    } else {\n      return det\n    }\n    var tol = ERRBOUND3 * s\n    if(det >= tol || det <= -tol) {\n      return det\n    }\n    return orientation3Exact(a, b, c)\n  },\n  function orientation4(a,b,c,d) {\n    var adx = a[0] - d[0]\n    var bdx = b[0] - d[0]\n    var cdx = c[0] - d[0]\n    var ady = a[1] - d[1]\n    var bdy = b[1] - d[1]\n    var cdy = c[1] - d[1]\n    var adz = a[2] - d[2]\n    var bdz = b[2] - d[2]\n    var cdz = c[2] - d[2]\n    var bdxcdy = bdx * cdy\n    var cdxbdy = cdx * bdy\n    var cdxady = cdx * ady\n    var adxcdy = adx * cdy\n    var adxbdy = adx * bdy\n    var bdxady = bdx * ady\n    var det = adz * (bdxcdy - cdxbdy)\n            + bdz * (cdxady - adxcdy)\n            + cdz * (adxbdy - bdxady)\n    var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz)\n                  + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz)\n                  + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz)\n    var tol = ERRBOUND4 * permanent\n    if ((det > tol) || (-det > tol)) {\n      return det\n    }\n    return orientation4Exact(a,b,c,d)\n  }\n]\n\nfunction slowOrient(args) {\n  var proc = CACHED[args.length]\n  if(!proc) {\n    proc = CACHED[args.length] = orientation(args.length)\n  }\n  return proc.apply(undefined, args)\n}\n\nfunction proc (slow, o0, o1, o2, o3, o4, o5) {\n  return function getOrientation(a0, a1, a2, a3, a4) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return 0;\n      case 2:\n        return o2(a0, a1)\n      case 3:\n        return o3(a0, a1, a2)\n      case 4:\n        return o4(a0, a1, a2, a3)\n      case 5:\n        return o5(a0, a1, a2, a3, a4)\n    }\n\n    var s = new Array(arguments.length)\n    for (var i = 0; i < arguments.length; ++i) {\n      s[i] = arguments[i]\n    }\n    return slow(s)\n  }\n}\n\nfunction generateOrientationProc() {\n  while(CACHED.length <= NUM_EXPAND) {\n    CACHED.push(orientation(CACHED.length))\n  }\n  module.exports = proc.apply(undefined, [slowOrient].concat(CACHED))\n  for(var i=0; i<=NUM_EXPAND; ++i) {\n    module.exports[i] = CACHED[i]\n  }\n}\n\ngenerateOrientationProc()"]},"metadata":{},"sourceType":"script"}