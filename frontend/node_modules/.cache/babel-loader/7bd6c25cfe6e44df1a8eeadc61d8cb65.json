{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar hasColorscale = require('./helpers').hasColorscale;\n\nvar extractOpts = require('./helpers').extractOpts;\n\nmodule.exports = function crossTraceDefaults(fullData, fullLayout) {\n  function replace(cont, k) {\n    var val = cont['_' + k];\n\n    if (val !== undefined) {\n      cont[k] = val;\n    }\n  }\n\n  function relinkColorAttrs(outerCont, cbOpt) {\n    var cont = cbOpt.container ? Lib.nestedProperty(outerCont, cbOpt.container).get() : outerCont;\n\n    if (cont) {\n      if (cont.coloraxis) {\n        // stash ref to color axis\n        cont._colorAx = fullLayout[cont.coloraxis];\n      } else {\n        var cOpts = extractOpts(cont);\n        var isAuto = cOpts.auto;\n\n        if (isAuto || cOpts.min === undefined) {\n          replace(cont, cbOpt.min);\n        }\n\n        if (isAuto || cOpts.max === undefined) {\n          replace(cont, cbOpt.max);\n        }\n\n        if (cOpts.autocolorscale) {\n          replace(cont, 'colorscale');\n        }\n      }\n    }\n  }\n\n  for (var i = 0; i < fullData.length; i++) {\n    var trace = fullData[i];\n    var cbOpts = trace._module.colorbar;\n\n    if (cbOpts) {\n      if (Array.isArray(cbOpts)) {\n        for (var j = 0; j < cbOpts.length; j++) {\n          relinkColorAttrs(trace, cbOpts[j]);\n        }\n      } else {\n        relinkColorAttrs(trace, cbOpts);\n      }\n    }\n\n    if (hasColorscale(trace, 'marker.line')) {\n      relinkColorAttrs(trace, {\n        container: 'marker.line',\n        min: 'cmin',\n        max: 'cmax'\n      });\n    }\n  }\n\n  for (var k in fullLayout._colorAxes) {\n    relinkColorAttrs(fullLayout[k], {\n      min: 'cmin',\n      max: 'cmax'\n    });\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/colorscale/cross_trace_defaults.js"],"names":["Lib","require","hasColorscale","extractOpts","module","exports","crossTraceDefaults","fullData","fullLayout","replace","cont","k","val","undefined","relinkColorAttrs","outerCont","cbOpt","container","nestedProperty","get","coloraxis","_colorAx","cOpts","isAuto","auto","min","max","autocolorscale","i","length","trace","cbOpts","_module","colorbar","Array","isArray","j","_colorAxes"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar hasColorscale = require('./helpers').hasColorscale;\nvar extractOpts = require('./helpers').extractOpts;\n\nmodule.exports = function crossTraceDefaults(fullData, fullLayout) {\n    function replace(cont, k) {\n        var val = cont['_' + k];\n        if(val !== undefined) {\n            cont[k] = val;\n        }\n    }\n\n    function relinkColorAttrs(outerCont, cbOpt) {\n        var cont = cbOpt.container ?\n            Lib.nestedProperty(outerCont, cbOpt.container).get() :\n            outerCont;\n\n        if(cont) {\n            if(cont.coloraxis) {\n                // stash ref to color axis\n                cont._colorAx = fullLayout[cont.coloraxis];\n            } else {\n                var cOpts = extractOpts(cont);\n                var isAuto = cOpts.auto;\n\n                if(isAuto || cOpts.min === undefined) {\n                    replace(cont, cbOpt.min);\n                }\n                if(isAuto || cOpts.max === undefined) {\n                    replace(cont, cbOpt.max);\n                }\n                if(cOpts.autocolorscale) {\n                    replace(cont, 'colorscale');\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n        var cbOpts = trace._module.colorbar;\n\n        if(cbOpts) {\n            if(Array.isArray(cbOpts)) {\n                for(var j = 0; j < cbOpts.length; j++) {\n                    relinkColorAttrs(trace, cbOpts[j]);\n                }\n            } else {\n                relinkColorAttrs(trace, cbOpts);\n            }\n        }\n\n        if(hasColorscale(trace, 'marker.line')) {\n            relinkColorAttrs(trace, {\n                container: 'marker.line',\n                min: 'cmin',\n                max: 'cmax'\n            });\n        }\n    }\n\n    for(var k in fullLayout._colorAxes) {\n        relinkColorAttrs(fullLayout[k], {min: 'cmin', max: 'cmax'});\n    }\n};\n"]},"metadata":{},"sourceType":"script"}