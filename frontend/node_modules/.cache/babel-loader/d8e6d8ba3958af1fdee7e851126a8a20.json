{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Color = require('../color');\n\nvar Template = require('../../plot_api/plot_template');\n\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\n\nvar constants = require('./constants');\n\nmodule.exports = function handleDefaults(containerIn, containerOut, layout, counterAxes, calendar) {\n  var selectorIn = containerIn.rangeselector || {};\n  var selectorOut = Template.newContainer(containerOut, 'rangeselector');\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(selectorIn, selectorOut, attributes, attr, dflt);\n  }\n\n  var buttons = handleArrayContainerDefaults(selectorIn, selectorOut, {\n    name: 'buttons',\n    handleItemDefaults: buttonDefaults,\n    calendar: calendar\n  });\n  var visible = coerce('visible', buttons.length > 0);\n\n  if (visible) {\n    var posDflt = getPosDflt(containerOut, layout, counterAxes);\n    coerce('x', posDflt[0]);\n    coerce('y', posDflt[1]);\n    Lib.noneOrAll(containerIn, containerOut, ['x', 'y']);\n    coerce('xanchor');\n    coerce('yanchor');\n    Lib.coerceFont(coerce, 'font', layout.font);\n    var bgColor = coerce('bgcolor');\n    coerce('activecolor', Color.contrast(bgColor, constants.lightAmount, constants.darkAmount));\n    coerce('bordercolor');\n    coerce('borderwidth');\n  }\n};\n\nfunction buttonDefaults(buttonIn, buttonOut, selectorOut, opts) {\n  var calendar = opts.calendar;\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(buttonIn, buttonOut, attributes.buttons, attr, dflt);\n  }\n\n  var visible = coerce('visible');\n\n  if (visible) {\n    var step = coerce('step');\n\n    if (step !== 'all') {\n      if (calendar && calendar !== 'gregorian' && (step === 'month' || step === 'year')) {\n        buttonOut.stepmode = 'backward';\n      } else {\n        coerce('stepmode');\n      }\n\n      coerce('count');\n    }\n\n    coerce('label');\n  }\n}\n\nfunction getPosDflt(containerOut, layout, counterAxes) {\n  var anchoredList = counterAxes.filter(function (ax) {\n    return layout[ax].anchor === containerOut._id;\n  });\n  var posY = 0;\n\n  for (var i = 0; i < anchoredList.length; i++) {\n    var domain = layout[anchoredList[i]].domain;\n    if (domain) posY = Math.max(domain[1], posY);\n  }\n\n  return [containerOut.domain[0], posY + constants.yPad];\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/rangeselector/defaults.js"],"names":["Lib","require","Color","Template","handleArrayContainerDefaults","attributes","constants","module","exports","handleDefaults","containerIn","containerOut","layout","counterAxes","calendar","selectorIn","rangeselector","selectorOut","newContainer","coerce","attr","dflt","buttons","name","handleItemDefaults","buttonDefaults","visible","length","posDflt","getPosDflt","noneOrAll","coerceFont","font","bgColor","contrast","lightAmount","darkAmount","buttonIn","buttonOut","opts","step","stepmode","anchoredList","filter","ax","anchor","_id","posY","i","domain","Math","max","yPad"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../color');\nvar Template = require('../../plot_api/plot_template');\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\nvar constants = require('./constants');\n\n\nmodule.exports = function handleDefaults(containerIn, containerOut, layout, counterAxes, calendar) {\n    var selectorIn = containerIn.rangeselector || {};\n    var selectorOut = Template.newContainer(containerOut, 'rangeselector');\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(selectorIn, selectorOut, attributes, attr, dflt);\n    }\n\n    var buttons = handleArrayContainerDefaults(selectorIn, selectorOut, {\n        name: 'buttons',\n        handleItemDefaults: buttonDefaults,\n        calendar: calendar\n    });\n\n    var visible = coerce('visible', buttons.length > 0);\n    if(visible) {\n        var posDflt = getPosDflt(containerOut, layout, counterAxes);\n        coerce('x', posDflt[0]);\n        coerce('y', posDflt[1]);\n        Lib.noneOrAll(containerIn, containerOut, ['x', 'y']);\n\n        coerce('xanchor');\n        coerce('yanchor');\n\n        Lib.coerceFont(coerce, 'font', layout.font);\n\n        var bgColor = coerce('bgcolor');\n        coerce('activecolor', Color.contrast(bgColor, constants.lightAmount, constants.darkAmount));\n        coerce('bordercolor');\n        coerce('borderwidth');\n    }\n};\n\nfunction buttonDefaults(buttonIn, buttonOut, selectorOut, opts) {\n    var calendar = opts.calendar;\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(buttonIn, buttonOut, attributes.buttons, attr, dflt);\n    }\n\n    var visible = coerce('visible');\n\n    if(visible) {\n        var step = coerce('step');\n        if(step !== 'all') {\n            if(calendar && calendar !== 'gregorian' && (step === 'month' || step === 'year')) {\n                buttonOut.stepmode = 'backward';\n            } else {\n                coerce('stepmode');\n            }\n\n            coerce('count');\n        }\n\n        coerce('label');\n    }\n}\n\nfunction getPosDflt(containerOut, layout, counterAxes) {\n    var anchoredList = counterAxes.filter(function(ax) {\n        return layout[ax].anchor === containerOut._id;\n    });\n\n    var posY = 0;\n    for(var i = 0; i < anchoredList.length; i++) {\n        var domain = layout[anchoredList[i]].domain;\n        if(domain) posY = Math.max(domain[1], posY);\n    }\n\n    return [containerOut.domain[0], posY + constants.yPad];\n}\n"]},"metadata":{},"sourceType":"script"}