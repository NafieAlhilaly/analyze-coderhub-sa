{"ast":null,"code":"\"use strict\";\n\nfunction CWiseOp() {\n  return function (SS, a0, t0, p0, Y0, Y1) {\n    var s0 = SS[0],\n        t0p0 = t0[0],\n        index = [0],\n        q0 = t0p0;\n    p0 |= 0;\n    var i0 = 0,\n        d0s0 = t0p0;\n\n    for (i0 = 0; i0 < s0; ++i0) {\n      {\n        var da = a0[p0] - Y1;\n        var db = a0[p0 + q0] - Y1;\n\n        if (da >= 0 !== db >= 0) {\n          Y0.push(index[0] + 0.5 + 0.5 * (da + db) / (da - db));\n        }\n      }\n      p0 += d0s0;\n      ++index[0];\n    }\n  };\n} //Generates a cwise operator\n\n\nfunction generateCWiseOp() {\n  return CWiseOp();\n}\n\nvar compile = generateCWiseOp;\n\nfunction thunk(compile) {\n  var CACHED = {};\n  return function zeroCrossings_cwise_thunk(array0, scalar2, scalar3) {\n    var t0 = array0.dtype,\n        r0 = array0.order,\n        type = [t0, r0.join()].join(),\n        proc = CACHED[type];\n\n    if (!proc) {\n      CACHED[type] = proc = compile([t0, r0]);\n    }\n\n    return proc(array0.shape.slice(0), array0.data, array0.stride, array0.offset | 0, scalar2, scalar3);\n  };\n}\n\nfunction createThunk(proc) {\n  return thunk(compile.bind(undefined, proc));\n}\n\nfunction compileCwise(user_args) {\n  return createThunk({\n    funcName: user_args.funcName\n  });\n}\n\nmodule.exports = compileCwise({\n  funcName: 'zeroCrossings'\n});","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/zero-crossings/lib/zc-core.js"],"names":["CWiseOp","SS","a0","t0","p0","Y0","Y1","s0","t0p0","index","q0","i0","d0s0","da","db","push","generateCWiseOp","compile","thunk","CACHED","zeroCrossings_cwise_thunk","array0","scalar2","scalar3","dtype","r0","order","type","join","proc","shape","slice","data","stride","offset","createThunk","bind","undefined","compileCwise","user_args","funcName","module","exports"],"mappings":"AAAA;;AAEA,SAASA,OAAT,GAAmB;AACjB,SAAO,UAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiC;AACtC,QAAIC,EAAE,GAAGN,EAAE,CAAC,CAAD,CAAX;AAAA,QACEO,IAAI,GAAGL,EAAE,CAAC,CAAD,CADX;AAAA,QAEEM,KAAK,GAAG,CAAC,CAAD,CAFV;AAAA,QAGEC,EAAE,GAAGF,IAHP;AAIAJ,IAAAA,EAAE,IAAI,CAAN;AACA,QAAIO,EAAE,GAAG,CAAT;AAAA,QACEC,IAAI,GAAGJ,IADT;;AAEA,SAAKG,EAAE,GAAG,CAAV,EAAaA,EAAE,GAAGJ,EAAlB,EAAsB,EAAEI,EAAxB,EAA4B;AAC1B;AACE,YAAIE,EAAE,GAAGX,EAAE,CAACE,EAAD,CAAF,GAASE,EAAlB;AACA,YAAIQ,EAAE,GAAGZ,EAAE,CAACE,EAAE,GAAGM,EAAN,CAAF,GAAcJ,EAAvB;;AACA,YAAIO,EAAE,IAAI,CAAN,KAAYC,EAAE,IAAI,CAAtB,EAAyB;AACvBT,UAAAA,EAAE,CAACU,IAAH,CAAQN,KAAK,CAAC,CAAD,CAAL,GAAW,GAAX,GAAkB,OAAOI,EAAE,GAAGC,EAAZ,CAAD,IAAqBD,EAAE,GAAGC,EAA1B,CAAzB;AACD;AACF;AACDV,MAAAA,EAAE,IAAIQ,IAAN;AACA,QAAEH,KAAK,CAAC,CAAD,CAAP;AACD;AACF,GAnBD;AAoBD,C,CAED;;;AACA,SAASO,eAAT,GAA2B;AACzB,SAAOhB,OAAO,EAAd;AACD;;AAED,IAAIiB,OAAO,GAAGD,eAAd;;AAEA,SAASE,KAAT,CAAeD,OAAf,EAAwB;AACtB,MAAIE,MAAM,GAAG,EAAb;AACA,SAAO,SAASC,yBAAT,CAAmCC,MAAnC,EAA2CC,OAA3C,EAAoDC,OAApD,EAA6D;AAClE,QAAIpB,EAAE,GAAGkB,MAAM,CAACG,KAAhB;AAAA,QACEC,EAAE,GAAGJ,MAAM,CAACK,KADd;AAAA,QAEEC,IAAI,GAAG,CAACxB,EAAD,EAAKsB,EAAE,CAACG,IAAH,EAAL,EAAgBA,IAAhB,EAFT;AAAA,QAGEC,IAAI,GAAGV,MAAM,CAACQ,IAAD,CAHf;;AAKA,QAAI,CAACE,IAAL,EAAW;AACTV,MAAAA,MAAM,CAACQ,IAAD,CAAN,GAAeE,IAAI,GAAGZ,OAAO,CAAC,CAACd,EAAD,EAAKsB,EAAL,CAAD,CAA7B;AACD;;AAED,WAAOI,IAAI,CAACR,MAAM,CAACS,KAAP,CAAaC,KAAb,CAAmB,CAAnB,CAAD,EAAwBV,MAAM,CAACW,IAA/B,EAAqCX,MAAM,CAACY,MAA5C,EAAoDZ,MAAM,CAACa,MAAP,GAAgB,CAApE,EAAuEZ,OAAvE,EAAgFC,OAAhF,CAAX;AACD,GAXD;AAYD;;AAED,SAASY,WAAT,CAAqBN,IAArB,EAA2B;AACzB,SAAOX,KAAK,CAACD,OAAO,CAACmB,IAAR,CAAaC,SAAb,EAAwBR,IAAxB,CAAD,CAAZ;AACD;;AAED,SAASS,YAAT,CAAsBC,SAAtB,EAAiC;AAC/B,SAAOJ,WAAW,CAAC;AACjBK,IAAAA,QAAQ,EAAED,SAAS,CAACC;AADH,GAAD,CAAlB;AAGD;;AAEDC,MAAM,CAACC,OAAP,GAAiBJ,YAAY,CAAC;AAC1BE,EAAAA,QAAQ,EAAE;AADgB,CAAD,CAA7B","sourcesContent":["\"use strict\"\r\n\r\nfunction CWiseOp() {\r\n  return function(SS, a0, t0, p0, Y0, Y1) {\r\n    var s0 = SS[0],\r\n      t0p0 = t0[0],\r\n      index = [0],\r\n      q0 = t0p0\r\n    p0 |= 0\r\n    var i0 = 0,\r\n      d0s0 = t0p0\r\n    for (i0 = 0; i0 < s0; ++i0) {\r\n      {\r\n        var da = a0[p0] - Y1\r\n        var db = a0[p0 + q0] - Y1\r\n        if (da >= 0 !== db >= 0) {\r\n          Y0.push(index[0] + 0.5 + (0.5 * (da + db)) / (da - db))\r\n        }\r\n      }\r\n      p0 += d0s0\r\n      ++index[0]\r\n    }\r\n  }\r\n}\r\n\r\n//Generates a cwise operator\r\nfunction generateCWiseOp() {\r\n  return CWiseOp()\r\n}\r\n\r\nvar compile = generateCWiseOp\r\n\r\nfunction thunk(compile) {\r\n  var CACHED = {}\r\n  return function zeroCrossings_cwise_thunk(array0, scalar2, scalar3) {\r\n    var t0 = array0.dtype,\r\n      r0 = array0.order,\r\n      type = [t0, r0.join()].join(),\r\n      proc = CACHED[type]\r\n\r\n    if (!proc) {\r\n      CACHED[type] = proc = compile([t0, r0])\r\n    }\r\n\r\n    return proc(array0.shape.slice(0), array0.data, array0.stride, array0.offset | 0, scalar2, scalar3)\r\n  }\r\n}\r\n\r\nfunction createThunk(proc) {\r\n  return thunk(compile.bind(undefined, proc))\r\n}\r\n\r\nfunction compileCwise(user_args) {\r\n  return createThunk({\r\n    funcName: user_args.funcName\r\n  })\r\n}\r\n\r\nmodule.exports = compileCwise({\r\n    funcName: 'zeroCrossings'\r\n})\r\n"]},"metadata":{},"sourceType":"script"}