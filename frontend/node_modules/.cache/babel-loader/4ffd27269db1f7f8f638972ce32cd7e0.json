{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar subTypes = require('../scatter/subtypes');\n\nvar handleRThetaDefaults = require('../scatterpolar/defaults').handleRThetaDefaults;\n\nvar handleMarkerDefaults = require('../scatter/marker_defaults');\n\nvar handleLineDefaults = require('../scatter/line_defaults');\n\nvar handleTextDefaults = require('../scatter/text_defaults');\n\nvar handleFillColorDefaults = require('../scatter/fillcolor_defaults');\n\nvar PTS_LINESONLY = require('../scatter/constants').PTS_LINESONLY;\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var len = handleRThetaDefaults(traceIn, traceOut, layout, coerce);\n\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  }\n\n  coerce('thetaunit');\n  coerce('mode', len < PTS_LINESONLY ? 'lines+markers' : 'lines');\n  coerce('text');\n  coerce('hovertext');\n  if (traceOut.hoveron !== 'fills') coerce('hovertemplate');\n\n  if (subTypes.hasLines(traceOut)) {\n    handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n    coerce('connectgaps');\n  }\n\n  if (subTypes.hasMarkers(traceOut)) {\n    handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n  }\n\n  if (subTypes.hasText(traceOut)) {\n    coerce('texttemplate');\n    handleTextDefaults(traceIn, traceOut, layout, coerce);\n  }\n\n  coerce('fill');\n\n  if (traceOut.fill !== 'none') {\n    handleFillColorDefaults(traceIn, traceOut, defaultColor, coerce);\n  }\n\n  Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/scatterpolargl/defaults.js"],"names":["Lib","require","subTypes","handleRThetaDefaults","handleMarkerDefaults","handleLineDefaults","handleTextDefaults","handleFillColorDefaults","PTS_LINESONLY","attributes","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","layout","coerce","attr","dflt","len","visible","hoveron","hasLines","hasMarkers","hasText","fill","coerceSelectionMarkerOpacity"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAtB;;AACA,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,0BAAD,CAAP,CAAoCE,oBAA/D;;AACA,IAAIC,oBAAoB,GAAGH,OAAO,CAAC,4BAAD,CAAlC;;AACA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,0BAAD,CAAhC;;AACA,IAAIK,kBAAkB,GAAGL,OAAO,CAAC,0BAAD,CAAhC;;AACA,IAAIM,uBAAuB,GAAGN,OAAO,CAAC,+BAAD,CAArC;;AACA,IAAIO,aAAa,GAAGP,OAAO,CAAC,sBAAD,CAAP,CAAgCO,aAApD;;AAEA,IAAIC,UAAU,GAAGR,OAAO,CAAC,cAAD,CAAxB;;AAEAS,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyDC,MAAzD,EAAiE;AAC9E,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACxB,WAAOnB,GAAG,CAACiB,MAAJ,CAAWJ,OAAX,EAAoBC,QAApB,EAA8BL,UAA9B,EAA0CS,IAA1C,EAAgDC,IAAhD,CAAP;AACH;;AAED,MAAIC,GAAG,GAAGjB,oBAAoB,CAACU,OAAD,EAAUC,QAAV,EAAoBE,MAApB,EAA4BC,MAA5B,CAA9B;;AACA,MAAG,CAACG,GAAJ,EAAS;AACLN,IAAAA,QAAQ,CAACO,OAAT,GAAmB,KAAnB;AACA;AACH;;AAEDJ,EAAAA,MAAM,CAAC,WAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,MAAD,EAASG,GAAG,GAAGZ,aAAN,GAAsB,eAAtB,GAAwC,OAAjD,CAAN;AACAS,EAAAA,MAAM,CAAC,MAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,WAAD,CAAN;AACA,MAAGH,QAAQ,CAACQ,OAAT,KAAqB,OAAxB,EAAiCL,MAAM,CAAC,eAAD,CAAN;;AAEjC,MAAGf,QAAQ,CAACqB,QAAT,CAAkBT,QAAlB,CAAH,EAAgC;AAC5BT,IAAAA,kBAAkB,CAACQ,OAAD,EAAUC,QAAV,EAAoBC,YAApB,EAAkCC,MAAlC,EAA0CC,MAA1C,CAAlB;AACAA,IAAAA,MAAM,CAAC,aAAD,CAAN;AACH;;AAED,MAAGf,QAAQ,CAACsB,UAAT,CAAoBV,QAApB,CAAH,EAAkC;AAC9BV,IAAAA,oBAAoB,CAACS,OAAD,EAAUC,QAAV,EAAoBC,YAApB,EAAkCC,MAAlC,EAA0CC,MAA1C,CAApB;AACH;;AAED,MAAGf,QAAQ,CAACuB,OAAT,CAAiBX,QAAjB,CAAH,EAA+B;AAC3BG,IAAAA,MAAM,CAAC,cAAD,CAAN;AACAX,IAAAA,kBAAkB,CAACO,OAAD,EAAUC,QAAV,EAAoBE,MAApB,EAA4BC,MAA5B,CAAlB;AACH;;AAEDA,EAAAA,MAAM,CAAC,MAAD,CAAN;;AACA,MAAGH,QAAQ,CAACY,IAAT,KAAkB,MAArB,EAA6B;AACzBnB,IAAAA,uBAAuB,CAACM,OAAD,EAAUC,QAAV,EAAoBC,YAApB,EAAkCE,MAAlC,CAAvB;AACH;;AAEDjB,EAAAA,GAAG,CAAC2B,4BAAJ,CAAiCb,QAAjC,EAA2CG,MAA3C;AACH,CArCD","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\n\nvar subTypes = require('../scatter/subtypes');\nvar handleRThetaDefaults = require('../scatterpolar/defaults').handleRThetaDefaults;\nvar handleMarkerDefaults = require('../scatter/marker_defaults');\nvar handleLineDefaults = require('../scatter/line_defaults');\nvar handleTextDefaults = require('../scatter/text_defaults');\nvar handleFillColorDefaults = require('../scatter/fillcolor_defaults');\nvar PTS_LINESONLY = require('../scatter/constants').PTS_LINESONLY;\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var len = handleRThetaDefaults(traceIn, traceOut, layout, coerce);\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    coerce('thetaunit');\n    coerce('mode', len < PTS_LINESONLY ? 'lines+markers' : 'lines');\n    coerce('text');\n    coerce('hovertext');\n    if(traceOut.hoveron !== 'fills') coerce('hovertemplate');\n\n    if(subTypes.hasLines(traceOut)) {\n        handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n        coerce('connectgaps');\n    }\n\n    if(subTypes.hasMarkers(traceOut)) {\n        handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n    }\n\n    if(subTypes.hasText(traceOut)) {\n        coerce('texttemplate');\n        handleTextDefaults(traceIn, traceOut, layout, coerce);\n    }\n\n    coerce('fill');\n    if(traceOut.fill !== 'none') {\n        handleFillColorDefaults(traceIn, traceOut, defaultColor, coerce);\n    }\n\n    Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};\n"]},"metadata":{},"sourceType":"script"}