{"ast":null,"code":"\"use strict\";\n\nvar d = require(\"d\"),\n    NativeSymbol = require(\"ext/global-this\").Symbol;\n\nmodule.exports = function (SymbolPolyfill) {\n  return Object.defineProperties(SymbolPolyfill, {\n    // To ensure proper interoperability with other native functions (e.g. Array.from)\n    // fallback to eventual native implementation of given symbol\n    hasInstance: d(\"\", NativeSymbol && NativeSymbol.hasInstance || SymbolPolyfill(\"hasInstance\")),\n    isConcatSpreadable: d(\"\", NativeSymbol && NativeSymbol.isConcatSpreadable || SymbolPolyfill(\"isConcatSpreadable\")),\n    iterator: d(\"\", NativeSymbol && NativeSymbol.iterator || SymbolPolyfill(\"iterator\")),\n    match: d(\"\", NativeSymbol && NativeSymbol.match || SymbolPolyfill(\"match\")),\n    replace: d(\"\", NativeSymbol && NativeSymbol.replace || SymbolPolyfill(\"replace\")),\n    search: d(\"\", NativeSymbol && NativeSymbol.search || SymbolPolyfill(\"search\")),\n    species: d(\"\", NativeSymbol && NativeSymbol.species || SymbolPolyfill(\"species\")),\n    split: d(\"\", NativeSymbol && NativeSymbol.split || SymbolPolyfill(\"split\")),\n    toPrimitive: d(\"\", NativeSymbol && NativeSymbol.toPrimitive || SymbolPolyfill(\"toPrimitive\")),\n    toStringTag: d(\"\", NativeSymbol && NativeSymbol.toStringTag || SymbolPolyfill(\"toStringTag\")),\n    unscopables: d(\"\", NativeSymbol && NativeSymbol.unscopables || SymbolPolyfill(\"unscopables\"))\n  });\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/es6-symbol/lib/private/setup/standard-symbols.js"],"names":["d","require","NativeSymbol","Symbol","module","exports","SymbolPolyfill","Object","defineProperties","hasInstance","isConcatSpreadable","iterator","match","replace","search","species","split","toPrimitive","toStringTag","unscopables"],"mappings":"AAAA;;AAEA,IAAIA,CAAC,GAAcC,OAAO,CAAC,GAAD,CAA1B;AAAA,IACIC,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BE,MAD9C;;AAGAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,cAAV,EAA0B;AAC1C,SAAOC,MAAM,CAACC,gBAAP,CAAwBF,cAAxB,EAAwC;AAC9C;AACA;AACAG,IAAAA,WAAW,EAAET,CAAC,CACb,EADa,EACRE,YAAY,IAAIA,YAAY,CAACO,WAA9B,IAA8CH,cAAc,CAAC,aAAD,CADnD,CAHgC;AAM9CI,IAAAA,kBAAkB,EAAEV,CAAC,CACpB,EADoB,EAEnBE,YAAY,IAAIA,YAAY,CAACQ,kBAA9B,IACCJ,cAAc,CAAC,oBAAD,CAHK,CANyB;AAW9CK,IAAAA,QAAQ,EAAEX,CAAC,CAAC,EAAD,EAAME,YAAY,IAAIA,YAAY,CAACS,QAA9B,IAA2CL,cAAc,CAAC,UAAD,CAA9D,CAXmC;AAY9CM,IAAAA,KAAK,EAAEZ,CAAC,CAAC,EAAD,EAAME,YAAY,IAAIA,YAAY,CAACU,KAA9B,IAAwCN,cAAc,CAAC,OAAD,CAA3D,CAZsC;AAa9CO,IAAAA,OAAO,EAAEb,CAAC,CAAC,EAAD,EAAME,YAAY,IAAIA,YAAY,CAACW,OAA9B,IAA0CP,cAAc,CAAC,SAAD,CAA7D,CAboC;AAc9CQ,IAAAA,MAAM,EAAEd,CAAC,CAAC,EAAD,EAAME,YAAY,IAAIA,YAAY,CAACY,MAA9B,IAAyCR,cAAc,CAAC,QAAD,CAA5D,CAdqC;AAe9CS,IAAAA,OAAO,EAAEf,CAAC,CAAC,EAAD,EAAME,YAAY,IAAIA,YAAY,CAACa,OAA9B,IAA0CT,cAAc,CAAC,SAAD,CAA7D,CAfoC;AAgB9CU,IAAAA,KAAK,EAAEhB,CAAC,CAAC,EAAD,EAAME,YAAY,IAAIA,YAAY,CAACc,KAA9B,IAAwCV,cAAc,CAAC,OAAD,CAA3D,CAhBsC;AAiB9CW,IAAAA,WAAW,EAAEjB,CAAC,CACb,EADa,EACRE,YAAY,IAAIA,YAAY,CAACe,WAA9B,IAA8CX,cAAc,CAAC,aAAD,CADnD,CAjBgC;AAoB9CY,IAAAA,WAAW,EAAElB,CAAC,CACb,EADa,EACRE,YAAY,IAAIA,YAAY,CAACgB,WAA9B,IAA8CZ,cAAc,CAAC,aAAD,CADnD,CApBgC;AAuB9Ca,IAAAA,WAAW,EAAEnB,CAAC,CACb,EADa,EACRE,YAAY,IAAIA,YAAY,CAACiB,WAA9B,IAA8Cb,cAAc,CAAC,aAAD,CADnD;AAvBgC,GAAxC,CAAP;AA2BA,CA5BD","sourcesContent":["\"use strict\";\n\nvar d            = require(\"d\")\n  , NativeSymbol = require(\"ext/global-this\").Symbol;\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t\t// fallback to eventual native implementation of given symbol\n\t\thasInstance: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill(\"hasInstance\")\n\t\t),\n\t\tisConcatSpreadable: d(\n\t\t\t\"\",\n\t\t\t(NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\t\t\tSymbolPolyfill(\"isConcatSpreadable\")\n\t\t),\n\t\titerator: d(\"\", (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill(\"iterator\")),\n\t\tmatch: d(\"\", (NativeSymbol && NativeSymbol.match) || SymbolPolyfill(\"match\")),\n\t\treplace: d(\"\", (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill(\"replace\")),\n\t\tsearch: d(\"\", (NativeSymbol && NativeSymbol.search) || SymbolPolyfill(\"search\")),\n\t\tspecies: d(\"\", (NativeSymbol && NativeSymbol.species) || SymbolPolyfill(\"species\")),\n\t\tsplit: d(\"\", (NativeSymbol && NativeSymbol.split) || SymbolPolyfill(\"split\")),\n\t\ttoPrimitive: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill(\"toPrimitive\")\n\t\t),\n\t\ttoStringTag: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill(\"toStringTag\")\n\t\t),\n\t\tunscopables: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill(\"unscopables\")\n\t\t)\n\t});\n};\n"]},"metadata":{},"sourceType":"script"}