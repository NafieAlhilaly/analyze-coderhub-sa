{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Registry = require('../../registry');\n\nvar helpers = require('./helpers');\n\nvar attributes = require('./attributes');\n\nvar constants = require('../scatter/constants');\n\nvar subTypes = require('../scatter/subtypes');\n\nvar handleXYDefaults = require('../scatter/xy_defaults');\n\nvar handlePeriodDefaults = require('../scatter/period_defaults');\n\nvar handleMarkerDefaults = require('../scatter/marker_defaults');\n\nvar handleLineDefaults = require('../scatter/line_defaults');\n\nvar handleFillColorDefaults = require('../scatter/fillcolor_defaults');\n\nvar handleTextDefaults = require('../scatter/text_defaults');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var isOpen = traceIn.marker ? helpers.isOpenSymbol(traceIn.marker.symbol) : false;\n  var isBubble = subTypes.isBubble(traceIn);\n  var len = handleXYDefaults(traceIn, traceOut, layout, coerce);\n\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  }\n\n  handlePeriodDefaults(traceIn, traceOut, layout, coerce);\n  coerce('xhoverformat');\n  coerce('yhoverformat');\n  var defaultMode = len < constants.PTS_LINESONLY ? 'lines+markers' : 'lines';\n  coerce('text');\n  coerce('hovertext');\n  coerce('hovertemplate');\n  coerce('mode', defaultMode);\n\n  if (subTypes.hasLines(traceOut)) {\n    coerce('connectgaps');\n    handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n    coerce('line.shape');\n  }\n\n  if (subTypes.hasMarkers(traceOut)) {\n    handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n    coerce('marker.line.width', isOpen || isBubble ? 1 : 0);\n  }\n\n  if (subTypes.hasText(traceOut)) {\n    coerce('texttemplate');\n    handleTextDefaults(traceIn, traceOut, layout, coerce);\n  }\n\n  var lineColor = (traceOut.line || {}).color;\n  var markerColor = (traceOut.marker || {}).color;\n  coerce('fill');\n\n  if (traceOut.fill !== 'none') {\n    handleFillColorDefaults(traceIn, traceOut, defaultColor, coerce);\n  }\n\n  var errorBarsSupplyDefaults = Registry.getComponentMethod('errorbars', 'supplyDefaults');\n  errorBarsSupplyDefaults(traceIn, traceOut, lineColor || markerColor || defaultColor, {\n    axis: 'y'\n  });\n  errorBarsSupplyDefaults(traceIn, traceOut, lineColor || markerColor || defaultColor, {\n    axis: 'x',\n    inherit: 'y'\n  });\n  Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/scattergl/defaults.js"],"names":["Lib","require","Registry","helpers","attributes","constants","subTypes","handleXYDefaults","handlePeriodDefaults","handleMarkerDefaults","handleLineDefaults","handleFillColorDefaults","handleTextDefaults","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","layout","coerce","attr","dflt","isOpen","marker","isOpenSymbol","symbol","isBubble","len","visible","defaultMode","PTS_LINESONLY","hasLines","hasMarkers","hasText","lineColor","line","color","markerColor","fill","errorBarsSupplyDefaults","getComponentMethod","axis","inherit","coerceSelectionMarkerOpacity"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AAEA,IAAIE,OAAO,GAAGF,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,sBAAD,CAAvB;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,qBAAD,CAAtB;;AACA,IAAIM,gBAAgB,GAAGN,OAAO,CAAC,wBAAD,CAA9B;;AACA,IAAIO,oBAAoB,GAAGP,OAAO,CAAC,4BAAD,CAAlC;;AACA,IAAIQ,oBAAoB,GAAGR,OAAO,CAAC,4BAAD,CAAlC;;AACA,IAAIS,kBAAkB,GAAGT,OAAO,CAAC,0BAAD,CAAhC;;AACA,IAAIU,uBAAuB,GAAGV,OAAO,CAAC,+BAAD,CAArC;;AACA,IAAIW,kBAAkB,GAAGX,OAAO,CAAC,0BAAD,CAAhC;;AAEAY,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyDC,MAAzD,EAAiE;AAC9E,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACxB,WAAOtB,GAAG,CAACoB,MAAJ,CAAWJ,OAAX,EAAoBC,QAApB,EAA8Bb,UAA9B,EAA0CiB,IAA1C,EAAgDC,IAAhD,CAAP;AACH;;AAED,MAAIC,MAAM,GAAGP,OAAO,CAACQ,MAAR,GAAiBrB,OAAO,CAACsB,YAAR,CAAqBT,OAAO,CAACQ,MAAR,CAAeE,MAApC,CAAjB,GAA+D,KAA5E;AACA,MAAIC,QAAQ,GAAGrB,QAAQ,CAACqB,QAAT,CAAkBX,OAAlB,CAAf;AAEA,MAAIY,GAAG,GAAGrB,gBAAgB,CAACS,OAAD,EAAUC,QAAV,EAAoBE,MAApB,EAA4BC,MAA5B,CAA1B;;AACA,MAAG,CAACQ,GAAJ,EAAS;AACLX,IAAAA,QAAQ,CAACY,OAAT,GAAmB,KAAnB;AACA;AACH;;AAEDrB,EAAAA,oBAAoB,CAACQ,OAAD,EAAUC,QAAV,EAAoBE,MAApB,EAA4BC,MAA5B,CAApB;AACAA,EAAAA,MAAM,CAAC,cAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,cAAD,CAAN;AAEA,MAAIU,WAAW,GAAGF,GAAG,GAAGvB,SAAS,CAAC0B,aAAhB,GAAgC,eAAhC,GAAkD,OAApE;AAEAX,EAAAA,MAAM,CAAC,MAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,WAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,eAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,MAAD,EAASU,WAAT,CAAN;;AAEA,MAAGxB,QAAQ,CAAC0B,QAAT,CAAkBf,QAAlB,CAAH,EAAgC;AAC5BG,IAAAA,MAAM,CAAC,aAAD,CAAN;AACAV,IAAAA,kBAAkB,CAACM,OAAD,EAAUC,QAAV,EAAoBC,YAApB,EAAkCC,MAAlC,EAA0CC,MAA1C,CAAlB;AACAA,IAAAA,MAAM,CAAC,YAAD,CAAN;AACH;;AAED,MAAGd,QAAQ,CAAC2B,UAAT,CAAoBhB,QAApB,CAAH,EAAkC;AAC9BR,IAAAA,oBAAoB,CAACO,OAAD,EAAUC,QAAV,EAAoBC,YAApB,EAAkCC,MAAlC,EAA0CC,MAA1C,CAApB;AACAA,IAAAA,MAAM,CAAC,mBAAD,EAAsBG,MAAM,IAAII,QAAV,GAAqB,CAArB,GAAyB,CAA/C,CAAN;AACH;;AAED,MAAGrB,QAAQ,CAAC4B,OAAT,CAAiBjB,QAAjB,CAAH,EAA+B;AAC3BG,IAAAA,MAAM,CAAC,cAAD,CAAN;AACAR,IAAAA,kBAAkB,CAACI,OAAD,EAAUC,QAAV,EAAoBE,MAApB,EAA4BC,MAA5B,CAAlB;AACH;;AAED,MAAIe,SAAS,GAAG,CAAClB,QAAQ,CAACmB,IAAT,IAAiB,EAAlB,EAAsBC,KAAtC;AACA,MAAIC,WAAW,GAAG,CAACrB,QAAQ,CAACO,MAAT,IAAmB,EAApB,EAAwBa,KAA1C;AAEAjB,EAAAA,MAAM,CAAC,MAAD,CAAN;;AACA,MAAGH,QAAQ,CAACsB,IAAT,KAAkB,MAArB,EAA6B;AACzB5B,IAAAA,uBAAuB,CAACK,OAAD,EAAUC,QAAV,EAAoBC,YAApB,EAAkCE,MAAlC,CAAvB;AACH;;AAED,MAAIoB,uBAAuB,GAAGtC,QAAQ,CAACuC,kBAAT,CAA4B,WAA5B,EAAyC,gBAAzC,CAA9B;AACAD,EAAAA,uBAAuB,CAACxB,OAAD,EAAUC,QAAV,EAAoBkB,SAAS,IAAIG,WAAb,IAA4BpB,YAAhD,EAA8D;AAACwB,IAAAA,IAAI,EAAE;AAAP,GAA9D,CAAvB;AACAF,EAAAA,uBAAuB,CAACxB,OAAD,EAAUC,QAAV,EAAoBkB,SAAS,IAAIG,WAAb,IAA4BpB,YAAhD,EAA8D;AAACwB,IAAAA,IAAI,EAAE,GAAP;AAAYC,IAAAA,OAAO,EAAE;AAArB,GAA9D,CAAvB;AAEA3C,EAAAA,GAAG,CAAC4C,4BAAJ,CAAiC3B,QAAjC,EAA2CG,MAA3C;AACH,CAtDD","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Registry = require('../../registry');\n\nvar helpers = require('./helpers');\nvar attributes = require('./attributes');\nvar constants = require('../scatter/constants');\nvar subTypes = require('../scatter/subtypes');\nvar handleXYDefaults = require('../scatter/xy_defaults');\nvar handlePeriodDefaults = require('../scatter/period_defaults');\nvar handleMarkerDefaults = require('../scatter/marker_defaults');\nvar handleLineDefaults = require('../scatter/line_defaults');\nvar handleFillColorDefaults = require('../scatter/fillcolor_defaults');\nvar handleTextDefaults = require('../scatter/text_defaults');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var isOpen = traceIn.marker ? helpers.isOpenSymbol(traceIn.marker.symbol) : false;\n    var isBubble = subTypes.isBubble(traceIn);\n\n    var len = handleXYDefaults(traceIn, traceOut, layout, coerce);\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    handlePeriodDefaults(traceIn, traceOut, layout, coerce);\n    coerce('xhoverformat');\n    coerce('yhoverformat');\n\n    var defaultMode = len < constants.PTS_LINESONLY ? 'lines+markers' : 'lines';\n\n    coerce('text');\n    coerce('hovertext');\n    coerce('hovertemplate');\n    coerce('mode', defaultMode);\n\n    if(subTypes.hasLines(traceOut)) {\n        coerce('connectgaps');\n        handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n        coerce('line.shape');\n    }\n\n    if(subTypes.hasMarkers(traceOut)) {\n        handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n        coerce('marker.line.width', isOpen || isBubble ? 1 : 0);\n    }\n\n    if(subTypes.hasText(traceOut)) {\n        coerce('texttemplate');\n        handleTextDefaults(traceIn, traceOut, layout, coerce);\n    }\n\n    var lineColor = (traceOut.line || {}).color;\n    var markerColor = (traceOut.marker || {}).color;\n\n    coerce('fill');\n    if(traceOut.fill !== 'none') {\n        handleFillColorDefaults(traceIn, traceOut, defaultColor, coerce);\n    }\n\n    var errorBarsSupplyDefaults = Registry.getComponentMethod('errorbars', 'supplyDefaults');\n    errorBarsSupplyDefaults(traceIn, traceOut, lineColor || markerColor || defaultColor, {axis: 'y'});\n    errorBarsSupplyDefaults(traceIn, traceOut, lineColor || markerColor || defaultColor, {axis: 'x', inherit: 'y'});\n\n    Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};\n"]},"metadata":{},"sourceType":"script"}