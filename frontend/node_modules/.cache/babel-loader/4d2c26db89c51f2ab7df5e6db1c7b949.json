{"ast":null,"code":"'use strict';\n\nmodule.exports = function flipTree(node, size, opts) {\n  var tmp;\n\n  if (opts.swapXY) {\n    // swap x0 and y0\n    tmp = node.x0;\n    node.x0 = node.y0;\n    node.y0 = tmp; // swap x1 and y1\n\n    tmp = node.x1;\n    node.x1 = node.y1;\n    node.y1 = tmp;\n  }\n\n  if (opts.flipX) {\n    tmp = node.x0;\n    node.x0 = size[0] - node.x1;\n    node.x1 = size[0] - tmp;\n  }\n\n  if (opts.flipY) {\n    tmp = node.y0;\n    node.y0 = size[1] - node.y1;\n    node.y1 = size[1] - tmp;\n  }\n\n  var children = node.children;\n\n  if (children) {\n    for (var i = 0; i < children.length; i++) {\n      flipTree(children[i], size, opts);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/treemap/flip_tree.js"],"names":["module","exports","flipTree","node","size","opts","tmp","swapXY","x0","y0","x1","y1","flipX","flipY","children","i","length"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AACjD,MAAIC,GAAJ;;AAEA,MAAGD,IAAI,CAACE,MAAR,EAAgB;AACZ;AACAD,IAAAA,GAAG,GAAGH,IAAI,CAACK,EAAX;AACAL,IAAAA,IAAI,CAACK,EAAL,GAAUL,IAAI,CAACM,EAAf;AACAN,IAAAA,IAAI,CAACM,EAAL,GAAUH,GAAV,CAJY,CAMZ;;AACAA,IAAAA,GAAG,GAAGH,IAAI,CAACO,EAAX;AACAP,IAAAA,IAAI,CAACO,EAAL,GAAUP,IAAI,CAACQ,EAAf;AACAR,IAAAA,IAAI,CAACQ,EAAL,GAAUL,GAAV;AACH;;AAED,MAAGD,IAAI,CAACO,KAAR,EAAe;AACXN,IAAAA,GAAG,GAAGH,IAAI,CAACK,EAAX;AACAL,IAAAA,IAAI,CAACK,EAAL,GAAUJ,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAACO,EAAzB;AACAP,IAAAA,IAAI,CAACO,EAAL,GAAUN,IAAI,CAAC,CAAD,CAAJ,GAAUE,GAApB;AACH;;AAED,MAAGD,IAAI,CAACQ,KAAR,EAAe;AACXP,IAAAA,GAAG,GAAGH,IAAI,CAACM,EAAX;AACAN,IAAAA,IAAI,CAACM,EAAL,GAAUL,IAAI,CAAC,CAAD,CAAJ,GAAUD,IAAI,CAACQ,EAAzB;AACAR,IAAAA,IAAI,CAACQ,EAAL,GAAUP,IAAI,CAAC,CAAD,CAAJ,GAAUE,GAApB;AACH;;AAED,MAAIQ,QAAQ,GAAGX,IAAI,CAACW,QAApB;;AACA,MAAGA,QAAH,EAAa;AACT,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,QAAQ,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCb,MAAAA,QAAQ,CAACY,QAAQ,CAACC,CAAD,CAAT,EAAcX,IAAd,EAAoBC,IAApB,CAAR;AACH;AACJ;AACJ,CAjCD","sourcesContent":["'use strict';\n\nmodule.exports = function flipTree(node, size, opts) {\n    var tmp;\n\n    if(opts.swapXY) {\n        // swap x0 and y0\n        tmp = node.x0;\n        node.x0 = node.y0;\n        node.y0 = tmp;\n\n        // swap x1 and y1\n        tmp = node.x1;\n        node.x1 = node.y1;\n        node.y1 = tmp;\n    }\n\n    if(opts.flipX) {\n        tmp = node.x0;\n        node.x0 = size[0] - node.x1;\n        node.x1 = size[0] - tmp;\n    }\n\n    if(opts.flipY) {\n        tmp = node.y0;\n        node.y0 = size[1] - node.y1;\n        node.y1 = size[1] - tmp;\n    }\n\n    var children = node.children;\n    if(children) {\n        for(var i = 0; i < children.length; i++) {\n            flipTree(children[i], size, opts);\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}