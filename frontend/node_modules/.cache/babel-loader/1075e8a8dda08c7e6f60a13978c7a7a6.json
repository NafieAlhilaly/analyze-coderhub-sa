{"ast":null,"code":"'use strict';\n\nvar scatterAttrs = require('../scatter/attributes');\n\nvar axisHoverFormat = require('../../plots/cartesian/axis_format_attributes').axisHoverFormat;\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\n\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar fontAttrs = require('../../plots/font_attributes');\n\nvar constants = require('./constants');\n\nvar pattern = require('../../components/drawing/attributes').pattern;\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar textFontAttrs = fontAttrs({\n  editType: 'calc',\n  arrayOk: true,\n  colorEditType: 'style',\n  description: ''\n});\nvar scatterMarkerAttrs = scatterAttrs.marker;\nvar scatterMarkerLineAttrs = scatterMarkerAttrs.line;\nvar markerLineWidth = extendFlat({}, scatterMarkerLineAttrs.width, {\n  dflt: 0\n});\nvar markerLine = extendFlat({\n  width: markerLineWidth,\n  editType: 'calc'\n}, colorScaleAttrs('marker.line'));\nvar marker = extendFlat({\n  line: markerLine,\n  editType: 'calc'\n}, colorScaleAttrs('marker'), {\n  opacity: {\n    valType: 'number',\n    arrayOk: true,\n    dflt: 1,\n    min: 0,\n    max: 1,\n    editType: 'style',\n    description: 'Sets the opacity of the bars.'\n  },\n  pattern: pattern\n});\nmodule.exports = {\n  x: scatterAttrs.x,\n  x0: scatterAttrs.x0,\n  dx: scatterAttrs.dx,\n  y: scatterAttrs.y,\n  y0: scatterAttrs.y0,\n  dy: scatterAttrs.dy,\n  xperiod: scatterAttrs.xperiod,\n  yperiod: scatterAttrs.yperiod,\n  xperiod0: scatterAttrs.xperiod0,\n  yperiod0: scatterAttrs.yperiod0,\n  xperiodalignment: scatterAttrs.xperiodalignment,\n  yperiodalignment: scatterAttrs.yperiodalignment,\n  xhoverformat: axisHoverFormat('x'),\n  yhoverformat: axisHoverFormat('y'),\n  text: scatterAttrs.text,\n  texttemplate: texttemplateAttrs({\n    editType: 'plot'\n  }, {\n    keys: constants.eventDataKeys\n  }),\n  hovertext: scatterAttrs.hovertext,\n  hovertemplate: hovertemplateAttrs({}, {\n    keys: constants.eventDataKeys\n  }),\n  textposition: {\n    valType: 'enumerated',\n    values: ['inside', 'outside', 'auto', 'none'],\n    dflt: 'auto',\n    arrayOk: true,\n    editType: 'calc',\n    description: ['Specifies the location of the `text`.', '*inside* positions `text` inside, next to the bar end', '(rotated and scaled if needed).', '*outside* positions `text` outside, next to the bar end', '(scaled if needed), unless there is another bar stacked on', 'this one, then the text gets pushed inside.', '*auto* tries to position `text` inside the bar, but if', 'the bar is too small and no bar is stacked on this one', 'the text is moved outside.', 'If *none*, no text appears.'].join(' ')\n  },\n  insidetextanchor: {\n    valType: 'enumerated',\n    values: ['end', 'middle', 'start'],\n    dflt: 'end',\n    editType: 'plot',\n    description: ['Determines if texts are kept at center or start/end points in `textposition` *inside* mode.'].join(' ')\n  },\n  textangle: {\n    valType: 'angle',\n    dflt: 'auto',\n    editType: 'plot',\n    description: ['Sets the angle of the tick labels with respect to the bar.', 'For example, a `tickangle` of -90 draws the tick labels', 'vertically. With *auto* the texts may automatically be', 'rotated to fit with the maximum size in bars.'].join(' ')\n  },\n  textfont: extendFlat({}, textFontAttrs, {\n    description: 'Sets the font used for `text`.'\n  }),\n  insidetextfont: extendFlat({}, textFontAttrs, {\n    description: 'Sets the font used for `text` lying inside the bar.'\n  }),\n  outsidetextfont: extendFlat({}, textFontAttrs, {\n    description: 'Sets the font used for `text` lying outside the bar.'\n  }),\n  constraintext: {\n    valType: 'enumerated',\n    values: ['inside', 'outside', 'both', 'none'],\n    dflt: 'both',\n    editType: 'calc',\n    description: ['Constrain the size of text inside or outside a bar to be no', 'larger than the bar itself.'].join(' ')\n  },\n  cliponaxis: extendFlat({}, scatterAttrs.cliponaxis, {\n    description: ['Determines whether the text nodes', 'are clipped about the subplot axes.', 'To show the text nodes above axis lines and tick labels,', 'make sure to set `xaxis.layer` and `yaxis.layer` to *below traces*.'].join(' ')\n  }),\n  orientation: {\n    valType: 'enumerated',\n    values: ['v', 'h'],\n    editType: 'calc+clearAxisTypes',\n    description: ['Sets the orientation of the bars.', 'With *v* (*h*), the value of the each bar spans', 'along the vertical (horizontal).'].join(' ')\n  },\n  base: {\n    valType: 'any',\n    dflt: null,\n    arrayOk: true,\n    editType: 'calc',\n    description: ['Sets where the bar base is drawn (in position axis units).', 'In *stack* or *relative* barmode,', 'traces that set *base* will be excluded', 'and drawn in *overlay* mode instead.'].join(' ')\n  },\n  offset: {\n    valType: 'number',\n    dflt: null,\n    arrayOk: true,\n    editType: 'calc',\n    description: ['Shifts the position where the bar is drawn', '(in position axis units).', 'In *group* barmode,', 'traces that set *offset* will be excluded', 'and drawn in *overlay* mode instead.'].join(' ')\n  },\n  width: {\n    valType: 'number',\n    dflt: null,\n    min: 0,\n    arrayOk: true,\n    editType: 'calc',\n    description: ['Sets the bar width (in position axis units).'].join(' ')\n  },\n  marker: marker,\n  offsetgroup: {\n    valType: 'string',\n    dflt: '',\n    editType: 'calc',\n    description: ['Set several traces linked to the same position axis', 'or matching axes to the same', 'offsetgroup where bars of the same position coordinate will line up.'].join(' ')\n  },\n  alignmentgroup: {\n    valType: 'string',\n    dflt: '',\n    editType: 'calc',\n    description: ['Set several traces linked to the same position axis', 'or matching axes to the same', 'alignmentgroup. This controls whether bars compute their positional', 'range dependently or independently.'].join(' ')\n  },\n  selected: {\n    marker: {\n      opacity: scatterAttrs.selected.marker.opacity,\n      color: scatterAttrs.selected.marker.color,\n      editType: 'style'\n    },\n    textfont: scatterAttrs.selected.textfont,\n    editType: 'style'\n  },\n  unselected: {\n    marker: {\n      opacity: scatterAttrs.unselected.marker.opacity,\n      color: scatterAttrs.unselected.marker.color,\n      editType: 'style'\n    },\n    textfont: scatterAttrs.unselected.textfont,\n    editType: 'style'\n  },\n  _deprecated: {\n    bardir: {\n      valType: 'enumerated',\n      editType: 'calc',\n      values: ['v', 'h'],\n      description: 'Renamed to `orientation`.'\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/bar/attributes.js"],"names":["scatterAttrs","require","axisHoverFormat","hovertemplateAttrs","texttemplateAttrs","colorScaleAttrs","fontAttrs","constants","pattern","extendFlat","textFontAttrs","editType","arrayOk","colorEditType","description","scatterMarkerAttrs","marker","scatterMarkerLineAttrs","line","markerLineWidth","width","dflt","markerLine","opacity","valType","min","max","module","exports","x","x0","dx","y","y0","dy","xperiod","yperiod","xperiod0","yperiod0","xperiodalignment","yperiodalignment","xhoverformat","yhoverformat","text","texttemplate","keys","eventDataKeys","hovertext","hovertemplate","textposition","values","join","insidetextanchor","textangle","textfont","insidetextfont","outsidetextfont","constraintext","cliponaxis","orientation","base","offset","offsetgroup","alignmentgroup","selected","color","unselected","_deprecated","bardir"],"mappings":"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","sourcesContent":["'use strict';\n\nvar scatterAttrs = require('../scatter/attributes');\nvar axisHoverFormat = require('../../plots/cartesian/axis_format_attributes').axisHoverFormat;\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\nvar fontAttrs = require('../../plots/font_attributes');\nvar constants = require('./constants');\nvar pattern = require('../../components/drawing/attributes').pattern;\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar textFontAttrs = fontAttrs({\n    editType: 'calc',\n    arrayOk: true,\n    colorEditType: 'style',\n    description: ''\n});\n\nvar scatterMarkerAttrs = scatterAttrs.marker;\nvar scatterMarkerLineAttrs = scatterMarkerAttrs.line;\n\nvar markerLineWidth = extendFlat({},\n    scatterMarkerLineAttrs.width, { dflt: 0 });\n\nvar markerLine = extendFlat({\n    width: markerLineWidth,\n    editType: 'calc'\n}, colorScaleAttrs('marker.line'));\n\nvar marker = extendFlat({\n    line: markerLine,\n    editType: 'calc'\n}, colorScaleAttrs('marker'), {\n    opacity: {\n        valType: 'number',\n        arrayOk: true,\n        dflt: 1,\n        min: 0,\n        max: 1,\n        editType: 'style',\n        description: 'Sets the opacity of the bars.'\n    },\n    pattern: pattern\n});\n\nmodule.exports = {\n    x: scatterAttrs.x,\n    x0: scatterAttrs.x0,\n    dx: scatterAttrs.dx,\n    y: scatterAttrs.y,\n    y0: scatterAttrs.y0,\n    dy: scatterAttrs.dy,\n\n    xperiod: scatterAttrs.xperiod,\n    yperiod: scatterAttrs.yperiod,\n    xperiod0: scatterAttrs.xperiod0,\n    yperiod0: scatterAttrs.yperiod0,\n    xperiodalignment: scatterAttrs.xperiodalignment,\n    yperiodalignment: scatterAttrs.yperiodalignment,\n    xhoverformat: axisHoverFormat('x'),\n    yhoverformat: axisHoverFormat('y'),\n\n    text: scatterAttrs.text,\n    texttemplate: texttemplateAttrs({editType: 'plot'}, {\n        keys: constants.eventDataKeys\n    }),\n    hovertext: scatterAttrs.hovertext,\n    hovertemplate: hovertemplateAttrs({}, {\n        keys: constants.eventDataKeys\n    }),\n\n    textposition: {\n        valType: 'enumerated',\n        values: ['inside', 'outside', 'auto', 'none'],\n        dflt: 'auto',\n        arrayOk: true,\n        editType: 'calc',\n        description: [\n            'Specifies the location of the `text`.',\n            '*inside* positions `text` inside, next to the bar end',\n            '(rotated and scaled if needed).',\n            '*outside* positions `text` outside, next to the bar end',\n            '(scaled if needed), unless there is another bar stacked on',\n            'this one, then the text gets pushed inside.',\n            '*auto* tries to position `text` inside the bar, but if',\n            'the bar is too small and no bar is stacked on this one',\n            'the text is moved outside.',\n            'If *none*, no text appears.'\n        ].join(' ')\n    },\n\n    insidetextanchor: {\n        valType: 'enumerated',\n        values: ['end', 'middle', 'start'],\n        dflt: 'end',\n        editType: 'plot',\n        description: [\n            'Determines if texts are kept at center or start/end points in `textposition` *inside* mode.'\n        ].join(' ')\n    },\n\n    textangle: {\n        valType: 'angle',\n        dflt: 'auto',\n        editType: 'plot',\n        description: [\n            'Sets the angle of the tick labels with respect to the bar.',\n            'For example, a `tickangle` of -90 draws the tick labels',\n            'vertically. With *auto* the texts may automatically be',\n            'rotated to fit with the maximum size in bars.'\n        ].join(' ')\n    },\n\n    textfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `text`.'\n    }),\n\n    insidetextfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `text` lying inside the bar.'\n    }),\n\n    outsidetextfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `text` lying outside the bar.'\n    }),\n\n    constraintext: {\n        valType: 'enumerated',\n        values: ['inside', 'outside', 'both', 'none'],\n        dflt: 'both',\n        editType: 'calc',\n        description: [\n            'Constrain the size of text inside or outside a bar to be no',\n            'larger than the bar itself.'\n        ].join(' ')\n    },\n\n    cliponaxis: extendFlat({}, scatterAttrs.cliponaxis, {\n        description: [\n            'Determines whether the text nodes',\n            'are clipped about the subplot axes.',\n            'To show the text nodes above axis lines and tick labels,',\n            'make sure to set `xaxis.layer` and `yaxis.layer` to *below traces*.'\n        ].join(' ')\n    }),\n\n    orientation: {\n        valType: 'enumerated',\n        values: ['v', 'h'],\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'Sets the orientation of the bars.',\n            'With *v* (*h*), the value of the each bar spans',\n            'along the vertical (horizontal).'\n        ].join(' ')\n    },\n\n    base: {\n        valType: 'any',\n        dflt: null,\n        arrayOk: true,\n        editType: 'calc',\n        description: [\n            'Sets where the bar base is drawn (in position axis units).',\n            'In *stack* or *relative* barmode,',\n            'traces that set *base* will be excluded',\n            'and drawn in *overlay* mode instead.'\n        ].join(' ')\n    },\n\n    offset: {\n        valType: 'number',\n        dflt: null,\n        arrayOk: true,\n        editType: 'calc',\n        description: [\n            'Shifts the position where the bar is drawn',\n            '(in position axis units).',\n            'In *group* barmode,',\n            'traces that set *offset* will be excluded',\n            'and drawn in *overlay* mode instead.'\n        ].join(' ')\n    },\n\n    width: {\n        valType: 'number',\n        dflt: null,\n        min: 0,\n        arrayOk: true,\n        editType: 'calc',\n        description: [\n            'Sets the bar width (in position axis units).'\n        ].join(' ')\n    },\n\n    marker: marker,\n\n    offsetgroup: {\n        valType: 'string',\n        dflt: '',\n        editType: 'calc',\n        description: [\n            'Set several traces linked to the same position axis',\n            'or matching axes to the same',\n            'offsetgroup where bars of the same position coordinate will line up.'\n        ].join(' ')\n    },\n    alignmentgroup: {\n        valType: 'string',\n        dflt: '',\n        editType: 'calc',\n        description: [\n            'Set several traces linked to the same position axis',\n            'or matching axes to the same',\n            'alignmentgroup. This controls whether bars compute their positional',\n            'range dependently or independently.'\n        ].join(' ')\n    },\n\n    selected: {\n        marker: {\n            opacity: scatterAttrs.selected.marker.opacity,\n            color: scatterAttrs.selected.marker.color,\n            editType: 'style'\n        },\n        textfont: scatterAttrs.selected.textfont,\n        editType: 'style'\n    },\n    unselected: {\n        marker: {\n            opacity: scatterAttrs.unselected.marker.opacity,\n            color: scatterAttrs.unselected.marker.color,\n            editType: 'style'\n        },\n        textfont: scatterAttrs.unselected.textfont,\n        editType: 'style'\n    },\n\n    _deprecated: {\n        bardir: {\n            valType: 'enumerated',\n            editType: 'calc',\n            values: ['v', 'h'],\n            description: 'Renamed to `orientation`.'\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}