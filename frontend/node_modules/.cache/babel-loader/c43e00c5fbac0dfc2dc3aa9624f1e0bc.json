{"ast":null,"code":"'use strict';\n\nvar scatterAttrs = require('../scatter/attributes');\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar axisHoverFormat = require('../../plots/cartesian/axis_format_attributes').axisHoverFormat;\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\n\nvar scatterGlAttrs = require('../scattergl/attributes');\n\nvar cartesianIdRegex = require('../../plots/cartesian/constants').idRegex;\n\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar scatterMarkerAttrs = scatterAttrs.marker;\nvar scatterMarkerLineAttrs = scatterMarkerAttrs.line;\nvar markerLineAttrs = extendFlat(colorScaleAttrs('marker.line', {\n  editTypeOverride: 'calc'\n}), {\n  width: extendFlat({}, scatterMarkerLineAttrs.width, {\n    editType: 'calc'\n  }),\n  editType: 'calc'\n});\nvar markerAttrs = extendFlat(colorScaleAttrs('marker'), {\n  symbol: scatterMarkerAttrs.symbol,\n  size: extendFlat({}, scatterMarkerAttrs.size, {\n    editType: 'markerSize'\n  }),\n  sizeref: scatterMarkerAttrs.sizeref,\n  sizemin: scatterMarkerAttrs.sizemin,\n  sizemode: scatterMarkerAttrs.sizemode,\n  opacity: scatterMarkerAttrs.opacity,\n  colorbar: scatterMarkerAttrs.colorbar,\n  line: markerLineAttrs,\n  editType: 'calc'\n});\nmarkerAttrs.color.editType = markerAttrs.cmin.editType = markerAttrs.cmax.editType = 'style';\n\nfunction makeAxesValObject(axLetter) {\n  return {\n    valType: 'info_array',\n    freeLength: true,\n    editType: 'calc',\n    items: {\n      valType: 'subplotid',\n      regex: cartesianIdRegex[axLetter],\n      editType: 'plot'\n    },\n    description: ['Sets the list of ' + axLetter + ' axes', 'corresponding to dimensions of this splom trace.', 'By default, a splom will match the first N ' + axLetter + 'axes', 'where N is the number of input dimensions.', 'Note that, in case where `diagonal.visible` is false and `showupperhalf`', 'or `showlowerhalf` is false, this splom trace will generate', 'one less x-axis and one less y-axis.'].join(' ')\n  };\n}\n\nmodule.exports = {\n  dimensions: templatedArray('dimension', {\n    visible: {\n      valType: 'boolean',\n      dflt: true,\n      editType: 'calc',\n      description: ['Determines whether or not this dimension is shown on the graph.', 'Note that even visible false dimension contribute to the', 'default grid generate by this splom trace.'].join(' ')\n    },\n    label: {\n      valType: 'string',\n      editType: 'calc',\n      description: 'Sets the label corresponding to this splom dimension.'\n    },\n    values: {\n      valType: 'data_array',\n      editType: 'calc+clearAxisTypes',\n      description: 'Sets the dimension values to be plotted.'\n    },\n    axis: {\n      type: {\n        valType: 'enumerated',\n        values: ['linear', 'log', 'date', 'category'],\n        editType: 'calc+clearAxisTypes',\n        description: ['Sets the axis type for this dimension\\'s generated', 'x and y axes.', 'Note that the axis `type` values set in layout take', 'precedence over this attribute.'].join(' ')\n      },\n      // TODO make 'true' the default in v3?\n      matches: {\n        valType: 'boolean',\n        dflt: false,\n        editType: 'calc',\n        description: ['Determines whether or not the x & y axes generated by this', 'dimension match.', 'Equivalent to setting the `matches` axis attribute in the layout', 'with the correct axis id.'].join(' ')\n      },\n      editType: 'calc+clearAxisTypes'\n    },\n    // TODO should add an attribute to pin down x only vars and y only vars\n    // like https://seaborn.pydata.org/generated/seaborn.pairplot.html\n    // x_vars and y_vars\n    // maybe more axis defaulting option e.g. `showgrid: false`\n    editType: 'calc+clearAxisTypes'\n  }),\n  // mode: {}, (only 'markers' for now)\n  text: extendFlat({}, scatterGlAttrs.text, {\n    description: ['Sets text elements associated with each (x,y) pair to appear on hover.', 'If a single string, the same string appears over', 'all the data points.', 'If an array of string, the items are mapped in order to the', 'this trace\\'s (x,y) coordinates.'].join(' ')\n  }),\n  hovertext: extendFlat({}, scatterGlAttrs.hovertext, {\n    description: 'Same as `text`.'\n  }),\n  hovertemplate: hovertemplateAttrs(),\n  xhoverformat: axisHoverFormat('x'),\n  yhoverformat: axisHoverFormat('y'),\n  marker: markerAttrs,\n  xaxes: makeAxesValObject('x'),\n  yaxes: makeAxesValObject('y'),\n  diagonal: {\n    visible: {\n      valType: 'boolean',\n      dflt: true,\n      editType: 'calc',\n      description: ['Determines whether or not subplots on the diagonal are displayed.'].join(' ')\n    },\n    // type: 'scattergl' | 'histogram' | 'box' | 'violin'\n    // ...\n    // more options\n    editType: 'calc'\n  },\n  showupperhalf: {\n    valType: 'boolean',\n    dflt: true,\n    editType: 'calc',\n    description: ['Determines whether or not subplots on the upper half', 'from the diagonal are displayed.'].join(' ')\n  },\n  showlowerhalf: {\n    valType: 'boolean',\n    dflt: true,\n    editType: 'calc',\n    description: ['Determines whether or not subplots on the lower half', 'from the diagonal are displayed.'].join(' ')\n  },\n  selected: {\n    marker: scatterGlAttrs.selected.marker,\n    editType: 'calc'\n  },\n  unselected: {\n    marker: scatterGlAttrs.unselected.marker,\n    editType: 'calc'\n  },\n  opacity: scatterGlAttrs.opacity\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/splom/attributes.js"],"names":["scatterAttrs","require","colorScaleAttrs","axisHoverFormat","hovertemplateAttrs","scatterGlAttrs","cartesianIdRegex","idRegex","templatedArray","extendFlat","scatterMarkerAttrs","marker","scatterMarkerLineAttrs","line","markerLineAttrs","editTypeOverride","width","editType","markerAttrs","symbol","size","sizeref","sizemin","sizemode","opacity","colorbar","color","cmin","cmax","makeAxesValObject","axLetter","valType","freeLength","items","regex","description","join","module","exports","dimensions","visible","dflt","label","values","axis","type","matches","text","hovertext","hovertemplate","xhoverformat","yhoverformat","xaxes","yaxes","diagonal","showupperhalf","showlowerhalf","selected","unselected"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,uBAAD,CAA1B;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,wCAAD,CAA7B;;AACA,IAAIE,eAAe,GAAGF,OAAO,CAAC,8CAAD,CAAP,CAAwDE,eAA9E;;AACA,IAAIC,kBAAkB,GAAGH,OAAO,CAAC,iCAAD,CAAP,CAA2CG,kBAApE;;AACA,IAAIC,cAAc,GAAGJ,OAAO,CAAC,yBAAD,CAA5B;;AACA,IAAIK,gBAAgB,GAAGL,OAAO,CAAC,iCAAD,CAAP,CAA2CM,OAAlE;;AACA,IAAIC,cAAc,GAAGP,OAAO,CAAC,8BAAD,CAAP,CAAwCO,cAA7D;;AACA,IAAIC,UAAU,GAAGR,OAAO,CAAC,kBAAD,CAAP,CAA4BQ,UAA7C;;AAEA,IAAIC,kBAAkB,GAAGV,YAAY,CAACW,MAAtC;AACA,IAAIC,sBAAsB,GAAGF,kBAAkB,CAACG,IAAhD;AAEA,IAAIC,eAAe,GAAGL,UAAU,CAACP,eAAe,CAAC,aAAD,EAAgB;AAACa,EAAAA,gBAAgB,EAAE;AAAnB,CAAhB,CAAhB,EAA6D;AACzFC,EAAAA,KAAK,EAAEP,UAAU,CAAC,EAAD,EAAKG,sBAAsB,CAACI,KAA5B,EAAmC;AAACC,IAAAA,QAAQ,EAAE;AAAX,GAAnC,CADwE;AAEzFA,EAAAA,QAAQ,EAAE;AAF+E,CAA7D,CAAhC;AAKA,IAAIC,WAAW,GAAGT,UAAU,CAACP,eAAe,CAAC,QAAD,CAAhB,EAA4B;AACpDiB,EAAAA,MAAM,EAAET,kBAAkB,CAACS,MADyB;AAEpDC,EAAAA,IAAI,EAAEX,UAAU,CAAC,EAAD,EAAKC,kBAAkB,CAACU,IAAxB,EAA8B;AAACH,IAAAA,QAAQ,EAAE;AAAX,GAA9B,CAFoC;AAGpDI,EAAAA,OAAO,EAAEX,kBAAkB,CAACW,OAHwB;AAIpDC,EAAAA,OAAO,EAAEZ,kBAAkB,CAACY,OAJwB;AAKpDC,EAAAA,QAAQ,EAAEb,kBAAkB,CAACa,QALuB;AAMpDC,EAAAA,OAAO,EAAEd,kBAAkB,CAACc,OANwB;AAOpDC,EAAAA,QAAQ,EAAEf,kBAAkB,CAACe,QAPuB;AAQpDZ,EAAAA,IAAI,EAAEC,eAR8C;AASpDG,EAAAA,QAAQ,EAAE;AAT0C,CAA5B,CAA5B;AAYAC,WAAW,CAACQ,KAAZ,CAAkBT,QAAlB,GAA6BC,WAAW,CAACS,IAAZ,CAAiBV,QAAjB,GAA4BC,WAAW,CAACU,IAAZ,CAAiBX,QAAjB,GAA4B,OAArF;;AAEA,SAASY,iBAAT,CAA2BC,QAA3B,EAAqC;AACjC,SAAO;AACHC,IAAAA,OAAO,EAAE,YADN;AAEHC,IAAAA,UAAU,EAAE,IAFT;AAGHf,IAAAA,QAAQ,EAAE,MAHP;AAIHgB,IAAAA,KAAK,EAAE;AACHF,MAAAA,OAAO,EAAE,WADN;AAEHG,MAAAA,KAAK,EAAE5B,gBAAgB,CAACwB,QAAD,CAFpB;AAGHb,MAAAA,QAAQ,EAAE;AAHP,KAJJ;AASHkB,IAAAA,WAAW,EAAE,CACT,sBAAsBL,QAAtB,GAAiC,OADxB,EAET,kDAFS,EAGT,gDAAgDA,QAAhD,GAA2D,MAHlD,EAIT,4CAJS,EAKT,0EALS,EAMT,6DANS,EAOT,sCAPS,EAQXM,IARW,CAQN,GARM;AATV,GAAP;AAmBH;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,UAAU,EAAE/B,cAAc,CAAC,WAAD,EAAc;AACpCgC,IAAAA,OAAO,EAAE;AACLT,MAAAA,OAAO,EAAE,SADJ;AAELU,MAAAA,IAAI,EAAE,IAFD;AAGLxB,MAAAA,QAAQ,EAAE,MAHL;AAILkB,MAAAA,WAAW,EAAE,CACT,iEADS,EAET,0DAFS,EAGT,4CAHS,EAIXC,IAJW,CAIN,GAJM;AAJR,KAD2B;AAWpCM,IAAAA,KAAK,EAAE;AACHX,MAAAA,OAAO,EAAE,QADN;AAEHd,MAAAA,QAAQ,EAAE,MAFP;AAGHkB,MAAAA,WAAW,EAAE;AAHV,KAX6B;AAgBpCQ,IAAAA,MAAM,EAAE;AACJZ,MAAAA,OAAO,EAAE,YADL;AAEJd,MAAAA,QAAQ,EAAE,qBAFN;AAGJkB,MAAAA,WAAW,EAAE;AAHT,KAhB4B;AAsBpCS,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE;AACFd,QAAAA,OAAO,EAAE,YADP;AAEFY,QAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB,EAA0B,UAA1B,CAFN;AAGF1B,QAAAA,QAAQ,EAAE,qBAHR;AAIFkB,QAAAA,WAAW,EAAE,CACT,oDADS,EAET,eAFS,EAGT,qDAHS,EAIT,iCAJS,EAKXC,IALW,CAKN,GALM;AAJX,OADJ;AAaF;AACAU,MAAAA,OAAO,EAAE;AACLf,QAAAA,OAAO,EAAE,SADJ;AAELU,QAAAA,IAAI,EAAE,KAFD;AAGLxB,QAAAA,QAAQ,EAAE,MAHL;AAILkB,QAAAA,WAAW,EAAE,CACT,4DADS,EAET,kBAFS,EAGT,kEAHS,EAIT,2BAJS,EAKXC,IALW,CAKN,GALM;AAJR,OAdP;AA0BFnB,MAAAA,QAAQ,EAAE;AA1BR,KAtB8B;AAmDpC;AACA;AACA;AAEA;AAEAA,IAAAA,QAAQ,EAAE;AAzD0B,GAAd,CADb;AA6Db;AAEA8B,EAAAA,IAAI,EAAEtC,UAAU,CAAC,EAAD,EAAKJ,cAAc,CAAC0C,IAApB,EAA0B;AACtCZ,IAAAA,WAAW,EAAE,CACT,wEADS,EAET,kDAFS,EAGT,sBAHS,EAIT,6DAJS,EAKT,kCALS,EAMXC,IANW,CAMN,GANM;AADyB,GAA1B,CA/DH;AAwEbY,EAAAA,SAAS,EAAEvC,UAAU,CAAC,EAAD,EAAKJ,cAAc,CAAC2C,SAApB,EAA+B;AAChDb,IAAAA,WAAW,EAAE;AADmC,GAA/B,CAxER;AA4Ebc,EAAAA,aAAa,EAAE7C,kBAAkB,EA5EpB;AA8Eb8C,EAAAA,YAAY,EAAE/C,eAAe,CAAC,GAAD,CA9EhB;AA+EbgD,EAAAA,YAAY,EAAEhD,eAAe,CAAC,GAAD,CA/EhB;AAiFbQ,EAAAA,MAAM,EAAEO,WAjFK;AAmFbkC,EAAAA,KAAK,EAAEvB,iBAAiB,CAAC,GAAD,CAnFX;AAoFbwB,EAAAA,KAAK,EAAExB,iBAAiB,CAAC,GAAD,CApFX;AAsFbyB,EAAAA,QAAQ,EAAE;AACNd,IAAAA,OAAO,EAAE;AACLT,MAAAA,OAAO,EAAE,SADJ;AAELU,MAAAA,IAAI,EAAE,IAFD;AAGLxB,MAAAA,QAAQ,EAAE,MAHL;AAILkB,MAAAA,WAAW,EAAE,CACT,mEADS,EAEXC,IAFW,CAEN,GAFM;AAJR,KADH;AAUN;AACA;AACA;AAEAnB,IAAAA,QAAQ,EAAE;AAdJ,GAtFG;AAuGbsC,EAAAA,aAAa,EAAE;AACXxB,IAAAA,OAAO,EAAE,SADE;AAEXU,IAAAA,IAAI,EAAE,IAFK;AAGXxB,IAAAA,QAAQ,EAAE,MAHC;AAIXkB,IAAAA,WAAW,EAAE,CACT,sDADS,EAET,kCAFS,EAGXC,IAHW,CAGN,GAHM;AAJF,GAvGF;AAgHboB,EAAAA,aAAa,EAAE;AACXzB,IAAAA,OAAO,EAAE,SADE;AAEXU,IAAAA,IAAI,EAAE,IAFK;AAGXxB,IAAAA,QAAQ,EAAE,MAHC;AAIXkB,IAAAA,WAAW,EAAE,CACT,sDADS,EAET,kCAFS,EAGXC,IAHW,CAGN,GAHM;AAJF,GAhHF;AA0HbqB,EAAAA,QAAQ,EAAE;AACN9C,IAAAA,MAAM,EAAEN,cAAc,CAACoD,QAAf,CAAwB9C,MAD1B;AAENM,IAAAA,QAAQ,EAAE;AAFJ,GA1HG;AA8HbyC,EAAAA,UAAU,EAAE;AACR/C,IAAAA,MAAM,EAAEN,cAAc,CAACqD,UAAf,CAA0B/C,MAD1B;AAERM,IAAAA,QAAQ,EAAE;AAFF,GA9HC;AAmIbO,EAAAA,OAAO,EAAEnB,cAAc,CAACmB;AAnIX,CAAjB","sourcesContent":["'use strict';\n\nvar scatterAttrs = require('../scatter/attributes');\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\nvar axisHoverFormat = require('../../plots/cartesian/axis_format_attributes').axisHoverFormat;\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar scatterGlAttrs = require('../scattergl/attributes');\nvar cartesianIdRegex = require('../../plots/cartesian/constants').idRegex;\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar scatterMarkerAttrs = scatterAttrs.marker;\nvar scatterMarkerLineAttrs = scatterMarkerAttrs.line;\n\nvar markerLineAttrs = extendFlat(colorScaleAttrs('marker.line', {editTypeOverride: 'calc'}), {\n    width: extendFlat({}, scatterMarkerLineAttrs.width, {editType: 'calc'}),\n    editType: 'calc'\n});\n\nvar markerAttrs = extendFlat(colorScaleAttrs('marker'), {\n    symbol: scatterMarkerAttrs.symbol,\n    size: extendFlat({}, scatterMarkerAttrs.size, {editType: 'markerSize'}),\n    sizeref: scatterMarkerAttrs.sizeref,\n    sizemin: scatterMarkerAttrs.sizemin,\n    sizemode: scatterMarkerAttrs.sizemode,\n    opacity: scatterMarkerAttrs.opacity,\n    colorbar: scatterMarkerAttrs.colorbar,\n    line: markerLineAttrs,\n    editType: 'calc'\n});\n\nmarkerAttrs.color.editType = markerAttrs.cmin.editType = markerAttrs.cmax.editType = 'style';\n\nfunction makeAxesValObject(axLetter) {\n    return {\n        valType: 'info_array',\n        freeLength: true,\n        editType: 'calc',\n        items: {\n            valType: 'subplotid',\n            regex: cartesianIdRegex[axLetter],\n            editType: 'plot'\n        },\n        description: [\n            'Sets the list of ' + axLetter + ' axes',\n            'corresponding to dimensions of this splom trace.',\n            'By default, a splom will match the first N ' + axLetter + 'axes',\n            'where N is the number of input dimensions.',\n            'Note that, in case where `diagonal.visible` is false and `showupperhalf`',\n            'or `showlowerhalf` is false, this splom trace will generate',\n            'one less x-axis and one less y-axis.',\n        ].join(' ')\n    };\n}\n\nmodule.exports = {\n    dimensions: templatedArray('dimension', {\n        visible: {\n            valType: 'boolean',\n            dflt: true,\n            editType: 'calc',\n            description: [\n                'Determines whether or not this dimension is shown on the graph.',\n                'Note that even visible false dimension contribute to the',\n                'default grid generate by this splom trace.'\n            ].join(' ')\n        },\n        label: {\n            valType: 'string',\n            editType: 'calc',\n            description: 'Sets the label corresponding to this splom dimension.'\n        },\n        values: {\n            valType: 'data_array',\n            editType: 'calc+clearAxisTypes',\n            description: 'Sets the dimension values to be plotted.'\n        },\n\n        axis: {\n            type: {\n                valType: 'enumerated',\n                values: ['linear', 'log', 'date', 'category'],\n                editType: 'calc+clearAxisTypes',\n                description: [\n                    'Sets the axis type for this dimension\\'s generated',\n                    'x and y axes.',\n                    'Note that the axis `type` values set in layout take',\n                    'precedence over this attribute.'\n                ].join(' ')\n            },\n\n            // TODO make 'true' the default in v3?\n            matches: {\n                valType: 'boolean',\n                dflt: false,\n                editType: 'calc',\n                description: [\n                    'Determines whether or not the x & y axes generated by this',\n                    'dimension match.',\n                    'Equivalent to setting the `matches` axis attribute in the layout',\n                    'with the correct axis id.'\n                ].join(' ')\n            },\n\n            editType: 'calc+clearAxisTypes'\n        },\n\n        // TODO should add an attribute to pin down x only vars and y only vars\n        // like https://seaborn.pydata.org/generated/seaborn.pairplot.html\n        // x_vars and y_vars\n\n        // maybe more axis defaulting option e.g. `showgrid: false`\n\n        editType: 'calc+clearAxisTypes'\n    }),\n\n    // mode: {}, (only 'markers' for now)\n\n    text: extendFlat({}, scatterGlAttrs.text, {\n        description: [\n            'Sets text elements associated with each (x,y) pair to appear on hover.',\n            'If a single string, the same string appears over',\n            'all the data points.',\n            'If an array of string, the items are mapped in order to the',\n            'this trace\\'s (x,y) coordinates.'\n        ].join(' ')\n    }),\n    hovertext: extendFlat({}, scatterGlAttrs.hovertext, {\n        description: 'Same as `text`.'\n    }),\n\n    hovertemplate: hovertemplateAttrs(),\n\n    xhoverformat: axisHoverFormat('x'),\n    yhoverformat: axisHoverFormat('y'),\n\n    marker: markerAttrs,\n\n    xaxes: makeAxesValObject('x'),\n    yaxes: makeAxesValObject('y'),\n\n    diagonal: {\n        visible: {\n            valType: 'boolean',\n            dflt: true,\n            editType: 'calc',\n            description: [\n                'Determines whether or not subplots on the diagonal are displayed.'\n            ].join(' ')\n        },\n\n        // type: 'scattergl' | 'histogram' | 'box' | 'violin'\n        // ...\n        // more options\n\n        editType: 'calc'\n    },\n\n    showupperhalf: {\n        valType: 'boolean',\n        dflt: true,\n        editType: 'calc',\n        description: [\n            'Determines whether or not subplots on the upper half',\n            'from the diagonal are displayed.'\n        ].join(' ')\n    },\n    showlowerhalf: {\n        valType: 'boolean',\n        dflt: true,\n        editType: 'calc',\n        description: [\n            'Determines whether or not subplots on the lower half',\n            'from the diagonal are displayed.'\n        ].join(' ')\n    },\n\n    selected: {\n        marker: scatterGlAttrs.selected.marker,\n        editType: 'calc'\n    },\n    unselected: {\n        marker: scatterGlAttrs.unselected.marker,\n        editType: 'calc'\n    },\n\n    opacity: scatterGlAttrs.opacity\n};\n"]},"metadata":{},"sourceType":"script"}