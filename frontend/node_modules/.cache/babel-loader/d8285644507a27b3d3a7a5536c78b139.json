{"ast":null,"code":"'use strict';\n\nvar Fx = require('../../components/fx');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar getTraceColor = require('../scatter/get_trace_color');\n\nvar fillText = require('../../lib').fillText;\n\nvar attributes = require('./attributes');\n\nmodule.exports = function hoverPoints(pointData, xval, yval) {\n  var cd = pointData.cd;\n  var trace = cd[0].trace;\n  var xa = pointData.xa;\n  var ya = pointData.ya;\n  var geo = pointData.subplot;\n  var isLonLatOverEdges = geo.projection.isLonLatOverEdges;\n  var project = geo.project;\n\n  function distFn(d) {\n    var lonlat = d.lonlat;\n    if (lonlat[0] === BADNUM) return Infinity;\n    if (isLonLatOverEdges(lonlat)) return Infinity;\n    var pt = project(lonlat);\n    var px = project([xval, yval]);\n    var dx = Math.abs(pt[0] - px[0]);\n    var dy = Math.abs(pt[1] - px[1]);\n    var rad = Math.max(3, d.mrc || 0); // N.B. d.mrc is the calculated marker radius\n    // which is only set for trace with 'markers' mode.\n\n    return Math.max(Math.sqrt(dx * dx + dy * dy) - rad, 1 - 3 / rad);\n  }\n\n  Fx.getClosest(cd, distFn, pointData); // skip the rest (for this trace) if we didn't find a close point\n\n  if (pointData.index === false) return;\n  var di = cd[pointData.index];\n  var lonlat = di.lonlat;\n  var pos = [xa.c2p(lonlat), ya.c2p(lonlat)];\n  var rad = di.mrc || 1;\n  pointData.x0 = pos[0] - rad;\n  pointData.x1 = pos[0] + rad;\n  pointData.y0 = pos[1] - rad;\n  pointData.y1 = pos[1] + rad;\n  pointData.loc = di.loc;\n  pointData.lon = lonlat[0];\n  pointData.lat = lonlat[1];\n  var fullLayout = {};\n  fullLayout[trace.geo] = {\n    _subplot: geo\n  };\n\n  var labels = trace._module.formatLabels(di, trace, fullLayout);\n\n  pointData.lonLabel = labels.lonLabel;\n  pointData.latLabel = labels.latLabel;\n  pointData.color = getTraceColor(trace, di);\n  pointData.extraText = getExtraText(trace, di, pointData, cd[0].t.labels);\n  pointData.hovertemplate = trace.hovertemplate;\n  return [pointData];\n};\n\nfunction getExtraText(trace, pt, pointData, labels) {\n  if (trace.hovertemplate) return;\n  var hoverinfo = pt.hi || trace.hoverinfo;\n  var parts = hoverinfo === 'all' ? attributes.hoverinfo.flags : hoverinfo.split('+');\n  var hasLocation = parts.indexOf('location') !== -1 && Array.isArray(trace.locations);\n  var hasLon = parts.indexOf('lon') !== -1;\n  var hasLat = parts.indexOf('lat') !== -1;\n  var hasText = parts.indexOf('text') !== -1;\n  var text = [];\n\n  function format(val) {\n    return val + '\\u00B0';\n  }\n\n  if (hasLocation) {\n    text.push(pt.loc);\n  } else if (hasLon && hasLat) {\n    text.push('(' + format(pointData.latLabel) + ', ' + format(pointData.lonLabel) + ')');\n  } else if (hasLon) {\n    text.push(labels.lon + format(pointData.lonLabel));\n  } else if (hasLat) {\n    text.push(labels.lat + format(pointData.latLabel));\n  }\n\n  if (hasText) {\n    fillText(pt, trace, text);\n  }\n\n  return text.join('<br>');\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/scattergeo/hover.js"],"names":["Fx","require","BADNUM","getTraceColor","fillText","attributes","module","exports","hoverPoints","pointData","xval","yval","cd","trace","xa","ya","geo","subplot","isLonLatOverEdges","projection","project","distFn","d","lonlat","Infinity","pt","px","dx","Math","abs","dy","rad","max","mrc","sqrt","getClosest","index","di","pos","c2p","x0","x1","y0","y1","loc","lon","lat","fullLayout","_subplot","labels","_module","formatLabels","lonLabel","latLabel","color","extraText","getExtraText","t","hovertemplate","hoverinfo","hi","parts","flags","split","hasLocation","indexOf","Array","isArray","locations","hasLon","hasLat","hasText","text","format","val","push","join"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Fx = require('../../components/fx');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar getTraceColor = require('../scatter/get_trace_color');\nvar fillText = require('../../lib').fillText;\nvar attributes = require('./attributes');\n\nmodule.exports = function hoverPoints(pointData, xval, yval) {\n    var cd = pointData.cd;\n    var trace = cd[0].trace;\n    var xa = pointData.xa;\n    var ya = pointData.ya;\n    var geo = pointData.subplot;\n\n    var isLonLatOverEdges = geo.projection.isLonLatOverEdges;\n    var project = geo.project;\n\n    function distFn(d) {\n        var lonlat = d.lonlat;\n\n        if(lonlat[0] === BADNUM) return Infinity;\n        if(isLonLatOverEdges(lonlat)) return Infinity;\n\n        var pt = project(lonlat);\n        var px = project([xval, yval]);\n        var dx = Math.abs(pt[0] - px[0]);\n        var dy = Math.abs(pt[1] - px[1]);\n        var rad = Math.max(3, d.mrc || 0);\n\n        // N.B. d.mrc is the calculated marker radius\n        // which is only set for trace with 'markers' mode.\n\n        return Math.max(Math.sqrt(dx * dx + dy * dy) - rad, 1 - 3 / rad);\n    }\n\n    Fx.getClosest(cd, distFn, pointData);\n\n    // skip the rest (for this trace) if we didn't find a close point\n    if(pointData.index === false) return;\n\n    var di = cd[pointData.index];\n    var lonlat = di.lonlat;\n    var pos = [xa.c2p(lonlat), ya.c2p(lonlat)];\n    var rad = di.mrc || 1;\n\n    pointData.x0 = pos[0] - rad;\n    pointData.x1 = pos[0] + rad;\n    pointData.y0 = pos[1] - rad;\n    pointData.y1 = pos[1] + rad;\n\n    pointData.loc = di.loc;\n    pointData.lon = lonlat[0];\n    pointData.lat = lonlat[1];\n\n    var fullLayout = {};\n    fullLayout[trace.geo] = {_subplot: geo};\n    var labels = trace._module.formatLabels(di, trace, fullLayout);\n    pointData.lonLabel = labels.lonLabel;\n    pointData.latLabel = labels.latLabel;\n\n    pointData.color = getTraceColor(trace, di);\n    pointData.extraText = getExtraText(trace, di, pointData, cd[0].t.labels);\n    pointData.hovertemplate = trace.hovertemplate;\n\n    return [pointData];\n};\n\nfunction getExtraText(trace, pt, pointData, labels) {\n    if(trace.hovertemplate) return;\n\n    var hoverinfo = pt.hi || trace.hoverinfo;\n\n    var parts = hoverinfo === 'all' ?\n        attributes.hoverinfo.flags :\n        hoverinfo.split('+');\n\n    var hasLocation = parts.indexOf('location') !== -1 && Array.isArray(trace.locations);\n    var hasLon = (parts.indexOf('lon') !== -1);\n    var hasLat = (parts.indexOf('lat') !== -1);\n    var hasText = (parts.indexOf('text') !== -1);\n    var text = [];\n\n    function format(val) { return val + '\\u00B0'; }\n\n    if(hasLocation) {\n        text.push(pt.loc);\n    } else if(hasLon && hasLat) {\n        text.push('(' + format(pointData.latLabel) + ', ' + format(pointData.lonLabel) + ')');\n    } else if(hasLon) {\n        text.push(labels.lon + format(pointData.lonLabel));\n    } else if(hasLat) {\n        text.push(labels.lat + format(pointData.latLabel));\n    }\n\n    if(hasText) {\n        fillText(pt, trace, text);\n    }\n\n    return text.join('<br>');\n}\n"]},"metadata":{},"sourceType":"script"}