{"ast":null,"code":"module.exports = multiply;\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3],\n      a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7],\n      a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11],\n      a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n;","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/gl-mat4/multiply.js"],"names":["module","exports","multiply","out","a","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3"],"mappings":"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","sourcesContent":["module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};"]},"metadata":{},"sourceType":"script"}