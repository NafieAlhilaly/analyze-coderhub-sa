{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar loggers = require('./loggers');\n\nvar matrix = require('./matrix');\n\nvar mat4X4 = require('gl-mat4');\n/**\n * Allow referencing a graph DOM element either directly\n * or by its id string\n *\n * @param {HTMLDivElement|string} gd: a graph element or its id\n *\n * @returns {HTMLDivElement} the DOM element of the graph\n */\n\n\nfunction getGraphDiv(gd) {\n  var gdElement;\n\n  if (typeof gd === 'string') {\n    gdElement = document.getElementById(gd);\n\n    if (gdElement === null) {\n      throw new Error('No DOM element with id \\'' + gd + '\\' exists on the page.');\n    }\n\n    return gdElement;\n  } else if (gd === null || gd === undefined) {\n    throw new Error('DOM element provided is null or undefined');\n  } // otherwise assume that gd is a DOM element\n\n\n  return gd;\n}\n\nfunction isPlotDiv(el) {\n  var el3 = d3.select(el);\n  return el3.node() instanceof HTMLElement && el3.size() && el3.classed('js-plotly-plot');\n}\n\nfunction removeElement(el) {\n  var elParent = el && el.parentNode;\n  if (elParent) elParent.removeChild(el);\n}\n/**\n * for dynamically adding style rules\n * makes one stylesheet that contains all rules added\n * by all calls to this function\n */\n\n\nfunction addStyleRule(selector, styleString) {\n  addRelatedStyleRule('global', selector, styleString);\n}\n/**\n * for dynamically adding style rules\n * to a stylesheet uniquely identified by a uid\n */\n\n\nfunction addRelatedStyleRule(uid, selector, styleString) {\n  var id = 'plotly.js-style-' + uid;\n  var style = document.getElementById(id);\n\n  if (!style) {\n    style = document.createElement('style');\n    style.setAttribute('id', id); // WebKit hack :(\n\n    style.appendChild(document.createTextNode(''));\n    document.head.appendChild(style);\n  }\n\n  var styleSheet = style.sheet;\n\n  if (styleSheet.insertRule) {\n    styleSheet.insertRule(selector + '{' + styleString + '}', 0);\n  } else if (styleSheet.addRule) {\n    styleSheet.addRule(selector, styleString, 0);\n  } else loggers.warn('addStyleRule failed');\n}\n/**\n * to remove from the page a stylesheet identified by a given uid\n */\n\n\nfunction deleteRelatedStyleRule(uid) {\n  var id = 'plotly.js-style-' + uid;\n  var style = document.getElementById(id);\n  if (style) removeElement(style);\n}\n\nfunction getFullTransformMatrix(element) {\n  var allElements = getElementAndAncestors(element); // the identity matrix\n\n  var out = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n  allElements.forEach(function (e) {\n    var t = getElementTransformMatrix(e);\n\n    if (t) {\n      var m = matrix.convertCssMatrix(t);\n      out = mat4X4.multiply(out, out, m);\n    }\n  });\n  return out;\n}\n/**\n * extracts and parses the 2d css style transform matrix from some element\n */\n\n\nfunction getElementTransformMatrix(element) {\n  var style = window.getComputedStyle(element, null);\n  var transform = style.getPropertyValue('-webkit-transform') || style.getPropertyValue('-moz-transform') || style.getPropertyValue('-ms-transform') || style.getPropertyValue('-o-transform') || style.getPropertyValue('transform');\n  if (transform === 'none') return null; // the transform is a string in the form of matrix(a, b, ...) or matrix3d(...)\n\n  return transform.replace('matrix', '').replace('3d', '').slice(1, -1).split(',').map(function (n) {\n    return +n;\n  });\n}\n/**\n * retrieve all DOM elements that are ancestors of the specified one (including itself)\n */\n\n\nfunction getElementAndAncestors(element) {\n  var allElements = [];\n\n  while (isTransformableElement(element)) {\n    allElements.push(element);\n    element = element.parentNode;\n  }\n\n  return allElements;\n}\n\nfunction isTransformableElement(element) {\n  return element && (element instanceof Element || element instanceof HTMLElement);\n}\n\nfunction equalDomRects(a, b) {\n  return a && b && a.x === b.x && a.y === b.y && a.top === b.top && a.left === b.left && a.right === b.right && a.bottom === b.bottom;\n}\n\nmodule.exports = {\n  getGraphDiv: getGraphDiv,\n  isPlotDiv: isPlotDiv,\n  removeElement: removeElement,\n  addStyleRule: addStyleRule,\n  addRelatedStyleRule: addRelatedStyleRule,\n  deleteRelatedStyleRule: deleteRelatedStyleRule,\n  getFullTransformMatrix: getFullTransformMatrix,\n  getElementTransformMatrix: getElementTransformMatrix,\n  getElementAndAncestors: getElementAndAncestors,\n  equalDomRects: equalDomRects\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/lib/dom.js"],"names":["d3","require","loggers","matrix","mat4X4","getGraphDiv","gd","gdElement","document","getElementById","Error","undefined","isPlotDiv","el","el3","select","node","HTMLElement","size","classed","removeElement","elParent","parentNode","removeChild","addStyleRule","selector","styleString","addRelatedStyleRule","uid","id","style","createElement","setAttribute","appendChild","createTextNode","head","styleSheet","sheet","insertRule","addRule","warn","deleteRelatedStyleRule","getFullTransformMatrix","element","allElements","getElementAndAncestors","out","forEach","e","t","getElementTransformMatrix","m","convertCssMatrix","multiply","window","getComputedStyle","transform","getPropertyValue","replace","slice","split","map","n","isTransformableElement","push","Element","equalDomRects","a","b","x","y","top","left","right","bottom","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar loggers = require('./loggers');\nvar matrix = require('./matrix');\nvar mat4X4 = require('gl-mat4');\n\n/**\n * Allow referencing a graph DOM element either directly\n * or by its id string\n *\n * @param {HTMLDivElement|string} gd: a graph element or its id\n *\n * @returns {HTMLDivElement} the DOM element of the graph\n */\nfunction getGraphDiv(gd) {\n    var gdElement;\n\n    if(typeof gd === 'string') {\n        gdElement = document.getElementById(gd);\n\n        if(gdElement === null) {\n            throw new Error('No DOM element with id \\'' + gd + '\\' exists on the page.');\n        }\n\n        return gdElement;\n    } else if(gd === null || gd === undefined) {\n        throw new Error('DOM element provided is null or undefined');\n    }\n\n    // otherwise assume that gd is a DOM element\n    return gd;\n}\n\nfunction isPlotDiv(el) {\n    var el3 = d3.select(el);\n    return el3.node() instanceof HTMLElement &&\n        el3.size() &&\n        el3.classed('js-plotly-plot');\n}\n\nfunction removeElement(el) {\n    var elParent = el && el.parentNode;\n    if(elParent) elParent.removeChild(el);\n}\n\n/**\n * for dynamically adding style rules\n * makes one stylesheet that contains all rules added\n * by all calls to this function\n */\nfunction addStyleRule(selector, styleString) {\n    addRelatedStyleRule('global', selector, styleString);\n}\n\n/**\n * for dynamically adding style rules\n * to a stylesheet uniquely identified by a uid\n */\nfunction addRelatedStyleRule(uid, selector, styleString) {\n    var id = 'plotly.js-style-' + uid;\n    var style = document.getElementById(id);\n    if(!style) {\n        style = document.createElement('style');\n        style.setAttribute('id', id);\n        // WebKit hack :(\n        style.appendChild(document.createTextNode(''));\n        document.head.appendChild(style);\n    }\n    var styleSheet = style.sheet;\n\n    if(styleSheet.insertRule) {\n        styleSheet.insertRule(selector + '{' + styleString + '}', 0);\n    } else if(styleSheet.addRule) {\n        styleSheet.addRule(selector, styleString, 0);\n    } else loggers.warn('addStyleRule failed');\n}\n\n/**\n * to remove from the page a stylesheet identified by a given uid\n */\nfunction deleteRelatedStyleRule(uid) {\n    var id = 'plotly.js-style-' + uid;\n    var style = document.getElementById(id);\n    if(style) removeElement(style);\n}\n\nfunction getFullTransformMatrix(element) {\n    var allElements = getElementAndAncestors(element);\n    // the identity matrix\n    var out = [\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1\n    ];\n    allElements.forEach(function(e) {\n        var t = getElementTransformMatrix(e);\n        if(t) {\n            var m = matrix.convertCssMatrix(t);\n            out = mat4X4.multiply(out, out, m);\n        }\n    });\n    return out;\n}\n\n/**\n * extracts and parses the 2d css style transform matrix from some element\n */\nfunction getElementTransformMatrix(element) {\n    var style = window.getComputedStyle(element, null);\n    var transform = (\n      style.getPropertyValue('-webkit-transform') ||\n      style.getPropertyValue('-moz-transform') ||\n      style.getPropertyValue('-ms-transform') ||\n      style.getPropertyValue('-o-transform') ||\n      style.getPropertyValue('transform')\n    );\n\n    if(transform === 'none') return null;\n    // the transform is a string in the form of matrix(a, b, ...) or matrix3d(...)\n    return transform\n        .replace('matrix', '')\n        .replace('3d', '')\n        .slice(1, -1)\n        .split(',')\n        .map(function(n) { return +n; });\n}\n/**\n * retrieve all DOM elements that are ancestors of the specified one (including itself)\n */\nfunction getElementAndAncestors(element) {\n    var allElements = [];\n    while(isTransformableElement(element)) {\n        allElements.push(element);\n        element = element.parentNode;\n    }\n    return allElements;\n}\n\nfunction isTransformableElement(element) {\n    return element && (element instanceof Element || element instanceof HTMLElement);\n}\n\nfunction equalDomRects(a, b) {\n    return (\n        a && b &&\n        a.x === b.x &&\n        a.y === b.y &&\n        a.top === b.top &&\n        a.left === b.left &&\n        a.right === b.right &&\n        a.bottom === b.bottom\n    );\n}\n\nmodule.exports = {\n    getGraphDiv: getGraphDiv,\n    isPlotDiv: isPlotDiv,\n    removeElement: removeElement,\n    addStyleRule: addStyleRule,\n    addRelatedStyleRule: addRelatedStyleRule,\n    deleteRelatedStyleRule: deleteRelatedStyleRule,\n    getFullTransformMatrix: getFullTransformMatrix,\n    getElementTransformMatrix: getElementTransformMatrix,\n    getElementAndAncestors: getElementAndAncestors,\n    equalDomRects: equalDomRects\n};\n"]},"metadata":{},"sourceType":"script"}