{"ast":null,"code":"'use strict';\n\nvar Color = require('../../../components/color');\n\nvar axesAttrs = require('../../cartesian/layout_attributes');\n\nvar extendFlat = require('../../../lib/extend').extendFlat;\n\nvar overrideAll = require('../../../plot_api/edit_types').overrideAll;\n\nmodule.exports = overrideAll({\n  visible: axesAttrs.visible,\n  showspikes: {\n    valType: 'boolean',\n    dflt: true,\n    description: ['Sets whether or not spikes starting from', 'data points to this axis\\' wall are shown on hover.'].join(' ')\n  },\n  spikesides: {\n    valType: 'boolean',\n    dflt: true,\n    description: ['Sets whether or not spikes extending from the', 'projection data points to this axis\\' wall boundaries', 'are shown on hover.'].join(' ')\n  },\n  spikethickness: {\n    valType: 'number',\n    min: 0,\n    dflt: 2,\n    description: 'Sets the thickness (in px) of the spikes.'\n  },\n  spikecolor: {\n    valType: 'color',\n    dflt: Color.defaultLine,\n    description: 'Sets the color of the spikes.'\n  },\n  showbackground: {\n    valType: 'boolean',\n    dflt: false,\n    description: ['Sets whether or not this axis\\' wall', 'has a background color.'].join(' ')\n  },\n  backgroundcolor: {\n    valType: 'color',\n    dflt: 'rgba(204, 204, 204, 0.5)',\n    description: 'Sets the background color of this axis\\' wall.'\n  },\n  showaxeslabels: {\n    valType: 'boolean',\n    dflt: true,\n    description: 'Sets whether or not this axis is labeled'\n  },\n  color: axesAttrs.color,\n  categoryorder: axesAttrs.categoryorder,\n  categoryarray: axesAttrs.categoryarray,\n  title: {\n    text: axesAttrs.title.text,\n    font: axesAttrs.title.font\n  },\n  type: extendFlat({}, axesAttrs.type, {\n    values: ['-', 'linear', 'log', 'date', 'category']\n  }),\n  autotypenumbers: axesAttrs.autotypenumbers,\n  autorange: axesAttrs.autorange,\n  rangemode: axesAttrs.rangemode,\n  range: extendFlat({}, axesAttrs.range, {\n    items: [{\n      valType: 'any',\n      editType: 'plot',\n      impliedEdits: {\n        '^autorange': false\n      }\n    }, {\n      valType: 'any',\n      editType: 'plot',\n      impliedEdits: {\n        '^autorange': false\n      }\n    }],\n    anim: false\n  }),\n  // ticks\n  tickmode: axesAttrs.tickmode,\n  nticks: axesAttrs.nticks,\n  tick0: axesAttrs.tick0,\n  dtick: axesAttrs.dtick,\n  tickvals: axesAttrs.tickvals,\n  ticktext: axesAttrs.ticktext,\n  ticks: axesAttrs.ticks,\n  mirror: axesAttrs.mirror,\n  ticklen: axesAttrs.ticklen,\n  tickwidth: axesAttrs.tickwidth,\n  tickcolor: axesAttrs.tickcolor,\n  showticklabels: axesAttrs.showticklabels,\n  tickfont: axesAttrs.tickfont,\n  tickangle: axesAttrs.tickangle,\n  tickprefix: axesAttrs.tickprefix,\n  showtickprefix: axesAttrs.showtickprefix,\n  ticksuffix: axesAttrs.ticksuffix,\n  showticksuffix: axesAttrs.showticksuffix,\n  showexponent: axesAttrs.showexponent,\n  exponentformat: axesAttrs.exponentformat,\n  minexponent: axesAttrs.minexponent,\n  separatethousands: axesAttrs.separatethousands,\n  tickformat: axesAttrs.tickformat,\n  tickformatstops: axesAttrs.tickformatstops,\n  hoverformat: axesAttrs.hoverformat,\n  // lines and grids\n  showline: axesAttrs.showline,\n  linecolor: axesAttrs.linecolor,\n  linewidth: axesAttrs.linewidth,\n  showgrid: axesAttrs.showgrid,\n  gridcolor: extendFlat({}, axesAttrs.gridcolor, // shouldn't this be on-par with 2D?\n  {\n    dflt: 'rgb(204, 204, 204)'\n  }),\n  gridwidth: axesAttrs.gridwidth,\n  zeroline: axesAttrs.zeroline,\n  zerolinecolor: axesAttrs.zerolinecolor,\n  zerolinewidth: axesAttrs.zerolinewidth,\n  _deprecated: {\n    title: axesAttrs._deprecated.title,\n    titlefont: axesAttrs._deprecated.titlefont\n  }\n}, 'plot', 'from-root');","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/plots/gl3d/layout/axis_attributes.js"],"names":["Color","require","axesAttrs","extendFlat","overrideAll","module","exports","visible","showspikes","valType","dflt","description","join","spikesides","spikethickness","min","spikecolor","defaultLine","showbackground","backgroundcolor","showaxeslabels","color","categoryorder","categoryarray","title","text","font","type","values","autotypenumbers","autorange","rangemode","range","items","editType","impliedEdits","anim","tickmode","nticks","tick0","dtick","tickvals","ticktext","ticks","mirror","ticklen","tickwidth","tickcolor","showticklabels","tickfont","tickangle","tickprefix","showtickprefix","ticksuffix","showticksuffix","showexponent","exponentformat","minexponent","separatethousands","tickformat","tickformatstops","hoverformat","showline","linecolor","linewidth","showgrid","gridcolor","gridwidth","zeroline","zerolinecolor","zerolinewidth","_deprecated","titlefont"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Color = require('../../../components/color');\nvar axesAttrs = require('../../cartesian/layout_attributes');\nvar extendFlat = require('../../../lib/extend').extendFlat;\nvar overrideAll = require('../../../plot_api/edit_types').overrideAll;\n\nmodule.exports = overrideAll({\n    visible: axesAttrs.visible,\n    showspikes: {\n        valType: 'boolean',\n        dflt: true,\n        description: [\n            'Sets whether or not spikes starting from',\n            'data points to this axis\\' wall are shown on hover.'\n        ].join(' ')\n    },\n    spikesides: {\n        valType: 'boolean',\n        dflt: true,\n        description: [\n            'Sets whether or not spikes extending from the',\n            'projection data points to this axis\\' wall boundaries',\n            'are shown on hover.'\n        ].join(' ')\n    },\n    spikethickness: {\n        valType: 'number',\n        min: 0,\n        dflt: 2,\n        description: 'Sets the thickness (in px) of the spikes.'\n    },\n    spikecolor: {\n        valType: 'color',\n        dflt: Color.defaultLine,\n        description: 'Sets the color of the spikes.'\n    },\n    showbackground: {\n        valType: 'boolean',\n        dflt: false,\n        description: [\n            'Sets whether or not this axis\\' wall',\n            'has a background color.'\n        ].join(' ')\n    },\n    backgroundcolor: {\n        valType: 'color',\n        dflt: 'rgba(204, 204, 204, 0.5)',\n        description: 'Sets the background color of this axis\\' wall.'\n    },\n    showaxeslabels: {\n        valType: 'boolean',\n        dflt: true,\n        description: 'Sets whether or not this axis is labeled'\n    },\n    color: axesAttrs.color,\n    categoryorder: axesAttrs.categoryorder,\n    categoryarray: axesAttrs.categoryarray,\n    title: {\n        text: axesAttrs.title.text,\n        font: axesAttrs.title.font\n    },\n    type: extendFlat({}, axesAttrs.type, {\n        values: ['-', 'linear', 'log', 'date', 'category']\n    }),\n    autotypenumbers: axesAttrs.autotypenumbers,\n    autorange: axesAttrs.autorange,\n    rangemode: axesAttrs.rangemode,\n    range: extendFlat({}, axesAttrs.range, {\n        items: [\n            {valType: 'any', editType: 'plot', impliedEdits: {'^autorange': false}},\n            {valType: 'any', editType: 'plot', impliedEdits: {'^autorange': false}}\n        ],\n        anim: false\n    }),\n    // ticks\n    tickmode: axesAttrs.tickmode,\n    nticks: axesAttrs.nticks,\n    tick0: axesAttrs.tick0,\n    dtick: axesAttrs.dtick,\n    tickvals: axesAttrs.tickvals,\n    ticktext: axesAttrs.ticktext,\n    ticks: axesAttrs.ticks,\n    mirror: axesAttrs.mirror,\n    ticklen: axesAttrs.ticklen,\n    tickwidth: axesAttrs.tickwidth,\n    tickcolor: axesAttrs.tickcolor,\n    showticklabels: axesAttrs.showticklabels,\n    tickfont: axesAttrs.tickfont,\n    tickangle: axesAttrs.tickangle,\n    tickprefix: axesAttrs.tickprefix,\n    showtickprefix: axesAttrs.showtickprefix,\n    ticksuffix: axesAttrs.ticksuffix,\n    showticksuffix: axesAttrs.showticksuffix,\n    showexponent: axesAttrs.showexponent,\n    exponentformat: axesAttrs.exponentformat,\n    minexponent: axesAttrs.minexponent,\n    separatethousands: axesAttrs.separatethousands,\n    tickformat: axesAttrs.tickformat,\n    tickformatstops: axesAttrs.tickformatstops,\n    hoverformat: axesAttrs.hoverformat,\n    // lines and grids\n    showline: axesAttrs.showline,\n    linecolor: axesAttrs.linecolor,\n    linewidth: axesAttrs.linewidth,\n    showgrid: axesAttrs.showgrid,\n    gridcolor: extendFlat({}, axesAttrs.gridcolor,  // shouldn't this be on-par with 2D?\n        {dflt: 'rgb(204, 204, 204)'}),\n    gridwidth: axesAttrs.gridwidth,\n    zeroline: axesAttrs.zeroline,\n    zerolinecolor: axesAttrs.zerolinecolor,\n    zerolinewidth: axesAttrs.zerolinewidth,\n    _deprecated: {\n        title: axesAttrs._deprecated.title,\n        titlefont: axesAttrs._deprecated.titlefont\n    }\n}, 'plot', 'from-root');\n"]},"metadata":{},"sourceType":"script"}