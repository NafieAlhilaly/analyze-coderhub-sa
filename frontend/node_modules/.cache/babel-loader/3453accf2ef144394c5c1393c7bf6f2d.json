{"ast":null,"code":"'use strict';\n\nvar dash = require('../../drawing/attributes').dash;\n\nvar extendFlat = require('../../../lib/extend').extendFlat;\n\nmodule.exports = {\n  newshape: {\n    line: {\n      color: {\n        valType: 'color',\n        editType: 'none',\n        description: ['Sets the line color.', 'By default uses either dark grey or white', 'to increase contrast with background color.'].join(' ')\n      },\n      width: {\n        valType: 'number',\n        min: 0,\n        dflt: 4,\n        editType: 'none',\n        description: 'Sets the line width (in px).'\n      },\n      dash: extendFlat({}, dash, {\n        dflt: 'solid',\n        editType: 'none'\n      }),\n      editType: 'none'\n    },\n    fillcolor: {\n      valType: 'color',\n      dflt: 'rgba(0,0,0,0)',\n      editType: 'none',\n      description: ['Sets the color filling new shapes\\' interior.', 'Please note that if using a fillcolor with alpha greater than half,', 'drag inside the active shape starts moving the shape underneath,', 'otherwise a new shape could be started over.'].join(' ')\n    },\n    fillrule: {\n      valType: 'enumerated',\n      values: ['evenodd', 'nonzero'],\n      dflt: 'evenodd',\n      editType: 'none',\n      description: ['Determines the path\\'s interior.', 'For more info please visit https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-rule'].join(' ')\n    },\n    opacity: {\n      valType: 'number',\n      min: 0,\n      max: 1,\n      dflt: 1,\n      editType: 'none',\n      description: 'Sets the opacity of new shapes.'\n    },\n    layer: {\n      valType: 'enumerated',\n      values: ['below', 'above'],\n      dflt: 'above',\n      editType: 'none',\n      description: 'Specifies whether new shapes are drawn below or above traces.'\n    },\n    drawdirection: {\n      valType: 'enumerated',\n      values: ['ortho', 'horizontal', 'vertical', 'diagonal'],\n      dflt: 'diagonal',\n      editType: 'none',\n      description: ['When `dragmode` is set to *drawrect*, *drawline* or *drawcircle*', 'this limits the drag to be horizontal, vertical or diagonal.', 'Using *diagonal* there is no limit e.g. in drawing lines in any direction.', '*ortho* limits the draw to be either horizontal or vertical.', '*horizontal* allows horizontal extend.', '*vertical* allows vertical extend.'].join(' ')\n    },\n    editType: 'none'\n  },\n  activeshape: {\n    fillcolor: {\n      valType: 'color',\n      dflt: 'rgb(255,0,255)',\n      editType: 'none',\n      description: 'Sets the color filling the active shape\\' interior.'\n    },\n    opacity: {\n      valType: 'number',\n      min: 0,\n      max: 1,\n      dflt: 0.5,\n      editType: 'none',\n      description: 'Sets the opacity of the active shape.'\n    },\n    editType: 'none'\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/shapes/draw_newshape/attributes.js"],"names":["dash","require","extendFlat","module","exports","newshape","line","color","valType","editType","description","join","width","min","dflt","fillcolor","fillrule","values","opacity","max","layer","drawdirection","activeshape"],"mappings":"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","sourcesContent":["'use strict';\n\nvar dash = require('../../drawing/attributes').dash;\nvar extendFlat = require('../../../lib/extend').extendFlat;\n\nmodule.exports = {\n    newshape: {\n        line: {\n            color: {\n                valType: 'color',\n                editType: 'none',\n                description: [\n                    'Sets the line color.',\n                    'By default uses either dark grey or white',\n                    'to increase contrast with background color.'\n                ].join(' ')\n            },\n            width: {\n                valType: 'number',\n                min: 0,\n                dflt: 4,\n                editType: 'none',\n                description: 'Sets the line width (in px).'\n            },\n            dash: extendFlat({}, dash, {\n                dflt: 'solid',\n                editType: 'none'\n            }),\n            editType: 'none'\n        },\n        fillcolor: {\n            valType: 'color',\n            dflt: 'rgba(0,0,0,0)',\n            editType: 'none',\n            description: [\n                'Sets the color filling new shapes\\' interior.',\n                'Please note that if using a fillcolor with alpha greater than half,',\n                'drag inside the active shape starts moving the shape underneath,',\n                'otherwise a new shape could be started over.'\n            ].join(' ')\n        },\n        fillrule: {\n            valType: 'enumerated',\n            values: ['evenodd', 'nonzero'],\n            dflt: 'evenodd',\n            editType: 'none',\n            description: [\n                'Determines the path\\'s interior.',\n                'For more info please visit https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-rule'\n            ].join(' ')\n        },\n        opacity: {\n            valType: 'number',\n            min: 0,\n            max: 1,\n            dflt: 1,\n            editType: 'none',\n            description: 'Sets the opacity of new shapes.'\n        },\n        layer: {\n            valType: 'enumerated',\n            values: ['below', 'above'],\n            dflt: 'above',\n            editType: 'none',\n            description: 'Specifies whether new shapes are drawn below or above traces.'\n        },\n        drawdirection: {\n            valType: 'enumerated',\n            values: ['ortho', 'horizontal', 'vertical', 'diagonal'],\n            dflt: 'diagonal',\n            editType: 'none',\n            description: [\n                'When `dragmode` is set to *drawrect*, *drawline* or *drawcircle*',\n                'this limits the drag to be horizontal, vertical or diagonal.',\n                'Using *diagonal* there is no limit e.g. in drawing lines in any direction.',\n                '*ortho* limits the draw to be either horizontal or vertical.',\n                '*horizontal* allows horizontal extend.',\n                '*vertical* allows vertical extend.'\n            ].join(' ')\n        },\n\n        editType: 'none'\n    },\n\n    activeshape: {\n        fillcolor: {\n            valType: 'color',\n            dflt: 'rgb(255,0,255)',\n            editType: 'none',\n            description: 'Sets the color filling the active shape\\' interior.'\n        },\n        opacity: {\n            valType: 'number',\n            min: 0,\n            max: 1,\n            dflt: 0.5,\n            editType: 'none',\n            description: 'Sets the opacity of the active shape.'\n        },\n        editType: 'none'\n    }\n};\n"]},"metadata":{},"sourceType":"script"}