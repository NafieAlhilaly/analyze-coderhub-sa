{"ast":null,"code":"'use strict';\n/**\n * Histogram has its own attribute, defaults and calc steps,\n * but uses bar's plot to display\n * and bar's crossTraceCalc (formerly known as setPositions) for stacking and grouping\n */\n\n/**\n * histogram errorBarsOK is debatable, but it's put in for backward compat.\n * there are use cases for it - sqrt for a simple histogram works right now,\n * constant and % work but they're not so meaningful. I guess it could be cool\n * to allow quadrature combination of errors in summed histograms...\n */\n\nmodule.exports = {\n  attributes: require('./attributes'),\n  layoutAttributes: require('../bar/layout_attributes'),\n  supplyDefaults: require('./defaults'),\n  crossTraceDefaults: require('./cross_trace_defaults'),\n  supplyLayoutDefaults: require('../bar/layout_defaults'),\n  calc: require('./calc').calc,\n  crossTraceCalc: require('../bar/cross_trace_calc').crossTraceCalc,\n  plot: require('../bar/plot').plot,\n  layerName: 'barlayer',\n  style: require('../bar/style').style,\n  styleOnSelect: require('../bar/style').styleOnSelect,\n  colorbar: require('../scatter/marker_colorbar'),\n  hoverPoints: require('./hover'),\n  selectPoints: require('../bar/select'),\n  eventData: require('./event_data'),\n  moduleType: 'trace',\n  name: 'histogram',\n  basePlotModule: require('../../plots/cartesian'),\n  categories: ['bar-like', 'cartesian', 'svg', 'bar', 'histogram', 'oriented', 'errorBarsOK', 'showLegend'],\n  meta: {\n    description: ['The sample data from which statistics are computed is set in `x`', 'for vertically spanning histograms and', 'in `y` for horizontally spanning histograms.', 'Binning options are set `xbins` and `ybins` respectively', 'if no aggregation data is provided.'].join(' ')\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/histogram/index.js"],"names":["module","exports","attributes","require","layoutAttributes","supplyDefaults","crossTraceDefaults","supplyLayoutDefaults","calc","crossTraceCalc","plot","layerName","style","styleOnSelect","colorbar","hoverPoints","selectPoints","eventData","moduleType","name","basePlotModule","categories","meta","description","join"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,UAAU,EAAEC,OAAO,CAAC,cAAD,CADN;AAEbC,EAAAA,gBAAgB,EAAED,OAAO,CAAC,0BAAD,CAFZ;AAGbE,EAAAA,cAAc,EAAEF,OAAO,CAAC,YAAD,CAHV;AAIbG,EAAAA,kBAAkB,EAAEH,OAAO,CAAC,wBAAD,CAJd;AAKbI,EAAAA,oBAAoB,EAAEJ,OAAO,CAAC,wBAAD,CALhB;AAMbK,EAAAA,IAAI,EAAEL,OAAO,CAAC,QAAD,CAAP,CAAkBK,IANX;AAObC,EAAAA,cAAc,EAAEN,OAAO,CAAC,yBAAD,CAAP,CAAmCM,cAPtC;AAQbC,EAAAA,IAAI,EAAEP,OAAO,CAAC,aAAD,CAAP,CAAuBO,IARhB;AASbC,EAAAA,SAAS,EAAE,UATE;AAUbC,EAAAA,KAAK,EAAET,OAAO,CAAC,cAAD,CAAP,CAAwBS,KAVlB;AAWbC,EAAAA,aAAa,EAAEV,OAAO,CAAC,cAAD,CAAP,CAAwBU,aAX1B;AAYbC,EAAAA,QAAQ,EAAEX,OAAO,CAAC,4BAAD,CAZJ;AAabY,EAAAA,WAAW,EAAEZ,OAAO,CAAC,SAAD,CAbP;AAcba,EAAAA,YAAY,EAAEb,OAAO,CAAC,eAAD,CAdR;AAebc,EAAAA,SAAS,EAAEd,OAAO,CAAC,cAAD,CAfL;AAiBbe,EAAAA,UAAU,EAAE,OAjBC;AAkBbC,EAAAA,IAAI,EAAE,WAlBO;AAmBbC,EAAAA,cAAc,EAAEjB,OAAO,CAAC,uBAAD,CAnBV;AAoBbkB,EAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,KAA1B,EAAiC,KAAjC,EAAwC,WAAxC,EAAqD,UAArD,EAAiE,aAAjE,EAAgF,YAAhF,CApBC;AAqBbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAE,CACT,kEADS,EAET,wCAFS,EAGT,8CAHS,EAIT,0DAJS,EAKT,qCALS,EAMXC,IANW,CAMN,GANM;AADX;AArBO,CAAjB","sourcesContent":["'use strict';\n\n/**\n * Histogram has its own attribute, defaults and calc steps,\n * but uses bar's plot to display\n * and bar's crossTraceCalc (formerly known as setPositions) for stacking and grouping\n */\n\n/**\n * histogram errorBarsOK is debatable, but it's put in for backward compat.\n * there are use cases for it - sqrt for a simple histogram works right now,\n * constant and % work but they're not so meaningful. I guess it could be cool\n * to allow quadrature combination of errors in summed histograms...\n */\n\nmodule.exports = {\n    attributes: require('./attributes'),\n    layoutAttributes: require('../bar/layout_attributes'),\n    supplyDefaults: require('./defaults'),\n    crossTraceDefaults: require('./cross_trace_defaults'),\n    supplyLayoutDefaults: require('../bar/layout_defaults'),\n    calc: require('./calc').calc,\n    crossTraceCalc: require('../bar/cross_trace_calc').crossTraceCalc,\n    plot: require('../bar/plot').plot,\n    layerName: 'barlayer',\n    style: require('../bar/style').style,\n    styleOnSelect: require('../bar/style').styleOnSelect,\n    colorbar: require('../scatter/marker_colorbar'),\n    hoverPoints: require('./hover'),\n    selectPoints: require('../bar/select'),\n    eventData: require('./event_data'),\n\n    moduleType: 'trace',\n    name: 'histogram',\n    basePlotModule: require('../../plots/cartesian'),\n    categories: ['bar-like', 'cartesian', 'svg', 'bar', 'histogram', 'oriented', 'errorBarsOK', 'showLegend'],\n    meta: {\n        description: [\n            'The sample data from which statistics are computed is set in `x`',\n            'for vertically spanning histograms and',\n            'in `y` for horizontally spanning histograms.',\n            'Binning options are set `xbins` and `ybins` respectively',\n            'if no aggregation data is provided.'\n        ].join(' ')\n    }\n};\n"]},"metadata":{},"sourceType":"script"}