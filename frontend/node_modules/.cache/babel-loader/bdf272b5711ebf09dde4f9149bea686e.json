{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar attrs = require('./layout_attributes');\n\nmodule.exports = function (layoutIn, layoutOut, fullData) {\n  var subplotsDone = {};\n  var sp;\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(layoutIn[sp] || {}, layoutOut[sp], attrs, attr, dflt);\n  }\n\n  for (var i = 0; i < fullData.length; i++) {\n    var trace = fullData[i];\n\n    if (trace.type === 'barpolar' && trace.visible === true) {\n      sp = trace.subplot;\n\n      if (!subplotsDone[sp]) {\n        coerce('barmode');\n        coerce('bargap');\n        subplotsDone[sp] = 1;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/barpolar/layout_defaults.js"],"names":["Lib","require","attrs","module","exports","layoutIn","layoutOut","fullData","subplotsDone","sp","coerce","attr","dflt","i","length","trace","type","visible","subplot"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,qBAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,EAAwC;AACrD,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,EAAJ;;AAEA,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACxB,WAAOZ,GAAG,CAACU,MAAJ,CAAWL,QAAQ,CAACI,EAAD,CAAR,IAAgB,EAA3B,EAA+BH,SAAS,CAACG,EAAD,CAAxC,EAA8CP,KAA9C,EAAqDS,IAArD,EAA2DC,IAA3D,CAAP;AACH;;AAED,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,QAAQ,CAACO,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,QAAIE,KAAK,GAAGR,QAAQ,CAACM,CAAD,CAApB;;AACA,QAAGE,KAAK,CAACC,IAAN,KAAe,UAAf,IAA6BD,KAAK,CAACE,OAAN,KAAkB,IAAlD,EAAwD;AACpDR,MAAAA,EAAE,GAAGM,KAAK,CAACG,OAAX;;AACA,UAAG,CAACV,YAAY,CAACC,EAAD,CAAhB,EAAsB;AAClBC,QAAAA,MAAM,CAAC,SAAD,CAAN;AACAA,QAAAA,MAAM,CAAC,QAAD,CAAN;AACAF,QAAAA,YAAY,CAACC,EAAD,CAAZ,GAAmB,CAAnB;AACH;AACJ;AACJ;AACJ,CAnBD","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar attrs = require('./layout_attributes');\n\nmodule.exports = function(layoutIn, layoutOut, fullData) {\n    var subplotsDone = {};\n    var sp;\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(layoutIn[sp] || {}, layoutOut[sp], attrs, attr, dflt);\n    }\n\n    for(var i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n        if(trace.type === 'barpolar' && trace.visible === true) {\n            sp = trace.subplot;\n            if(!subplotsDone[sp]) {\n                coerce('barmode');\n                coerce('bargap');\n                subplotsDone[sp] = 1;\n            }\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}