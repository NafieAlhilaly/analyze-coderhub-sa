{"ast":null,"code":"module.exports = transformQuat;\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      // calculate quat * vec\n  ix = qw * x + qy * z - qz * y,\n      iy = qw * y + qz * x - qx * z,\n      iz = qw * z + qx * y - qy * x,\n      iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/gl-vec4/transformQuat.js"],"names":["module","exports","transformQuat","out","a","q","x","y","z","qx","qy","qz","qw","ix","iy","iz","iw"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,aAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,aAAT,CAAwBC,GAAxB,EAA6BC,CAA7B,EAAgCC,CAAhC,EAAmC;AACjC,MAAIC,CAAC,GAAGF,CAAC,CAAC,CAAD,CAAT;AAAA,MAAcG,CAAC,GAAGH,CAAC,CAAC,CAAD,CAAnB;AAAA,MAAwBI,CAAC,GAAGJ,CAAC,CAAC,CAAD,CAA7B;AAAA,MACEK,EAAE,GAAGJ,CAAC,CAAC,CAAD,CADR;AAAA,MACaK,EAAE,GAAGL,CAAC,CAAC,CAAD,CADnB;AAAA,MACwBM,EAAE,GAAGN,CAAC,CAAC,CAAD,CAD9B;AAAA,MACmCO,EAAE,GAAGP,CAAC,CAAC,CAAD,CADzC;AAAA,MAGE;AACAQ,EAAAA,EAAE,GAAGD,EAAE,GAAGN,CAAL,GAASI,EAAE,GAAGF,CAAd,GAAkBG,EAAE,GAAGJ,CAJ9B;AAAA,MAKEO,EAAE,GAAGF,EAAE,GAAGL,CAAL,GAASI,EAAE,GAAGL,CAAd,GAAkBG,EAAE,GAAGD,CAL9B;AAAA,MAMEO,EAAE,GAAGH,EAAE,GAAGJ,CAAL,GAASC,EAAE,GAAGF,CAAd,GAAkBG,EAAE,GAAGJ,CAN9B;AAAA,MAOEU,EAAE,GAAG,CAACP,EAAD,GAAMH,CAAN,GAAUI,EAAE,GAAGH,CAAf,GAAmBI,EAAE,GAAGH,CAP/B,CADiC,CAUjC;;AACAL,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASU,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAG,CAACP,EAAhB,GAAqBK,EAAE,GAAG,CAACH,EAA3B,GAAgCI,EAAE,GAAG,CAACL,EAA/C;AACAP,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASW,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAG,CAACN,EAAhB,GAAqBK,EAAE,GAAG,CAACN,EAA3B,GAAgCI,EAAE,GAAG,CAACF,EAA/C;AACAR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAG,CAACL,EAAhB,GAAqBE,EAAE,GAAG,CAACH,EAA3B,GAAgCI,EAAE,GAAG,CAACL,EAA/C;AACAN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACA,SAAOD,GAAP;AACD","sourcesContent":["module.exports = transformQuat\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nfunction transformQuat (out, a, q) {\n  var x = a[0], y = a[1], z = a[2],\n    qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n    // calculate quat * vec\n    ix = qw * x + qy * z - qz * y,\n    iy = qw * y + qz * x - qx * z,\n    iz = qw * z + qx * y - qy * x,\n    iw = -qx * x - qy * y - qz * z\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx\n  out[3] = a[3]\n  return out\n}\n"]},"metadata":{},"sourceType":"script"}