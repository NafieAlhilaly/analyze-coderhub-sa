{"ast":null,"code":"\"use strict\";\n\"use restrict\";\n\nmodule.exports = UnionFind;\n\nfunction UnionFind(count) {\n  this.roots = new Array(count);\n  this.ranks = new Array(count);\n\n  for (var i = 0; i < count; ++i) {\n    this.roots[i] = i;\n    this.ranks[i] = 0;\n  }\n}\n\nUnionFind.prototype.length = function () {\n  return this.roots.length;\n};\n\nUnionFind.prototype.makeSet = function () {\n  var n = this.roots.length;\n  this.roots.push(n);\n  this.ranks.push(0);\n  return n;\n};\n\nUnionFind.prototype.find = function (x) {\n  var roots = this.roots;\n\n  while (roots[x] !== x) {\n    var y = roots[x];\n    roots[x] = roots[y];\n    x = y;\n  }\n\n  return x;\n};\n\nUnionFind.prototype.link = function (x, y) {\n  var xr = this.find(x),\n      yr = this.find(y);\n\n  if (xr === yr) {\n    return;\n  }\n\n  var ranks = this.ranks,\n      roots = this.roots,\n      xd = ranks[xr],\n      yd = ranks[yr];\n\n  if (xd < yd) {\n    roots[xr] = yr;\n  } else if (yd < xd) {\n    roots[yr] = xr;\n  } else {\n    roots[yr] = xr;\n    ++ranks[xr];\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/simplify-planar-graph/node_modules/union-find/index.js"],"names":["module","exports","UnionFind","count","roots","Array","ranks","i","prototype","length","makeSet","n","push","find","x","y","link","xr","yr","xd","yd"],"mappings":"AAAA;AAAc;;AAEdA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,OAAKC,KAAL,GAAa,IAAIC,KAAJ,CAAUF,KAAV,CAAb;AACA,OAAKG,KAAL,GAAa,IAAID,KAAJ,CAAUF,KAAV,CAAb;;AAEA,OAAI,IAAII,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACJ,KAAf,EAAsB,EAAEI,CAAxB,EAA2B;AACzB,SAAKH,KAAL,CAAWG,CAAX,IAAgBA,CAAhB;AACA,SAAKD,KAAL,CAAWC,CAAX,IAAgB,CAAhB;AACD;AACF;;AAEDL,SAAS,CAACM,SAAV,CAAoBC,MAApB,GAA6B,YAAW;AACtC,SAAO,KAAKL,KAAL,CAAWK,MAAlB;AACD,CAFD;;AAIAP,SAAS,CAACM,SAAV,CAAoBE,OAApB,GAA8B,YAAW;AACvC,MAAIC,CAAC,GAAG,KAAKP,KAAL,CAAWK,MAAnB;AACA,OAAKL,KAAL,CAAWQ,IAAX,CAAgBD,CAAhB;AACA,OAAKL,KAAL,CAAWM,IAAX,CAAgB,CAAhB;AACA,SAAOD,CAAP;AACD,CALD;;AAOAT,SAAS,CAACM,SAAV,CAAoBK,IAApB,GAA2B,UAASC,CAAT,EAAY;AACrC,MAAIV,KAAK,GAAG,KAAKA,KAAjB;;AACA,SAAMA,KAAK,CAACU,CAAD,CAAL,KAAaA,CAAnB,EAAsB;AACpB,QAAIC,CAAC,GAAGX,KAAK,CAACU,CAAD,CAAb;AACAV,IAAAA,KAAK,CAACU,CAAD,CAAL,GAAWV,KAAK,CAACW,CAAD,CAAhB;AACAD,IAAAA,CAAC,GAAGC,CAAJ;AACD;;AACD,SAAOD,CAAP;AACD,CARD;;AAUAZ,SAAS,CAACM,SAAV,CAAoBQ,IAApB,GAA2B,UAASF,CAAT,EAAYC,CAAZ,EAAe;AACxC,MAAIE,EAAE,GAAG,KAAKJ,IAAL,CAAUC,CAAV,CAAT;AAAA,MACII,EAAE,GAAG,KAAKL,IAAL,CAAUE,CAAV,CADT;;AAEA,MAAGE,EAAE,KAAKC,EAAV,EAAc;AACZ;AACD;;AACD,MAAIZ,KAAK,GAAG,KAAKA,KAAjB;AAAA,MACIF,KAAK,GAAG,KAAKA,KADjB;AAAA,MAEIe,EAAE,GAAMb,KAAK,CAACW,EAAD,CAFjB;AAAA,MAGIG,EAAE,GAAMd,KAAK,CAACY,EAAD,CAHjB;;AAIA,MAAGC,EAAE,GAAGC,EAAR,EAAY;AACVhB,IAAAA,KAAK,CAACa,EAAD,CAAL,GAAYC,EAAZ;AACD,GAFD,MAEO,IAAGE,EAAE,GAAGD,EAAR,EAAY;AACjBf,IAAAA,KAAK,CAACc,EAAD,CAAL,GAAYD,EAAZ;AACD,GAFM,MAEA;AACLb,IAAAA,KAAK,CAACc,EAAD,CAAL,GAAYD,EAAZ;AACA,MAAEX,KAAK,CAACW,EAAD,CAAP;AACD;AACF,CAlBD","sourcesContent":["\"use strict\"; \"use restrict\";\n\nmodule.exports = UnionFind;\n\nfunction UnionFind(count) {\n  this.roots = new Array(count);\n  this.ranks = new Array(count);\n  \n  for(var i=0; i<count; ++i) {\n    this.roots[i] = i;\n    this.ranks[i] = 0;\n  }\n}\n\nUnionFind.prototype.length = function() {\n  return this.roots.length;\n}\n\nUnionFind.prototype.makeSet = function() {\n  var n = this.roots.length;\n  this.roots.push(n);\n  this.ranks.push(0);\n  return n;\n}\n\nUnionFind.prototype.find = function(x) {\n  var roots = this.roots;\n  while(roots[x] !== x) {\n    var y = roots[x];\n    roots[x] = roots[y];\n    x = y;\n  }\n  return x;\n}\n\nUnionFind.prototype.link = function(x, y) {\n  var xr = this.find(x)\n    , yr = this.find(y);\n  if(xr === yr) {\n    return;\n  }\n  var ranks = this.ranks\n    , roots = this.roots\n    , xd    = ranks[xr]\n    , yd    = ranks[yr];\n  if(xd < yd) {\n    roots[xr] = yr;\n  } else if(yd < xd) {\n    roots[yr] = xr;\n  } else {\n    roots[yr] = xr;\n    ++ranks[xr];\n  }\n}\n\n"]},"metadata":{},"sourceType":"script"}