{"ast":null,"code":"var vecNormalize = require('./normalize');\n\nvar vecScale = require('./scale');\n\nmodule.exports = random;\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // TODO: This is a pretty awful way of doing this. Find something better.\n\n  out[0] = Math.random();\n  out[1] = Math.random();\n  out[2] = Math.random();\n  out[3] = Math.random();\n  vecNormalize(out, out);\n  vecScale(out, out, scale);\n  return out;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/gl-vec4/random.js"],"names":["vecNormalize","require","vecScale","module","exports","random","out","scale","Math"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,MAAT,CAAiBC,GAAjB,EAAsBC,KAAtB,EAA6B;AAC3BA,EAAAA,KAAK,GAAGA,KAAK,IAAI,GAAjB,CAD2B,CAG3B;;AACAD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASE,IAAI,CAACH,MAAL,EAAT;AACAC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASE,IAAI,CAACH,MAAL,EAAT;AACAC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASE,IAAI,CAACH,MAAL,EAAT;AACAC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASE,IAAI,CAACH,MAAL,EAAT;AACAL,EAAAA,YAAY,CAACM,GAAD,EAAMA,GAAN,CAAZ;AACAJ,EAAAA,QAAQ,CAACI,GAAD,EAAMA,GAAN,EAAWC,KAAX,CAAR;AACA,SAAOD,GAAP;AACD","sourcesContent":["var vecNormalize = require('./normalize')\nvar vecScale = require('./scale')\n\nmodule.exports = random\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nfunction random (out, scale) {\n  scale = scale || 1.0\n\n  // TODO: This is a pretty awful way of doing this. Find something better.\n  out[0] = Math.random()\n  out[1] = Math.random()\n  out[2] = Math.random()\n  out[3] = Math.random()\n  vecNormalize(out, out)\n  vecScale(out, out, scale)\n  return out\n}\n"]},"metadata":{},"sourceType":"script"}