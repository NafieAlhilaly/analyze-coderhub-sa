{"ast":null,"code":"'use strict';\n\nvar compareCell = require('compare-cell');\n\nvar compareOrientedCell = require('compare-oriented-cell');\n\nvar orientation = require('cell-orientation');\n\nmodule.exports = reduceCellComplex;\n\nfunction reduceCellComplex(cells) {\n  cells.sort(compareOrientedCell);\n  var n = cells.length;\n  var ptr = 0;\n\n  for (var i = 0; i < n; ++i) {\n    var c = cells[i];\n    var o = orientation(c);\n\n    if (o === 0) {\n      continue;\n    }\n\n    if (ptr > 0) {\n      var f = cells[ptr - 1];\n\n      if (compareCell(c, f) === 0 && orientation(f) !== o) {\n        ptr -= 1;\n        continue;\n      }\n    }\n\n    cells[ptr++] = c;\n  }\n\n  cells.length = ptr;\n  return cells;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/reduce-simplicial-complex/reduce.js"],"names":["compareCell","require","compareOrientedCell","orientation","module","exports","reduceCellComplex","cells","sort","n","length","ptr","i","c","o","f"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AAEAG,MAAM,CAACC,OAAP,GAAiBC,iBAAjB;;AAEA,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCA,EAAAA,KAAK,CAACC,IAAN,CAAWN,mBAAX;AACA,MAAIO,CAAC,GAAGF,KAAK,CAACG,MAAd;AACA,MAAIC,GAAG,GAAG,CAAV;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,CAAf,EAAkB,EAAEG,CAApB,EAAuB;AACrB,QAAIC,CAAC,GAAGN,KAAK,CAACK,CAAD,CAAb;AACA,QAAIE,CAAC,GAAGX,WAAW,CAACU,CAAD,CAAnB;;AACA,QAAGC,CAAC,KAAK,CAAT,EAAY;AACV;AACD;;AACD,QAAGH,GAAG,GAAG,CAAT,EAAY;AACV,UAAII,CAAC,GAAGR,KAAK,CAACI,GAAG,GAAC,CAAL,CAAb;;AACA,UAAGX,WAAW,CAACa,CAAD,EAAIE,CAAJ,CAAX,KAAsB,CAAtB,IACAZ,WAAW,CAACY,CAAD,CAAX,KAAsBD,CADzB,EAC4B;AAC1BH,QAAAA,GAAG,IAAI,CAAP;AACA;AACD;AACF;;AACDJ,IAAAA,KAAK,CAACI,GAAG,EAAJ,CAAL,GAAeE,CAAf;AACD;;AACDN,EAAAA,KAAK,CAACG,MAAN,GAAeC,GAAf;AACA,SAAOJ,KAAP;AACD","sourcesContent":["'use strict'\n\nvar compareCell = require('compare-cell')\nvar compareOrientedCell = require('compare-oriented-cell')\nvar orientation = require('cell-orientation')\n\nmodule.exports = reduceCellComplex\n\nfunction reduceCellComplex(cells) {\n  cells.sort(compareOrientedCell)\n  var n = cells.length\n  var ptr = 0\n  for(var i=0; i<n; ++i) {\n    var c = cells[i]\n    var o = orientation(c)\n    if(o === 0) {\n      continue\n    }\n    if(ptr > 0) {\n      var f = cells[ptr-1]\n      if(compareCell(c, f) === 0 &&\n         orientation(f)    !== o) {\n        ptr -= 1\n        continue\n      }\n    }\n    cells[ptr++] = c\n  }\n  cells.length = ptr\n  return cells\n}\n"]},"metadata":{},"sourceType":"script"}