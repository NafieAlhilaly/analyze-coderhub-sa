{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\n\nvar subTypes = require('../scatter/subtypes');\n\nvar handleMarkerDefaults = require('../scatter/marker_defaults');\n\nvar mergeLength = require('../parcoords/merge_length');\n\nvar isOpenSymbol = require('../scattergl/helpers').isOpenSymbol;\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var dimensions = handleArrayContainerDefaults(traceIn, traceOut, {\n    name: 'dimensions',\n    handleItemDefaults: dimensionDefaults\n  });\n  var showDiag = coerce('diagonal.visible');\n  var showUpper = coerce('showupperhalf');\n  var showLower = coerce('showlowerhalf');\n  var dimLength = mergeLength(traceOut, dimensions, 'values');\n\n  if (!dimLength || !showDiag && !showUpper && !showLower) {\n    traceOut.visible = false;\n    return;\n  }\n\n  coerce('text');\n  coerce('hovertext');\n  coerce('hovertemplate');\n  coerce('xhoverformat');\n  coerce('yhoverformat');\n  handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n  var isOpen = isOpenSymbol(traceOut.marker.symbol);\n  var isBubble = subTypes.isBubble(traceOut);\n  coerce('marker.line.width', isOpen || isBubble ? 1 : 0);\n  handleAxisDefaults(traceIn, traceOut, layout, coerce);\n  Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};\n\nfunction dimensionDefaults(dimIn, dimOut) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(dimIn, dimOut, attributes.dimensions, attr, dflt);\n  }\n\n  coerce('label');\n  var values = coerce('values');\n  if (!(values && values.length)) dimOut.visible = false;else coerce('visible');\n  coerce('axis.type');\n  coerce('axis.matches');\n}\n\nfunction handleAxisDefaults(traceIn, traceOut, layout, coerce) {\n  var dimensions = traceOut.dimensions;\n  var dimLength = dimensions.length;\n  var showUpper = traceOut.showupperhalf;\n  var showLower = traceOut.showlowerhalf;\n  var showDiag = traceOut.diagonal.visible;\n  var i, j;\n  var xAxesDflt = new Array(dimLength);\n  var yAxesDflt = new Array(dimLength);\n\n  for (i = 0; i < dimLength; i++) {\n    var suffix = i ? i + 1 : '';\n    xAxesDflt[i] = 'x' + suffix;\n    yAxesDflt[i] = 'y' + suffix;\n  }\n\n  var xaxes = coerce('xaxes', xAxesDflt);\n  var yaxes = coerce('yaxes', yAxesDflt); // build list of [x,y] axis corresponding to each dimensions[i],\n  // very useful for passing options to regl-splom\n\n  var diag = traceOut._diag = new Array(dimLength); // lookup for 'drawn' x|y axes, to avoid costly indexOf downstream\n\n  traceOut._xaxes = {};\n  traceOut._yaxes = {}; // list of 'drawn' x|y axes, use to generate list of subplots\n\n  var xList = [];\n  var yList = [];\n\n  function fillAxisStashes(axId, counterAxId, dim, list) {\n    if (!axId) return;\n    var axLetter = axId.charAt(0);\n    var stash = layout._splomAxes[axLetter];\n    traceOut['_' + axLetter + 'axes'][axId] = 1;\n    list.push(axId);\n\n    if (!(axId in stash)) {\n      var s = stash[axId] = {};\n\n      if (dim) {\n        s.label = dim.label || '';\n\n        if (dim.visible && dim.axis) {\n          if (dim.axis.type) s.type = dim.axis.type;\n          if (dim.axis.matches) s.matches = counterAxId;\n        }\n      }\n    }\n  } // cases where showDiag and showLower or showUpper are false\n  // no special treatment as the 'drawn' x-axes and y-axes no longer match\n  // the dimensions items and xaxes|yaxes 1-to-1\n\n\n  var mustShiftX = !showDiag && !showLower;\n  var mustShiftY = !showDiag && !showUpper;\n  traceOut._axesDim = {};\n\n  for (i = 0; i < dimLength; i++) {\n    var dim = dimensions[i];\n    var i0 = i === 0;\n    var iN = i === dimLength - 1;\n    var xaId = i0 && mustShiftX || iN && mustShiftY ? undefined : xaxes[i];\n    var yaId = i0 && mustShiftY || iN && mustShiftX ? undefined : yaxes[i];\n    fillAxisStashes(xaId, yaId, dim, xList);\n    fillAxisStashes(yaId, xaId, dim, yList);\n    diag[i] = [xaId, yaId];\n    traceOut._axesDim[xaId] = i;\n    traceOut._axesDim[yaId] = i;\n  } // fill in splom subplot keys\n\n\n  for (i = 0; i < xList.length; i++) {\n    for (j = 0; j < yList.length; j++) {\n      var id = xList[i] + yList[j];\n\n      if (i > j && showUpper) {\n        layout._splomSubplots[id] = 1;\n      } else if (i < j && showLower) {\n        layout._splomSubplots[id] = 1;\n      } else if (i === j && (showDiag || !showLower || !showUpper)) {\n        // need to include diagonal subplots when\n        // hiding one half and the diagonal\n        layout._splomSubplots[id] = 1;\n      }\n    }\n  } // when lower half is omitted, or when just the diagonal is gone,\n  // override grid default to make sure axes remain on\n  // the left/bottom of the plot area\n\n\n  if (!showLower || !showDiag && showUpper && showLower) {\n    layout._splomGridDflt.xside = 'bottom';\n    layout._splomGridDflt.yside = 'left';\n  }\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/splom/defaults.js"],"names":["Lib","require","handleArrayContainerDefaults","attributes","subTypes","handleMarkerDefaults","mergeLength","isOpenSymbol","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","layout","coerce","attr","dflt","dimensions","name","handleItemDefaults","dimensionDefaults","showDiag","showUpper","showLower","dimLength","visible","isOpen","marker","symbol","isBubble","handleAxisDefaults","coerceSelectionMarkerOpacity","dimIn","dimOut","values","length","showupperhalf","showlowerhalf","diagonal","i","j","xAxesDflt","Array","yAxesDflt","suffix","xaxes","yaxes","diag","_diag","_xaxes","_yaxes","xList","yList","fillAxisStashes","axId","counterAxId","dim","list","axLetter","charAt","stash","_splomAxes","push","s","label","axis","type","matches","mustShiftX","mustShiftY","_axesDim","i0","iN","xaId","undefined","yaId","id","_splomSubplots","_splomGridDflt","xside","yside"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\nvar subTypes = require('../scatter/subtypes');\nvar handleMarkerDefaults = require('../scatter/marker_defaults');\nvar mergeLength = require('../parcoords/merge_length');\nvar isOpenSymbol = require('../scattergl/helpers').isOpenSymbol;\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var dimensions = handleArrayContainerDefaults(traceIn, traceOut, {\n        name: 'dimensions',\n        handleItemDefaults: dimensionDefaults\n    });\n\n    var showDiag = coerce('diagonal.visible');\n    var showUpper = coerce('showupperhalf');\n    var showLower = coerce('showlowerhalf');\n\n    var dimLength = mergeLength(traceOut, dimensions, 'values');\n\n    if(!dimLength || (!showDiag && !showUpper && !showLower)) {\n        traceOut.visible = false;\n        return;\n    }\n\n    coerce('text');\n    coerce('hovertext');\n    coerce('hovertemplate');\n    coerce('xhoverformat');\n    coerce('yhoverformat');\n\n    handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n\n    var isOpen = isOpenSymbol(traceOut.marker.symbol);\n    var isBubble = subTypes.isBubble(traceOut);\n    coerce('marker.line.width', isOpen || isBubble ? 1 : 0);\n\n    handleAxisDefaults(traceIn, traceOut, layout, coerce);\n\n    Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};\n\nfunction dimensionDefaults(dimIn, dimOut) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(dimIn, dimOut, attributes.dimensions, attr, dflt);\n    }\n\n    coerce('label');\n    var values = coerce('values');\n\n    if(!(values && values.length)) dimOut.visible = false;\n    else coerce('visible');\n\n    coerce('axis.type');\n    coerce('axis.matches');\n}\n\nfunction handleAxisDefaults(traceIn, traceOut, layout, coerce) {\n    var dimensions = traceOut.dimensions;\n    var dimLength = dimensions.length;\n    var showUpper = traceOut.showupperhalf;\n    var showLower = traceOut.showlowerhalf;\n    var showDiag = traceOut.diagonal.visible;\n    var i, j;\n\n    var xAxesDflt = new Array(dimLength);\n    var yAxesDflt = new Array(dimLength);\n\n    for(i = 0; i < dimLength; i++) {\n        var suffix = i ? i + 1 : '';\n        xAxesDflt[i] = 'x' + suffix;\n        yAxesDflt[i] = 'y' + suffix;\n    }\n\n    var xaxes = coerce('xaxes', xAxesDflt);\n    var yaxes = coerce('yaxes', yAxesDflt);\n\n    // build list of [x,y] axis corresponding to each dimensions[i],\n    // very useful for passing options to regl-splom\n    var diag = traceOut._diag = new Array(dimLength);\n\n    // lookup for 'drawn' x|y axes, to avoid costly indexOf downstream\n    traceOut._xaxes = {};\n    traceOut._yaxes = {};\n\n    // list of 'drawn' x|y axes, use to generate list of subplots\n    var xList = [];\n    var yList = [];\n\n    function fillAxisStashes(axId, counterAxId, dim, list) {\n        if(!axId) return;\n\n        var axLetter = axId.charAt(0);\n        var stash = layout._splomAxes[axLetter];\n\n        traceOut['_' + axLetter + 'axes'][axId] = 1;\n        list.push(axId);\n\n        if(!(axId in stash)) {\n            var s = stash[axId] = {};\n            if(dim) {\n                s.label = dim.label || '';\n                if(dim.visible && dim.axis) {\n                    if(dim.axis.type) s.type = dim.axis.type;\n                    if(dim.axis.matches) s.matches = counterAxId;\n                }\n            }\n        }\n    }\n\n    // cases where showDiag and showLower or showUpper are false\n    // no special treatment as the 'drawn' x-axes and y-axes no longer match\n    // the dimensions items and xaxes|yaxes 1-to-1\n    var mustShiftX = !showDiag && !showLower;\n    var mustShiftY = !showDiag && !showUpper;\n\n    traceOut._axesDim = {};\n    for(i = 0; i < dimLength; i++) {\n        var dim = dimensions[i];\n        var i0 = i === 0;\n        var iN = i === dimLength - 1;\n\n        var xaId = (i0 && mustShiftX) || (iN && mustShiftY) ?\n            undefined :\n            xaxes[i];\n\n        var yaId = (i0 && mustShiftY) || (iN && mustShiftX) ?\n            undefined :\n            yaxes[i];\n\n        fillAxisStashes(xaId, yaId, dim, xList);\n        fillAxisStashes(yaId, xaId, dim, yList);\n        diag[i] = [xaId, yaId];\n        traceOut._axesDim[xaId] = i;\n        traceOut._axesDim[yaId] = i;\n    }\n\n    // fill in splom subplot keys\n    for(i = 0; i < xList.length; i++) {\n        for(j = 0; j < yList.length; j++) {\n            var id = xList[i] + yList[j];\n\n            if(i > j && showUpper) {\n                layout._splomSubplots[id] = 1;\n            } else if(i < j && showLower) {\n                layout._splomSubplots[id] = 1;\n            } else if(i === j && (showDiag || !showLower || !showUpper)) {\n                // need to include diagonal subplots when\n                // hiding one half and the diagonal\n                layout._splomSubplots[id] = 1;\n            }\n        }\n    }\n\n    // when lower half is omitted, or when just the diagonal is gone,\n    // override grid default to make sure axes remain on\n    // the left/bottom of the plot area\n    if(!showLower || (!showDiag && showUpper && showLower)) {\n        layout._splomGridDflt.xside = 'bottom';\n        layout._splomGridDflt.yside = 'left';\n    }\n}\n"]},"metadata":{},"sourceType":"script"}