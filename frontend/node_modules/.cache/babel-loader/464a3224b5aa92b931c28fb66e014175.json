{"ast":null,"code":"var tokenize = require('glsl-tokenizer');\n\nvar atob = require('atob-lite');\n\nmodule.exports = getName;\n\nfunction getName(src) {\n  var tokens = Array.isArray(src) ? src : tokenize(src);\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n    if (token.type !== 'preprocessor') continue;\n    var match = token.data.match(/\\#define\\s+SHADER_NAME(_B64)?\\s+(.+)$/);\n    if (!match) continue;\n    if (!match[2]) continue;\n    var b64 = match[1];\n    var name = match[2];\n    return (b64 ? atob(name) : name).trim();\n  }\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/glsl-shader-name/index.js"],"names":["tokenize","require","atob","module","exports","getName","src","tokens","Array","isArray","i","length","token","type","match","data","b64","name","trim"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAIC,IAAI,GAAOD,OAAO,CAAC,WAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,OAAjB;;AAEA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAIC,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAcH,GAAd,IACTA,GADS,GAETN,QAAQ,CAACM,GAAD,CAFZ;;AAIA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,QAAIE,KAAK,GAAGL,MAAM,CAACG,CAAD,CAAlB;AACA,QAAIE,KAAK,CAACC,IAAN,KAAe,cAAnB,EAAmC;AACnC,QAAIC,KAAK,GAAGF,KAAK,CAACG,IAAN,CAAWD,KAAX,CAAiB,uCAAjB,CAAZ;AACA,QAAI,CAACA,KAAL,EAAY;AACZ,QAAI,CAACA,KAAK,CAAC,CAAD,CAAV,EAAe;AAEf,QAAIE,GAAG,GAAIF,KAAK,CAAC,CAAD,CAAhB;AACA,QAAIG,IAAI,GAAGH,KAAK,CAAC,CAAD,CAAhB;AAEA,WAAO,CAACE,GAAG,GAAGd,IAAI,CAACe,IAAD,CAAP,GAAgBA,IAApB,EAA0BC,IAA1B,EAAP;AACD;AACF","sourcesContent":["var tokenize = require('glsl-tokenizer')\nvar atob     = require('atob-lite')\n\nmodule.exports = getName\n\nfunction getName(src) {\n  var tokens = Array.isArray(src)\n    ? src\n    : tokenize(src)\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n    if (token.type !== 'preprocessor') continue\n    var match = token.data.match(/\\#define\\s+SHADER_NAME(_B64)?\\s+(.+)$/)\n    if (!match) continue\n    if (!match[2]) continue\n\n    var b64  = match[1]\n    var name = match[2]\n\n    return (b64 ? atob(name) : name).trim()\n  }\n}\n"]},"metadata":{},"sourceType":"script"}