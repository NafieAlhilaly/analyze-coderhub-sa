{"ast":null,"code":"'use strict';\n\nvar Axes = require('../cartesian/axes');\n\nvar str2RGBArray = require('../../lib/str2rgbarray');\n\nfunction Axes2DOptions(scene) {\n  this.scene = scene;\n  this.gl = scene.gl;\n  this.pixelRatio = scene.pixelRatio;\n  this.screenBox = [0, 0, 1, 1];\n  this.viewBox = [0, 0, 1, 1];\n  this.dataBox = [-1, -1, 1, 1];\n  this.borderLineEnable = [false, false, false, false];\n  this.borderLineWidth = [1, 1, 1, 1];\n  this.borderLineColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.ticks = [[], []];\n  this.tickEnable = [true, true, false, false];\n  this.tickPad = [15, 15, 15, 15];\n  this.tickAngle = [0, 0, 0, 0];\n  this.tickColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.tickMarkLength = [0, 0, 0, 0];\n  this.tickMarkWidth = [0, 0, 0, 0];\n  this.tickMarkColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.labels = ['x', 'y'];\n  this.labelEnable = [true, true, false, false];\n  this.labelAngle = [0, Math.PI / 2, 0, 3.0 * Math.PI / 2];\n  this.labelPad = [15, 15, 15, 15];\n  this.labelSize = [12, 12];\n  this.labelFont = ['sans-serif', 'sans-serif'];\n  this.labelColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.title = '';\n  this.titleEnable = true;\n  this.titleCenter = [0, 0, 0, 0];\n  this.titleAngle = 0;\n  this.titleColor = [0, 0, 0, 1];\n  this.titleFont = 'sans-serif';\n  this.titleSize = 18;\n  this.gridLineEnable = [true, true];\n  this.gridLineColor = [[0, 0, 0, 0.5], [0, 0, 0, 0.5]];\n  this.gridLineWidth = [1, 1];\n  this.zeroLineEnable = [true, true];\n  this.zeroLineWidth = [1, 1];\n  this.zeroLineColor = [[0, 0, 0, 1], [0, 0, 0, 1]];\n  this.borderColor = [0, 0, 0, 0];\n  this.backgroundColor = [0, 0, 0, 0];\n  this.static = this.scene.staticPlot;\n}\n\nvar proto = Axes2DOptions.prototype;\nvar AXES = ['xaxis', 'yaxis'];\n\nproto.merge = function (options) {\n  // titles are rendered in SVG\n  this.titleEnable = false;\n  this.backgroundColor = str2RGBArray(options.plot_bgcolor);\n  var axisName, ax, axTitle, axMirror;\n  var hasAxisInDfltPos, hasAxisInAltrPos, hasSharedAxis, mirrorLines, mirrorTicks;\n  var i, j;\n\n  for (i = 0; i < 2; ++i) {\n    axisName = AXES[i];\n    var axisLetter = axisName.charAt(0); // get options relevant to this subplot,\n    // '_name' is e.g. xaxis, xaxis2, yaxis, yaxis4 ...\n\n    ax = options[this.scene[axisName]._name];\n    axTitle = ax.title.text === this.scene.fullLayout._dfltTitle[axisLetter] ? '' : ax.title.text;\n\n    for (j = 0; j <= 2; j += 2) {\n      this.labelEnable[i + j] = false;\n      this.labels[i + j] = axTitle;\n      this.labelColor[i + j] = str2RGBArray(ax.title.font.color);\n      this.labelFont[i + j] = ax.title.font.family;\n      this.labelSize[i + j] = ax.title.font.size;\n      this.labelPad[i + j] = this.getLabelPad(axisName, ax);\n      this.tickEnable[i + j] = false;\n      this.tickColor[i + j] = str2RGBArray((ax.tickfont || {}).color);\n      this.tickAngle[i + j] = ax.tickangle === 'auto' ? 0 : Math.PI * -ax.tickangle / 180;\n      this.tickPad[i + j] = this.getTickPad(ax);\n      this.tickMarkLength[i + j] = 0;\n      this.tickMarkWidth[i + j] = ax.tickwidth || 0;\n      this.tickMarkColor[i + j] = str2RGBArray(ax.tickcolor);\n      this.borderLineEnable[i + j] = false;\n      this.borderLineColor[i + j] = str2RGBArray(ax.linecolor);\n      this.borderLineWidth[i + j] = ax.linewidth || 0;\n    }\n\n    hasSharedAxis = this.hasSharedAxis(ax);\n    hasAxisInDfltPos = this.hasAxisInDfltPos(axisName, ax) && !hasSharedAxis;\n    hasAxisInAltrPos = this.hasAxisInAltrPos(axisName, ax) && !hasSharedAxis;\n    axMirror = ax.mirror || false;\n    mirrorLines = hasSharedAxis ? String(axMirror).indexOf('all') !== -1 : // 'all' or 'allticks'\n    !!axMirror; // all but false\n\n    mirrorTicks = hasSharedAxis ? axMirror === 'allticks' : String(axMirror).indexOf('ticks') !== -1; // 'ticks' or 'allticks'\n    // Axis titles and tick labels can only appear of one side of the scene\n    //  and are never show on subplots that share existing axes.\n\n    if (hasAxisInDfltPos) this.labelEnable[i] = true;else if (hasAxisInAltrPos) this.labelEnable[i + 2] = true;\n    if (hasAxisInDfltPos) this.tickEnable[i] = ax.showticklabels;else if (hasAxisInAltrPos) this.tickEnable[i + 2] = ax.showticklabels; // Grid lines and ticks can appear on both sides of the scene\n    //  and can appear on subplot that share existing axes via `ax.mirror`.\n\n    if (hasAxisInDfltPos || mirrorLines) this.borderLineEnable[i] = ax.showline;\n    if (hasAxisInAltrPos || mirrorLines) this.borderLineEnable[i + 2] = ax.showline;\n    if (hasAxisInDfltPos || mirrorTicks) this.tickMarkLength[i] = this.getTickMarkLength(ax);\n    if (hasAxisInAltrPos || mirrorTicks) this.tickMarkLength[i + 2] = this.getTickMarkLength(ax);\n    this.gridLineEnable[i] = ax.showgrid;\n    this.gridLineColor[i] = str2RGBArray(ax.gridcolor);\n    this.gridLineWidth[i] = ax.gridwidth;\n    this.zeroLineEnable[i] = ax.zeroline;\n    this.zeroLineColor[i] = str2RGBArray(ax.zerolinecolor);\n    this.zeroLineWidth[i] = ax.zerolinewidth;\n  }\n}; // is an axis shared with an already-drawn subplot ?\n\n\nproto.hasSharedAxis = function (ax) {\n  var scene = this.scene;\n  var subplotIds = scene.fullLayout._subplots.gl2d;\n  var list = Axes.findSubplotsWithAxis(subplotIds, ax); // if index === 0, then the subplot is already drawn as subplots\n  // are drawn in order.\n\n  return list.indexOf(scene.id) !== 0;\n}; // has an axis in default position (i.e. bottom/left) ?\n\n\nproto.hasAxisInDfltPos = function (axisName, ax) {\n  var axSide = ax.side;\n  if (axisName === 'xaxis') return axSide === 'bottom';else if (axisName === 'yaxis') return axSide === 'left';\n}; // has an axis in alternate position (i.e. top/right) ?\n\n\nproto.hasAxisInAltrPos = function (axisName, ax) {\n  var axSide = ax.side;\n  if (axisName === 'xaxis') return axSide === 'top';else if (axisName === 'yaxis') return axSide === 'right';\n};\n\nproto.getLabelPad = function (axisName, ax) {\n  var offsetBase = 1.5;\n  var fontSize = ax.title.font.size;\n  var showticklabels = ax.showticklabels;\n\n  if (axisName === 'xaxis') {\n    return ax.side === 'top' ? -10 + fontSize * (offsetBase + (showticklabels ? 1 : 0)) : -10 + fontSize * (offsetBase + (showticklabels ? 0.5 : 0));\n  } else if (axisName === 'yaxis') {\n    return ax.side === 'right' ? 10 + fontSize * (offsetBase + (showticklabels ? 1 : 0.5)) : 10 + fontSize * (offsetBase + (showticklabels ? 0.5 : 0));\n  }\n};\n\nproto.getTickPad = function (ax) {\n  return ax.ticks === 'outside' ? 10 + ax.ticklen : 15;\n};\n\nproto.getTickMarkLength = function (ax) {\n  if (!ax.ticks) return 0;\n  var ticklen = ax.ticklen;\n  return ax.ticks === 'inside' ? -ticklen : ticklen;\n};\n\nfunction createAxes2D(scene) {\n  return new Axes2DOptions(scene);\n}\n\nmodule.exports = createAxes2D;","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/plots/gl2d/convert.js"],"names":["Axes","require","str2RGBArray","Axes2DOptions","scene","gl","pixelRatio","screenBox","viewBox","dataBox","borderLineEnable","borderLineWidth","borderLineColor","ticks","tickEnable","tickPad","tickAngle","tickColor","tickMarkLength","tickMarkWidth","tickMarkColor","labels","labelEnable","labelAngle","Math","PI","labelPad","labelSize","labelFont","labelColor","title","titleEnable","titleCenter","titleAngle","titleColor","titleFont","titleSize","gridLineEnable","gridLineColor","gridLineWidth","zeroLineEnable","zeroLineWidth","zeroLineColor","borderColor","backgroundColor","static","staticPlot","proto","prototype","AXES","merge","options","plot_bgcolor","axisName","ax","axTitle","axMirror","hasAxisInDfltPos","hasAxisInAltrPos","hasSharedAxis","mirrorLines","mirrorTicks","i","j","axisLetter","charAt","_name","text","fullLayout","_dfltTitle","font","color","family","size","getLabelPad","tickfont","tickangle","getTickPad","tickwidth","tickcolor","linecolor","linewidth","mirror","String","indexOf","showticklabels","showline","getTickMarkLength","showgrid","gridcolor","gridwidth","zeroline","zerolinecolor","zerolinewidth","subplotIds","_subplots","gl2d","list","findSubplotsWithAxis","id","axSide","side","offsetBase","fontSize","ticklen","createAxes2D","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Axes = require('../cartesian/axes');\n\nvar str2RGBArray = require('../../lib/str2rgbarray');\n\nfunction Axes2DOptions(scene) {\n    this.scene = scene;\n    this.gl = scene.gl;\n    this.pixelRatio = scene.pixelRatio;\n\n    this.screenBox = [0, 0, 1, 1];\n    this.viewBox = [0, 0, 1, 1];\n    this.dataBox = [-1, -1, 1, 1];\n\n    this.borderLineEnable = [false, false, false, false];\n    this.borderLineWidth = [1, 1, 1, 1];\n    this.borderLineColor = [\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1]\n    ];\n\n    this.ticks = [[], []];\n    this.tickEnable = [true, true, false, false];\n    this.tickPad = [15, 15, 15, 15];\n    this.tickAngle = [0, 0, 0, 0];\n    this.tickColor = [\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1]\n    ];\n    this.tickMarkLength = [0, 0, 0, 0];\n    this.tickMarkWidth = [0, 0, 0, 0];\n    this.tickMarkColor = [\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1]\n    ];\n\n    this.labels = ['x', 'y'];\n    this.labelEnable = [true, true, false, false];\n    this.labelAngle = [0, Math.PI / 2, 0, 3.0 * Math.PI / 2];\n    this.labelPad = [15, 15, 15, 15];\n    this.labelSize = [12, 12];\n    this.labelFont = ['sans-serif', 'sans-serif'];\n    this.labelColor = [\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1]\n    ];\n\n    this.title = '';\n    this.titleEnable = true;\n    this.titleCenter = [0, 0, 0, 0];\n    this.titleAngle = 0;\n    this.titleColor = [0, 0, 0, 1];\n    this.titleFont = 'sans-serif';\n    this.titleSize = 18;\n\n    this.gridLineEnable = [true, true];\n    this.gridLineColor = [\n        [0, 0, 0, 0.5],\n        [0, 0, 0, 0.5]\n    ];\n    this.gridLineWidth = [1, 1];\n\n    this.zeroLineEnable = [true, true];\n    this.zeroLineWidth = [1, 1];\n    this.zeroLineColor = [\n        [0, 0, 0, 1],\n        [0, 0, 0, 1]\n    ];\n\n    this.borderColor = [0, 0, 0, 0];\n    this.backgroundColor = [0, 0, 0, 0];\n\n    this.static = this.scene.staticPlot;\n}\n\nvar proto = Axes2DOptions.prototype;\n\nvar AXES = ['xaxis', 'yaxis'];\n\nproto.merge = function(options) {\n    // titles are rendered in SVG\n    this.titleEnable = false;\n    this.backgroundColor = str2RGBArray(options.plot_bgcolor);\n\n    var axisName, ax, axTitle, axMirror;\n    var hasAxisInDfltPos, hasAxisInAltrPos, hasSharedAxis, mirrorLines, mirrorTicks;\n    var i, j;\n\n    for(i = 0; i < 2; ++i) {\n        axisName = AXES[i];\n        var axisLetter = axisName.charAt(0);\n\n        // get options relevant to this subplot,\n        // '_name' is e.g. xaxis, xaxis2, yaxis, yaxis4 ...\n        ax = options[this.scene[axisName]._name];\n\n        axTitle = ax.title.text === this.scene.fullLayout._dfltTitle[axisLetter] ? '' : ax.title.text;\n\n        for(j = 0; j <= 2; j += 2) {\n            this.labelEnable[i + j] = false;\n            this.labels[i + j] = axTitle;\n            this.labelColor[i + j] = str2RGBArray(ax.title.font.color);\n            this.labelFont[i + j] = ax.title.font.family;\n            this.labelSize[i + j] = ax.title.font.size;\n            this.labelPad[i + j] = this.getLabelPad(axisName, ax);\n\n            this.tickEnable[i + j] = false;\n            this.tickColor[i + j] = str2RGBArray((ax.tickfont || {}).color);\n            this.tickAngle[i + j] = (ax.tickangle === 'auto') ?\n                0 :\n                Math.PI * -ax.tickangle / 180;\n            this.tickPad[i + j] = this.getTickPad(ax);\n\n            this.tickMarkLength[i + j] = 0;\n            this.tickMarkWidth[i + j] = ax.tickwidth || 0;\n            this.tickMarkColor[i + j] = str2RGBArray(ax.tickcolor);\n\n            this.borderLineEnable[i + j] = false;\n            this.borderLineColor[i + j] = str2RGBArray(ax.linecolor);\n            this.borderLineWidth[i + j] = ax.linewidth || 0;\n        }\n\n        hasSharedAxis = this.hasSharedAxis(ax);\n        hasAxisInDfltPos = this.hasAxisInDfltPos(axisName, ax) && !hasSharedAxis;\n        hasAxisInAltrPos = this.hasAxisInAltrPos(axisName, ax) && !hasSharedAxis;\n\n        axMirror = ax.mirror || false;\n        mirrorLines = hasSharedAxis ?\n            (String(axMirror).indexOf('all') !== -1) :  // 'all' or 'allticks'\n            !!axMirror;                                 // all but false\n        mirrorTicks = hasSharedAxis ?\n            (axMirror === 'allticks') :\n            (String(axMirror).indexOf('ticks') !== -1); // 'ticks' or 'allticks'\n\n        // Axis titles and tick labels can only appear of one side of the scene\n        //  and are never show on subplots that share existing axes.\n\n        if(hasAxisInDfltPos) this.labelEnable[i] = true;\n        else if(hasAxisInAltrPos) this.labelEnable[i + 2] = true;\n\n        if(hasAxisInDfltPos) this.tickEnable[i] = ax.showticklabels;\n        else if(hasAxisInAltrPos) this.tickEnable[i + 2] = ax.showticklabels;\n\n        // Grid lines and ticks can appear on both sides of the scene\n        //  and can appear on subplot that share existing axes via `ax.mirror`.\n\n        if(hasAxisInDfltPos || mirrorLines) this.borderLineEnable[i] = ax.showline;\n        if(hasAxisInAltrPos || mirrorLines) this.borderLineEnable[i + 2] = ax.showline;\n\n        if(hasAxisInDfltPos || mirrorTicks) this.tickMarkLength[i] = this.getTickMarkLength(ax);\n        if(hasAxisInAltrPos || mirrorTicks) this.tickMarkLength[i + 2] = this.getTickMarkLength(ax);\n\n        this.gridLineEnable[i] = ax.showgrid;\n        this.gridLineColor[i] = str2RGBArray(ax.gridcolor);\n        this.gridLineWidth[i] = ax.gridwidth;\n\n        this.zeroLineEnable[i] = ax.zeroline;\n        this.zeroLineColor[i] = str2RGBArray(ax.zerolinecolor);\n        this.zeroLineWidth[i] = ax.zerolinewidth;\n    }\n};\n\n// is an axis shared with an already-drawn subplot ?\nproto.hasSharedAxis = function(ax) {\n    var scene = this.scene;\n    var subplotIds = scene.fullLayout._subplots.gl2d;\n    var list = Axes.findSubplotsWithAxis(subplotIds, ax);\n\n    // if index === 0, then the subplot is already drawn as subplots\n    // are drawn in order.\n    return (list.indexOf(scene.id) !== 0);\n};\n\n// has an axis in default position (i.e. bottom/left) ?\nproto.hasAxisInDfltPos = function(axisName, ax) {\n    var axSide = ax.side;\n\n    if(axisName === 'xaxis') return (axSide === 'bottom');\n    else if(axisName === 'yaxis') return (axSide === 'left');\n};\n\n// has an axis in alternate position (i.e. top/right) ?\nproto.hasAxisInAltrPos = function(axisName, ax) {\n    var axSide = ax.side;\n\n    if(axisName === 'xaxis') return (axSide === 'top');\n    else if(axisName === 'yaxis') return (axSide === 'right');\n};\n\nproto.getLabelPad = function(axisName, ax) {\n    var offsetBase = 1.5;\n    var fontSize = ax.title.font.size;\n    var showticklabels = ax.showticklabels;\n\n    if(axisName === 'xaxis') {\n        return (ax.side === 'top') ?\n            -10 + fontSize * (offsetBase + (showticklabels ? 1 : 0)) :\n            -10 + fontSize * (offsetBase + (showticklabels ? 0.5 : 0));\n    } else if(axisName === 'yaxis') {\n        return (ax.side === 'right') ?\n            10 + fontSize * (offsetBase + (showticklabels ? 1 : 0.5)) :\n            10 + fontSize * (offsetBase + (showticklabels ? 0.5 : 0));\n    }\n};\n\nproto.getTickPad = function(ax) {\n    return (ax.ticks === 'outside') ? 10 + ax.ticklen : 15;\n};\n\nproto.getTickMarkLength = function(ax) {\n    if(!ax.ticks) return 0;\n\n    var ticklen = ax.ticklen;\n\n    return (ax.ticks === 'inside') ? -ticklen : ticklen;\n};\n\n\nfunction createAxes2D(scene) {\n    return new Axes2DOptions(scene);\n}\n\nmodule.exports = createAxes2D;\n"]},"metadata":{},"sourceType":"script"}