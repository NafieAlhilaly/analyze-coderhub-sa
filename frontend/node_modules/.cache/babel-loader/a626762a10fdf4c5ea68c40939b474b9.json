{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\reactApp\\\\frontend\\\\src\\\\components\\\\userSearchPage\\\\parts\\\\UserSearch.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/UserSearch.css\";\nimport { Typography } from \"@mui/material\";\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\nimport { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport DisplayUserData from \"./DisplayUserData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserSearch = () => {\n  _s();\n\n  const [errMsg, setErrMsg] = useState('');\n  const [data, setData] = useState();\n  const [enteredUserName, setEnteredUserName] = useState();\n  const [isBtnDisabled, setBtnDisabled] = useState('disabled');\n\n  const handleDisableBtn = e => {\n    if (e.target.value) {\n      setErrMsg('');\n      setEnteredUserName(e.target.value);\n      setBtnDisabled('contained');\n    } else {\n      setData('');\n      setBtnDisabled('disabled');\n    }\n  };\n\n  const handleSubmit = e => {\n    setBtnDisabled('disabled');\n    e.preventDefault();\n    fetch(\"https://analyze-coderhub.herokuapp.com/user_data/\" + String(enteredUserName)).then(res => res.json()).then(data => {\n      try {\n        setData([Object.values(data.easy_solved)]);\n      } catch (e) {\n        console.log(e);\n        setErrMsg('user not found or user profile is private');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 3\n      },\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 12,\n            md: 6,\n            xs: 12,\n            children: !data && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              children: \"search for a user by username.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              noValidate: true,\n              autoComplete: \"off\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-basic\",\n                  label: \"username\",\n                  variant: \"outlined\",\n                  required: true,\n                  onChange: e => handleDisableBtn(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"p\",\n                  color: \"error\",\n                  children: errMsg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: isBtnDisabled,\n                  type: \"submit\",\n                  color: \"primary\",\n                  sx: {\n                    mt: 3\n                  },\n                  children: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), data && /*#__PURE__*/_jsxDEV(DisplayUserData, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserSearch, \"oCGZUIGKKhav0q7RBJvy+5w5DHI=\");\n\n_c = UserSearch;\nexport default UserSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSearch\");","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/src/components/userSearchPage/parts/UserSearch.js"],"names":["Typography","Button","Container","TextField","useEffect","useState","Box","Grid","DisplayUserData","UserSearch","errMsg","setErrMsg","data","setData","enteredUserName","setEnteredUserName","isBtnDisabled","setBtnDisabled","handleDisableBtn","e","target","value","handleSubmit","preventDefault","fetch","String","then","res","json","Object","values","easy_solved","console","log","py","textAlign","mt"],"mappings":";;;AAAA,OAAO,0BAAP;AACA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,EAAtD;AACA,QAAM,CAACW,aAAD,EAAgBC,cAAhB,IAAkCZ,QAAQ,CAAC,UAAD,CAAhD;;AAEA,QAAMa,gBAAgB,GAAIC,CAAD,IAAM;AAC7B,QAAGA,CAAC,CAACC,MAAF,CAASC,KAAZ,EAAkB;AAChBV,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAI,MAAAA,kBAAkB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACAJ,MAAAA,cAAc,CAAC,WAAD,CAAd;AACD,KAJD,MAIK;AACHJ,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAI,MAAAA,cAAc,CAAC,UAAD,CAAd;AACD;AACF,GATD;;AAWA,QAAMK,YAAY,GAAIH,CAAD,IAAO;AAC1BF,IAAAA,cAAc,CAAC,UAAD,CAAd;AACAE,IAAAA,CAAC,CAACI,cAAF;AAGAC,IAAAA,KAAK,CAAC,sDAAoDC,MAAM,CAACX,eAAD,CAA3D,CAAL,CACCY,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMd,IAAI,IAAI;AACZ,UAAG;AACDC,QAAAA,OAAO,CAAC,CAACgB,MAAM,CAACC,MAAP,CAAclB,IAAI,CAACmB,WAAnB,CAAD,CAAD,CAAP;AACD,OAFD,CAEC,OAAMZ,CAAN,EAAQ;AACPa,QAAAA,OAAO,CAACC,GAAR,CAAYd,CAAZ;AACAR,QAAAA,SAAS,CAAC,2CAAD,CAAT;AACD;AACF,KATD;AAUC,GAfH;;AAkBE,sBACE;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFuB,QAAAA,EAAE,EAAE;AADF,OADN;AAIE,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAJT;AAAA,6BAME,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,OAAO,EAAE,CAFX;AAGE,UAAA,cAAc,EAAC,QAHjB;AAAA,kCAKE,QAAC,IAAD;AACE,YAAA,IAAI,MADN;AAEE,YAAA,EAAE,EAAE,EAFN;AAGE,YAAA,EAAE,EAAE,CAHN;AAIE,YAAA,EAAE,EAAE,EAJN;AAAA,sBAME,CAACvB,IAAF,iBAAW,QAAC,UAAD;AACV,cAAA,OAAO,EAAC,IADE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,kBALF,eAkBE,QAAC,IAAD;AACE,YAAA,IAAI,MADN;AAEE,YAAA,EAAE,EAAE,EAFN;AAAA,mCAIE;AAAM,cAAA,UAAU,MAAhB;AAAiB,cAAA,YAAY,EAAC,KAA9B;AAAoC,cAAA,QAAQ,EAAEU,YAA9C;AAAA,sCACE,QAAC,IAAD;AAAA,wCACA,QAAC,SAAD;AACE,kBAAA,EAAE,EAAC,gBADL;AAEE,kBAAA,KAAK,EAAC,UAFR;AAGE,kBAAA,OAAO,EAAC,UAHV;AAIE,kBAAA,QAAQ,MAJV;AAKE,kBAAA,QAAQ,EAAIH,CAAD,IAAOD,gBAAgB,CAACC,CAAD;AALpC;AAAA;AAAA;AAAA;AAAA,wBADA,eAQA,QAAC,UAAD;AACE,kBAAA,OAAO,EAAC,GADV;AAEE,kBAAA,KAAK,EAAC,OAFR;AAAA,4BAICT;AAJD;AAAA;AAAA;AAAA;AAAA,wBARA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAgBE,QAAC,IAAD;AAAA,uCACA,QAAC,MAAD;AACI,kBAAA,OAAO,EAAEM,aADb;AAEI,kBAAA,IAAI,EAAC,QAFT;AAGI,kBAAA,KAAK,EAAC,SAHV;AAII,kBAAA,EAAE,EAAE;AAACoB,oBAAAA,EAAE,EAAC;AAAJ,mBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,kBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAmDGxB,IAAI,iBAAI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBAnDX;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgEH,CAnGD;;GAAMH,U;;KAAAA,U;AAoGN,eAAeA,UAAf","sourcesContent":["import \"../styles/UserSearch.css\"\r\nimport { Typography } from \"@mui/material\";\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport TextField from '@mui/material/TextField';\r\nimport {useEffect, useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport DisplayUserData from \"./DisplayUserData\";\r\n\r\nconst UserSearch = () => {\r\n  const [errMsg, setErrMsg] = useState('')\r\n  const [data, setData] = useState()\r\n  const [enteredUserName, setEnteredUserName] = useState()\r\n  const [isBtnDisabled, setBtnDisabled] = useState('disabled')\r\n  \r\n  const handleDisableBtn = (e)=> {\r\n    if(e.target.value){\r\n      setErrMsg('')\r\n      setEnteredUserName(e.target.value)\r\n      setBtnDisabled('contained')\r\n    }else{\r\n      setData('')\r\n      setBtnDisabled('disabled')\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    setBtnDisabled('disabled')\r\n    e.preventDefault()\r\n    \r\n    \r\n    fetch(\"https://analyze-coderhub.herokuapp.com/user_data/\"+String(enteredUserName))\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      try{\r\n        setData([Object.values(data.easy_solved)])\r\n      }catch(e){\r\n        console.log(e)\r\n        setErrMsg('user not found or user profile is private')\r\n      }\r\n    })\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <Box\r\n          sx={{\r\n            py: 3\r\n          }}\r\n          style={{textAlign: \"center\"}}\r\n        >\r\n          <Container maxWidth=\"lg\">\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              justifyContent=\"center\"\r\n            >\r\n              <Grid\r\n                item\r\n                lg={12}\r\n                md={6}\r\n                xs={12}\r\n              >\r\n              {(!data) && <Typography \r\n                variant=\"h2\"\r\n\r\n              >\r\n              search for a user by username.\r\n              </Typography>}   \r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n              >\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit} >\r\n                  <Grid>\r\n                  <TextField \r\n                    id=\"outlined-basic\" \r\n                    label=\"username\" \r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange= {(e) => handleDisableBtn(e)}\r\n                  />\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    color='error'\r\n                  >\r\n                  {errMsg}\r\n                  </Typography>\r\n                  </Grid>\r\n                  <Grid>\r\n                  <Button\r\n                      variant={isBtnDisabled}\r\n                      type='submit'\r\n                      color=\"primary\"\r\n                      sx={{mt:3}}\r\n                  >\r\n                  Search</Button>\r\n                  </Grid>\r\n                </form>\r\n              </Grid>\r\n            </Grid>\r\n            {data && <DisplayUserData/>}\r\n          </Container>\r\n        </Box>\r\n      </>\r\n    );\r\n}\r\nexport default UserSearch;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}