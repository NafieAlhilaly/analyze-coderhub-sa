{"ast":null,"code":"var createShaderWrapper = require('gl-shader');\n\nvar glslify = require('glslify');\n\nvar perspectiveVertSrc = glslify('./perspective.glsl');\nvar orthographicVertSrc = glslify('./orthographic.glsl');\nvar projectionVertSrc = glslify('./projection.glsl');\nvar drawFragSrc = glslify('./draw-fragment.glsl');\nvar pickFragSrc = glslify('./pick-fragment.glsl');\nvar ATTRIBUTES = [{\n  name: 'position',\n  type: 'vec3'\n}, {\n  name: 'color',\n  type: 'vec4'\n}, {\n  name: 'glyph',\n  type: 'vec2'\n}, {\n  name: 'id',\n  type: 'vec4'\n}];\nvar perspective = {\n  vertex: perspectiveVertSrc,\n  fragment: drawFragSrc,\n  attributes: ATTRIBUTES\n},\n    ortho = {\n  vertex: orthographicVertSrc,\n  fragment: drawFragSrc,\n  attributes: ATTRIBUTES\n},\n    project = {\n  vertex: projectionVertSrc,\n  fragment: drawFragSrc,\n  attributes: ATTRIBUTES\n},\n    pickPerspective = {\n  vertex: perspectiveVertSrc,\n  fragment: pickFragSrc,\n  attributes: ATTRIBUTES\n},\n    pickOrtho = {\n  vertex: orthographicVertSrc,\n  fragment: pickFragSrc,\n  attributes: ATTRIBUTES\n},\n    pickProject = {\n  vertex: projectionVertSrc,\n  fragment: pickFragSrc,\n  attributes: ATTRIBUTES\n};\n\nfunction createShader(gl, src) {\n  var shader = createShaderWrapper(gl, src);\n  var attr = shader.attributes;\n  attr.position.location = 0;\n  attr.color.location = 1;\n  attr.glyph.location = 2;\n  attr.id.location = 3;\n  return shader;\n}\n\nexports.createPerspective = function (gl) {\n  return createShader(gl, perspective);\n};\n\nexports.createOrtho = function (gl) {\n  return createShader(gl, ortho);\n};\n\nexports.createProject = function (gl) {\n  return createShader(gl, project);\n};\n\nexports.createPickPerspective = function (gl) {\n  return createShader(gl, pickPerspective);\n};\n\nexports.createPickOrtho = function (gl) {\n  return createShader(gl, pickOrtho);\n};\n\nexports.createPickProject = function (gl) {\n  return createShader(gl, pickProject);\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/gl-scatter3d/lib/shaders.js"],"names":["createShaderWrapper","require","glslify","perspectiveVertSrc","orthographicVertSrc","projectionVertSrc","drawFragSrc","pickFragSrc","ATTRIBUTES","name","type","perspective","vertex","fragment","attributes","ortho","project","pickPerspective","pickOrtho","pickProject","createShader","gl","src","shader","attr","position","location","color","glyph","id","exports","createPerspective","createOrtho","createProject","createPickPerspective","createPickOrtho","createPickProject"],"mappings":"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","sourcesContent":["var createShaderWrapper = require('gl-shader')\nvar glslify = require('glslify')\n\nvar perspectiveVertSrc = glslify('./perspective.glsl')\nvar orthographicVertSrc = glslify('./orthographic.glsl')\nvar projectionVertSrc = glslify('./projection.glsl')\nvar drawFragSrc = glslify('./draw-fragment.glsl')\nvar pickFragSrc = glslify('./pick-fragment.glsl')\n\nvar ATTRIBUTES = [\n  {name: 'position', type: 'vec3'},\n  {name: 'color', type: 'vec4'},\n  {name: 'glyph', type: 'vec2'},\n  {name: 'id', type: 'vec4'}\n]\n\nvar perspective = {\n    vertex: perspectiveVertSrc,\n    fragment: drawFragSrc,\n    attributes: ATTRIBUTES\n  },\n  ortho = {\n    vertex: orthographicVertSrc,\n    fragment: drawFragSrc,\n    attributes: ATTRIBUTES\n  },\n  project = {\n    vertex: projectionVertSrc,\n    fragment: drawFragSrc,\n    attributes: ATTRIBUTES\n  },\n  pickPerspective = {\n    vertex: perspectiveVertSrc,\n    fragment: pickFragSrc,\n    attributes: ATTRIBUTES\n  },\n  pickOrtho = {\n    vertex: orthographicVertSrc,\n    fragment: pickFragSrc,\n    attributes: ATTRIBUTES\n  },\n  pickProject = {\n    vertex: projectionVertSrc,\n    fragment: pickFragSrc,\n    attributes: ATTRIBUTES\n  }\n\nfunction createShader(gl, src) {\n  var shader = createShaderWrapper(gl, src)\n  var attr = shader.attributes\n  attr.position.location = 0\n  attr.color.location = 1\n  attr.glyph.location = 2\n  attr.id.location = 3\n  return shader\n}\n\nexports.createPerspective = function(gl) {\n  return createShader(gl, perspective)\n}\nexports.createOrtho = function(gl) {\n  return createShader(gl, ortho)\n}\nexports.createProject = function(gl) {\n  return createShader(gl, project)\n}\nexports.createPickPerspective = function(gl) {\n  return createShader(gl, pickPerspective)\n}\nexports.createPickOrtho = function(gl) {\n  return createShader(gl, pickOrtho)\n}\nexports.createPickProject = function(gl) {\n  return createShader(gl, pickProject)\n}\n"]},"metadata":{},"sourceType":"script"}