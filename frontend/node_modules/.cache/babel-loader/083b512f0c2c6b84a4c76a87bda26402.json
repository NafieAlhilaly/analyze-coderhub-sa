{"ast":null,"code":"module.exports = fromRotation;\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotate(dest, dest, rad, axis)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction fromRotation(out, rad, axis) {\n  var s, c, t;\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n\n  if (Math.abs(len) < 0.000001) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/gl-mat4/fromRotation.js"],"names":["module","exports","fromRotation","out","rad","axis","s","c","t","x","y","z","len","Math","sqrt","abs","sin","cos"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AACpC,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV;AACA,MAAIC,CAAC,GAAGJ,IAAI,CAAC,CAAD,CAAZ;AACA,MAAIK,CAAC,GAAGL,IAAI,CAAC,CAAD,CAAZ;AACA,MAAIM,CAAC,GAAGN,IAAI,CAAC,CAAD,CAAZ;AACA,MAAIO,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAUL,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgBC,CAAC,GAAGA,CAA9B,CAAV;;AAEA,MAAIE,IAAI,CAACE,GAAL,CAASH,GAAT,IAAgB,QAApB,EAA8B;AAC5B,WAAO,IAAP;AACD;;AAEDA,EAAAA,GAAG,GAAG,IAAIA,GAAV;AACAH,EAAAA,CAAC,IAAIG,GAAL;AACAF,EAAAA,CAAC,IAAIE,GAAL;AACAD,EAAAA,CAAC,IAAIC,GAAL;AAEAN,EAAAA,CAAC,GAAGO,IAAI,CAACG,GAAL,CAASZ,GAAT,CAAJ;AACAG,EAAAA,CAAC,GAAGM,IAAI,CAACI,GAAL,CAASb,GAAT,CAAJ;AACAI,EAAAA,CAAC,GAAG,IAAID,CAAR,CAlBoC,CAoBpC;;AACAJ,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASM,CAAC,GAAGA,CAAJ,GAAQD,CAAR,GAAYD,CAArB;AACAJ,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASO,CAAC,GAAGD,CAAJ,GAAQD,CAAR,GAAYG,CAAC,GAAGL,CAAzB;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASQ,CAAC,GAAGF,CAAJ,GAAQD,CAAR,GAAYE,CAAC,GAAGJ,CAAzB;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASM,CAAC,GAAGC,CAAJ,GAAQF,CAAR,GAAYG,CAAC,GAAGL,CAAzB;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASO,CAAC,GAAGA,CAAJ,GAAQF,CAAR,GAAYD,CAArB;AACAJ,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASQ,CAAC,GAAGD,CAAJ,GAAQF,CAAR,GAAYC,CAAC,GAAGH,CAAzB;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASM,CAAC,GAAGE,CAAJ,GAAQH,CAAR,GAAYE,CAAC,GAAGJ,CAAzB;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASO,CAAC,GAAGC,CAAJ,GAAQH,CAAR,GAAYC,CAAC,GAAGH,CAAzB;AACAH,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUQ,CAAC,GAAGA,CAAJ,GAAQH,CAAR,GAAYD,CAAtB;AACAJ,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACA,SAAOA,GAAP;AACD","sourcesContent":["module.exports = fromRotation\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotate(dest, dest, rad, axis)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction fromRotation(out, rad, axis) {\n  var s, c, t\n  var x = axis[0]\n  var y = axis[1]\n  var z = axis[2]\n  var len = Math.sqrt(x * x + y * y + z * z)\n\n  if (Math.abs(len) < 0.000001) {\n    return null\n  }\n\n  len = 1 / len\n  x *= len\n  y *= len\n  z *= len\n\n  s = Math.sin(rad)\n  c = Math.cos(rad)\n  t = 1 - c\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c\n  out[1] = y * x * t + z * s\n  out[2] = z * x * t - y * s\n  out[3] = 0\n  out[4] = x * y * t - z * s\n  out[5] = y * y * t + c\n  out[6] = z * y * t + x * s\n  out[7] = 0\n  out[8] = x * z * t + y * s\n  out[9] = y * z * t - x * s\n  out[10] = z * z * t + c\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n"]},"metadata":{},"sourceType":"script"}