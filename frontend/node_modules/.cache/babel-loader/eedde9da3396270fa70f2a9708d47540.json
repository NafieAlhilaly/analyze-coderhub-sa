{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\reactApp\\\\frontend\\\\src\\\\components\\\\userSearchPage\\\\cards\\\\DunCard.js\",\n    _s = $RefreshSig$();\n\nimport { Doughnut } from 'react-chartjs-2';\nimport { Box, Card, CardContent, CardHeader, Divider, Typography, colors, useTheme } from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TabletIcon from '@material-ui/icons/Tablet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colorsLst = [colors.indigo[500], colors.red[600], colors.orange[600], colors.pink[600], colors.purple[600]];\n\nconst DunCard = ({\n  languages,\n  totalPoints\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const data = {\n    datasets: [{\n      data: totalPoints[0],\n      backgroundColor: [],\n      borderWidth: 1,\n      hoverBorderColor: colors.common.white\n    }],\n    labels: languages[0]\n  };\n  const options = {\n    animation: true,\n    cutoutPercentage: 80,\n    layout: {\n      padding: 0\n    },\n    legend: {\n      display: true\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.paper,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n  const devices = [{\n    title: 'Desktop',\n    value: 63,\n    icon: LaptopMacIcon,\n    color: colors.indigo[500]\n  }, {\n    title: 'Tablet',\n    value: 15,\n    icon: TabletIcon,\n    color: colors.red[600]\n  }, {\n    title: 'Mobile',\n    value: 23,\n    icon: PhoneIcon,\n    color: colors.orange[600]\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Traffic by Device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 300,\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          pt: 2\n        },\n        children: devices.map(({\n          color,\n          icon: Icon,\n          title,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 1,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            color: \"action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            variant: \"body1\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color\n            },\n            variant: \"h2\",\n            children: [value, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DunCard, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = DunCard;\nexport default DunCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DunCard\");","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/src/components/userSearchPage/cards/DunCard.js"],"names":["Doughnut","Box","Card","CardContent","CardHeader","Divider","Typography","colors","useTheme","LaptopMacIcon","PhoneIcon","TabletIcon","colorsLst","indigo","red","orange","pink","purple","DunCard","languages","totalPoints","theme","data","datasets","backgroundColor","borderWidth","hoverBorderColor","common","white","labels","options","animation","cutoutPercentage","layout","padding","legend","display","maintainAspectRatio","responsive","tooltips","palette","background","paper","bodyFontColor","text","secondary","borderColor","divider","enabled","footerFontColor","intersect","mode","titleFontColor","primary","devices","title","value","icon","color","height","position","justifyContent","pt","map","Icon","p","textAlign"],"mappings":"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","sourcesContent":["import { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst colorsLst = [\r\n  colors.indigo[500],\r\n  colors.red[600],\r\n  colors.orange[600],\r\n  colors.pink[600],\r\n  colors.purple[600]\r\n\r\n]\r\nconst DunCard = ({languages, totalPoints}) => {\r\n  const theme = useTheme();\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: totalPoints[0],\r\n        backgroundColor: [\r\n        ],\r\n        borderWidth: 1,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: languages[0]\r\n  };\r\n\r\n  const options = {\r\n    animation: true,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: true\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card >\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            height: 300,\r\n            position: 'relative'\r\n          }}\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            pt: 2\r\n          }}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              sx={{\r\n                p: 1,\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DunCard;"]},"metadata":{},"sourceType":"module"}