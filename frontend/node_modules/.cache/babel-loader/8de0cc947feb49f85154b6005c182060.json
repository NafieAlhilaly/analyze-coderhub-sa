{"ast":null,"code":"'use strict';\n\nvar scatterPlot = require('../scatter/plot');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar Drawing = require('../../components/drawing');\n\nmodule.exports = function plot(gd, plotinfoproxy, data, layer) {\n  var i, trace, node;\n  var carpet = data[0][0].carpet; // mimic cartesian plotinfo\n\n  var plotinfo = {\n    xaxis: Axes.getFromId(gd, carpet.xaxis || 'x'),\n    yaxis: Axes.getFromId(gd, carpet.yaxis || 'y'),\n    plot: plotinfoproxy.plot\n  };\n  scatterPlot(gd, plotinfo, data, layer);\n\n  for (i = 0; i < data.length; i++) {\n    trace = data[i][0].trace; // Note: .select is adequate but seems to mutate the node data,\n    // which is at least a bit surprising and causes problems elsewhere\n\n    node = layer.selectAll('g.trace' + trace.uid + ' .js-line'); // Note: it would be more efficient if this didn't need to be applied\n    // separately to all scattercarpet traces, but that would require\n    // lots of reorganization of scatter traces that is otherwise not\n    // necessary. That makes this a potential optimization.\n\n    Drawing.setClipUrl(node, data[i][0].carpet._clipPathId, gd);\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/scattercarpet/plot.js"],"names":["scatterPlot","require","Axes","Drawing","module","exports","plot","gd","plotinfoproxy","data","layer","i","trace","node","carpet","plotinfo","xaxis","getFromId","yaxis","length","selectAll","uid","setClipUrl","_clipPathId"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,0BAAD,CAArB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,EAAd,EAAkBC,aAAlB,EAAiCC,IAAjC,EAAuCC,KAAvC,EAA8C;AAC3D,MAAIC,CAAJ,EAAOC,KAAP,EAAcC,IAAd;AAEA,MAAIC,MAAM,GAAGL,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,EAAWK,MAAxB,CAH2D,CAI3D;;AACA,MAAIC,QAAQ,GAAG;AACXC,IAAAA,KAAK,EAAEd,IAAI,CAACe,SAAL,CAAeV,EAAf,EAAmBO,MAAM,CAACE,KAAP,IAAgB,GAAnC,CADI;AAEXE,IAAAA,KAAK,EAAEhB,IAAI,CAACe,SAAL,CAAeV,EAAf,EAAmBO,MAAM,CAACI,KAAP,IAAgB,GAAnC,CAFI;AAGXZ,IAAAA,IAAI,EAAEE,aAAa,CAACF;AAHT,GAAf;AAMAN,EAAAA,WAAW,CAACO,EAAD,EAAKQ,QAAL,EAAeN,IAAf,EAAqBC,KAArB,CAAX;;AAEA,OAAIC,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGF,IAAI,CAACU,MAApB,EAA4BR,CAAC,EAA7B,EAAiC;AAC7BC,IAAAA,KAAK,GAAGH,IAAI,CAACE,CAAD,CAAJ,CAAQ,CAAR,EAAWC,KAAnB,CAD6B,CAG7B;AACA;;AACAC,IAAAA,IAAI,GAAGH,KAAK,CAACU,SAAN,CAAgB,YAAYR,KAAK,CAACS,GAAlB,GAAwB,WAAxC,CAAP,CAL6B,CAO7B;AACA;AACA;AACA;;AACAlB,IAAAA,OAAO,CAACmB,UAAR,CAAmBT,IAAnB,EAAyBJ,IAAI,CAACE,CAAD,CAAJ,CAAQ,CAAR,EAAWG,MAAX,CAAkBS,WAA3C,EAAwDhB,EAAxD;AACH;AACJ,CA1BD","sourcesContent":["'use strict';\n\nvar scatterPlot = require('../scatter/plot');\nvar Axes = require('../../plots/cartesian/axes');\nvar Drawing = require('../../components/drawing');\n\nmodule.exports = function plot(gd, plotinfoproxy, data, layer) {\n    var i, trace, node;\n\n    var carpet = data[0][0].carpet;\n    // mimic cartesian plotinfo\n    var plotinfo = {\n        xaxis: Axes.getFromId(gd, carpet.xaxis || 'x'),\n        yaxis: Axes.getFromId(gd, carpet.yaxis || 'y'),\n        plot: plotinfoproxy.plot,\n    };\n\n    scatterPlot(gd, plotinfo, data, layer);\n\n    for(i = 0; i < data.length; i++) {\n        trace = data[i][0].trace;\n\n        // Note: .select is adequate but seems to mutate the node data,\n        // which is at least a bit surprising and causes problems elsewhere\n        node = layer.selectAll('g.trace' + trace.uid + ' .js-line');\n\n        // Note: it would be more efficient if this didn't need to be applied\n        // separately to all scattercarpet traces, but that would require\n        // lots of reorganization of scatter traces that is otherwise not\n        // necessary. That makes this a potential optimization.\n        Drawing.setClipUrl(node, data[i][0].carpet._clipPathId, gd);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}