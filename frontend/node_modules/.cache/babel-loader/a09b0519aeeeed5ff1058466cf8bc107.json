{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nmodule.exports = function formatLabels(cdi, trace, fullLayout) {\n  var labels = {};\n  var subplot = fullLayout[trace.subplot]._subplot;\n  var radialAxis;\n  var angularAxis; // for scatterpolargl texttemplate, _subplot is NOT defined, this takes part during the convert step\n  // TODO we should consider moving the texttemplate formatting logic to the plot step\n\n  if (!subplot) {\n    subplot = fullLayout[trace.subplot];\n    radialAxis = subplot.radialaxis;\n    angularAxis = subplot.angularaxis;\n  } else {\n    radialAxis = subplot.radialAxis;\n    angularAxis = subplot.angularAxis;\n  }\n\n  var rVal = radialAxis.c2l(cdi.r);\n  labels.rLabel = Axes.tickText(radialAxis, rVal, true).text; // N.B here the ° sign is part of the formatted value for thetaunit:'degrees'\n\n  var thetaVal = angularAxis.thetaunit === 'degrees' ? Lib.rad2deg(cdi.theta) : cdi.theta;\n  labels.thetaLabel = Axes.tickText(angularAxis, thetaVal, true).text;\n  return labels;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/scatterpolar/format_labels.js"],"names":["Lib","require","Axes","module","exports","formatLabels","cdi","trace","fullLayout","labels","subplot","_subplot","radialAxis","angularAxis","radialaxis","angularaxis","rVal","c2l","r","rLabel","tickText","text","thetaVal","thetaunit","rad2deg","theta","thetaLabel"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,UAAlC,EAA8C;AAC3D,MAAIC,MAAM,GAAG,EAAb;AAEA,MAAIC,OAAO,GAAGF,UAAU,CAACD,KAAK,CAACG,OAAP,CAAV,CAA0BC,QAAxC;AACA,MAAIC,UAAJ;AACA,MAAIC,WAAJ,CAL2D,CAO3D;AACA;;AACA,MAAG,CAACH,OAAJ,EAAa;AACTA,IAAAA,OAAO,GAAGF,UAAU,CAACD,KAAK,CAACG,OAAP,CAApB;AACAE,IAAAA,UAAU,GAAGF,OAAO,CAACI,UAArB;AACAD,IAAAA,WAAW,GAAGH,OAAO,CAACK,WAAtB;AACH,GAJD,MAIO;AACHH,IAAAA,UAAU,GAAGF,OAAO,CAACE,UAArB;AACAC,IAAAA,WAAW,GAAGH,OAAO,CAACG,WAAtB;AACH;;AAED,MAAIG,IAAI,GAAGJ,UAAU,CAACK,GAAX,CAAeX,GAAG,CAACY,CAAnB,CAAX;AACAT,EAAAA,MAAM,CAACU,MAAP,GAAgBjB,IAAI,CAACkB,QAAL,CAAcR,UAAd,EAA0BI,IAA1B,EAAgC,IAAhC,EAAsCK,IAAtD,CAnB2D,CAqB3D;;AACA,MAAIC,QAAQ,GAAGT,WAAW,CAACU,SAAZ,KAA0B,SAA1B,GAAsCvB,GAAG,CAACwB,OAAJ,CAAYlB,GAAG,CAACmB,KAAhB,CAAtC,GAA+DnB,GAAG,CAACmB,KAAlF;AACAhB,EAAAA,MAAM,CAACiB,UAAP,GAAoBxB,IAAI,CAACkB,QAAL,CAAcP,WAAd,EAA2BS,QAA3B,EAAqC,IAArC,EAA2CD,IAA/D;AAEA,SAAOZ,MAAP;AACH,CA1BD","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\n\nmodule.exports = function formatLabels(cdi, trace, fullLayout) {\n    var labels = {};\n\n    var subplot = fullLayout[trace.subplot]._subplot;\n    var radialAxis;\n    var angularAxis;\n\n    // for scatterpolargl texttemplate, _subplot is NOT defined, this takes part during the convert step\n    // TODO we should consider moving the texttemplate formatting logic to the plot step\n    if(!subplot) {\n        subplot = fullLayout[trace.subplot];\n        radialAxis = subplot.radialaxis;\n        angularAxis = subplot.angularaxis;\n    } else {\n        radialAxis = subplot.radialAxis;\n        angularAxis = subplot.angularAxis;\n    }\n\n    var rVal = radialAxis.c2l(cdi.r);\n    labels.rLabel = Axes.tickText(radialAxis, rVal, true).text;\n\n    // N.B here the ° sign is part of the formatted value for thetaunit:'degrees'\n    var thetaVal = angularAxis.thetaunit === 'degrees' ? Lib.rad2deg(cdi.theta) : cdi.theta;\n    labels.thetaLabel = Axes.tickText(angularAxis, thetaVal, true).text;\n\n    return labels;\n};\n"]},"metadata":{},"sourceType":"script"}