{"ast":null,"code":"'use strict';\n/**\n * Return news array containing only the unique items\n * found in input array.\n *\n * IMPORTANT: Note that items are considered unique\n * if `String({})` is unique. For example;\n *\n *  Lib.filterUnique([ { a: 1 }, { b: 2 } ])\n *\n *  returns [{ a: 1 }]\n *\n * and\n *\n *  Lib.filterUnique([ '1', 1 ])\n *\n *  returns ['1']\n *\n *\n * @param {array} array base array\n * @return {array} new filtered array\n */\n\nmodule.exports = function filterUnique(array) {\n  var seen = {};\n  var out = [];\n  var j = 0;\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n\n    if (seen[item] !== 1) {\n      seen[item] = 1;\n      out[j++] = item;\n    }\n  }\n\n  return out;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/lib/filter_unique.js"],"names":["module","exports","filterUnique","array","seen","out","j","i","length","item"],"mappings":"AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,CAAC,GAAG,CAAR;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,KAAK,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,QAAIE,IAAI,GAAGN,KAAK,CAACI,CAAD,CAAhB;;AAEA,QAAGH,IAAI,CAACK,IAAD,CAAJ,KAAe,CAAlB,EAAqB;AACjBL,MAAAA,IAAI,CAACK,IAAD,CAAJ,GAAa,CAAb;AACAJ,MAAAA,GAAG,CAACC,CAAC,EAAF,CAAH,GAAWG,IAAX;AACH;AACJ;;AAED,SAAOJ,GAAP;AACH,CAfD","sourcesContent":["'use strict';\n\n\n/**\n * Return news array containing only the unique items\n * found in input array.\n *\n * IMPORTANT: Note that items are considered unique\n * if `String({})` is unique. For example;\n *\n *  Lib.filterUnique([ { a: 1 }, { b: 2 } ])\n *\n *  returns [{ a: 1 }]\n *\n * and\n *\n *  Lib.filterUnique([ '1', 1 ])\n *\n *  returns ['1']\n *\n *\n * @param {array} array base array\n * @return {array} new filtered array\n */\nmodule.exports = function filterUnique(array) {\n    var seen = {};\n    var out = [];\n    var j = 0;\n\n    for(var i = 0; i < array.length; i++) {\n        var item = array[i];\n\n        if(seen[item] !== 1) {\n            seen[item] = 1;\n            out[j++] = item;\n        }\n    }\n\n    return out;\n};\n"]},"metadata":{},"sourceType":"script"}