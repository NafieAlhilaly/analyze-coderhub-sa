{"ast":null,"code":"'use strict';\n/* eslint-disable consistent-return */\n\nvar str2arr = require('../common').str2arr;\n\nvar sliceEq = require('../common').sliceEq;\n\nvar readUInt32BE = require('../common').readUInt32BE;\n\nvar SIG_PNG = str2arr('\\x89PNG\\r\\n\\x1a\\n');\nvar SIG_IHDR = str2arr('IHDR');\n\nmodule.exports = function (data) {\n  if (data.length < 24) return; // check PNG signature\n\n  if (!sliceEq(data, 0, SIG_PNG)) return; // check that first chunk is IHDR\n\n  if (!sliceEq(data, 12, SIG_IHDR)) return;\n  return {\n    width: readUInt32BE(data, 16),\n    height: readUInt32BE(data, 20),\n    type: 'png',\n    mime: 'image/png',\n    wUnits: 'px',\n    hUnits: 'px'\n  };\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/probe-image-size/lib/parse_sync/png.js"],"names":["str2arr","require","sliceEq","readUInt32BE","SIG_PNG","SIG_IHDR","module","exports","data","length","width","height","type","mime","wUnits","hUnits"],"mappings":"AAAA;AAEA;;AAEA,IAAIA,OAAO,GAAQC,OAAO,CAAC,WAAD,CAAP,CAAqBD,OAAxC;;AACA,IAAIE,OAAO,GAAQD,OAAO,CAAC,WAAD,CAAP,CAAqBC,OAAxC;;AACA,IAAIC,YAAY,GAAGF,OAAO,CAAC,WAAD,CAAP,CAAqBE,YAAxC;;AAGA,IAAIC,OAAO,GAAIJ,OAAO,CAAC,mBAAD,CAAtB;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,MAAD,CAAtB;;AAGAM,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/B,MAAIA,IAAI,CAACC,MAAL,GAAc,EAAlB,EAAsB,OADS,CAG/B;;AACA,MAAI,CAACP,OAAO,CAACM,IAAD,EAAO,CAAP,EAAUJ,OAAV,CAAZ,EAAgC,OAJD,CAM/B;;AACA,MAAI,CAACF,OAAO,CAACM,IAAD,EAAO,EAAP,EAAWH,QAAX,CAAZ,EAAkC;AAElC,SAAO;AACLK,IAAAA,KAAK,EAAGP,YAAY,CAACK,IAAD,EAAO,EAAP,CADf;AAELG,IAAAA,MAAM,EAAER,YAAY,CAACK,IAAD,EAAO,EAAP,CAFf;AAGLI,IAAAA,IAAI,EAAE,KAHD;AAILC,IAAAA,IAAI,EAAE,WAJD;AAKLC,IAAAA,MAAM,EAAE,IALH;AAMLC,IAAAA,MAAM,EAAE;AANH,GAAP;AAQD,CAjBD","sourcesContent":["'use strict';\n\n/* eslint-disable consistent-return */\n\nvar str2arr      = require('../common').str2arr;\nvar sliceEq      = require('../common').sliceEq;\nvar readUInt32BE = require('../common').readUInt32BE;\n\n\nvar SIG_PNG  = str2arr('\\x89PNG\\r\\n\\x1a\\n');\nvar SIG_IHDR = str2arr('IHDR');\n\n\nmodule.exports = function (data) {\n  if (data.length < 24) return;\n\n  // check PNG signature\n  if (!sliceEq(data, 0, SIG_PNG)) return;\n\n  // check that first chunk is IHDR\n  if (!sliceEq(data, 12, SIG_IHDR)) return;\n\n  return {\n    width:  readUInt32BE(data, 16),\n    height: readUInt32BE(data, 20),\n    type: 'png',\n    mime: 'image/png',\n    wUnits: 'px',\n    hUnits: 'px'\n  };\n};\n"]},"metadata":{},"sourceType":"script"}