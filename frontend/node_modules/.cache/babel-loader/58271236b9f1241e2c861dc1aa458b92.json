{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar handleRThetaDefaults = require('../scatterpolar/defaults').handleRThetaDefaults;\n\nvar handleStyleDefaults = require('../bar/style_defaults');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var len = handleRThetaDefaults(traceIn, traceOut, layout, coerce);\n\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  } // coerce('orientation', (traceOut.theta && !traceOut.r) ? 'angular' : 'radial');\n\n\n  coerce('thetaunit');\n  coerce('base');\n  coerce('offset');\n  coerce('width');\n  coerce('text');\n  coerce('hovertext');\n  coerce('hovertemplate'); // var textPosition = coerce('textposition');\n  // var hasBoth = Array.isArray(textPosition) || textPosition === 'auto';\n  // var hasInside = hasBoth || textPosition === 'inside';\n  // var hasOutside = hasBoth || textPosition === 'outside';\n  // if(hasInside || hasOutside) {\n  //     var textFont = coerceFont(coerce, 'textfont', layout.font);\n  //     if(hasInside) coerceFont(coerce, 'insidetextfont', textFont);\n  //     if(hasOutside) coerceFont(coerce, 'outsidetextfont', textFont);\n  //     coerce('constraintext');\n  //     coerce('selected.textfont.color');\n  //     coerce('unselected.textfont.color');\n  //     coerce('cliponaxis');\n  // }\n\n  handleStyleDefaults(traceIn, traceOut, coerce, defaultColor, layout);\n  Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/barpolar/defaults.js"],"names":["Lib","require","handleRThetaDefaults","handleStyleDefaults","attributes","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","layout","coerce","attr","dflt","len","visible","coerceSelectionMarkerOpacity"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AAEA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,0BAAD,CAAP,CAAoCC,oBAA/D;;AACA,IAAIC,mBAAmB,GAAGF,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAAxB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyDC,MAAzD,EAAiE;AAC9E,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACxB,WAAOd,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,QAApB,EAA8BL,UAA9B,EAA0CS,IAA1C,EAAgDC,IAAhD,CAAP;AACH;;AAED,MAAIC,GAAG,GAAGb,oBAAoB,CAACM,OAAD,EAAUC,QAAV,EAAoBE,MAApB,EAA4BC,MAA5B,CAA9B;;AACA,MAAG,CAACG,GAAJ,EAAS;AACLN,IAAAA,QAAQ,CAACO,OAAT,GAAmB,KAAnB;AACA;AACH,GAT6E,CAW9E;;;AAEAJ,EAAAA,MAAM,CAAC,WAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,MAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,QAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,OAAD,CAAN;AAEAA,EAAAA,MAAM,CAAC,MAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,WAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,eAAD,CAAN,CApB8E,CAsB9E;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAT,EAAAA,mBAAmB,CAACK,OAAD,EAAUC,QAAV,EAAoBG,MAApB,EAA4BF,YAA5B,EAA0CC,MAA1C,CAAnB;AAEAX,EAAAA,GAAG,CAACiB,4BAAJ,CAAiCR,QAAjC,EAA2CG,MAA3C;AACH,CAxCD","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\n\nvar handleRThetaDefaults = require('../scatterpolar/defaults').handleRThetaDefaults;\nvar handleStyleDefaults = require('../bar/style_defaults');\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var len = handleRThetaDefaults(traceIn, traceOut, layout, coerce);\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    // coerce('orientation', (traceOut.theta && !traceOut.r) ? 'angular' : 'radial');\n\n    coerce('thetaunit');\n    coerce('base');\n    coerce('offset');\n    coerce('width');\n\n    coerce('text');\n    coerce('hovertext');\n    coerce('hovertemplate');\n\n    // var textPosition = coerce('textposition');\n    // var hasBoth = Array.isArray(textPosition) || textPosition === 'auto';\n    // var hasInside = hasBoth || textPosition === 'inside';\n    // var hasOutside = hasBoth || textPosition === 'outside';\n\n    // if(hasInside || hasOutside) {\n    //     var textFont = coerceFont(coerce, 'textfont', layout.font);\n    //     if(hasInside) coerceFont(coerce, 'insidetextfont', textFont);\n    //     if(hasOutside) coerceFont(coerce, 'outsidetextfont', textFont);\n    //     coerce('constraintext');\n    //     coerce('selected.textfont.color');\n    //     coerce('unselected.textfont.color');\n    //     coerce('cliponaxis');\n    // }\n\n    handleStyleDefaults(traceIn, traceOut, coerce, defaultColor, layout);\n\n    Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};\n"]},"metadata":{},"sourceType":"script"}