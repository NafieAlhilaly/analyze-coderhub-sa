{"ast":null,"code":"'use strict';\n\nvar appendArrayMultiPointValues = require('../../components/fx/helpers').appendArrayMultiPointValues; // Note: like other eventData routines, this creates the data for hover/unhover/click events\n// but it has a different API and goes through a totally different pathway.\n// So to ensure it doesn't get misused, it's not attached to the Pie module.\n\n\nmodule.exports = function eventData(pt, trace) {\n  var out = {\n    curveNumber: trace.index,\n    pointNumbers: pt.pts,\n    data: trace._input,\n    fullData: trace,\n    label: pt.label,\n    color: pt.color,\n    value: pt.v,\n    percent: pt.percent,\n    text: pt.text,\n    bbox: pt.bbox,\n    // pt.v (and pt.i below) for backward compatibility\n    v: pt.v\n  }; // Only include pointNumber if it's unambiguous\n\n  if (pt.pts.length === 1) out.pointNumber = out.i = pt.pts[0]; // Add extra data arrays to the output\n  // notice that this is the multi-point version ('s' on the end!)\n  // so added data will be arrays matching the pointNumbers array.\n\n  appendArrayMultiPointValues(out, trace, pt.pts); // don't include obsolete fields in new funnelarea traces\n\n  if (trace.type === 'funnelarea') {\n    delete out.v;\n    delete out.i;\n  }\n\n  return out;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/pie/event_data.js"],"names":["appendArrayMultiPointValues","require","module","exports","eventData","pt","trace","out","curveNumber","index","pointNumbers","pts","data","_input","fullData","label","color","value","v","percent","text","bbox","length","pointNumber","i","type"],"mappings":"AAAA;;AAEA,IAAIA,2BAA2B,GAAGC,OAAO,CAAC,6BAAD,CAAP,CAAuCD,2BAAzE,C,CAEA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,EAAnB,EAAuBC,KAAvB,EAA8B;AAC3C,MAAIC,GAAG,GAAG;AACNC,IAAAA,WAAW,EAAEF,KAAK,CAACG,KADb;AAENC,IAAAA,YAAY,EAAEL,EAAE,CAACM,GAFX;AAGNC,IAAAA,IAAI,EAAEN,KAAK,CAACO,MAHN;AAINC,IAAAA,QAAQ,EAAER,KAJJ;AAKNS,IAAAA,KAAK,EAAEV,EAAE,CAACU,KALJ;AAMNC,IAAAA,KAAK,EAAEX,EAAE,CAACW,KANJ;AAONC,IAAAA,KAAK,EAAEZ,EAAE,CAACa,CAPJ;AAQNC,IAAAA,OAAO,EAAEd,EAAE,CAACc,OARN;AASNC,IAAAA,IAAI,EAAEf,EAAE,CAACe,IATH;AAUNC,IAAAA,IAAI,EAAEhB,EAAE,CAACgB,IAVH;AAYN;AACAH,IAAAA,CAAC,EAAEb,EAAE,CAACa;AAbA,GAAV,CAD2C,CAiB3C;;AACA,MAAGb,EAAE,CAACM,GAAH,CAAOW,MAAP,KAAkB,CAArB,EAAwBf,GAAG,CAACgB,WAAJ,GAAkBhB,GAAG,CAACiB,CAAJ,GAAQnB,EAAE,CAACM,GAAH,CAAO,CAAP,CAA1B,CAlBmB,CAoB3C;AACA;AACA;;AACAX,EAAAA,2BAA2B,CAACO,GAAD,EAAMD,KAAN,EAAaD,EAAE,CAACM,GAAhB,CAA3B,CAvB2C,CAyB3C;;AACA,MAAGL,KAAK,CAACmB,IAAN,KAAe,YAAlB,EAAgC;AAC5B,WAAOlB,GAAG,CAACW,CAAX;AACA,WAAOX,GAAG,CAACiB,CAAX;AACH;;AAED,SAAOjB,GAAP;AACH,CAhCD","sourcesContent":["'use strict';\n\nvar appendArrayMultiPointValues = require('../../components/fx/helpers').appendArrayMultiPointValues;\n\n// Note: like other eventData routines, this creates the data for hover/unhover/click events\n// but it has a different API and goes through a totally different pathway.\n// So to ensure it doesn't get misused, it's not attached to the Pie module.\nmodule.exports = function eventData(pt, trace) {\n    var out = {\n        curveNumber: trace.index,\n        pointNumbers: pt.pts,\n        data: trace._input,\n        fullData: trace,\n        label: pt.label,\n        color: pt.color,\n        value: pt.v,\n        percent: pt.percent,\n        text: pt.text,\n        bbox: pt.bbox,\n\n        // pt.v (and pt.i below) for backward compatibility\n        v: pt.v\n    };\n\n    // Only include pointNumber if it's unambiguous\n    if(pt.pts.length === 1) out.pointNumber = out.i = pt.pts[0];\n\n    // Add extra data arrays to the output\n    // notice that this is the multi-point version ('s' on the end!)\n    // so added data will be arrays matching the pointNumbers array.\n    appendArrayMultiPointValues(out, trace, pt.pts);\n\n    // don't include obsolete fields in new funnelarea traces\n    if(trace.type === 'funnelarea') {\n        delete out.v;\n        delete out.i;\n    }\n\n    return out;\n};\n"]},"metadata":{},"sourceType":"script"}