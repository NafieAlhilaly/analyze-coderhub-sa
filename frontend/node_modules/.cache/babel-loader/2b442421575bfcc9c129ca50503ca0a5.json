{"ast":null,"code":"'use strict';\n\nvar heatmapAttrs = require('../heatmap/attributes');\n\nvar contourAttrs = require('../contour/attributes');\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar contourContourAttrs = contourAttrs.contours;\nmodule.exports = extendFlat({\n  carpet: {\n    valType: 'string',\n    editType: 'calc',\n    description: ['The `carpet` of the carpet axes on which this contour trace lies'].join(' ')\n  },\n  z: heatmapAttrs.z,\n  a: heatmapAttrs.x,\n  a0: heatmapAttrs.x0,\n  da: heatmapAttrs.dx,\n  b: heatmapAttrs.y,\n  b0: heatmapAttrs.y0,\n  db: heatmapAttrs.dy,\n  text: heatmapAttrs.text,\n  hovertext: heatmapAttrs.hovertext,\n  transpose: heatmapAttrs.transpose,\n  atype: heatmapAttrs.xtype,\n  btype: heatmapAttrs.ytype,\n  fillcolor: contourAttrs.fillcolor,\n  autocontour: contourAttrs.autocontour,\n  ncontours: contourAttrs.ncontours,\n  contours: {\n    type: contourContourAttrs.type,\n    start: contourContourAttrs.start,\n    end: contourContourAttrs.end,\n    size: contourContourAttrs.size,\n    coloring: {\n      // from contourAttrs.contours.coloring but no 'heatmap' option\n      valType: 'enumerated',\n      values: ['fill', 'lines', 'none'],\n      dflt: 'fill',\n      editType: 'calc',\n      description: ['Determines the coloring method showing the contour values.', 'If *fill*, coloring is done evenly between each contour level', 'If *lines*, coloring is done on the contour lines.', 'If *none*, no coloring is applied on this trace.'].join(' ')\n    },\n    showlines: contourContourAttrs.showlines,\n    showlabels: contourContourAttrs.showlabels,\n    labelfont: contourContourAttrs.labelfont,\n    labelformat: contourContourAttrs.labelformat,\n    operation: contourContourAttrs.operation,\n    value: contourContourAttrs.value,\n    editType: 'calc',\n    impliedEdits: {\n      'autocontour': false\n    }\n  },\n  line: {\n    color: contourAttrs.line.color,\n    width: contourAttrs.line.width,\n    dash: contourAttrs.line.dash,\n    smoothing: contourAttrs.line.smoothing,\n    editType: 'plot'\n  },\n  transforms: undefined\n}, colorScaleAttrs('', {\n  cLetter: 'z',\n  autoColorDflt: false\n}));","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/contourcarpet/attributes.js"],"names":["heatmapAttrs","require","contourAttrs","colorScaleAttrs","extendFlat","contourContourAttrs","contours","module","exports","carpet","valType","editType","description","join","z","a","x","a0","x0","da","dx","b","y","b0","y0","db","dy","text","hovertext","transpose","atype","xtype","btype","ytype","fillcolor","autocontour","ncontours","type","start","end","size","coloring","values","dflt","showlines","showlabels","labelfont","labelformat","operation","value","impliedEdits","line","color","width","dash","smoothing","transforms","undefined","cLetter","autoColorDflt"],"mappings":"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","sourcesContent":["'use strict';\n\nvar heatmapAttrs = require('../heatmap/attributes');\nvar contourAttrs = require('../contour/attributes');\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar contourContourAttrs = contourAttrs.contours;\n\nmodule.exports = extendFlat({\n    carpet: {\n        valType: 'string',\n        editType: 'calc',\n        description: [\n            'The `carpet` of the carpet axes on which this contour trace lies'\n        ].join(' ')\n    },\n    z: heatmapAttrs.z,\n    a: heatmapAttrs.x,\n    a0: heatmapAttrs.x0,\n    da: heatmapAttrs.dx,\n    b: heatmapAttrs.y,\n    b0: heatmapAttrs.y0,\n    db: heatmapAttrs.dy,\n    text: heatmapAttrs.text,\n    hovertext: heatmapAttrs.hovertext,\n    transpose: heatmapAttrs.transpose,\n    atype: heatmapAttrs.xtype,\n    btype: heatmapAttrs.ytype,\n\n    fillcolor: contourAttrs.fillcolor,\n\n    autocontour: contourAttrs.autocontour,\n    ncontours: contourAttrs.ncontours,\n\n    contours: {\n        type: contourContourAttrs.type,\n        start: contourContourAttrs.start,\n        end: contourContourAttrs.end,\n        size: contourContourAttrs.size,\n        coloring: {\n            // from contourAttrs.contours.coloring but no 'heatmap' option\n            valType: 'enumerated',\n            values: ['fill', 'lines', 'none'],\n            dflt: 'fill',\n            editType: 'calc',\n            description: [\n                'Determines the coloring method showing the contour values.',\n                'If *fill*, coloring is done evenly between each contour level',\n                'If *lines*, coloring is done on the contour lines.',\n                'If *none*, no coloring is applied on this trace.'\n            ].join(' ')\n        },\n        showlines: contourContourAttrs.showlines,\n        showlabels: contourContourAttrs.showlabels,\n        labelfont: contourContourAttrs.labelfont,\n        labelformat: contourContourAttrs.labelformat,\n        operation: contourContourAttrs.operation,\n        value: contourContourAttrs.value,\n        editType: 'calc',\n        impliedEdits: {'autocontour': false}\n    },\n\n    line: {\n        color: contourAttrs.line.color,\n        width: contourAttrs.line.width,\n        dash: contourAttrs.line.dash,\n        smoothing: contourAttrs.line.smoothing,\n        editType: 'plot'\n    },\n\n    transforms: undefined\n},\n\n    colorScaleAttrs('', {\n        cLetter: 'z',\n        autoColorDflt: false\n    })\n);\n"]},"metadata":{},"sourceType":"script"}