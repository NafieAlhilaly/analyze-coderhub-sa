{"ast":null,"code":"'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\n\nvar padAttrs = require('../../plots/pad_attributes');\n\nvar extendDeepAll = require('../../lib/extend').extendDeepAll;\n\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nvar animationAttrs = require('../../plots/animation_attributes');\n\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar constants = require('./constants');\n\nvar stepsAttrs = templatedArray('step', {\n  visible: {\n    valType: 'boolean',\n    dflt: true,\n    description: ['Determines whether or not this step is included in the slider.'].join(' ')\n  },\n  method: {\n    valType: 'enumerated',\n    values: ['restyle', 'relayout', 'animate', 'update', 'skip'],\n    dflt: 'restyle',\n    description: ['Sets the Plotly method to be called when the slider value is changed.', 'If the `skip` method is used, the API slider will function as normal', 'but will perform no API calls and will not bind automatically to state', 'updates. This may be used to create a component interface and attach to', 'slider events manually via JavaScript.'].join(' ')\n  },\n  args: {\n    valType: 'info_array',\n    freeLength: true,\n    items: [{\n      valType: 'any'\n    }, {\n      valType: 'any'\n    }, {\n      valType: 'any'\n    }],\n    description: ['Sets the arguments values to be passed to the Plotly', 'method set in `method` on slide.'].join(' ')\n  },\n  label: {\n    valType: 'string',\n    description: 'Sets the text label to appear on the slider'\n  },\n  value: {\n    valType: 'string',\n    description: ['Sets the value of the slider step, used to refer to the step programatically.', 'Defaults to the slider label if not provided.'].join(' ')\n  },\n  execute: {\n    valType: 'boolean',\n    dflt: true,\n    description: ['When true, the API method is executed. When false, all other behaviors are the same', 'and command execution is skipped. This may be useful when hooking into, for example,', 'the `plotly_sliderchange` method and executing the API command manually without losing', 'the benefit of the slider automatically binding to the state of the plot through the', 'specification of `method` and `args`.'].join(' ')\n  }\n});\nmodule.exports = overrideAll(templatedArray('slider', {\n  visible: {\n    valType: 'boolean',\n    dflt: true,\n    description: ['Determines whether or not the slider is visible.'].join(' ')\n  },\n  active: {\n    valType: 'number',\n    min: 0,\n    dflt: 0,\n    description: ['Determines which button (by index starting from 0) is', 'considered active.'].join(' ')\n  },\n  steps: stepsAttrs,\n  lenmode: {\n    valType: 'enumerated',\n    values: ['fraction', 'pixels'],\n    dflt: 'fraction',\n    description: ['Determines whether this slider length', 'is set in units of plot *fraction* or in *pixels.', 'Use `len` to set the value.'].join(' ')\n  },\n  len: {\n    valType: 'number',\n    min: 0,\n    dflt: 1,\n    description: ['Sets the length of the slider', 'This measure excludes the padding of both ends.', 'That is, the slider\\'s length is this length minus the', 'padding on both ends.'].join(' ')\n  },\n  x: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    dflt: 0,\n    description: 'Sets the x position (in normalized coordinates) of the slider.'\n  },\n  pad: extendDeepAll(padAttrs({\n    editType: 'arraydraw'\n  }), {\n    description: 'Set the padding of the slider component along each side.'\n  }, {\n    t: {\n      dflt: 20\n    }\n  }),\n  xanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'left', 'center', 'right'],\n    dflt: 'left',\n    description: ['Sets the slider\\'s horizontal position anchor.', 'This anchor binds the `x` position to the *left*, *center*', 'or *right* of the range selector.'].join(' ')\n  },\n  y: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    dflt: 0,\n    description: 'Sets the y position (in normalized coordinates) of the slider.'\n  },\n  yanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'top', 'middle', 'bottom'],\n    dflt: 'top',\n    description: ['Sets the slider\\'s vertical position anchor', 'This anchor binds the `y` position to the *top*, *middle*', 'or *bottom* of the range selector.'].join(' ')\n  },\n  transition: {\n    duration: {\n      valType: 'number',\n      min: 0,\n      dflt: 150,\n      description: 'Sets the duration of the slider transition'\n    },\n    easing: {\n      valType: 'enumerated',\n      values: animationAttrs.transition.easing.values,\n      dflt: 'cubic-in-out',\n      description: 'Sets the easing function of the slider transition'\n    }\n  },\n  currentvalue: {\n    visible: {\n      valType: 'boolean',\n      dflt: true,\n      description: ['Shows the currently-selected value above the slider.'].join(' ')\n    },\n    xanchor: {\n      valType: 'enumerated',\n      values: ['left', 'center', 'right'],\n      dflt: 'left',\n      description: ['The alignment of the value readout relative to the length of the slider.'].join(' ')\n    },\n    offset: {\n      valType: 'number',\n      dflt: 10,\n      description: ['The amount of space, in pixels, between the current value label', 'and the slider.'].join(' ')\n    },\n    prefix: {\n      valType: 'string',\n      description: 'When currentvalue.visible is true, this sets the prefix of the label.'\n    },\n    suffix: {\n      valType: 'string',\n      description: 'When currentvalue.visible is true, this sets the suffix of the label.'\n    },\n    font: fontAttrs({\n      description: 'Sets the font of the current value label text.'\n    })\n  },\n  font: fontAttrs({\n    description: 'Sets the font of the slider step labels.'\n  }),\n  activebgcolor: {\n    valType: 'color',\n    dflt: constants.gripBgActiveColor,\n    description: ['Sets the background color of the slider grip', 'while dragging.'].join(' ')\n  },\n  bgcolor: {\n    valType: 'color',\n    dflt: constants.railBgColor,\n    description: 'Sets the background color of the slider.'\n  },\n  bordercolor: {\n    valType: 'color',\n    dflt: constants.railBorderColor,\n    description: 'Sets the color of the border enclosing the slider.'\n  },\n  borderwidth: {\n    valType: 'number',\n    min: 0,\n    dflt: constants.railBorderWidth,\n    description: 'Sets the width (in px) of the border enclosing the slider.'\n  },\n  ticklen: {\n    valType: 'number',\n    min: 0,\n    dflt: constants.tickLength,\n    description: 'Sets the length in pixels of step tick marks'\n  },\n  tickcolor: {\n    valType: 'color',\n    dflt: constants.tickColor,\n    description: 'Sets the color of the border enclosing the slider.'\n  },\n  tickwidth: {\n    valType: 'number',\n    min: 0,\n    dflt: 1,\n    description: 'Sets the tick width (in px).'\n  },\n  minorticklen: {\n    valType: 'number',\n    min: 0,\n    dflt: constants.minorTickLength,\n    description: 'Sets the length in pixels of minor step tick marks'\n  }\n}), 'arraydraw', 'from-root');","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/sliders/attributes.js"],"names":["fontAttrs","require","padAttrs","extendDeepAll","overrideAll","animationAttrs","templatedArray","constants","stepsAttrs","visible","valType","dflt","description","join","method","values","args","freeLength","items","label","value","execute","module","exports","active","min","steps","lenmode","len","x","max","pad","editType","t","xanchor","y","yanchor","transition","duration","easing","currentvalue","offset","prefix","suffix","font","activebgcolor","gripBgActiveColor","bgcolor","railBgColor","bordercolor","railBorderColor","borderwidth","railBorderWidth","ticklen","tickLength","tickcolor","tickColor","tickwidth","minorticklen","minorTickLength"],"mappings":"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","sourcesContent":["'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar padAttrs = require('../../plots/pad_attributes');\nvar extendDeepAll = require('../../lib/extend').extendDeepAll;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar animationAttrs = require('../../plots/animation_attributes');\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\nvar constants = require('./constants');\n\nvar stepsAttrs = templatedArray('step', {\n    visible: {\n        valType: 'boolean',\n        dflt: true,\n        description: [\n            'Determines whether or not this step is included in the slider.'\n        ].join(' ')\n    },\n    method: {\n        valType: 'enumerated',\n        values: ['restyle', 'relayout', 'animate', 'update', 'skip'],\n        dflt: 'restyle',\n        description: [\n            'Sets the Plotly method to be called when the slider value is changed.',\n            'If the `skip` method is used, the API slider will function as normal',\n            'but will perform no API calls and will not bind automatically to state',\n            'updates. This may be used to create a component interface and attach to',\n            'slider events manually via JavaScript.'\n        ].join(' ')\n    },\n    args: {\n        valType: 'info_array',\n        freeLength: true,\n        items: [\n            { valType: 'any' },\n            { valType: 'any' },\n            { valType: 'any' }\n        ],\n        description: [\n            'Sets the arguments values to be passed to the Plotly',\n            'method set in `method` on slide.'\n        ].join(' ')\n    },\n    label: {\n        valType: 'string',\n        description: 'Sets the text label to appear on the slider'\n    },\n    value: {\n        valType: 'string',\n        description: [\n            'Sets the value of the slider step, used to refer to the step programatically.',\n            'Defaults to the slider label if not provided.'\n        ].join(' ')\n    },\n    execute: {\n        valType: 'boolean',\n        dflt: true,\n        description: [\n            'When true, the API method is executed. When false, all other behaviors are the same',\n            'and command execution is skipped. This may be useful when hooking into, for example,',\n            'the `plotly_sliderchange` method and executing the API command manually without losing',\n            'the benefit of the slider automatically binding to the state of the plot through the',\n            'specification of `method` and `args`.'\n        ].join(' ')\n    }\n});\n\nmodule.exports = overrideAll(templatedArray('slider', {\n    visible: {\n        valType: 'boolean',\n        dflt: true,\n        description: [\n            'Determines whether or not the slider is visible.'\n        ].join(' ')\n    },\n\n    active: {\n        valType: 'number',\n        min: 0,\n        dflt: 0,\n        description: [\n            'Determines which button (by index starting from 0) is',\n            'considered active.'\n        ].join(' ')\n    },\n\n    steps: stepsAttrs,\n\n    lenmode: {\n        valType: 'enumerated',\n        values: ['fraction', 'pixels'],\n        dflt: 'fraction',\n        description: [\n            'Determines whether this slider length',\n            'is set in units of plot *fraction* or in *pixels.',\n            'Use `len` to set the value.'\n        ].join(' ')\n    },\n    len: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        description: [\n            'Sets the length of the slider',\n            'This measure excludes the padding of both ends.',\n            'That is, the slider\\'s length is this length minus the',\n            'padding on both ends.'\n        ].join(' ')\n    },\n    x: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        dflt: 0,\n        description: 'Sets the x position (in normalized coordinates) of the slider.'\n    },\n    pad: extendDeepAll(padAttrs({editType: 'arraydraw'}), {\n        description: 'Set the padding of the slider component along each side.'\n    }, {t: {dflt: 20}}),\n    xanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'left', 'center', 'right'],\n        dflt: 'left',\n        description: [\n            'Sets the slider\\'s horizontal position anchor.',\n            'This anchor binds the `x` position to the *left*, *center*',\n            'or *right* of the range selector.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        dflt: 0,\n        description: 'Sets the y position (in normalized coordinates) of the slider.'\n    },\n    yanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'top', 'middle', 'bottom'],\n        dflt: 'top',\n        description: [\n            'Sets the slider\\'s vertical position anchor',\n            'This anchor binds the `y` position to the *top*, *middle*',\n            'or *bottom* of the range selector.'\n        ].join(' ')\n    },\n\n    transition: {\n        duration: {\n            valType: 'number',\n            min: 0,\n            dflt: 150,\n            description: 'Sets the duration of the slider transition'\n        },\n        easing: {\n            valType: 'enumerated',\n            values: animationAttrs.transition.easing.values,\n            dflt: 'cubic-in-out',\n            description: 'Sets the easing function of the slider transition'\n        }\n    },\n\n    currentvalue: {\n        visible: {\n            valType: 'boolean',\n            dflt: true,\n            description: [\n                'Shows the currently-selected value above the slider.'\n            ].join(' ')\n        },\n\n        xanchor: {\n            valType: 'enumerated',\n            values: ['left', 'center', 'right'],\n            dflt: 'left',\n            description: [\n                'The alignment of the value readout relative to the length of the slider.'\n            ].join(' ')\n        },\n\n        offset: {\n            valType: 'number',\n            dflt: 10,\n            description: [\n                'The amount of space, in pixels, between the current value label',\n                'and the slider.'\n            ].join(' ')\n        },\n\n        prefix: {\n            valType: 'string',\n            description: 'When currentvalue.visible is true, this sets the prefix of the label.'\n        },\n\n        suffix: {\n            valType: 'string',\n            description: 'When currentvalue.visible is true, this sets the suffix of the label.'\n        },\n\n        font: fontAttrs({\n            description: 'Sets the font of the current value label text.'\n        })\n    },\n\n    font: fontAttrs({\n        description: 'Sets the font of the slider step labels.'\n    }),\n\n    activebgcolor: {\n        valType: 'color',\n        dflt: constants.gripBgActiveColor,\n        description: [\n            'Sets the background color of the slider grip',\n            'while dragging.'\n        ].join(' ')\n    },\n    bgcolor: {\n        valType: 'color',\n        dflt: constants.railBgColor,\n        description: 'Sets the background color of the slider.'\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: constants.railBorderColor,\n        description: 'Sets the color of the border enclosing the slider.'\n    },\n    borderwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: constants.railBorderWidth,\n        description: 'Sets the width (in px) of the border enclosing the slider.'\n    },\n    ticklen: {\n        valType: 'number',\n        min: 0,\n        dflt: constants.tickLength,\n        description: 'Sets the length in pixels of step tick marks'\n    },\n    tickcolor: {\n        valType: 'color',\n        dflt: constants.tickColor,\n        description: 'Sets the color of the border enclosing the slider.'\n    },\n    tickwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        description: 'Sets the tick width (in px).'\n    },\n    minorticklen: {\n        valType: 'number',\n        min: 0,\n        dflt: constants.minorTickLength,\n        description: 'Sets the length in pixels of minor step tick marks'\n    }\n}), 'arraydraw', 'from-root');\n"]},"metadata":{},"sourceType":"script"}