{"ast":null,"code":"'use strict';\n\nmodule.exports = createTurntableController;\n\nvar filterVector = require('filtered-vector');\n\nvar invert44 = require('gl-mat4/invert');\n\nvar rotateM = require('gl-mat4/rotate');\n\nvar cross = require('gl-vec3/cross');\n\nvar normalize3 = require('gl-vec3/normalize');\n\nvar dot3 = require('gl-vec3/dot');\n\nfunction len3(x, y, z) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));\n}\n\nfunction clamp1(x) {\n  return Math.min(1.0, Math.max(-1.0, x));\n}\n\nfunction findOrthoPair(v) {\n  var vx = Math.abs(v[0]);\n  var vy = Math.abs(v[1]);\n  var vz = Math.abs(v[2]);\n  var u = [0, 0, 0];\n\n  if (vx > Math.max(vy, vz)) {\n    u[2] = 1;\n  } else if (vy > Math.max(vx, vz)) {\n    u[0] = 1;\n  } else {\n    u[1] = 1;\n  }\n\n  var vv = 0;\n  var uv = 0;\n\n  for (var i = 0; i < 3; ++i) {\n    vv += v[i] * v[i];\n    uv += u[i] * v[i];\n  }\n\n  for (var i = 0; i < 3; ++i) {\n    u[i] -= uv / vv * v[i];\n  }\n\n  normalize3(u, u);\n  return u;\n}\n\nfunction TurntableController(zoomMin, zoomMax, center, up, right, radius, theta, phi) {\n  this.center = filterVector(center);\n  this.up = filterVector(up);\n  this.right = filterVector(right);\n  this.radius = filterVector([radius]);\n  this.angle = filterVector([theta, phi]);\n  this.angle.bounds = [[-Infinity, -Math.PI / 2], [Infinity, Math.PI / 2]];\n  this.setDistanceLimits(zoomMin, zoomMax);\n  this.computedCenter = this.center.curve(0);\n  this.computedUp = this.up.curve(0);\n  this.computedRight = this.right.curve(0);\n  this.computedRadius = this.radius.curve(0);\n  this.computedAngle = this.angle.curve(0);\n  this.computedToward = [0, 0, 0];\n  this.computedEye = [0, 0, 0];\n  this.computedMatrix = new Array(16);\n\n  for (var i = 0; i < 16; ++i) {\n    this.computedMatrix[i] = 0.5;\n  }\n\n  this.recalcMatrix(0);\n}\n\nvar proto = TurntableController.prototype;\n\nproto.setDistanceLimits = function (minDist, maxDist) {\n  if (minDist > 0) {\n    minDist = Math.log(minDist);\n  } else {\n    minDist = -Infinity;\n  }\n\n  if (maxDist > 0) {\n    maxDist = Math.log(maxDist);\n  } else {\n    maxDist = Infinity;\n  }\n\n  maxDist = Math.max(maxDist, minDist);\n  this.radius.bounds[0][0] = minDist;\n  this.radius.bounds[1][0] = maxDist;\n};\n\nproto.getDistanceLimits = function (out) {\n  var bounds = this.radius.bounds[0];\n\n  if (out) {\n    out[0] = Math.exp(bounds[0][0]);\n    out[1] = Math.exp(bounds[1][0]);\n    return out;\n  }\n\n  return [Math.exp(bounds[0][0]), Math.exp(bounds[1][0])];\n};\n\nproto.recalcMatrix = function (t) {\n  //Recompute curves\n  this.center.curve(t);\n  this.up.curve(t);\n  this.right.curve(t);\n  this.radius.curve(t);\n  this.angle.curve(t); //Compute frame for camera matrix\n\n  var up = this.computedUp;\n  var right = this.computedRight;\n  var uu = 0.0;\n  var ur = 0.0;\n\n  for (var i = 0; i < 3; ++i) {\n    ur += up[i] * right[i];\n    uu += up[i] * up[i];\n  }\n\n  var ul = Math.sqrt(uu);\n  var rr = 0.0;\n\n  for (var i = 0; i < 3; ++i) {\n    right[i] -= up[i] * ur / uu;\n    rr += right[i] * right[i];\n    up[i] /= ul;\n  }\n\n  var rl = Math.sqrt(rr);\n\n  for (var i = 0; i < 3; ++i) {\n    right[i] /= rl;\n  } //Compute toward vector\n\n\n  var toward = this.computedToward;\n  cross(toward, up, right);\n  normalize3(toward, toward); //Compute angular parameters\n\n  var radius = Math.exp(this.computedRadius[0]);\n  var theta = this.computedAngle[0];\n  var phi = this.computedAngle[1];\n  var ctheta = Math.cos(theta);\n  var stheta = Math.sin(theta);\n  var cphi = Math.cos(phi);\n  var sphi = Math.sin(phi);\n  var center = this.computedCenter;\n  var wx = ctheta * cphi;\n  var wy = stheta * cphi;\n  var wz = sphi;\n  var sx = -ctheta * sphi;\n  var sy = -stheta * sphi;\n  var sz = cphi;\n  var eye = this.computedEye;\n  var mat = this.computedMatrix;\n\n  for (var i = 0; i < 3; ++i) {\n    var x = wx * right[i] + wy * toward[i] + wz * up[i];\n    mat[4 * i + 1] = sx * right[i] + sy * toward[i] + sz * up[i];\n    mat[4 * i + 2] = x;\n    mat[4 * i + 3] = 0.0;\n  }\n\n  var ax = mat[1];\n  var ay = mat[5];\n  var az = mat[9];\n  var bx = mat[2];\n  var by = mat[6];\n  var bz = mat[10];\n  var cx = ay * bz - az * by;\n  var cy = az * bx - ax * bz;\n  var cz = ax * by - ay * bx;\n  var cl = len3(cx, cy, cz);\n  cx /= cl;\n  cy /= cl;\n  cz /= cl;\n  mat[0] = cx;\n  mat[4] = cy;\n  mat[8] = cz;\n\n  for (var i = 0; i < 3; ++i) {\n    eye[i] = center[i] + mat[2 + 4 * i] * radius;\n  }\n\n  for (var i = 0; i < 3; ++i) {\n    var rr = 0.0;\n\n    for (var j = 0; j < 3; ++j) {\n      rr += mat[i + 4 * j] * eye[j];\n    }\n\n    mat[12 + i] = -rr;\n  }\n\n  mat[15] = 1.0;\n};\n\nproto.getMatrix = function (t, result) {\n  this.recalcMatrix(t);\n  var mat = this.computedMatrix;\n\n  if (result) {\n    for (var i = 0; i < 16; ++i) {\n      result[i] = mat[i];\n    }\n\n    return result;\n  }\n\n  return mat;\n};\n\nvar zAxis = [0, 0, 0];\n\nproto.rotate = function (t, dtheta, dphi, droll) {\n  this.angle.move(t, dtheta, dphi);\n\n  if (droll) {\n    this.recalcMatrix(t);\n    var mat = this.computedMatrix;\n    zAxis[0] = mat[2];\n    zAxis[1] = mat[6];\n    zAxis[2] = mat[10];\n    var up = this.computedUp;\n    var right = this.computedRight;\n    var toward = this.computedToward;\n\n    for (var i = 0; i < 3; ++i) {\n      mat[4 * i] = up[i];\n      mat[4 * i + 1] = right[i];\n      mat[4 * i + 2] = toward[i];\n    }\n\n    rotateM(mat, mat, droll, zAxis);\n\n    for (var i = 0; i < 3; ++i) {\n      up[i] = mat[4 * i];\n      right[i] = mat[4 * i + 1];\n    }\n\n    this.up.set(t, up[0], up[1], up[2]);\n    this.right.set(t, right[0], right[1], right[2]);\n  }\n};\n\nproto.pan = function (t, dx, dy, dz) {\n  dx = dx || 0.0;\n  dy = dy || 0.0;\n  dz = dz || 0.0;\n  this.recalcMatrix(t);\n  var mat = this.computedMatrix;\n  var dist = Math.exp(this.computedRadius[0]);\n  var ux = mat[1];\n  var uy = mat[5];\n  var uz = mat[9];\n  var ul = len3(ux, uy, uz);\n  ux /= ul;\n  uy /= ul;\n  uz /= ul;\n  var rx = mat[0];\n  var ry = mat[4];\n  var rz = mat[8];\n  var ru = rx * ux + ry * uy + rz * uz;\n  rx -= ux * ru;\n  ry -= uy * ru;\n  rz -= uz * ru;\n  var rl = len3(rx, ry, rz);\n  rx /= rl;\n  ry /= rl;\n  rz /= rl;\n  var vx = rx * dx + ux * dy;\n  var vy = ry * dx + uy * dy;\n  var vz = rz * dx + uz * dy;\n  this.center.move(t, vx, vy, vz); //Update z-component of radius\n\n  var radius = Math.exp(this.computedRadius[0]);\n  radius = Math.max(1e-4, radius + dz);\n  this.radius.set(t, Math.log(radius));\n};\n\nproto.translate = function (t, dx, dy, dz) {\n  this.center.move(t, dx || 0.0, dy || 0.0, dz || 0.0);\n}; //Recenters the coordinate axes\n\n\nproto.setMatrix = function (t, mat, axes, noSnap) {\n  //Get the axes for tare\n  var ushift = 1;\n\n  if (typeof axes === 'number') {\n    ushift = axes | 0;\n  }\n\n  if (ushift < 0 || ushift > 3) {\n    ushift = 1;\n  }\n\n  var vshift = (ushift + 2) % 3;\n  var fshift = (ushift + 1) % 3; //Recompute state for new t value\n\n  if (!mat) {\n    this.recalcMatrix(t);\n    mat = this.computedMatrix;\n  } //Get right and up vectors\n\n\n  var ux = mat[ushift];\n  var uy = mat[ushift + 4];\n  var uz = mat[ushift + 8];\n\n  if (!noSnap) {\n    var ul = len3(ux, uy, uz);\n    ux /= ul;\n    uy /= ul;\n    uz /= ul;\n  } else {\n    var ax = Math.abs(ux);\n    var ay = Math.abs(uy);\n    var az = Math.abs(uz);\n    var am = Math.max(ax, ay, az);\n\n    if (ax === am) {\n      ux = ux < 0 ? -1 : 1;\n      uy = uz = 0;\n    } else if (az === am) {\n      uz = uz < 0 ? -1 : 1;\n      ux = uy = 0;\n    } else {\n      uy = uy < 0 ? -1 : 1;\n      ux = uz = 0;\n    }\n  }\n\n  var rx = mat[vshift];\n  var ry = mat[vshift + 4];\n  var rz = mat[vshift + 8];\n  var ru = rx * ux + ry * uy + rz * uz;\n  rx -= ux * ru;\n  ry -= uy * ru;\n  rz -= uz * ru;\n  var rl = len3(rx, ry, rz);\n  rx /= rl;\n  ry /= rl;\n  rz /= rl;\n  var fx = uy * rz - uz * ry;\n  var fy = uz * rx - ux * rz;\n  var fz = ux * ry - uy * rx;\n  var fl = len3(fx, fy, fz);\n  fx /= fl;\n  fy /= fl;\n  fz /= fl;\n  this.center.jump(t, ex, ey, ez);\n  this.radius.idle(t);\n  this.up.jump(t, ux, uy, uz);\n  this.right.jump(t, rx, ry, rz);\n  var phi, theta;\n\n  if (ushift === 2) {\n    var cx = mat[1];\n    var cy = mat[5];\n    var cz = mat[9];\n    var cr = cx * rx + cy * ry + cz * rz;\n    var cf = cx * fx + cy * fy + cz * fz;\n\n    if (tu < 0) {\n      phi = -Math.PI / 2;\n    } else {\n      phi = Math.PI / 2;\n    }\n\n    theta = Math.atan2(cf, cr);\n  } else {\n    var tx = mat[2];\n    var ty = mat[6];\n    var tz = mat[10];\n    var tu = tx * ux + ty * uy + tz * uz;\n    var tr = tx * rx + ty * ry + tz * rz;\n    var tf = tx * fx + ty * fy + tz * fz;\n    phi = Math.asin(clamp1(tu));\n    theta = Math.atan2(tf, tr);\n  }\n\n  this.angle.jump(t, theta, phi);\n  this.recalcMatrix(t);\n  var dx = mat[2];\n  var dy = mat[6];\n  var dz = mat[10];\n  var imat = this.computedMatrix;\n  invert44(imat, mat);\n  var w = imat[15];\n  var ex = imat[12] / w;\n  var ey = imat[13] / w;\n  var ez = imat[14] / w;\n  var gs = Math.exp(this.computedRadius[0]);\n  this.center.jump(t, ex - dx * gs, ey - dy * gs, ez - dz * gs);\n};\n\nproto.lastT = function () {\n  return Math.max(this.center.lastT(), this.up.lastT(), this.right.lastT(), this.radius.lastT(), this.angle.lastT());\n};\n\nproto.idle = function (t) {\n  this.center.idle(t);\n  this.up.idle(t);\n  this.right.idle(t);\n  this.radius.idle(t);\n  this.angle.idle(t);\n};\n\nproto.flush = function (t) {\n  this.center.flush(t);\n  this.up.flush(t);\n  this.right.flush(t);\n  this.radius.flush(t);\n  this.angle.flush(t);\n};\n\nproto.setDistance = function (t, d) {\n  if (d > 0) {\n    this.radius.set(t, Math.log(d));\n  }\n};\n\nproto.lookAt = function (t, eye, center, up) {\n  this.recalcMatrix(t);\n  eye = eye || this.computedEye;\n  center = center || this.computedCenter;\n  up = up || this.computedUp;\n  var ux = up[0];\n  var uy = up[1];\n  var uz = up[2];\n  var ul = len3(ux, uy, uz);\n\n  if (ul < 1e-6) {\n    return;\n  }\n\n  ux /= ul;\n  uy /= ul;\n  uz /= ul;\n  var tx = eye[0] - center[0];\n  var ty = eye[1] - center[1];\n  var tz = eye[2] - center[2];\n  var tl = len3(tx, ty, tz);\n\n  if (tl < 1e-6) {\n    return;\n  }\n\n  tx /= tl;\n  ty /= tl;\n  tz /= tl;\n  var right = this.computedRight;\n  var rx = right[0];\n  var ry = right[1];\n  var rz = right[2];\n  var ru = ux * rx + uy * ry + uz * rz;\n  rx -= ru * ux;\n  ry -= ru * uy;\n  rz -= ru * uz;\n  var rl = len3(rx, ry, rz);\n\n  if (rl < 0.01) {\n    rx = uy * tz - uz * ty;\n    ry = uz * tx - ux * tz;\n    rz = ux * ty - uy * tx;\n    rl = len3(rx, ry, rz);\n\n    if (rl < 1e-6) {\n      return;\n    }\n  }\n\n  rx /= rl;\n  ry /= rl;\n  rz /= rl;\n  this.up.set(t, ux, uy, uz);\n  this.right.set(t, rx, ry, rz);\n  this.center.set(t, center[0], center[1], center[2]);\n  this.radius.set(t, Math.log(tl));\n  var fx = uy * rz - uz * ry;\n  var fy = uz * rx - ux * rz;\n  var fz = ux * ry - uy * rx;\n  var fl = len3(fx, fy, fz);\n  fx /= fl;\n  fy /= fl;\n  fz /= fl;\n  var tu = ux * tx + uy * ty + uz * tz;\n  var tr = rx * tx + ry * ty + rz * tz;\n  var tf = fx * tx + fy * ty + fz * tz;\n  var phi = Math.asin(clamp1(tu));\n  var theta = Math.atan2(tf, tr);\n  var angleState = this.angle._state;\n  var lastTheta = angleState[angleState.length - 1];\n  var lastPhi = angleState[angleState.length - 2];\n  lastTheta = lastTheta % (2.0 * Math.PI);\n  var dp = Math.abs(lastTheta + 2.0 * Math.PI - theta);\n  var d0 = Math.abs(lastTheta - theta);\n  var dn = Math.abs(lastTheta - 2.0 * Math.PI - theta);\n\n  if (dp < d0) {\n    lastTheta += 2.0 * Math.PI;\n  }\n\n  if (dn < d0) {\n    lastTheta -= 2.0 * Math.PI;\n  }\n\n  this.angle.jump(this.angle.lastT(), lastTheta, lastPhi);\n  this.angle.set(t, theta, phi);\n};\n\nfunction createTurntableController(options) {\n  options = options || {};\n  var center = options.center || [0, 0, 0];\n  var up = options.up || [0, 1, 0];\n  var right = options.right || findOrthoPair(up);\n  var radius = options.radius || 1.0;\n  var theta = options.theta || 0.0;\n  var phi = options.phi || 0.0;\n  center = [].slice.call(center, 0, 3);\n  up = [].slice.call(up, 0, 3);\n  normalize3(up, up);\n  right = [].slice.call(right, 0, 3);\n  normalize3(right, right);\n\n  if ('eye' in options) {\n    var eye = options.eye;\n    var toward = [eye[0] - center[0], eye[1] - center[1], eye[2] - center[2]];\n    cross(right, toward, up);\n\n    if (len3(right[0], right[1], right[2]) < 1e-6) {\n      right = findOrthoPair(up);\n    } else {\n      normalize3(right, right);\n    }\n\n    radius = len3(toward[0], toward[1], toward[2]);\n    var ut = dot3(up, toward) / radius;\n    var rt = dot3(right, toward) / radius;\n    phi = Math.acos(ut);\n    theta = Math.acos(rt);\n  } //Use logarithmic coordinates for radius\n\n\n  radius = Math.log(radius); //Return the controller\n\n  return new TurntableController(options.zoomMin, options.zoomMax, center, up, right, radius, theta, phi);\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/turntable-camera-controller/turntable.js"],"names":["module","exports","createTurntableController","filterVector","require","invert44","rotateM","cross","normalize3","dot3","len3","x","y","z","Math","sqrt","pow","clamp1","min","max","findOrthoPair","v","vx","abs","vy","vz","u","vv","uv","i","TurntableController","zoomMin","zoomMax","center","up","right","radius","theta","phi","angle","bounds","Infinity","PI","setDistanceLimits","computedCenter","curve","computedUp","computedRight","computedRadius","computedAngle","computedToward","computedEye","computedMatrix","Array","recalcMatrix","proto","prototype","minDist","maxDist","log","getDistanceLimits","out","exp","t","uu","ur","ul","rr","rl","toward","ctheta","cos","stheta","sin","cphi","sphi","wx","wy","wz","sx","sy","sz","eye","mat","ax","ay","az","bx","by","bz","cx","cy","cz","cl","j","getMatrix","result","zAxis","rotate","dtheta","dphi","droll","move","set","pan","dx","dy","dz","dist","ux","uy","uz","rx","ry","rz","ru","translate","setMatrix","axes","noSnap","ushift","vshift","fshift","am","fx","fy","fz","fl","jump","ex","ey","ez","idle","cr","cf","tu","atan2","tx","ty","tz","tr","tf","asin","imat","w","gs","lastT","flush","setDistance","d","lookAt","tl","angleState","_state","lastTheta","length","lastPhi","dp","d0","dn","options","slice","call","ut","rt","acos"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = createTurntableController\n\nvar filterVector = require('filtered-vector')\nvar invert44     = require('gl-mat4/invert')\nvar rotateM      = require('gl-mat4/rotate')\nvar cross        = require('gl-vec3/cross')\nvar normalize3   = require('gl-vec3/normalize')\nvar dot3         = require('gl-vec3/dot')\n\nfunction len3(x, y, z) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2))\n}\n\nfunction clamp1(x) {\n  return Math.min(1.0, Math.max(-1.0, x))\n}\n\nfunction findOrthoPair(v) {\n  var vx = Math.abs(v[0])\n  var vy = Math.abs(v[1])\n  var vz = Math.abs(v[2])\n\n  var u = [0,0,0]\n  if(vx > Math.max(vy, vz)) {\n    u[2] = 1\n  } else if(vy > Math.max(vx, vz)) {\n    u[0] = 1\n  } else {\n    u[1] = 1\n  }\n\n  var vv = 0\n  var uv = 0\n  for(var i=0; i<3; ++i ) {\n    vv += v[i] * v[i]\n    uv += u[i] * v[i]\n  }\n  for(var i=0; i<3; ++i) {\n    u[i] -= (uv / vv) *  v[i]\n  }\n  normalize3(u, u)\n  return u\n}\n\nfunction TurntableController(zoomMin, zoomMax, center, up, right, radius, theta, phi) {\n  this.center = filterVector(center)\n  this.up     = filterVector(up)\n  this.right  = filterVector(right)\n  this.radius = filterVector([radius])\n  this.angle  = filterVector([theta, phi])\n  this.angle.bounds = [[-Infinity,-Math.PI/2], [Infinity,Math.PI/2]]\n  this.setDistanceLimits(zoomMin, zoomMax)\n\n  this.computedCenter = this.center.curve(0)\n  this.computedUp     = this.up.curve(0)\n  this.computedRight  = this.right.curve(0)\n  this.computedRadius = this.radius.curve(0)\n  this.computedAngle  = this.angle.curve(0)\n  this.computedToward = [0,0,0]\n  this.computedEye    = [0,0,0]\n  this.computedMatrix = new Array(16)\n  for(var i=0; i<16; ++i) {\n    this.computedMatrix[i] = 0.5\n  }\n\n  this.recalcMatrix(0)\n}\n\nvar proto = TurntableController.prototype\n\nproto.setDistanceLimits = function(minDist, maxDist) {\n  if(minDist > 0) {\n    minDist = Math.log(minDist)\n  } else {\n    minDist = -Infinity\n  }\n  if(maxDist > 0) {\n    maxDist = Math.log(maxDist)\n  } else {\n    maxDist = Infinity\n  }\n  maxDist = Math.max(maxDist, minDist)\n  this.radius.bounds[0][0] = minDist\n  this.radius.bounds[1][0] = maxDist\n}\n\nproto.getDistanceLimits = function(out) {\n  var bounds = this.radius.bounds[0]\n  if(out) {\n    out[0] = Math.exp(bounds[0][0])\n    out[1] = Math.exp(bounds[1][0])\n    return out\n  }\n  return [ Math.exp(bounds[0][0]), Math.exp(bounds[1][0]) ]\n}\n\nproto.recalcMatrix = function(t) {\n  //Recompute curves\n  this.center.curve(t)\n  this.up.curve(t)\n  this.right.curve(t)\n  this.radius.curve(t)\n  this.angle.curve(t)\n\n  //Compute frame for camera matrix\n  var up     = this.computedUp\n  var right  = this.computedRight\n  var uu = 0.0\n  var ur = 0.0\n  for(var i=0; i<3; ++i) {\n    ur += up[i] * right[i]\n    uu += up[i] * up[i]\n  }\n  var ul = Math.sqrt(uu)\n  var rr = 0.0\n  for(var i=0; i<3; ++i) {\n    right[i] -= up[i] * ur / uu\n    rr       += right[i] * right[i]\n    up[i]    /= ul\n  }\n  var rl = Math.sqrt(rr)\n  for(var i=0; i<3; ++i) {\n    right[i] /= rl\n  }\n\n  //Compute toward vector\n  var toward = this.computedToward\n  cross(toward, up, right)\n  normalize3(toward, toward)\n\n  //Compute angular parameters\n  var radius = Math.exp(this.computedRadius[0])\n  var theta  = this.computedAngle[0]\n  var phi    = this.computedAngle[1]\n\n  var ctheta = Math.cos(theta)\n  var stheta = Math.sin(theta)\n  var cphi   = Math.cos(phi)\n  var sphi   = Math.sin(phi)\n\n  var center = this.computedCenter\n\n  var wx = ctheta * cphi \n  var wy = stheta * cphi\n  var wz = sphi\n\n  var sx = -ctheta * sphi\n  var sy = -stheta * sphi\n  var sz = cphi\n\n  var eye = this.computedEye\n  var mat = this.computedMatrix\n  for(var i=0; i<3; ++i) {\n    var x      = wx * right[i] + wy * toward[i] + wz * up[i]\n    mat[4*i+1] = sx * right[i] + sy * toward[i] + sz * up[i]\n    mat[4*i+2] = x\n    mat[4*i+3] = 0.0\n  }\n\n  var ax = mat[1]\n  var ay = mat[5]\n  var az = mat[9]\n  var bx = mat[2]\n  var by = mat[6]\n  var bz = mat[10]\n  var cx = ay * bz - az * by\n  var cy = az * bx - ax * bz\n  var cz = ax * by - ay * bx\n  var cl = len3(cx, cy, cz)\n  cx /= cl\n  cy /= cl\n  cz /= cl\n  mat[0] = cx\n  mat[4] = cy\n  mat[8] = cz\n\n  for(var i=0; i<3; ++i) {\n    eye[i] = center[i] + mat[2+4*i]*radius\n  }\n\n  for(var i=0; i<3; ++i) {\n    var rr = 0.0\n    for(var j=0; j<3; ++j) {\n      rr += mat[i+4*j] * eye[j]\n    }\n    mat[12+i] = -rr\n  }\n  mat[15] = 1.0\n}\n\nproto.getMatrix = function(t, result) {\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n  if(result) {\n    for(var i=0; i<16; ++i) {\n      result[i] = mat[i]\n    }\n    return result\n  }\n  return mat\n}\n\nvar zAxis = [0,0,0]\nproto.rotate = function(t, dtheta, dphi, droll) {\n  this.angle.move(t, dtheta, dphi)\n  if(droll) {\n    this.recalcMatrix(t)\n\n    var mat = this.computedMatrix\n    zAxis[0] = mat[2]\n    zAxis[1] = mat[6]\n    zAxis[2] = mat[10]\n\n    var up     = this.computedUp\n    var right  = this.computedRight\n    var toward = this.computedToward\n\n    for(var i=0; i<3; ++i) {\n      mat[4*i]   = up[i]\n      mat[4*i+1] = right[i]\n      mat[4*i+2] = toward[i]\n    }\n    rotateM(mat, mat, droll, zAxis)\n    for(var i=0; i<3; ++i) {\n      up[i] =    mat[4*i]\n      right[i] = mat[4*i+1]\n    }\n\n    this.up.set(t, up[0], up[1], up[2])\n    this.right.set(t, right[0], right[1], right[2])\n  }\n}\n\nproto.pan = function(t, dx, dy, dz) {\n  dx = dx || 0.0\n  dy = dy || 0.0\n  dz = dz || 0.0\n\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n\n  var dist = Math.exp(this.computedRadius[0])\n\n  var ux = mat[1]\n  var uy = mat[5]\n  var uz = mat[9]\n  var ul = len3(ux, uy, uz)\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var rx = mat[0]\n  var ry = mat[4]\n  var rz = mat[8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  var vx = rx * dx + ux * dy\n  var vy = ry * dx + uy * dy\n  var vz = rz * dx + uz * dy\n  this.center.move(t, vx, vy, vz)\n\n  //Update z-component of radius\n  var radius = Math.exp(this.computedRadius[0])\n  radius = Math.max(1e-4, radius + dz)\n  this.radius.set(t, Math.log(radius))\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  this.center.move(t,\n    dx||0.0,\n    dy||0.0,\n    dz||0.0)\n}\n\n//Recenters the coordinate axes\nproto.setMatrix = function(t, mat, axes, noSnap) {\n  \n  //Get the axes for tare\n  var ushift = 1\n  if(typeof axes === 'number') {\n    ushift = (axes)|0\n  } \n  if(ushift < 0 || ushift > 3) {\n    ushift = 1\n  }\n  var vshift = (ushift + 2) % 3\n  var fshift = (ushift + 1) % 3\n\n  //Recompute state for new t value\n  if(!mat) { \n    this.recalcMatrix(t)\n    mat = this.computedMatrix\n  }\n\n  //Get right and up vectors\n  var ux = mat[ushift]\n  var uy = mat[ushift+4]\n  var uz = mat[ushift+8]\n  if(!noSnap) {\n    var ul = len3(ux, uy, uz)\n    ux /= ul\n    uy /= ul\n    uz /= ul\n  } else {\n    var ax = Math.abs(ux)\n    var ay = Math.abs(uy)\n    var az = Math.abs(uz)\n    var am = Math.max(ax,ay,az)\n    if(ax === am) {\n      ux = (ux < 0) ? -1 : 1\n      uy = uz = 0\n    } else if(az === am) {\n      uz = (uz < 0) ? -1 : 1\n      ux = uy = 0\n    } else {\n      uy = (uy < 0) ? -1 : 1\n      ux = uz = 0\n    }\n  }\n\n  var rx = mat[vshift]\n  var ry = mat[vshift+4]\n  var rz = mat[vshift+8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n  \n  var fx = uy * rz - uz * ry\n  var fy = uz * rx - ux * rz\n  var fz = ux * ry - uy * rx\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  this.center.jump(t, ex, ey, ez)\n  this.radius.idle(t)\n  this.up.jump(t, ux, uy, uz)\n  this.right.jump(t, rx, ry, rz)\n\n  var phi, theta\n  if(ushift === 2) {\n    var cx = mat[1]\n    var cy = mat[5]\n    var cz = mat[9]\n    var cr = cx * rx + cy * ry + cz * rz\n    var cf = cx * fx + cy * fy + cz * fz\n    if(tu < 0) {\n      phi = -Math.PI/2\n    } else {\n      phi = Math.PI/2\n    }\n    theta = Math.atan2(cf, cr)\n  } else {\n    var tx = mat[2]\n    var ty = mat[6]\n    var tz = mat[10]\n    var tu = tx * ux + ty * uy + tz * uz\n    var tr = tx * rx + ty * ry + tz * rz\n    var tf = tx * fx + ty * fy + tz * fz\n\n    phi = Math.asin(clamp1(tu))\n    theta = Math.atan2(tf, tr)\n  }\n\n  this.angle.jump(t, theta, phi)\n\n  this.recalcMatrix(t)\n  var dx = mat[2]\n  var dy = mat[6]\n  var dz = mat[10]\n\n  var imat = this.computedMatrix\n  invert44(imat, mat)\n  var w  = imat[15]\n  var ex = imat[12] / w\n  var ey = imat[13] / w\n  var ez = imat[14] / w\n\n  var gs = Math.exp(this.computedRadius[0])\n  this.center.jump(t, ex-dx*gs, ey-dy*gs, ez-dz*gs)\n}\n\nproto.lastT = function() {\n  return Math.max(\n    this.center.lastT(),\n    this.up.lastT(),\n    this.right.lastT(),\n    this.radius.lastT(),\n    this.angle.lastT())\n}\n\nproto.idle = function(t) {\n  this.center.idle(t)\n  this.up.idle(t)\n  this.right.idle(t)\n  this.radius.idle(t)\n  this.angle.idle(t)\n}\n\nproto.flush = function(t) {\n  this.center.flush(t)\n  this.up.flush(t)\n  this.right.flush(t)\n  this.radius.flush(t)\n  this.angle.flush(t)\n}\n\nproto.setDistance = function(t, d) {\n  if(d > 0) {\n    this.radius.set(t, Math.log(d))\n  }\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n\n  eye    = eye    || this.computedEye\n  center = center || this.computedCenter\n  up     = up     || this.computedUp\n\n  var ux = up[0]\n  var uy = up[1]\n  var uz = up[2]\n  var ul = len3(ux, uy, uz)\n  if(ul < 1e-6) {\n    return\n  }\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var tx = eye[0] - center[0]\n  var ty = eye[1] - center[1]\n  var tz = eye[2] - center[2]\n  var tl = len3(tx, ty, tz)\n  if(tl < 1e-6) {\n    return\n  }\n  tx /= tl\n  ty /= tl\n  tz /= tl\n\n  var right = this.computedRight\n  var rx = right[0]\n  var ry = right[1]\n  var rz = right[2]\n  var ru = ux*rx + uy*ry + uz*rz\n  rx -= ru * ux\n  ry -= ru * uy\n  rz -= ru * uz\n  var rl = len3(rx, ry, rz)\n\n  if(rl < 0.01) {\n    rx = uy * tz - uz * ty\n    ry = uz * tx - ux * tz\n    rz = ux * ty - uy * tx\n    rl = len3(rx, ry, rz)\n    if(rl < 1e-6) {\n      return\n    }\n  }\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  this.up.set(t, ux, uy, uz)\n  this.right.set(t, rx, ry, rz)\n  this.center.set(t, center[0], center[1], center[2])\n  this.radius.set(t, Math.log(tl))\n\n  var fx = uy * rz - uz * ry\n  var fy = uz * rx - ux * rz\n  var fz = ux * ry - uy * rx\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  var tu = ux*tx + uy*ty + uz*tz\n  var tr = rx*tx + ry*ty + rz*tz\n  var tf = fx*tx + fy*ty + fz*tz\n\n  var phi   = Math.asin(clamp1(tu))\n  var theta = Math.atan2(tf, tr)\n\n  var angleState = this.angle._state\n  var lastTheta  = angleState[angleState.length-1]\n  var lastPhi    = angleState[angleState.length-2]\n  lastTheta      = lastTheta % (2.0 * Math.PI)\n  var dp = Math.abs(lastTheta + 2.0 * Math.PI - theta)\n  var d0 = Math.abs(lastTheta - theta)\n  var dn = Math.abs(lastTheta - 2.0 * Math.PI - theta)\n  if(dp < d0) {\n    lastTheta += 2.0 * Math.PI\n  }\n  if(dn < d0) {\n    lastTheta -= 2.0 * Math.PI\n  }\n\n  this.angle.jump(this.angle.lastT(), lastTheta, lastPhi)\n  this.angle.set(t, theta, phi)\n}\n\nfunction createTurntableController(options) {\n  options = options || {}\n\n  var center = options.center || [0,0,0]\n  var up     = options.up     || [0,1,0]\n  var right  = options.right  || findOrthoPair(up)\n  var radius = options.radius || 1.0\n  var theta  = options.theta  || 0.0\n  var phi    = options.phi    || 0.0\n\n  center = [].slice.call(center, 0, 3)\n\n  up = [].slice.call(up, 0, 3)\n  normalize3(up, up)\n\n  right = [].slice.call(right, 0, 3)\n  normalize3(right, right)\n\n  if('eye' in options) {\n    var eye = options.eye\n    var toward = [\n      eye[0]-center[0],\n      eye[1]-center[1],\n      eye[2]-center[2]\n    ]\n    cross(right, toward, up)\n    if(len3(right[0], right[1], right[2]) < 1e-6) {\n      right = findOrthoPair(up)\n    } else {\n      normalize3(right, right)\n    }\n\n    radius = len3(toward[0], toward[1], toward[2])\n\n    var ut = dot3(up, toward) / radius\n    var rt = dot3(right, toward) / radius\n    phi    = Math.acos(ut)\n    theta  = Math.acos(rt)\n  }\n\n  //Use logarithmic coordinates for radius\n  radius = Math.log(radius)\n\n  //Return the controller\n  return new TurntableController(\n    options.zoomMin,\n    options.zoomMax,\n    center,\n    up,\n    right,\n    radius,\n    theta,\n    phi)\n}"]},"metadata":{},"sourceType":"script"}