{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nmodule.exports = {\n  hasLines: function (trace) {\n    return trace.visible && trace.mode && trace.mode.indexOf('lines') !== -1;\n  },\n  hasMarkers: function (trace) {\n    return trace.visible && (trace.mode && trace.mode.indexOf('markers') !== -1 || // until splom implements 'mode'\n    trace.type === 'splom');\n  },\n  hasText: function (trace) {\n    return trace.visible && trace.mode && trace.mode.indexOf('text') !== -1;\n  },\n  isBubble: function (trace) {\n    return Lib.isPlainObject(trace.marker) && Lib.isArrayOrTypedArray(trace.marker.size);\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/scatter/subtypes.js"],"names":["Lib","require","module","exports","hasLines","trace","visible","mode","indexOf","hasMarkers","type","hasText","isBubble","isPlainObject","marker","isArrayOrTypedArray","size"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,QAAQ,EAAE,UAASC,KAAT,EAAgB;AACtB,WAAOA,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,IAAvB,IACHF,KAAK,CAACE,IAAN,CAAWC,OAAX,CAAmB,OAAnB,MAAgC,CAAC,CADrC;AAEH,GAJY;AAMbC,EAAAA,UAAU,EAAE,UAASJ,KAAT,EAAgB;AACxB,WAAOA,KAAK,CAACC,OAAN,KACFD,KAAK,CAACE,IAAN,IAAcF,KAAK,CAACE,IAAN,CAAWC,OAAX,CAAmB,SAAnB,MAAkC,CAAC,CAAlD,IACA;AACAH,IAAAA,KAAK,CAACK,IAAN,KAAe,OAHZ,CAAP;AAKH,GAZY;AAcbC,EAAAA,OAAO,EAAE,UAASN,KAAT,EAAgB;AACrB,WAAOA,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,IAAvB,IACHF,KAAK,CAACE,IAAN,CAAWC,OAAX,CAAmB,MAAnB,MAA+B,CAAC,CADpC;AAEH,GAjBY;AAmBbI,EAAAA,QAAQ,EAAE,UAASP,KAAT,EAAgB;AACtB,WAAOL,GAAG,CAACa,aAAJ,CAAkBR,KAAK,CAACS,MAAxB,KACHd,GAAG,CAACe,mBAAJ,CAAwBV,KAAK,CAACS,MAAN,CAAaE,IAArC,CADJ;AAEH;AAtBY,CAAjB","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\n\nmodule.exports = {\n    hasLines: function(trace) {\n        return trace.visible && trace.mode &&\n            trace.mode.indexOf('lines') !== -1;\n    },\n\n    hasMarkers: function(trace) {\n        return trace.visible && (\n            (trace.mode && trace.mode.indexOf('markers') !== -1) ||\n            // until splom implements 'mode'\n            trace.type === 'splom'\n        );\n    },\n\n    hasText: function(trace) {\n        return trace.visible && trace.mode &&\n            trace.mode.indexOf('text') !== -1;\n    },\n\n    isBubble: function(trace) {\n        return Lib.isPlainObject(trace.marker) &&\n            Lib.isArrayOrTypedArray(trace.marker.size);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}