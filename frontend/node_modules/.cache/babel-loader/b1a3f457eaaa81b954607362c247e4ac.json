{"ast":null,"code":"'use strict';\n\nvar convert = require('./convert');\n\nvar LAYER_PREFIX = require('../../plots/mapbox/constants').traceLayerPrefix;\n\nfunction DensityMapbox(subplot, uid) {\n  this.type = 'densitymapbox';\n  this.subplot = subplot;\n  this.uid = uid;\n  this.sourceId = 'source-' + uid;\n  this.layerList = [['heatmap', LAYER_PREFIX + uid + '-heatmap']]; // previous 'below' value,\n  // need this to update it properly\n\n  this.below = null;\n}\n\nvar proto = DensityMapbox.prototype;\n\nproto.update = function (calcTrace) {\n  var subplot = this.subplot;\n  var layerList = this.layerList;\n  var optsAll = convert(calcTrace);\n  var below = subplot.belowLookup['trace-' + this.uid];\n  subplot.map.getSource(this.sourceId).setData(optsAll.geojson);\n\n  if (below !== this.below) {\n    this._removeLayers();\n\n    this._addLayers(optsAll, below);\n\n    this.below = below;\n  }\n\n  for (var i = 0; i < layerList.length; i++) {\n    var item = layerList[i];\n    var k = item[0];\n    var id = item[1];\n    var opts = optsAll[k];\n    subplot.setOptions(id, 'setLayoutProperty', opts.layout);\n\n    if (opts.layout.visibility === 'visible') {\n      subplot.setOptions(id, 'setPaintProperty', opts.paint);\n    }\n  }\n};\n\nproto._addLayers = function (optsAll, below) {\n  var subplot = this.subplot;\n  var layerList = this.layerList;\n  var sourceId = this.sourceId;\n\n  for (var i = 0; i < layerList.length; i++) {\n    var item = layerList[i];\n    var k = item[0];\n    var opts = optsAll[k];\n    subplot.addLayer({\n      type: k,\n      id: item[1],\n      source: sourceId,\n      layout: opts.layout,\n      paint: opts.paint\n    }, below);\n  }\n};\n\nproto._removeLayers = function () {\n  var map = this.subplot.map;\n  var layerList = this.layerList;\n\n  for (var i = layerList.length - 1; i >= 0; i--) {\n    map.removeLayer(layerList[i][1]);\n  }\n};\n\nproto.dispose = function () {\n  var map = this.subplot.map;\n\n  this._removeLayers();\n\n  map.removeSource(this.sourceId);\n};\n\nmodule.exports = function createDensityMapbox(subplot, calcTrace) {\n  var trace = calcTrace[0].trace;\n  var densityMapbox = new DensityMapbox(subplot, trace.uid);\n  var sourceId = densityMapbox.sourceId;\n  var optsAll = convert(calcTrace);\n  var below = densityMapbox.below = subplot.belowLookup['trace-' + trace.uid];\n  subplot.map.addSource(sourceId, {\n    type: 'geojson',\n    data: optsAll.geojson\n  });\n\n  densityMapbox._addLayers(optsAll, below);\n\n  return densityMapbox;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/densitymapbox/plot.js"],"names":["convert","require","LAYER_PREFIX","traceLayerPrefix","DensityMapbox","subplot","uid","type","sourceId","layerList","below","proto","prototype","update","calcTrace","optsAll","belowLookup","map","getSource","setData","geojson","_removeLayers","_addLayers","i","length","item","k","id","opts","setOptions","layout","visibility","paint","addLayer","source","removeLayer","dispose","removeSource","module","exports","createDensityMapbox","trace","densityMapbox","addSource","data"],"mappings":"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","sourcesContent":["'use strict';\n\nvar convert = require('./convert');\nvar LAYER_PREFIX = require('../../plots/mapbox/constants').traceLayerPrefix;\n\nfunction DensityMapbox(subplot, uid) {\n    this.type = 'densitymapbox';\n    this.subplot = subplot;\n    this.uid = uid;\n\n    this.sourceId = 'source-' + uid;\n\n    this.layerList = [\n        ['heatmap', LAYER_PREFIX + uid + '-heatmap']\n    ];\n\n    // previous 'below' value,\n    // need this to update it properly\n    this.below = null;\n}\n\nvar proto = DensityMapbox.prototype;\n\nproto.update = function(calcTrace) {\n    var subplot = this.subplot;\n    var layerList = this.layerList;\n    var optsAll = convert(calcTrace);\n    var below = subplot.belowLookup['trace-' + this.uid];\n\n    subplot.map\n        .getSource(this.sourceId)\n        .setData(optsAll.geojson);\n\n    if(below !== this.below) {\n        this._removeLayers();\n        this._addLayers(optsAll, below);\n        this.below = below;\n    }\n\n    for(var i = 0; i < layerList.length; i++) {\n        var item = layerList[i];\n        var k = item[0];\n        var id = item[1];\n        var opts = optsAll[k];\n\n        subplot.setOptions(id, 'setLayoutProperty', opts.layout);\n\n        if(opts.layout.visibility === 'visible') {\n            subplot.setOptions(id, 'setPaintProperty', opts.paint);\n        }\n    }\n};\n\nproto._addLayers = function(optsAll, below) {\n    var subplot = this.subplot;\n    var layerList = this.layerList;\n    var sourceId = this.sourceId;\n\n    for(var i = 0; i < layerList.length; i++) {\n        var item = layerList[i];\n        var k = item[0];\n        var opts = optsAll[k];\n\n        subplot.addLayer({\n            type: k,\n            id: item[1],\n            source: sourceId,\n            layout: opts.layout,\n            paint: opts.paint\n        }, below);\n    }\n};\n\nproto._removeLayers = function() {\n    var map = this.subplot.map;\n    var layerList = this.layerList;\n\n    for(var i = layerList.length - 1; i >= 0; i--) {\n        map.removeLayer(layerList[i][1]);\n    }\n};\n\nproto.dispose = function() {\n    var map = this.subplot.map;\n    this._removeLayers();\n    map.removeSource(this.sourceId);\n};\n\nmodule.exports = function createDensityMapbox(subplot, calcTrace) {\n    var trace = calcTrace[0].trace;\n    var densityMapbox = new DensityMapbox(subplot, trace.uid);\n    var sourceId = densityMapbox.sourceId;\n    var optsAll = convert(calcTrace);\n    var below = densityMapbox.below = subplot.belowLookup['trace-' + trace.uid];\n\n    subplot.map.addSource(sourceId, {\n        type: 'geojson',\n        data: optsAll.geojson\n    });\n\n    densityMapbox._addLayers(optsAll, below);\n\n    return densityMapbox;\n};\n"]},"metadata":{},"sourceType":"script"}