{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Lib = require('../../lib');\n\nvar Plots = require('../../plots/plots');\n\nvar Registry = require('../../registry');\n\nvar Events = require('../../lib/events');\n\nvar dragElement = require('../dragelement');\n\nvar Drawing = require('../drawing');\n\nvar Color = require('../color');\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar handleClick = require('./handle_click');\n\nvar constants = require('./constants');\n\nvar alignmentConstants = require('../../constants/alignment');\n\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\n\nvar getLegendData = require('./get_legend_data');\n\nvar style = require('./style');\n\nvar helpers = require('./helpers');\n\nvar MAIN_TITLE = 1;\n\nmodule.exports = function draw(gd, opts) {\n  if (!opts) opts = gd._fullLayout.legend || {};\n  return _draw(gd, opts);\n};\n\nfunction _draw(gd, legendObj) {\n  var fullLayout = gd._fullLayout;\n  var clipId = 'legend' + fullLayout._uid;\n  var layer;\n  var inHover = legendObj._inHover;\n\n  if (inHover) {\n    layer = legendObj.layer;\n    clipId += '-hover';\n  } else {\n    layer = fullLayout._infolayer;\n  }\n\n  if (!layer) return;\n  if (!gd._legendMouseDownTime) gd._legendMouseDownTime = 0;\n  var legendData;\n\n  if (!inHover) {\n    if (!gd.calcdata) return;\n    legendData = fullLayout.showlegend && getLegendData(gd.calcdata, legendObj);\n  } else {\n    if (!legendObj.entries) return;\n    legendData = getLegendData(legendObj.entries, legendObj);\n  }\n\n  var hiddenSlices = fullLayout.hiddenlabels || [];\n\n  if (!inHover && (!fullLayout.showlegend || !legendData.length)) {\n    layer.selectAll('.legend').remove();\n\n    fullLayout._topdefs.select('#' + clipId).remove();\n\n    return Plots.autoMargin(gd, 'legend');\n  }\n\n  var legend = Lib.ensureSingle(layer, 'g', 'legend', function (s) {\n    if (!inHover) s.attr('pointer-events', 'all');\n  });\n  var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', clipId, function (s) {\n    s.append('rect');\n  });\n  var bg = Lib.ensureSingle(legend, 'rect', 'bg', function (s) {\n    s.attr('shape-rendering', 'crispEdges');\n  });\n  bg.call(Color.stroke, legendObj.bordercolor).call(Color.fill, legendObj.bgcolor).style('stroke-width', legendObj.borderwidth + 'px');\n  var scrollBox = Lib.ensureSingle(legend, 'g', 'scrollbox');\n  var title = legendObj.title;\n  legendObj._titleWidth = 0;\n  legendObj._titleHeight = 0;\n\n  if (title.text) {\n    var titleEl = Lib.ensureSingle(scrollBox, 'text', 'legendtitletext');\n    titleEl.attr('text-anchor', 'start').call(Drawing.font, title.font).text(title.text);\n    textLayout(titleEl, scrollBox, gd, legendObj, MAIN_TITLE); // handle mathjax or multi-line text and compute title height\n  } else {\n    scrollBox.selectAll('.legendtitletext').remove();\n  }\n\n  var scrollBar = Lib.ensureSingle(legend, 'rect', 'scrollbar', function (s) {\n    s.attr(constants.scrollBarEnterAttrs).call(Color.fill, constants.scrollBarColor);\n  });\n  var groups = scrollBox.selectAll('g.groups').data(legendData);\n  groups.enter().append('g').attr('class', 'groups');\n  groups.exit().remove();\n  var traces = groups.selectAll('g.traces').data(Lib.identity);\n  traces.enter().append('g').attr('class', 'traces');\n  traces.exit().remove();\n  traces.style('opacity', function (d) {\n    var trace = d[0].trace;\n\n    if (Registry.traceIs(trace, 'pie-like')) {\n      return hiddenSlices.indexOf(d[0].label) !== -1 ? 0.5 : 1;\n    } else {\n      return trace.visible === 'legendonly' ? 0.5 : 1;\n    }\n  }).each(function () {\n    d3.select(this).call(drawTexts, gd, legendObj);\n  }).call(style, gd, legendObj).each(function () {\n    if (!inHover) d3.select(this).call(setupTraceToggle, gd);\n  });\n  Lib.syncOrAsync([Plots.previousPromises, function () {\n    return computeLegendDimensions(gd, groups, traces, legendObj);\n  }, function () {\n    // IF expandMargin return a Promise (which is truthy),\n    // we're under a doAutoMargin redraw, so we don't have to\n    // draw the remaining pieces below\n    if (!inHover && expandMargin(gd)) return;\n    var gs = fullLayout._size;\n    var bw = legendObj.borderwidth;\n\n    var lx = gs.l + gs.w * legendObj.x - FROM_TL[getXanchor(legendObj)] * legendObj._width;\n\n    var ly = gs.t + gs.h * (1 - legendObj.y) - FROM_TL[getYanchor(legendObj)] * legendObj._effHeight;\n\n    if (!inHover && fullLayout.margin.autoexpand) {\n      var lx0 = lx;\n      var ly0 = ly;\n      lx = Lib.constrain(lx, 0, fullLayout.width - legendObj._width);\n      ly = Lib.constrain(ly, 0, fullLayout.height - legendObj._effHeight);\n\n      if (lx !== lx0) {\n        Lib.log('Constrain legend.x to make legend fit inside graph');\n      }\n\n      if (ly !== ly0) {\n        Lib.log('Constrain legend.y to make legend fit inside graph');\n      }\n    } // Set size and position of all the elements that make up a legend:\n    // legend, background and border, scroll box and scroll bar as well as title\n\n\n    if (!inHover) Drawing.setTranslate(legend, lx, ly); // to be safe, remove previous listeners\n\n    scrollBar.on('.drag', null);\n    legend.on('wheel', null);\n\n    if (inHover || legendObj._height <= legendObj._maxHeight || gd._context.staticPlot) {\n      // if scrollbar should not be shown.\n      var height = legendObj._effHeight; // if unified hover, let it be its full size\n\n      if (inHover) height = legendObj._height;\n      bg.attr({\n        width: legendObj._width - bw,\n        height: height - bw,\n        x: bw / 2,\n        y: bw / 2\n      });\n      Drawing.setTranslate(scrollBox, 0, 0);\n      clipPath.select('rect').attr({\n        width: legendObj._width - 2 * bw,\n        height: height - 2 * bw,\n        x: bw,\n        y: bw\n      });\n      Drawing.setClipUrl(scrollBox, clipId, gd);\n      Drawing.setRect(scrollBar, 0, 0, 0, 0);\n      delete legendObj._scrollY;\n    } else {\n      var scrollBarHeight = Math.max(constants.scrollBarMinHeight, legendObj._effHeight * legendObj._effHeight / legendObj._height);\n      var scrollBarYMax = legendObj._effHeight - scrollBarHeight - 2 * constants.scrollBarMargin;\n      var scrollBoxYMax = legendObj._height - legendObj._effHeight;\n      var scrollRatio = scrollBarYMax / scrollBoxYMax;\n      var scrollBoxY = Math.min(legendObj._scrollY || 0, scrollBoxYMax); // increase the background and clip-path width\n      // by the scrollbar width and margin\n\n      bg.attr({\n        width: legendObj._width - 2 * bw + constants.scrollBarWidth + constants.scrollBarMargin,\n        height: legendObj._effHeight - bw,\n        x: bw / 2,\n        y: bw / 2\n      });\n      clipPath.select('rect').attr({\n        width: legendObj._width - 2 * bw + constants.scrollBarWidth + constants.scrollBarMargin,\n        height: legendObj._effHeight - 2 * bw,\n        x: bw,\n        y: bw + scrollBoxY\n      });\n      Drawing.setClipUrl(scrollBox, clipId, gd);\n      scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio); // scroll legend by mousewheel or touchpad swipe up/down\n\n      legend.on('wheel', function () {\n        scrollBoxY = Lib.constrain(legendObj._scrollY + d3.event.deltaY / scrollBarYMax * scrollBoxYMax, 0, scrollBoxYMax);\n        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n\n        if (scrollBoxY !== 0 && scrollBoxY !== scrollBoxYMax) {\n          d3.event.preventDefault();\n        }\n      });\n      var eventY0, eventY1, scrollBoxY0;\n\n      var getScrollBarDragY = function (scrollBoxY0, eventY0, eventY1) {\n        var y = (eventY1 - eventY0) / scrollRatio + scrollBoxY0;\n        return Lib.constrain(y, 0, scrollBoxYMax);\n      };\n\n      var getNaturalDragY = function (scrollBoxY0, eventY0, eventY1) {\n        var y = (eventY0 - eventY1) / scrollRatio + scrollBoxY0;\n        return Lib.constrain(y, 0, scrollBoxYMax);\n      }; // scroll legend by dragging scrollBAR\n\n\n      var scrollBarDrag = d3.behavior.drag().on('dragstart', function () {\n        var e = d3.event.sourceEvent;\n\n        if (e.type === 'touchstart') {\n          eventY0 = e.changedTouches[0].clientY;\n        } else {\n          eventY0 = e.clientY;\n        }\n\n        scrollBoxY0 = scrollBoxY;\n      }).on('drag', function () {\n        var e = d3.event.sourceEvent;\n        if (e.buttons === 2 || e.ctrlKey) return;\n\n        if (e.type === 'touchmove') {\n          eventY1 = e.changedTouches[0].clientY;\n        } else {\n          eventY1 = e.clientY;\n        }\n\n        scrollBoxY = getScrollBarDragY(scrollBoxY0, eventY0, eventY1);\n        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n      });\n      scrollBar.call(scrollBarDrag); // scroll legend by touch-dragging scrollBOX\n\n      var scrollBoxTouchDrag = d3.behavior.drag().on('dragstart', function () {\n        var e = d3.event.sourceEvent;\n\n        if (e.type === 'touchstart') {\n          eventY0 = e.changedTouches[0].clientY;\n          scrollBoxY0 = scrollBoxY;\n        }\n      }).on('drag', function () {\n        var e = d3.event.sourceEvent;\n\n        if (e.type === 'touchmove') {\n          eventY1 = e.changedTouches[0].clientY;\n          scrollBoxY = getNaturalDragY(scrollBoxY0, eventY0, eventY1);\n          scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n        }\n      });\n      scrollBox.call(scrollBoxTouchDrag);\n    }\n\n    function scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio) {\n      legendObj._scrollY = gd._fullLayout.legend._scrollY = scrollBoxY;\n      Drawing.setTranslate(scrollBox, 0, -scrollBoxY);\n      Drawing.setRect(scrollBar, legendObj._width, constants.scrollBarMargin + scrollBoxY * scrollRatio, constants.scrollBarWidth, scrollBarHeight);\n      clipPath.select('rect').attr('y', bw + scrollBoxY);\n    }\n\n    if (gd._context.edits.legendPosition) {\n      var xf, yf, x0, y0;\n      legend.classed('cursor-move', true);\n      dragElement.init({\n        element: legend.node(),\n        gd: gd,\n        prepFn: function () {\n          var transform = Drawing.getTranslate(legend);\n          x0 = transform.x;\n          y0 = transform.y;\n        },\n        moveFn: function (dx, dy) {\n          var newX = x0 + dx;\n          var newY = y0 + dy;\n          Drawing.setTranslate(legend, newX, newY);\n          xf = dragElement.align(newX, 0, gs.l, gs.l + gs.w, legendObj.xanchor);\n          yf = dragElement.align(newY, 0, gs.t + gs.h, gs.t, legendObj.yanchor);\n        },\n        doneFn: function () {\n          if (xf !== undefined && yf !== undefined) {\n            Registry.call('_guiRelayout', gd, {\n              'legend.x': xf,\n              'legend.y': yf\n            });\n          }\n        },\n        clickFn: function (numClicks, e) {\n          var clickedTrace = layer.selectAll('g.traces').filter(function () {\n            var bbox = this.getBoundingClientRect();\n            return e.clientX >= bbox.left && e.clientX <= bbox.right && e.clientY >= bbox.top && e.clientY <= bbox.bottom;\n          });\n\n          if (clickedTrace.size() > 0) {\n            clickOrDoubleClick(gd, legend, clickedTrace, numClicks, e);\n          }\n        }\n      });\n    }\n  }], gd);\n}\n\nfunction clickOrDoubleClick(gd, legend, legendItem, numClicks, evt) {\n  var trace = legendItem.data()[0][0].trace;\n  var evtData = {\n    event: evt,\n    node: legendItem.node(),\n    curveNumber: trace.index,\n    expandedIndex: trace._expandedIndex,\n    data: gd.data,\n    layout: gd.layout,\n    frames: gd._transitionData._frames,\n    config: gd._context,\n    fullData: gd._fullData,\n    fullLayout: gd._fullLayout\n  };\n\n  if (trace._group) {\n    evtData.group = trace._group;\n  }\n\n  if (Registry.traceIs(trace, 'pie-like')) {\n    evtData.label = legendItem.datum()[0].label;\n  }\n\n  var clickVal = Events.triggerHandler(gd, 'plotly_legendclick', evtData);\n  if (clickVal === false) return;\n\n  if (numClicks === 1) {\n    legend._clickTimeout = setTimeout(function () {\n      if (!gd._fullLayout) return;\n      handleClick(legendItem, gd, numClicks);\n    }, gd._context.doubleClickDelay);\n  } else if (numClicks === 2) {\n    if (legend._clickTimeout) clearTimeout(legend._clickTimeout);\n    gd._legendMouseDownTime = 0;\n    var dblClickVal = Events.triggerHandler(gd, 'plotly_legenddoubleclick', evtData);\n    if (dblClickVal !== false) handleClick(legendItem, gd, numClicks);\n  }\n}\n\nfunction drawTexts(g, gd, legendObj) {\n  var legendItem = g.data()[0][0];\n  var trace = legendItem.trace;\n  var isPieLike = Registry.traceIs(trace, 'pie-like');\n  var isEditable = !legendObj._inHover && gd._context.edits.legendText && !isPieLike;\n  var maxNameLength = legendObj._maxNameLength;\n  var name, font;\n\n  if (legendItem.groupTitle) {\n    name = legendItem.groupTitle.text;\n    font = legendItem.groupTitle.font;\n  } else {\n    font = legendObj.font;\n\n    if (!legendObj.entries) {\n      name = isPieLike ? legendItem.label : trace.name;\n\n      if (trace._meta) {\n        name = Lib.templateString(name, trace._meta);\n      }\n    } else {\n      name = legendItem.text;\n    }\n  }\n\n  var textEl = Lib.ensureSingle(g, 'text', 'legendtext');\n  textEl.attr('text-anchor', 'start').call(Drawing.font, font).text(isEditable ? ensureLength(name, maxNameLength) : name);\n  var textGap = legendObj.itemwidth + constants.itemGap * 2;\n  svgTextUtils.positionText(textEl, textGap, 0);\n\n  if (isEditable) {\n    textEl.call(svgTextUtils.makeEditable, {\n      gd: gd,\n      text: name\n    }).call(textLayout, g, gd, legendObj).on('edit', function (newName) {\n      this.text(ensureLength(newName, maxNameLength)).call(textLayout, g, gd, legendObj);\n      var fullInput = legendItem.trace._fullInput || {};\n      var update = {};\n\n      if (Registry.hasTransform(fullInput, 'groupby')) {\n        var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n        var index = groupbyIndices[groupbyIndices.length - 1];\n        var kcont = Lib.keyedContainer(fullInput, 'transforms[' + index + '].styles', 'target', 'value.name');\n        kcont.set(legendItem.trace._group, newName);\n        update = kcont.constructUpdate();\n      } else {\n        update.name = newName;\n      }\n\n      return Registry.call('_guiRestyle', gd, update, trace.index);\n    });\n  } else {\n    textLayout(textEl, g, gd, legendObj);\n  }\n}\n/*\n * Make sure we have a reasonably clickable region.\n * If this string is missing or very short, pad it with spaces out to at least\n * 4 characters, up to the max length of other labels, on the assumption that\n * most characters are wider than spaces so a string of spaces will usually be\n * no wider than the real labels.\n */\n\n\nfunction ensureLength(str, maxLength) {\n  var targetLength = Math.max(4, maxLength);\n  if (str && str.trim().length >= targetLength / 2) return str;\n  str = str || '';\n\n  for (var i = targetLength - str.length; i > 0; i--) str += ' ';\n\n  return str;\n}\n\nfunction setupTraceToggle(g, gd) {\n  var doubleClickDelay = gd._context.doubleClickDelay;\n  var newMouseDownTime;\n  var numClicks = 1;\n  var traceToggle = Lib.ensureSingle(g, 'rect', 'legendtoggle', function (s) {\n    if (!gd._context.staticPlot) {\n      s.style('cursor', 'pointer').attr('pointer-events', 'all');\n    }\n\n    s.call(Color.fill, 'rgba(0,0,0,0)');\n  });\n  if (gd._context.staticPlot) return;\n  traceToggle.on('mousedown', function () {\n    newMouseDownTime = new Date().getTime();\n\n    if (newMouseDownTime - gd._legendMouseDownTime < doubleClickDelay) {\n      // in a click train\n      numClicks += 1;\n    } else {\n      // new click train\n      numClicks = 1;\n      gd._legendMouseDownTime = newMouseDownTime;\n    }\n  });\n  traceToggle.on('mouseup', function () {\n    if (gd._dragged || gd._editing) return;\n    var legend = gd._fullLayout.legend;\n\n    if (new Date().getTime() - gd._legendMouseDownTime > doubleClickDelay) {\n      numClicks = Math.max(numClicks - 1, 1);\n    }\n\n    clickOrDoubleClick(gd, legend, g, numClicks, d3.event);\n  });\n}\n\nfunction textLayout(s, g, gd, legendObj, aTitle) {\n  if (legendObj._inHover) s.attr('data-notex', true); // do not process MathJax for unified hover\n\n  svgTextUtils.convertToTspans(s, gd, function () {\n    computeTextDimensions(g, gd, legendObj, aTitle);\n  });\n}\n\nfunction computeTextDimensions(g, gd, legendObj, aTitle) {\n  var legendItem = g.data()[0][0];\n\n  if (!legendObj._inHover && legendItem && !legendItem.trace.showlegend) {\n    g.remove();\n    return;\n  }\n\n  var mathjaxGroup = g.select('g[class*=math-group]');\n  var mathjaxNode = mathjaxGroup.node();\n  if (!legendObj) legendObj = gd._fullLayout.legend;\n  var bw = legendObj.borderwidth;\n  var font;\n\n  if (aTitle === MAIN_TITLE) {\n    font = legendObj.title.font;\n  } else if (legendItem.groupTitle) {\n    font = legendItem.groupTitle.font;\n  } else {\n    font = legendObj.font;\n  }\n\n  var lineHeight = font.size * LINE_SPACING;\n  var height, width;\n\n  if (mathjaxNode) {\n    var mathjaxBB = Drawing.bBox(mathjaxNode);\n    height = mathjaxBB.height;\n    width = mathjaxBB.width;\n\n    if (aTitle === MAIN_TITLE) {\n      Drawing.setTranslate(mathjaxGroup, bw, bw + height * 0.75);\n    } else {\n      // legend item\n      Drawing.setTranslate(mathjaxGroup, 0, height * 0.25);\n    }\n  } else {\n    var textEl = g.select(aTitle === MAIN_TITLE ? '.legendtitletext' : '.legendtext');\n    var textLines = svgTextUtils.lineCount(textEl);\n    var textNode = textEl.node();\n    height = lineHeight * textLines;\n    width = textNode ? Drawing.bBox(textNode).width : 0; // approximation to height offset to center the font\n    // to avoid getBoundingClientRect\n\n    if (aTitle === MAIN_TITLE) {\n      if (legendObj.title.side === 'left') {\n        // add extra space between legend title and itmes\n        width += constants.itemGap * 2;\n      }\n\n      svgTextUtils.positionText(textEl, bw + constants.titlePad, bw + lineHeight);\n    } else {\n      // legend item\n      var x = constants.itemGap * 2 + legendObj.itemwidth;\n\n      if (legendItem.groupTitle) {\n        x = constants.itemGap;\n        width -= legendObj.itemwidth;\n      }\n\n      svgTextUtils.positionText(textEl, x, -lineHeight * ((textLines - 1) / 2 - 0.3));\n    }\n  }\n\n  if (aTitle === MAIN_TITLE) {\n    legendObj._titleWidth = width;\n    legendObj._titleHeight = height;\n  } else {\n    // legend item\n    legendItem.lineHeight = lineHeight;\n    legendItem.height = Math.max(height, 16) + 3;\n    legendItem.width = width;\n  }\n}\n\nfunction getTitleSize(legendObj) {\n  var w = 0;\n  var h = 0;\n  var side = legendObj.title.side;\n\n  if (side) {\n    if (side.indexOf('left') !== -1) {\n      w = legendObj._titleWidth;\n    }\n\n    if (side.indexOf('top') !== -1) {\n      h = legendObj._titleHeight;\n    }\n  }\n\n  return [w, h];\n}\n/*\n * Computes in fullLayout.legend:\n *\n *  - _height: legend height including items past scrollbox height\n *  - _maxHeight: maximum legend height before scrollbox is required\n *  - _effHeight: legend height w/ or w/o scrollbox\n *\n *  - _width: legend width\n *  - _maxWidth (for orientation:h only): maximum width before starting new row\n */\n\n\nfunction computeLegendDimensions(gd, groups, traces, legendObj) {\n  var fullLayout = gd._fullLayout;\n  if (!legendObj) legendObj = fullLayout.legend;\n  var gs = fullLayout._size;\n  var isVertical = helpers.isVertical(legendObj);\n  var isGrouped = helpers.isGrouped(legendObj);\n  var bw = legendObj.borderwidth;\n  var bw2 = 2 * bw;\n  var itemGap = constants.itemGap;\n  var textGap = legendObj.itemwidth + itemGap * 2;\n  var endPad = 2 * (bw + itemGap);\n  var yanchor = getYanchor(legendObj);\n  var isBelowPlotArea = legendObj.y < 0 || legendObj.y === 0 && yanchor === 'top';\n  var isAbovePlotArea = legendObj.y > 1 || legendObj.y === 1 && yanchor === 'bottom';\n  var traceGroupGap = legendObj.tracegroupgap; // - if below/above plot area, give it the maximum potential margin-push value\n  // - otherwise, extend the height of the plot area\n\n  legendObj._maxHeight = Math.max(isBelowPlotArea || isAbovePlotArea ? fullLayout.height / 2 : gs.h, 30);\n  var toggleRectWidth = 0;\n  legendObj._width = 0;\n  legendObj._height = 0;\n  var titleSize = getTitleSize(legendObj);\n\n  if (isVertical) {\n    traces.each(function (d) {\n      var h = d[0].height;\n      Drawing.setTranslate(this, bw + titleSize[0], bw + titleSize[1] + legendObj._height + h / 2 + itemGap);\n      legendObj._height += h;\n      legendObj._width = Math.max(legendObj._width, d[0].width);\n    });\n    toggleRectWidth = textGap + legendObj._width;\n    legendObj._width += itemGap + textGap + bw2;\n    legendObj._height += endPad;\n\n    if (isGrouped) {\n      groups.each(function (d, i) {\n        Drawing.setTranslate(this, 0, i * legendObj.tracegroupgap);\n      });\n      legendObj._height += (legendObj._lgroupsLength - 1) * legendObj.tracegroupgap;\n    }\n  } else {\n    var xanchor = getXanchor(legendObj);\n    var isLeftOfPlotArea = legendObj.x < 0 || legendObj.x === 0 && xanchor === 'right';\n    var isRightOfPlotArea = legendObj.x > 1 || legendObj.x === 1 && xanchor === 'left';\n    var isBeyondPlotAreaY = isAbovePlotArea || isBelowPlotArea;\n    var hw = fullLayout.width / 2; // - if placed within x-margins, extend the width of the plot area\n    // - else if below/above plot area and anchored in the margin, extend to opposite margin,\n    // - otherwise give it the maximum potential margin-push value\n\n    legendObj._maxWidth = Math.max(isLeftOfPlotArea ? isBeyondPlotAreaY && xanchor === 'left' ? gs.l + gs.w : hw : isRightOfPlotArea ? isBeyondPlotAreaY && xanchor === 'right' ? gs.r + gs.w : hw : gs.w, 2 * textGap);\n    var maxItemWidth = 0;\n    var combinedItemWidth = 0;\n    traces.each(function (d) {\n      var w = d[0].width + textGap;\n      maxItemWidth = Math.max(maxItemWidth, w);\n      combinedItemWidth += w;\n    });\n    toggleRectWidth = null;\n    var maxRowWidth = 0;\n\n    if (isGrouped) {\n      var maxGroupHeightInRow = 0;\n      var groupOffsetX = 0;\n      var groupOffsetY = 0;\n      groups.each(function () {\n        var maxWidthInGroup = 0;\n        var offsetY = 0;\n        d3.select(this).selectAll('g.traces').each(function (d) {\n          var h = d[0].height;\n          Drawing.setTranslate(this, titleSize[0], titleSize[1] + bw + itemGap + h / 2 + offsetY);\n          offsetY += h;\n          maxWidthInGroup = Math.max(maxWidthInGroup, textGap + d[0].width);\n        });\n        maxGroupHeightInRow = Math.max(maxGroupHeightInRow, offsetY);\n        var next = maxWidthInGroup + itemGap;\n\n        if (next + bw + groupOffsetX > legendObj._maxWidth) {\n          maxRowWidth = Math.max(maxRowWidth, groupOffsetX);\n          groupOffsetX = 0;\n          groupOffsetY += maxGroupHeightInRow + traceGroupGap;\n          maxGroupHeightInRow = offsetY;\n        }\n\n        Drawing.setTranslate(this, groupOffsetX, groupOffsetY);\n        groupOffsetX += next;\n      });\n      legendObj._width = Math.max(maxRowWidth, groupOffsetX) + bw;\n      legendObj._height = groupOffsetY + maxGroupHeightInRow + endPad;\n    } else {\n      var nTraces = traces.size();\n      var oneRowLegend = combinedItemWidth + bw2 + (nTraces - 1) * itemGap < legendObj._maxWidth;\n      var maxItemHeightInRow = 0;\n      var offsetX = 0;\n      var offsetY = 0;\n      var rowWidth = 0;\n      traces.each(function (d) {\n        var h = d[0].height;\n        var w = textGap + d[0].width;\n        var next = (oneRowLegend ? w : maxItemWidth) + itemGap;\n\n        if (next + bw + offsetX - itemGap >= legendObj._maxWidth) {\n          maxRowWidth = Math.max(maxRowWidth, rowWidth);\n          offsetX = 0;\n          offsetY += maxItemHeightInRow;\n          legendObj._height += maxItemHeightInRow;\n          maxItemHeightInRow = 0;\n        }\n\n        Drawing.setTranslate(this, titleSize[0] + bw + offsetX, titleSize[1] + bw + offsetY + h / 2 + itemGap);\n        rowWidth = offsetX + w + itemGap;\n        offsetX += next;\n        maxItemHeightInRow = Math.max(maxItemHeightInRow, h);\n      });\n\n      if (oneRowLegend) {\n        legendObj._width = offsetX + bw2;\n        legendObj._height = maxItemHeightInRow + endPad;\n      } else {\n        legendObj._width = Math.max(maxRowWidth, rowWidth) + bw2;\n        legendObj._height += maxItemHeightInRow + endPad;\n      }\n    }\n  }\n\n  legendObj._width = Math.ceil(Math.max(legendObj._width + titleSize[0], legendObj._titleWidth + 2 * (bw + constants.titlePad)));\n  legendObj._height = Math.ceil(Math.max(legendObj._height + titleSize[1], legendObj._titleHeight + 2 * (bw + constants.itemGap)));\n  legendObj._effHeight = Math.min(legendObj._height, legendObj._maxHeight);\n  var edits = gd._context.edits;\n  var isEditable = edits.legendText || edits.legendPosition;\n  traces.each(function (d) {\n    var traceToggle = d3.select(this).select('.legendtoggle');\n    var h = d[0].height;\n    var w = isEditable ? textGap : toggleRectWidth || textGap + d[0].width;\n    if (!isVertical) w += itemGap / 2;\n    Drawing.setRect(traceToggle, 0, -h / 2, w, h);\n  });\n}\n\nfunction expandMargin(gd) {\n  var fullLayout = gd._fullLayout;\n  var legendObj = fullLayout.legend;\n  var xanchor = getXanchor(legendObj);\n  var yanchor = getYanchor(legendObj);\n  return Plots.autoMargin(gd, 'legend', {\n    x: legendObj.x,\n    y: legendObj.y,\n    l: legendObj._width * FROM_TL[xanchor],\n    r: legendObj._width * FROM_BR[xanchor],\n    b: legendObj._effHeight * FROM_BR[yanchor],\n    t: legendObj._effHeight * FROM_TL[yanchor]\n  });\n}\n\nfunction getXanchor(legendObj) {\n  return Lib.isRightAnchor(legendObj) ? 'right' : Lib.isCenterAnchor(legendObj) ? 'center' : 'left';\n}\n\nfunction getYanchor(legendObj) {\n  return Lib.isBottomAnchor(legendObj) ? 'bottom' : Lib.isMiddleAnchor(legendObj) ? 'middle' : 'top';\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/legend/draw.js"],"names":["d3","require","Lib","Plots","Registry","Events","dragElement","Drawing","Color","svgTextUtils","handleClick","constants","alignmentConstants","LINE_SPACING","FROM_TL","FROM_BR","getLegendData","style","helpers","MAIN_TITLE","module","exports","draw","gd","opts","_fullLayout","legend","_draw","legendObj","fullLayout","clipId","_uid","layer","inHover","_inHover","_infolayer","_legendMouseDownTime","legendData","calcdata","showlegend","entries","hiddenSlices","hiddenlabels","length","selectAll","remove","_topdefs","select","autoMargin","ensureSingle","s","attr","clipPath","ensureSingleById","append","bg","call","stroke","bordercolor","fill","bgcolor","borderwidth","scrollBox","title","_titleWidth","_titleHeight","text","titleEl","font","textLayout","scrollBar","scrollBarEnterAttrs","scrollBarColor","groups","data","enter","exit","traces","identity","d","trace","traceIs","indexOf","label","visible","each","drawTexts","setupTraceToggle","syncOrAsync","previousPromises","computeLegendDimensions","expandMargin","gs","_size","bw","lx","l","w","x","getXanchor","_width","ly","t","h","y","getYanchor","_effHeight","margin","autoexpand","lx0","ly0","constrain","width","height","log","setTranslate","on","_height","_maxHeight","_context","staticPlot","setClipUrl","setRect","_scrollY","scrollBarHeight","Math","max","scrollBarMinHeight","scrollBarYMax","scrollBarMargin","scrollBoxYMax","scrollRatio","scrollBoxY","min","scrollBarWidth","scrollHandler","event","deltaY","preventDefault","eventY0","eventY1","scrollBoxY0","getScrollBarDragY","getNaturalDragY","scrollBarDrag","behavior","drag","e","sourceEvent","type","changedTouches","clientY","buttons","ctrlKey","scrollBoxTouchDrag","edits","legendPosition","xf","yf","x0","y0","classed","init","element","node","prepFn","transform","getTranslate","moveFn","dx","dy","newX","newY","align","xanchor","yanchor","doneFn","undefined","clickFn","numClicks","clickedTrace","filter","bbox","getBoundingClientRect","clientX","left","right","top","bottom","size","clickOrDoubleClick","legendItem","evt","evtData","curveNumber","index","expandedIndex","_expandedIndex","layout","frames","_transitionData","_frames","config","fullData","_fullData","_group","group","datum","clickVal","triggerHandler","_clickTimeout","setTimeout","doubleClickDelay","clearTimeout","dblClickVal","g","isPieLike","isEditable","legendText","maxNameLength","_maxNameLength","name","groupTitle","_meta","templateString","textEl","ensureLength","textGap","itemwidth","itemGap","positionText","makeEditable","newName","fullInput","_fullInput","update","hasTransform","groupbyIndices","getTransformIndices","kcont","keyedContainer","set","constructUpdate","str","maxLength","targetLength","trim","i","newMouseDownTime","traceToggle","Date","getTime","_dragged","_editing","aTitle","convertToTspans","computeTextDimensions","mathjaxGroup","mathjaxNode","lineHeight","mathjaxBB","bBox","textLines","lineCount","textNode","side","titlePad","getTitleSize","isVertical","isGrouped","bw2","endPad","isBelowPlotArea","isAbovePlotArea","traceGroupGap","tracegroupgap","toggleRectWidth","titleSize","_lgroupsLength","isLeftOfPlotArea","isRightOfPlotArea","isBeyondPlotAreaY","hw","_maxWidth","r","maxItemWidth","combinedItemWidth","maxRowWidth","maxGroupHeightInRow","groupOffsetX","groupOffsetY","maxWidthInGroup","offsetY","next","nTraces","oneRowLegend","maxItemHeightInRow","offsetX","rowWidth","ceil","b","isRightAnchor","isCenterAnchor","isBottomAnchor","isMiddleAnchor"],"mappings":"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","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Lib = require('../../lib');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Events = require('../../lib/events');\nvar dragElement = require('../dragelement');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar handleClick = require('./handle_click');\n\nvar constants = require('./constants');\nvar alignmentConstants = require('../../constants/alignment');\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\n\nvar getLegendData = require('./get_legend_data');\nvar style = require('./style');\nvar helpers = require('./helpers');\n\nvar MAIN_TITLE = 1;\n\nmodule.exports = function draw(gd, opts) {\n    if(!opts) opts = gd._fullLayout.legend || {};\n    return _draw(gd, opts);\n};\n\nfunction _draw(gd, legendObj) {\n    var fullLayout = gd._fullLayout;\n    var clipId = 'legend' + fullLayout._uid;\n    var layer;\n\n    var inHover = legendObj._inHover;\n    if(inHover) {\n        layer = legendObj.layer;\n        clipId += '-hover';\n    } else {\n        layer = fullLayout._infolayer;\n    }\n\n    if(!layer) return;\n\n    if(!gd._legendMouseDownTime) gd._legendMouseDownTime = 0;\n\n    var legendData;\n    if(!inHover) {\n        if(!gd.calcdata) return;\n        legendData = fullLayout.showlegend && getLegendData(gd.calcdata, legendObj);\n    } else {\n        if(!legendObj.entries) return;\n        legendData = getLegendData(legendObj.entries, legendObj);\n    }\n\n    var hiddenSlices = fullLayout.hiddenlabels || [];\n\n    if(!inHover && (!fullLayout.showlegend || !legendData.length)) {\n        layer.selectAll('.legend').remove();\n        fullLayout._topdefs.select('#' + clipId).remove();\n        return Plots.autoMargin(gd, 'legend');\n    }\n\n    var legend = Lib.ensureSingle(layer, 'g', 'legend', function(s) {\n        if(!inHover) s.attr('pointer-events', 'all');\n    });\n\n    var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', clipId, function(s) {\n        s.append('rect');\n    });\n\n    var bg = Lib.ensureSingle(legend, 'rect', 'bg', function(s) {\n        s.attr('shape-rendering', 'crispEdges');\n    });\n    bg.call(Color.stroke, legendObj.bordercolor)\n        .call(Color.fill, legendObj.bgcolor)\n        .style('stroke-width', legendObj.borderwidth + 'px');\n\n    var scrollBox = Lib.ensureSingle(legend, 'g', 'scrollbox');\n\n    var title = legendObj.title;\n    legendObj._titleWidth = 0;\n    legendObj._titleHeight = 0;\n    if(title.text) {\n        var titleEl = Lib.ensureSingle(scrollBox, 'text', 'legendtitletext');\n        titleEl.attr('text-anchor', 'start')\n            .call(Drawing.font, title.font)\n            .text(title.text);\n\n        textLayout(titleEl, scrollBox, gd, legendObj, MAIN_TITLE); // handle mathjax or multi-line text and compute title height\n    } else {\n        scrollBox.selectAll('.legendtitletext').remove();\n    }\n\n    var scrollBar = Lib.ensureSingle(legend, 'rect', 'scrollbar', function(s) {\n        s.attr(constants.scrollBarEnterAttrs)\n         .call(Color.fill, constants.scrollBarColor);\n    });\n\n    var groups = scrollBox.selectAll('g.groups').data(legendData);\n    groups.enter().append('g').attr('class', 'groups');\n    groups.exit().remove();\n\n    var traces = groups.selectAll('g.traces').data(Lib.identity);\n    traces.enter().append('g').attr('class', 'traces');\n    traces.exit().remove();\n\n    traces.style('opacity', function(d) {\n        var trace = d[0].trace;\n        if(Registry.traceIs(trace, 'pie-like')) {\n            return hiddenSlices.indexOf(d[0].label) !== -1 ? 0.5 : 1;\n        } else {\n            return trace.visible === 'legendonly' ? 0.5 : 1;\n        }\n    })\n    .each(function() { d3.select(this).call(drawTexts, gd, legendObj); })\n    .call(style, gd, legendObj)\n    .each(function() { if(!inHover) d3.select(this).call(setupTraceToggle, gd); });\n\n    Lib.syncOrAsync([\n        Plots.previousPromises,\n        function() { return computeLegendDimensions(gd, groups, traces, legendObj); },\n        function() {\n            // IF expandMargin return a Promise (which is truthy),\n            // we're under a doAutoMargin redraw, so we don't have to\n            // draw the remaining pieces below\n            if(!inHover && expandMargin(gd)) return;\n\n            var gs = fullLayout._size;\n            var bw = legendObj.borderwidth;\n\n            var lx = gs.l + gs.w * legendObj.x - FROM_TL[getXanchor(legendObj)] * legendObj._width;\n            var ly = gs.t + gs.h * (1 - legendObj.y) - FROM_TL[getYanchor(legendObj)] * legendObj._effHeight;\n\n            if(!inHover && fullLayout.margin.autoexpand) {\n                var lx0 = lx;\n                var ly0 = ly;\n\n                lx = Lib.constrain(lx, 0, fullLayout.width - legendObj._width);\n                ly = Lib.constrain(ly, 0, fullLayout.height - legendObj._effHeight);\n\n                if(lx !== lx0) {\n                    Lib.log('Constrain legend.x to make legend fit inside graph');\n                }\n                if(ly !== ly0) {\n                    Lib.log('Constrain legend.y to make legend fit inside graph');\n                }\n            }\n\n            // Set size and position of all the elements that make up a legend:\n            // legend, background and border, scroll box and scroll bar as well as title\n            if(!inHover) Drawing.setTranslate(legend, lx, ly);\n\n            // to be safe, remove previous listeners\n            scrollBar.on('.drag', null);\n            legend.on('wheel', null);\n\n            if(inHover || legendObj._height <= legendObj._maxHeight || gd._context.staticPlot) {\n                // if scrollbar should not be shown.\n                var height = legendObj._effHeight;\n\n                // if unified hover, let it be its full size\n                if(inHover) height = legendObj._height;\n\n                bg.attr({\n                    width: legendObj._width - bw,\n                    height: height - bw,\n                    x: bw / 2,\n                    y: bw / 2\n                });\n\n                Drawing.setTranslate(scrollBox, 0, 0);\n\n                clipPath.select('rect').attr({\n                    width: legendObj._width - 2 * bw,\n                    height: height - 2 * bw,\n                    x: bw,\n                    y: bw\n                });\n\n                Drawing.setClipUrl(scrollBox, clipId, gd);\n\n                Drawing.setRect(scrollBar, 0, 0, 0, 0);\n                delete legendObj._scrollY;\n            } else {\n                var scrollBarHeight = Math.max(constants.scrollBarMinHeight,\n                    legendObj._effHeight * legendObj._effHeight / legendObj._height);\n                var scrollBarYMax = legendObj._effHeight -\n                    scrollBarHeight -\n                    2 * constants.scrollBarMargin;\n                var scrollBoxYMax = legendObj._height - legendObj._effHeight;\n                var scrollRatio = scrollBarYMax / scrollBoxYMax;\n\n                var scrollBoxY = Math.min(legendObj._scrollY || 0, scrollBoxYMax);\n\n                // increase the background and clip-path width\n                // by the scrollbar width and margin\n                bg.attr({\n                    width: legendObj._width -\n                        2 * bw +\n                        constants.scrollBarWidth +\n                        constants.scrollBarMargin,\n                    height: legendObj._effHeight - bw,\n                    x: bw / 2,\n                    y: bw / 2\n                });\n\n                clipPath.select('rect').attr({\n                    width: legendObj._width -\n                        2 * bw +\n                        constants.scrollBarWidth +\n                        constants.scrollBarMargin,\n                    height: legendObj._effHeight - 2 * bw,\n                    x: bw,\n                    y: bw + scrollBoxY\n                });\n\n                Drawing.setClipUrl(scrollBox, clipId, gd);\n\n                scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n\n                // scroll legend by mousewheel or touchpad swipe up/down\n                legend.on('wheel', function() {\n                    scrollBoxY = Lib.constrain(\n                        legendObj._scrollY +\n                            ((d3.event.deltaY / scrollBarYMax) * scrollBoxYMax),\n                        0, scrollBoxYMax);\n                    scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                    if(scrollBoxY !== 0 && scrollBoxY !== scrollBoxYMax) {\n                        d3.event.preventDefault();\n                    }\n                });\n\n                var eventY0, eventY1, scrollBoxY0;\n\n                var getScrollBarDragY = function(scrollBoxY0, eventY0, eventY1) {\n                    var y = ((eventY1 - eventY0) / scrollRatio) + scrollBoxY0;\n                    return Lib.constrain(y, 0, scrollBoxYMax);\n                };\n\n                var getNaturalDragY = function(scrollBoxY0, eventY0, eventY1) {\n                    var y = ((eventY0 - eventY1) / scrollRatio) + scrollBoxY0;\n                    return Lib.constrain(y, 0, scrollBoxYMax);\n                };\n\n                // scroll legend by dragging scrollBAR\n                var scrollBarDrag = d3.behavior.drag()\n                .on('dragstart', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchstart') {\n                        eventY0 = e.changedTouches[0].clientY;\n                    } else {\n                        eventY0 = e.clientY;\n                    }\n                    scrollBoxY0 = scrollBoxY;\n                })\n                .on('drag', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.buttons === 2 || e.ctrlKey) return;\n                    if(e.type === 'touchmove') {\n                        eventY1 = e.changedTouches[0].clientY;\n                    } else {\n                        eventY1 = e.clientY;\n                    }\n                    scrollBoxY = getScrollBarDragY(scrollBoxY0, eventY0, eventY1);\n                    scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                });\n                scrollBar.call(scrollBarDrag);\n\n                // scroll legend by touch-dragging scrollBOX\n                var scrollBoxTouchDrag = d3.behavior.drag()\n                .on('dragstart', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchstart') {\n                        eventY0 = e.changedTouches[0].clientY;\n                        scrollBoxY0 = scrollBoxY;\n                    }\n                })\n                .on('drag', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.type === 'touchmove') {\n                        eventY1 = e.changedTouches[0].clientY;\n                        scrollBoxY = getNaturalDragY(scrollBoxY0, eventY0, eventY1);\n                        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                    }\n                });\n                scrollBox.call(scrollBoxTouchDrag);\n            }\n\n            function scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio) {\n                legendObj._scrollY = gd._fullLayout.legend._scrollY = scrollBoxY;\n                Drawing.setTranslate(scrollBox, 0, -scrollBoxY);\n\n                Drawing.setRect(\n                    scrollBar,\n                    legendObj._width,\n                    constants.scrollBarMargin + scrollBoxY * scrollRatio,\n                    constants.scrollBarWidth,\n                    scrollBarHeight\n                );\n                clipPath.select('rect').attr('y', bw + scrollBoxY);\n            }\n\n            if(gd._context.edits.legendPosition) {\n                var xf, yf, x0, y0;\n\n                legend.classed('cursor-move', true);\n\n                dragElement.init({\n                    element: legend.node(),\n                    gd: gd,\n                    prepFn: function() {\n                        var transform = Drawing.getTranslate(legend);\n                        x0 = transform.x;\n                        y0 = transform.y;\n                    },\n                    moveFn: function(dx, dy) {\n                        var newX = x0 + dx;\n                        var newY = y0 + dy;\n\n                        Drawing.setTranslate(legend, newX, newY);\n\n                        xf = dragElement.align(newX, 0, gs.l, gs.l + gs.w, legendObj.xanchor);\n                        yf = dragElement.align(newY, 0, gs.t + gs.h, gs.t, legendObj.yanchor);\n                    },\n                    doneFn: function() {\n                        if(xf !== undefined && yf !== undefined) {\n                            Registry.call('_guiRelayout', gd, {'legend.x': xf, 'legend.y': yf});\n                        }\n                    },\n                    clickFn: function(numClicks, e) {\n                        var clickedTrace = layer.selectAll('g.traces').filter(function() {\n                            var bbox = this.getBoundingClientRect();\n                            return (\n                                e.clientX >= bbox.left && e.clientX <= bbox.right &&\n                                e.clientY >= bbox.top && e.clientY <= bbox.bottom\n                            );\n                        });\n                        if(clickedTrace.size() > 0) {\n                            clickOrDoubleClick(gd, legend, clickedTrace, numClicks, e);\n                        }\n                    }\n                });\n            }\n        }], gd);\n}\n\nfunction clickOrDoubleClick(gd, legend, legendItem, numClicks, evt) {\n    var trace = legendItem.data()[0][0].trace;\n    var evtData = {\n        event: evt,\n        node: legendItem.node(),\n        curveNumber: trace.index,\n        expandedIndex: trace._expandedIndex,\n        data: gd.data,\n        layout: gd.layout,\n        frames: gd._transitionData._frames,\n        config: gd._context,\n        fullData: gd._fullData,\n        fullLayout: gd._fullLayout\n    };\n\n    if(trace._group) {\n        evtData.group = trace._group;\n    }\n    if(Registry.traceIs(trace, 'pie-like')) {\n        evtData.label = legendItem.datum()[0].label;\n    }\n\n    var clickVal = Events.triggerHandler(gd, 'plotly_legendclick', evtData);\n    if(clickVal === false) return;\n\n    if(numClicks === 1) {\n        legend._clickTimeout = setTimeout(function() {\n            if(!gd._fullLayout) return;\n            handleClick(legendItem, gd, numClicks);\n        }, gd._context.doubleClickDelay);\n    } else if(numClicks === 2) {\n        if(legend._clickTimeout) clearTimeout(legend._clickTimeout);\n        gd._legendMouseDownTime = 0;\n\n        var dblClickVal = Events.triggerHandler(gd, 'plotly_legenddoubleclick', evtData);\n        if(dblClickVal !== false) handleClick(legendItem, gd, numClicks);\n    }\n}\n\nfunction drawTexts(g, gd, legendObj) {\n    var legendItem = g.data()[0][0];\n    var trace = legendItem.trace;\n    var isPieLike = Registry.traceIs(trace, 'pie-like');\n    var isEditable = !legendObj._inHover && gd._context.edits.legendText && !isPieLike;\n    var maxNameLength = legendObj._maxNameLength;\n\n    var name, font;\n    if(legendItem.groupTitle) {\n        name = legendItem.groupTitle.text;\n        font = legendItem.groupTitle.font;\n    } else {\n        font = legendObj.font;\n        if(!legendObj.entries) {\n            name = isPieLike ? legendItem.label : trace.name;\n            if(trace._meta) {\n                name = Lib.templateString(name, trace._meta);\n            }\n        } else {\n            name = legendItem.text;\n        }\n    }\n\n    var textEl = Lib.ensureSingle(g, 'text', 'legendtext');\n\n    textEl.attr('text-anchor', 'start')\n        .call(Drawing.font, font)\n        .text(isEditable ? ensureLength(name, maxNameLength) : name);\n\n    var textGap = legendObj.itemwidth + constants.itemGap * 2;\n    svgTextUtils.positionText(textEl, textGap, 0);\n\n    if(isEditable) {\n        textEl.call(svgTextUtils.makeEditable, {gd: gd, text: name})\n            .call(textLayout, g, gd, legendObj)\n            .on('edit', function(newName) {\n                this.text(ensureLength(newName, maxNameLength))\n                    .call(textLayout, g, gd, legendObj);\n\n                var fullInput = legendItem.trace._fullInput || {};\n                var update = {};\n\n                if(Registry.hasTransform(fullInput, 'groupby')) {\n                    var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n                    var index = groupbyIndices[groupbyIndices.length - 1];\n\n                    var kcont = Lib.keyedContainer(fullInput, 'transforms[' + index + '].styles', 'target', 'value.name');\n\n                    kcont.set(legendItem.trace._group, newName);\n\n                    update = kcont.constructUpdate();\n                } else {\n                    update.name = newName;\n                }\n\n                return Registry.call('_guiRestyle', gd, update, trace.index);\n            });\n    } else {\n        textLayout(textEl, g, gd, legendObj);\n    }\n}\n\n/*\n * Make sure we have a reasonably clickable region.\n * If this string is missing or very short, pad it with spaces out to at least\n * 4 characters, up to the max length of other labels, on the assumption that\n * most characters are wider than spaces so a string of spaces will usually be\n * no wider than the real labels.\n */\nfunction ensureLength(str, maxLength) {\n    var targetLength = Math.max(4, maxLength);\n    if(str && str.trim().length >= targetLength / 2) return str;\n    str = str || '';\n    for(var i = targetLength - str.length; i > 0; i--) str += ' ';\n    return str;\n}\n\nfunction setupTraceToggle(g, gd) {\n    var doubleClickDelay = gd._context.doubleClickDelay;\n    var newMouseDownTime;\n    var numClicks = 1;\n\n    var traceToggle = Lib.ensureSingle(g, 'rect', 'legendtoggle', function(s) {\n        if(!gd._context.staticPlot) {\n            s.style('cursor', 'pointer').attr('pointer-events', 'all');\n        }\n        s.call(Color.fill, 'rgba(0,0,0,0)');\n    });\n\n    if(gd._context.staticPlot) return;\n\n    traceToggle.on('mousedown', function() {\n        newMouseDownTime = (new Date()).getTime();\n        if(newMouseDownTime - gd._legendMouseDownTime < doubleClickDelay) {\n            // in a click train\n            numClicks += 1;\n        } else {\n            // new click train\n            numClicks = 1;\n            gd._legendMouseDownTime = newMouseDownTime;\n        }\n    });\n    traceToggle.on('mouseup', function() {\n        if(gd._dragged || gd._editing) return;\n        var legend = gd._fullLayout.legend;\n\n        if((new Date()).getTime() - gd._legendMouseDownTime > doubleClickDelay) {\n            numClicks = Math.max(numClicks - 1, 1);\n        }\n\n        clickOrDoubleClick(gd, legend, g, numClicks, d3.event);\n    });\n}\n\nfunction textLayout(s, g, gd, legendObj, aTitle) {\n    if(legendObj._inHover) s.attr('data-notex', true); // do not process MathJax for unified hover\n    svgTextUtils.convertToTspans(s, gd, function() {\n        computeTextDimensions(g, gd, legendObj, aTitle);\n    });\n}\n\nfunction computeTextDimensions(g, gd, legendObj, aTitle) {\n    var legendItem = g.data()[0][0];\n    if(!legendObj._inHover && legendItem && !legendItem.trace.showlegend) {\n        g.remove();\n        return;\n    }\n\n    var mathjaxGroup = g.select('g[class*=math-group]');\n    var mathjaxNode = mathjaxGroup.node();\n    if(!legendObj) legendObj = gd._fullLayout.legend;\n    var bw = legendObj.borderwidth;\n    var font;\n    if(aTitle === MAIN_TITLE) {\n        font = legendObj.title.font;\n    } else if(legendItem.groupTitle) {\n        font = legendItem.groupTitle.font;\n    } else {\n        font = legendObj.font;\n    }\n    var lineHeight = font.size * LINE_SPACING;\n    var height, width;\n\n    if(mathjaxNode) {\n        var mathjaxBB = Drawing.bBox(mathjaxNode);\n\n        height = mathjaxBB.height;\n        width = mathjaxBB.width;\n\n        if(aTitle === MAIN_TITLE) {\n            Drawing.setTranslate(mathjaxGroup, bw, bw + height * 0.75);\n        } else { // legend item\n            Drawing.setTranslate(mathjaxGroup, 0, height * 0.25);\n        }\n    } else {\n        var textEl = g.select(aTitle === MAIN_TITLE ?\n            '.legendtitletext' : '.legendtext'\n        );\n        var textLines = svgTextUtils.lineCount(textEl);\n        var textNode = textEl.node();\n\n        height = lineHeight * textLines;\n        width = textNode ? Drawing.bBox(textNode).width : 0;\n\n        // approximation to height offset to center the font\n        // to avoid getBoundingClientRect\n        if(aTitle === MAIN_TITLE) {\n            if(legendObj.title.side === 'left') {\n                // add extra space between legend title and itmes\n                width += constants.itemGap * 2;\n            }\n\n            svgTextUtils.positionText(textEl,\n                bw + constants.titlePad,\n                bw + lineHeight\n            );\n        } else { // legend item\n            var x = constants.itemGap * 2 + legendObj.itemwidth;\n            if(legendItem.groupTitle) {\n                x = constants.itemGap;\n                width -= legendObj.itemwidth;\n            }\n\n            svgTextUtils.positionText(textEl,\n                x,\n                -lineHeight * ((textLines - 1) / 2 - 0.3)\n            );\n        }\n    }\n\n    if(aTitle === MAIN_TITLE) {\n        legendObj._titleWidth = width;\n        legendObj._titleHeight = height;\n    } else { // legend item\n        legendItem.lineHeight = lineHeight;\n        legendItem.height = Math.max(height, 16) + 3;\n        legendItem.width = width;\n    }\n}\n\nfunction getTitleSize(legendObj) {\n    var w = 0;\n    var h = 0;\n\n    var side = legendObj.title.side;\n    if(side) {\n        if(side.indexOf('left') !== -1) {\n            w = legendObj._titleWidth;\n        }\n        if(side.indexOf('top') !== -1) {\n            h = legendObj._titleHeight;\n        }\n    }\n\n    return [w, h];\n}\n\n/*\n * Computes in fullLayout.legend:\n *\n *  - _height: legend height including items past scrollbox height\n *  - _maxHeight: maximum legend height before scrollbox is required\n *  - _effHeight: legend height w/ or w/o scrollbox\n *\n *  - _width: legend width\n *  - _maxWidth (for orientation:h only): maximum width before starting new row\n */\nfunction computeLegendDimensions(gd, groups, traces, legendObj) {\n    var fullLayout = gd._fullLayout;\n    if(!legendObj) legendObj = fullLayout.legend;\n    var gs = fullLayout._size;\n\n    var isVertical = helpers.isVertical(legendObj);\n    var isGrouped = helpers.isGrouped(legendObj);\n\n    var bw = legendObj.borderwidth;\n    var bw2 = 2 * bw;\n    var itemGap = constants.itemGap;\n    var textGap = legendObj.itemwidth + itemGap * 2;\n    var endPad = 2 * (bw + itemGap);\n\n    var yanchor = getYanchor(legendObj);\n    var isBelowPlotArea = legendObj.y < 0 || (legendObj.y === 0 && yanchor === 'top');\n    var isAbovePlotArea = legendObj.y > 1 || (legendObj.y === 1 && yanchor === 'bottom');\n\n    var traceGroupGap = legendObj.tracegroupgap;\n\n    // - if below/above plot area, give it the maximum potential margin-push value\n    // - otherwise, extend the height of the plot area\n    legendObj._maxHeight = Math.max(\n        (isBelowPlotArea || isAbovePlotArea) ? fullLayout.height / 2 : gs.h,\n        30\n    );\n\n    var toggleRectWidth = 0;\n    legendObj._width = 0;\n    legendObj._height = 0;\n    var titleSize = getTitleSize(legendObj);\n\n    if(isVertical) {\n        traces.each(function(d) {\n            var h = d[0].height;\n            Drawing.setTranslate(this,\n                bw + titleSize[0],\n                bw + titleSize[1] + legendObj._height + h / 2 + itemGap\n            );\n            legendObj._height += h;\n            legendObj._width = Math.max(legendObj._width, d[0].width);\n        });\n\n        toggleRectWidth = textGap + legendObj._width;\n        legendObj._width += itemGap + textGap + bw2;\n        legendObj._height += endPad;\n\n        if(isGrouped) {\n            groups.each(function(d, i) {\n                Drawing.setTranslate(this, 0, i * legendObj.tracegroupgap);\n            });\n            legendObj._height += (legendObj._lgroupsLength - 1) * legendObj.tracegroupgap;\n        }\n    } else {\n        var xanchor = getXanchor(legendObj);\n        var isLeftOfPlotArea = legendObj.x < 0 || (legendObj.x === 0 && xanchor === 'right');\n        var isRightOfPlotArea = legendObj.x > 1 || (legendObj.x === 1 && xanchor === 'left');\n        var isBeyondPlotAreaY = isAbovePlotArea || isBelowPlotArea;\n        var hw = fullLayout.width / 2;\n\n        // - if placed within x-margins, extend the width of the plot area\n        // - else if below/above plot area and anchored in the margin, extend to opposite margin,\n        // - otherwise give it the maximum potential margin-push value\n        legendObj._maxWidth = Math.max(\n            isLeftOfPlotArea ? ((isBeyondPlotAreaY && xanchor === 'left') ? gs.l + gs.w : hw) :\n            isRightOfPlotArea ? ((isBeyondPlotAreaY && xanchor === 'right') ? gs.r + gs.w : hw) :\n            gs.w,\n        2 * textGap);\n        var maxItemWidth = 0;\n        var combinedItemWidth = 0;\n        traces.each(function(d) {\n            var w = d[0].width + textGap;\n            maxItemWidth = Math.max(maxItemWidth, w);\n            combinedItemWidth += w;\n        });\n\n        toggleRectWidth = null;\n        var maxRowWidth = 0;\n\n        if(isGrouped) {\n            var maxGroupHeightInRow = 0;\n            var groupOffsetX = 0;\n            var groupOffsetY = 0;\n            groups.each(function() {\n                var maxWidthInGroup = 0;\n                var offsetY = 0;\n                d3.select(this).selectAll('g.traces').each(function(d) {\n                    var h = d[0].height;\n                    Drawing.setTranslate(this,\n                        titleSize[0],\n                        titleSize[1] + bw + itemGap + h / 2 + offsetY\n                    );\n                    offsetY += h;\n                    maxWidthInGroup = Math.max(maxWidthInGroup, textGap + d[0].width);\n                });\n                maxGroupHeightInRow = Math.max(maxGroupHeightInRow, offsetY);\n\n                var next = maxWidthInGroup + itemGap;\n\n                if((next + bw + groupOffsetX) > legendObj._maxWidth) {\n                    maxRowWidth = Math.max(maxRowWidth, groupOffsetX);\n                    groupOffsetX = 0;\n                    groupOffsetY += maxGroupHeightInRow + traceGroupGap;\n                    maxGroupHeightInRow = offsetY;\n                }\n\n                Drawing.setTranslate(this, groupOffsetX, groupOffsetY);\n\n                groupOffsetX += next;\n            });\n\n            legendObj._width = Math.max(maxRowWidth, groupOffsetX) + bw;\n            legendObj._height = groupOffsetY + maxGroupHeightInRow + endPad;\n        } else {\n            var nTraces = traces.size();\n            var oneRowLegend = (combinedItemWidth + bw2 + (nTraces - 1) * itemGap) < legendObj._maxWidth;\n\n            var maxItemHeightInRow = 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var rowWidth = 0;\n            traces.each(function(d) {\n                var h = d[0].height;\n                var w = textGap + d[0].width;\n                var next = (oneRowLegend ? w : maxItemWidth) + itemGap;\n\n                if((next + bw + offsetX - itemGap) >= legendObj._maxWidth) {\n                    maxRowWidth = Math.max(maxRowWidth, rowWidth);\n                    offsetX = 0;\n                    offsetY += maxItemHeightInRow;\n                    legendObj._height += maxItemHeightInRow;\n                    maxItemHeightInRow = 0;\n                }\n\n                Drawing.setTranslate(this,\n                    titleSize[0] + bw + offsetX,\n                    titleSize[1] + bw + offsetY + h / 2 + itemGap\n                );\n\n                rowWidth = offsetX + w + itemGap;\n                offsetX += next;\n                maxItemHeightInRow = Math.max(maxItemHeightInRow, h);\n            });\n\n            if(oneRowLegend) {\n                legendObj._width = offsetX + bw2;\n                legendObj._height = maxItemHeightInRow + endPad;\n            } else {\n                legendObj._width = Math.max(maxRowWidth, rowWidth) + bw2;\n                legendObj._height += maxItemHeightInRow + endPad;\n            }\n        }\n    }\n\n    legendObj._width = Math.ceil(\n        Math.max(\n            legendObj._width + titleSize[0],\n            legendObj._titleWidth + 2 * (bw + constants.titlePad)\n        )\n    );\n\n    legendObj._height = Math.ceil(\n        Math.max(\n            legendObj._height + titleSize[1],\n            legendObj._titleHeight + 2 * (bw + constants.itemGap)\n        )\n    );\n\n    legendObj._effHeight = Math.min(legendObj._height, legendObj._maxHeight);\n\n    var edits = gd._context.edits;\n    var isEditable = edits.legendText || edits.legendPosition;\n    traces.each(function(d) {\n        var traceToggle = d3.select(this).select('.legendtoggle');\n        var h = d[0].height;\n        var w = isEditable ? textGap : (toggleRectWidth || (textGap + d[0].width));\n        if(!isVertical) w += itemGap / 2;\n        Drawing.setRect(traceToggle, 0, -h / 2, w, h);\n    });\n}\n\nfunction expandMargin(gd) {\n    var fullLayout = gd._fullLayout;\n    var legendObj = fullLayout.legend;\n    var xanchor = getXanchor(legendObj);\n    var yanchor = getYanchor(legendObj);\n\n    return Plots.autoMargin(gd, 'legend', {\n        x: legendObj.x,\n        y: legendObj.y,\n        l: legendObj._width * (FROM_TL[xanchor]),\n        r: legendObj._width * (FROM_BR[xanchor]),\n        b: legendObj._effHeight * (FROM_BR[yanchor]),\n        t: legendObj._effHeight * (FROM_TL[yanchor])\n    });\n}\n\nfunction getXanchor(legendObj) {\n    return Lib.isRightAnchor(legendObj) ? 'right' :\n        Lib.isCenterAnchor(legendObj) ? 'center' :\n        'left';\n}\n\nfunction getYanchor(legendObj) {\n    return Lib.isBottomAnchor(legendObj) ? 'bottom' :\n        Lib.isMiddleAnchor(legendObj) ? 'middle' :\n        'top';\n}\n"]},"metadata":{},"sourceType":"script"}