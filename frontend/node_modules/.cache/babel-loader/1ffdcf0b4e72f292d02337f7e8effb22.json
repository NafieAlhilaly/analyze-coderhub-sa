{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar calcColorscale = require('../scatter/colorscale_calc');\n\nvar convertMarkerStyle = require('../scattergl/convert').markerStyle;\n\nmodule.exports = function editStyle(gd, cd0) {\n  var trace = cd0.trace;\n  var scene = gd._fullLayout._splomScenes[trace.uid];\n\n  if (scene) {\n    calcColorscale(gd, trace);\n    Lib.extendFlat(scene.matrixOptions, convertMarkerStyle(trace)); // TODO [un]selected styles?\n\n    var opts = Lib.extendFlat({}, scene.matrixOptions, scene.viewOpts); // TODO this is too long for arrayOk attributes!\n\n    scene.matrix.update(opts, null);\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/splom/edit_style.js"],"names":["Lib","require","calcColorscale","convertMarkerStyle","markerStyle","module","exports","editStyle","gd","cd0","trace","scene","_fullLayout","_splomScenes","uid","extendFlat","matrixOptions","opts","viewOpts","matrix","update"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,4BAAD,CAA5B;;AACA,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,sBAAD,CAAP,CAAgCG,WAAzD;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,EAAnB,EAAuBC,GAAvB,EAA4B;AACzC,MAAIC,KAAK,GAAGD,GAAG,CAACC,KAAhB;AACA,MAAIC,KAAK,GAAGH,EAAE,CAACI,WAAH,CAAeC,YAAf,CAA4BH,KAAK,CAACI,GAAlC,CAAZ;;AAEA,MAAGH,KAAH,EAAU;AACNT,IAAAA,cAAc,CAACM,EAAD,EAAKE,KAAL,CAAd;AAEAV,IAAAA,GAAG,CAACe,UAAJ,CAAeJ,KAAK,CAACK,aAArB,EAAoCb,kBAAkB,CAACO,KAAD,CAAtD,EAHM,CAIN;;AAEA,QAAIO,IAAI,GAAGjB,GAAG,CAACe,UAAJ,CAAe,EAAf,EAAmBJ,KAAK,CAACK,aAAzB,EAAwCL,KAAK,CAACO,QAA9C,CAAX,CANM,CAQN;;AACAP,IAAAA,KAAK,CAACQ,MAAN,CAAaC,MAAb,CAAoBH,IAApB,EAA0B,IAA1B;AACH;AACJ,CAfD","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar convertMarkerStyle = require('../scattergl/convert').markerStyle;\n\nmodule.exports = function editStyle(gd, cd0) {\n    var trace = cd0.trace;\n    var scene = gd._fullLayout._splomScenes[trace.uid];\n\n    if(scene) {\n        calcColorscale(gd, trace);\n\n        Lib.extendFlat(scene.matrixOptions, convertMarkerStyle(trace));\n        // TODO [un]selected styles?\n\n        var opts = Lib.extendFlat({}, scene.matrixOptions, scene.viewOpts);\n\n        // TODO this is too long for arrayOk attributes!\n        scene.matrix.update(opts, null);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}