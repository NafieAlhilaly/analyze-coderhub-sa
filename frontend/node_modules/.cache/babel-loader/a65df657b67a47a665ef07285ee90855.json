{"ast":null,"code":"'use strict';\n\nvar createBuffer = require('gl-buffer');\n\nvar createVAO = require('gl-vao');\n\nvar createShader = require('./shaders/index');\n\nmodule.exports = createSpikes;\nvar identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nfunction AxisSpikes(gl, buffer, vao, shader) {\n  this.gl = gl;\n  this.buffer = buffer;\n  this.vao = vao;\n  this.shader = shader;\n  this.pixelRatio = 1;\n  this.bounds = [[-1000, -1000, -1000], [1000, 1000, 1000]];\n  this.position = [0, 0, 0];\n  this.lineWidth = [2, 2, 2];\n  this.colors = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.enabled = [true, true, true];\n  this.drawSides = [true, true, true];\n  this.axes = null;\n}\n\nvar proto = AxisSpikes.prototype;\nvar OUTER_FACE = [0, 0, 0];\nvar INNER_FACE = [0, 0, 0];\nvar SHAPE = [0, 0];\n\nproto.isTransparent = function () {\n  return false;\n};\n\nproto.drawTransparent = function (camera) {};\n\nproto.draw = function (camera) {\n  var gl = this.gl;\n  var vao = this.vao;\n  var shader = this.shader;\n  vao.bind();\n  shader.bind();\n  var model = camera.model || identity;\n  var view = camera.view || identity;\n  var projection = camera.projection || identity;\n  var axis;\n\n  if (this.axes) {\n    axis = this.axes.lastCubeProps.axis;\n  }\n\n  var outerFace = OUTER_FACE;\n  var innerFace = INNER_FACE;\n\n  for (var i = 0; i < 3; ++i) {\n    if (axis && axis[i] < 0) {\n      outerFace[i] = this.bounds[0][i];\n      innerFace[i] = this.bounds[1][i];\n    } else {\n      outerFace[i] = this.bounds[1][i];\n      innerFace[i] = this.bounds[0][i];\n    }\n  }\n\n  SHAPE[0] = gl.drawingBufferWidth;\n  SHAPE[1] = gl.drawingBufferHeight;\n  shader.uniforms.model = model;\n  shader.uniforms.view = view;\n  shader.uniforms.projection = projection;\n  shader.uniforms.coordinates = [this.position, outerFace, innerFace];\n  shader.uniforms.colors = this.colors;\n  shader.uniforms.screenShape = SHAPE;\n\n  for (var i = 0; i < 3; ++i) {\n    shader.uniforms.lineWidth = this.lineWidth[i] * this.pixelRatio;\n\n    if (this.enabled[i]) {\n      vao.draw(gl.TRIANGLES, 6, 6 * i);\n\n      if (this.drawSides[i]) {\n        vao.draw(gl.TRIANGLES, 12, 18 + 12 * i);\n      }\n    }\n  }\n\n  vao.unbind();\n};\n\nproto.update = function (options) {\n  if (!options) {\n    return;\n  }\n\n  if (\"bounds\" in options) {\n    this.bounds = options.bounds;\n  }\n\n  if (\"position\" in options) {\n    this.position = options.position;\n  }\n\n  if (\"lineWidth\" in options) {\n    this.lineWidth = options.lineWidth;\n  }\n\n  if (\"colors\" in options) {\n    this.colors = options.colors;\n  }\n\n  if (\"enabled\" in options) {\n    this.enabled = options.enabled;\n  }\n\n  if (\"drawSides\" in options) {\n    this.drawSides = options.drawSides;\n  }\n};\n\nproto.dispose = function () {\n  this.vao.dispose();\n  this.buffer.dispose();\n  this.shader.dispose();\n};\n\nfunction createSpikes(gl, options) {\n  //Create buffers\n  var data = [];\n\n  function line(x, y, z, i, l, h) {\n    var row = [x, y, z, 0, 0, 0, 1];\n    row[i + 3] = 1;\n    row[i] = l;\n    data.push.apply(data, row);\n    row[6] = -1;\n    data.push.apply(data, row);\n    row[i] = h;\n    data.push.apply(data, row);\n    data.push.apply(data, row);\n    row[6] = 1;\n    data.push.apply(data, row);\n    row[i] = l;\n    data.push.apply(data, row);\n  }\n\n  line(0, 0, 0, 0, 0, 1);\n  line(0, 0, 0, 1, 0, 1);\n  line(0, 0, 0, 2, 0, 1);\n  line(1, 0, 0, 1, -1, 1);\n  line(1, 0, 0, 2, -1, 1);\n  line(0, 1, 0, 0, -1, 1);\n  line(0, 1, 0, 2, -1, 1);\n  line(0, 0, 1, 0, -1, 1);\n  line(0, 0, 1, 1, -1, 1);\n  var buffer = createBuffer(gl, data);\n  var vao = createVAO(gl, [{\n    type: gl.FLOAT,\n    buffer: buffer,\n    size: 3,\n    offset: 0,\n    stride: 28\n  }, {\n    type: gl.FLOAT,\n    buffer: buffer,\n    size: 3,\n    offset: 12,\n    stride: 28\n  }, {\n    type: gl.FLOAT,\n    buffer: buffer,\n    size: 1,\n    offset: 24,\n    stride: 28\n  }]); //Create shader\n\n  var shader = createShader(gl);\n  shader.attributes.position.location = 0;\n  shader.attributes.color.location = 1;\n  shader.attributes.weight.location = 2; //Create spike object\n\n  var spikes = new AxisSpikes(gl, buffer, vao, shader); //Set parameters\n\n  spikes.update(options); //Return resulting object\n\n  return spikes;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/gl-spikes3d/spikes.js"],"names":["createBuffer","require","createVAO","createShader","module","exports","createSpikes","identity","AxisSpikes","gl","buffer","vao","shader","pixelRatio","bounds","position","lineWidth","colors","enabled","drawSides","axes","proto","prototype","OUTER_FACE","INNER_FACE","SHAPE","isTransparent","drawTransparent","camera","draw","bind","model","view","projection","axis","lastCubeProps","outerFace","innerFace","i","drawingBufferWidth","drawingBufferHeight","uniforms","coordinates","screenShape","TRIANGLES","unbind","update","options","dispose","data","line","x","y","z","l","h","row","push","apply","type","FLOAT","size","offset","stride","attributes","location","color","weight","spikes"],"mappings":"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","sourcesContent":["'use strict'\n\nvar createBuffer = require('gl-buffer')\nvar createVAO = require('gl-vao')\nvar createShader = require('./shaders/index')\n\nmodule.exports = createSpikes\n\nvar identity = [1,0,0,0,\n                0,1,0,0,\n                0,0,1,0,\n                0,0,0,1]\n\nfunction AxisSpikes(gl, buffer, vao, shader) {\n  this.gl         = gl\n  this.buffer     = buffer\n  this.vao        = vao\n  this.shader     = shader\n  this.pixelRatio = 1\n  this.bounds     = [[-1000,-1000,-1000], [1000,1000,1000]]\n  this.position   = [0,0,0]\n  this.lineWidth  = [2,2,2]\n  this.colors     = [[0,0,0,1], [0,0,0,1], [0,0,0,1]]\n  this.enabled    = [true,true,true]\n  this.drawSides  = [true,true,true]\n  this.axes       = null\n}\n\nvar proto = AxisSpikes.prototype\n\nvar OUTER_FACE = [0,0,0]\nvar INNER_FACE = [0,0,0]\n\nvar SHAPE = [0,0]\n\nproto.isTransparent = function() {\n  return false\n}\n\nproto.drawTransparent = function(camera) {}\n\nproto.draw = function(camera) {\n  var gl = this.gl\n  var vao = this.vao\n  var shader = this.shader\n\n  vao.bind()\n  shader.bind()\n\n  var model      = camera.model || identity\n  var view       = camera.view || identity\n  var projection = camera.projection || identity\n\n  var axis\n  if(this.axes) {\n    axis = this.axes.lastCubeProps.axis\n  }\n\n  var outerFace = OUTER_FACE\n  var innerFace = INNER_FACE\n  for(var i=0; i<3; ++i) {\n    if(axis && axis[i] < 0) {\n      outerFace[i] = this.bounds[0][i]\n      innerFace[i] = this.bounds[1][i]\n    } else {\n      outerFace[i] = this.bounds[1][i]\n      innerFace[i] = this.bounds[0][i]\n    }\n  }\n\n  SHAPE[0] = gl.drawingBufferWidth\n  SHAPE[1] = gl.drawingBufferHeight\n\n  shader.uniforms.model       = model\n  shader.uniforms.view        = view\n  shader.uniforms.projection  = projection\n  shader.uniforms.coordinates = [this.position, outerFace, innerFace]\n  shader.uniforms.colors      = this.colors\n  shader.uniforms.screenShape = SHAPE\n\n  for(var i=0; i<3; ++i) {\n    shader.uniforms.lineWidth = this.lineWidth[i] * this.pixelRatio\n    if(this.enabled[i]) {\n      vao.draw(gl.TRIANGLES, 6, 6*i)\n      if(this.drawSides[i]) {\n        vao.draw(gl.TRIANGLES, 12, 18+12*i)\n      }\n    }\n  }\n\n  vao.unbind()\n}\n\nproto.update = function(options) {\n  if(!options) {\n    return\n  }\n  if(\"bounds\" in options) {\n    this.bounds = options.bounds\n  }\n  if(\"position\" in options) {\n    this.position = options.position\n  }\n  if(\"lineWidth\" in options) {\n    this.lineWidth = options.lineWidth\n  }\n  if(\"colors\" in options) {\n    this.colors = options.colors\n  }\n  if(\"enabled\" in options) {\n    this.enabled = options.enabled\n  }\n  if(\"drawSides\" in options) {\n    this.drawSides = options.drawSides\n  }\n}\n\nproto.dispose = function() {\n  this.vao.dispose()\n  this.buffer.dispose()\n  this.shader.dispose()\n}\n\n\n\nfunction createSpikes(gl, options) {\n  //Create buffers\n  var data = [ ]\n\n  function line(x,y,z,i,l,h) {\n    var row = [x,y,z,  0,0,0,  1]\n    row[i+3] = 1\n    row[i] = l\n    data.push.apply(data, row)\n    row[6] = -1\n    data.push.apply(data, row)\n    row[i] = h\n    data.push.apply(data, row)\n    data.push.apply(data, row)\n    row[6] = 1\n    data.push.apply(data, row)\n    row[i] = l\n    data.push.apply(data, row)\n  }\n\n  line(0,0,0, 0, 0, 1)\n  line(0,0,0, 1, 0, 1)\n  line(0,0,0, 2, 0, 1)\n\n  line(1,0,0,  1,  -1,1)\n  line(1,0,0,  2,  -1,1)\n\n  line(0,1,0,  0,  -1,1)\n  line(0,1,0,  2,  -1,1)\n\n  line(0,0,1,  0,  -1,1)\n  line(0,0,1,  1,  -1,1)\n\n  var buffer = createBuffer(gl, data)\n  var vao = createVAO(gl, [{\n    type: gl.FLOAT,\n    buffer: buffer,\n    size: 3,\n    offset: 0,\n    stride: 28\n  }, {\n    type: gl.FLOAT,\n    buffer: buffer,\n    size: 3,\n    offset: 12,\n    stride: 28\n  }, {\n    type: gl.FLOAT,\n    buffer: buffer,\n    size: 1,\n    offset: 24,\n    stride: 28\n  }])\n\n  //Create shader\n  var shader = createShader(gl)\n  shader.attributes.position.location = 0\n  shader.attributes.color.location = 1\n  shader.attributes.weight.location = 2\n\n  //Create spike object\n  var spikes = new AxisSpikes(gl, buffer, vao, shader)\n\n  //Set parameters\n  spikes.update(options)\n\n  //Return resulting object\n  return spikes\n}\n"]},"metadata":{},"sourceType":"script"}