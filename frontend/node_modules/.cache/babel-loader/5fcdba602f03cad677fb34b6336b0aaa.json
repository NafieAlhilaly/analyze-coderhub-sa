{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\n\nvar extractOpts = require('./helpers').extractOpts;\n\nmodule.exports = function calc(gd, trace, opts) {\n  var fullLayout = gd._fullLayout;\n  var vals = opts.vals;\n  var containerStr = opts.containerStr;\n  var container = containerStr ? Lib.nestedProperty(trace, containerStr).get() : trace;\n  var cOpts = extractOpts(container);\n  var auto = cOpts.auto !== false;\n  var min = cOpts.min;\n  var max = cOpts.max;\n  var mid = cOpts.mid;\n\n  var minVal = function () {\n    return Lib.aggNums(Math.min, null, vals);\n  };\n\n  var maxVal = function () {\n    return Lib.aggNums(Math.max, null, vals);\n  };\n\n  if (min === undefined) {\n    min = minVal();\n  } else if (auto) {\n    if (container._colorAx && isNumeric(min)) {\n      min = Math.min(min, minVal());\n    } else {\n      min = minVal();\n    }\n  }\n\n  if (max === undefined) {\n    max = maxVal();\n  } else if (auto) {\n    if (container._colorAx && isNumeric(max)) {\n      max = Math.max(max, maxVal());\n    } else {\n      max = maxVal();\n    }\n  }\n\n  if (auto && mid !== undefined) {\n    if (max - mid > mid - min) {\n      min = mid - (max - mid);\n    } else if (max - mid < mid - min) {\n      max = mid + (mid - min);\n    }\n  }\n\n  if (min === max) {\n    min -= 0.5;\n    max += 0.5;\n  }\n\n  cOpts._sync('min', min);\n\n  cOpts._sync('max', max);\n\n  if (cOpts.autocolorscale) {\n    var scl;\n    if (min * max < 0) scl = fullLayout.colorscale.diverging;else if (min >= 0) scl = fullLayout.colorscale.sequential;else scl = fullLayout.colorscale.sequentialminus;\n\n    cOpts._sync('colorscale', scl);\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/colorscale/calc.js"],"names":["isNumeric","require","Lib","extractOpts","module","exports","calc","gd","trace","opts","fullLayout","_fullLayout","vals","containerStr","container","nestedProperty","get","cOpts","auto","min","max","mid","minVal","aggNums","Math","maxVal","undefined","_colorAx","_sync","autocolorscale","scl","colorscale","diverging","sequential","sequentialminus"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAEA,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,WAAD,CAAP,CAAqBE,WAAvC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,EAAd,EAAkBC,KAAlB,EAAyBC,IAAzB,EAA+B;AAC5C,MAAIC,UAAU,GAAGH,EAAE,CAACI,WAApB;AACA,MAAIC,IAAI,GAAGH,IAAI,CAACG,IAAhB;AACA,MAAIC,YAAY,GAAGJ,IAAI,CAACI,YAAxB;AAEA,MAAIC,SAAS,GAAGD,YAAY,GACxBX,GAAG,CAACa,cAAJ,CAAmBP,KAAnB,EAA0BK,YAA1B,EAAwCG,GAAxC,EADwB,GAExBR,KAFJ;AAIA,MAAIS,KAAK,GAAGd,WAAW,CAACW,SAAD,CAAvB;AACA,MAAII,IAAI,GAAGD,KAAK,CAACC,IAAN,KAAe,KAA1B;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACE,GAAhB;AACA,MAAIC,GAAG,GAAGH,KAAK,CAACG,GAAhB;AACA,MAAIC,GAAG,GAAGJ,KAAK,CAACI,GAAhB;;AAEA,MAAIC,MAAM,GAAG,YAAW;AAAE,WAAOpB,GAAG,CAACqB,OAAJ,CAAYC,IAAI,CAACL,GAAjB,EAAsB,IAAtB,EAA4BP,IAA5B,CAAP;AAA2C,GAArE;;AACA,MAAIa,MAAM,GAAG,YAAW;AAAE,WAAOvB,GAAG,CAACqB,OAAJ,CAAYC,IAAI,CAACJ,GAAjB,EAAsB,IAAtB,EAA4BR,IAA5B,CAAP;AAA2C,GAArE;;AAEA,MAAGO,GAAG,KAAKO,SAAX,EAAsB;AAClBP,IAAAA,GAAG,GAAGG,MAAM,EAAZ;AACH,GAFD,MAEO,IAAGJ,IAAH,EAAS;AACZ,QAAGJ,SAAS,CAACa,QAAV,IAAsB3B,SAAS,CAACmB,GAAD,CAAlC,EAAyC;AACrCA,MAAAA,GAAG,GAAGK,IAAI,CAACL,GAAL,CAASA,GAAT,EAAcG,MAAM,EAApB,CAAN;AACH,KAFD,MAEO;AACHH,MAAAA,GAAG,GAAGG,MAAM,EAAZ;AACH;AACJ;;AAED,MAAGF,GAAG,KAAKM,SAAX,EAAsB;AAClBN,IAAAA,GAAG,GAAGK,MAAM,EAAZ;AACH,GAFD,MAEO,IAAGP,IAAH,EAAS;AACZ,QAAGJ,SAAS,CAACa,QAAV,IAAsB3B,SAAS,CAACoB,GAAD,CAAlC,EAAyC;AACrCA,MAAAA,GAAG,GAAGI,IAAI,CAACJ,GAAL,CAASA,GAAT,EAAcK,MAAM,EAApB,CAAN;AACH,KAFD,MAEO;AACHL,MAAAA,GAAG,GAAGK,MAAM,EAAZ;AACH;AACJ;;AAED,MAAGP,IAAI,IAAIG,GAAG,KAAKK,SAAnB,EAA8B;AAC1B,QAAGN,GAAG,GAAGC,GAAN,GAAYA,GAAG,GAAGF,GAArB,EAA0B;AACtBA,MAAAA,GAAG,GAAGE,GAAG,IAAID,GAAG,GAAGC,GAAV,CAAT;AACH,KAFD,MAEO,IAAGD,GAAG,GAAGC,GAAN,GAAYA,GAAG,GAAGF,GAArB,EAA0B;AAC7BC,MAAAA,GAAG,GAAGC,GAAG,IAAIA,GAAG,GAAGF,GAAV,CAAT;AACH;AACJ;;AAED,MAAGA,GAAG,KAAKC,GAAX,EAAgB;AACZD,IAAAA,GAAG,IAAI,GAAP;AACAC,IAAAA,GAAG,IAAI,GAAP;AACH;;AAEDH,EAAAA,KAAK,CAACW,KAAN,CAAY,KAAZ,EAAmBT,GAAnB;;AACAF,EAAAA,KAAK,CAACW,KAAN,CAAY,KAAZ,EAAmBR,GAAnB;;AAEA,MAAGH,KAAK,CAACY,cAAT,EAAyB;AACrB,QAAIC,GAAJ;AACA,QAAGX,GAAG,GAAGC,GAAN,GAAY,CAAf,EAAkBU,GAAG,GAAGpB,UAAU,CAACqB,UAAX,CAAsBC,SAA5B,CAAlB,KACK,IAAGb,GAAG,IAAI,CAAV,EAAaW,GAAG,GAAGpB,UAAU,CAACqB,UAAX,CAAsBE,UAA5B,CAAb,KACAH,GAAG,GAAGpB,UAAU,CAACqB,UAAX,CAAsBG,eAA5B;;AACLjB,IAAAA,KAAK,CAACW,KAAN,CAAY,YAAZ,EAA0BE,GAA1B;AACH;AACJ,CA7DD","sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar extractOpts = require('./helpers').extractOpts;\n\nmodule.exports = function calc(gd, trace, opts) {\n    var fullLayout = gd._fullLayout;\n    var vals = opts.vals;\n    var containerStr = opts.containerStr;\n\n    var container = containerStr ?\n        Lib.nestedProperty(trace, containerStr).get() :\n        trace;\n\n    var cOpts = extractOpts(container);\n    var auto = cOpts.auto !== false;\n    var min = cOpts.min;\n    var max = cOpts.max;\n    var mid = cOpts.mid;\n\n    var minVal = function() { return Lib.aggNums(Math.min, null, vals); };\n    var maxVal = function() { return Lib.aggNums(Math.max, null, vals); };\n\n    if(min === undefined) {\n        min = minVal();\n    } else if(auto) {\n        if(container._colorAx && isNumeric(min)) {\n            min = Math.min(min, minVal());\n        } else {\n            min = minVal();\n        }\n    }\n\n    if(max === undefined) {\n        max = maxVal();\n    } else if(auto) {\n        if(container._colorAx && isNumeric(max)) {\n            max = Math.max(max, maxVal());\n        } else {\n            max = maxVal();\n        }\n    }\n\n    if(auto && mid !== undefined) {\n        if(max - mid > mid - min) {\n            min = mid - (max - mid);\n        } else if(max - mid < mid - min) {\n            max = mid + (mid - min);\n        }\n    }\n\n    if(min === max) {\n        min -= 0.5;\n        max += 0.5;\n    }\n\n    cOpts._sync('min', min);\n    cOpts._sync('max', max);\n\n    if(cOpts.autocolorscale) {\n        var scl;\n        if(min * max < 0) scl = fullLayout.colorscale.diverging;\n        else if(min >= 0) scl = fullLayout.colorscale.sequential;\n        else scl = fullLayout.colorscale.sequentialminus;\n        cOpts._sync('colorscale', scl);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}