{"ast":null,"code":"'use strict';\n\nvar clamp = require('clamp');\n\nmodule.exports = calcSDF;\nvar INF = 1e20;\n\nfunction calcSDF(src, options) {\n  if (!options) options = {};\n  var cutoff = options.cutoff == null ? 0.25 : options.cutoff;\n  var radius = options.radius == null ? 8 : options.radius;\n  var channel = options.channel || 0;\n  var w, h, size, data, intData, stride, ctx, canvas, imgData, i, l; // handle image container\n\n  if (ArrayBuffer.isView(src) || Array.isArray(src)) {\n    if (!options.width || !options.height) throw Error('For raw data width and height should be provided by options');\n    w = options.width, h = options.height;\n    data = src;\n    if (!options.stride) stride = Math.floor(src.length / w / h);else stride = options.stride;\n  } else {\n    if (window.HTMLCanvasElement && src instanceof window.HTMLCanvasElement) {\n      canvas = src;\n      ctx = canvas.getContext('2d');\n      w = canvas.width, h = canvas.height;\n      imgData = ctx.getImageData(0, 0, w, h);\n      data = imgData.data;\n      stride = 4;\n    } else if (window.CanvasRenderingContext2D && src instanceof window.CanvasRenderingContext2D) {\n      canvas = src.canvas;\n      ctx = src;\n      w = canvas.width, h = canvas.height;\n      imgData = ctx.getImageData(0, 0, w, h);\n      data = imgData.data;\n      stride = 4;\n    } else if (window.ImageData && src instanceof window.ImageData) {\n      imgData = src;\n      w = src.width, h = src.height;\n      data = imgData.data;\n      stride = 4;\n    }\n  }\n\n  size = Math.max(w, h); //convert int data to floats\n\n  if (window.Uint8ClampedArray && data instanceof window.Uint8ClampedArray || window.Uint8Array && data instanceof window.Uint8Array) {\n    intData = data;\n    data = Array(w * h);\n\n    for (i = 0, l = intData.length; i < l; i++) {\n      data[i] = intData[i * stride + channel] / 255;\n    }\n  } else {\n    if (stride !== 1) throw Error('Raw data can have only 1 value per pixel');\n  } // temporary arrays for the distance transform\n\n\n  var gridOuter = Array(w * h);\n  var gridInner = Array(w * h);\n  var f = Array(size);\n  var d = Array(size);\n  var z = Array(size + 1);\n  var v = Array(size);\n\n  for (i = 0, l = w * h; i < l; i++) {\n    var a = data[i];\n    gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\n    gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\n  }\n\n  edt(gridOuter, w, h, f, d, v, z);\n  edt(gridInner, w, h, f, d, v, z);\n  var dist = window.Float32Array ? new Float32Array(w * h) : new Array(w * h);\n\n  for (i = 0, l = w * h; i < l; i++) {\n    dist[i] = clamp(1 - ((gridOuter[i] - gridInner[i]) / radius + cutoff), 0, 1);\n  }\n\n  return dist;\n} // 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/dt/\n\n\nfunction edt(data, width, height, f, d, v, z) {\n  for (var x = 0; x < width; x++) {\n    for (var y = 0; y < height; y++) {\n      f[y] = data[y * width + x];\n    }\n\n    edt1d(f, d, v, z, height);\n\n    for (y = 0; y < height; y++) {\n      data[y * width + x] = d[y];\n    }\n  }\n\n  for (y = 0; y < height; y++) {\n    for (x = 0; x < width; x++) {\n      f[x] = data[y * width + x];\n    }\n\n    edt1d(f, d, v, z, width);\n\n    for (x = 0; x < width; x++) {\n      data[y * width + x] = Math.sqrt(d[x]);\n    }\n  }\n} // 1D squared distance transform\n\n\nfunction edt1d(f, d, v, z, n) {\n  v[0] = 0;\n  z[0] = -INF;\n  z[1] = +INF;\n\n  for (var q = 1, k = 0; q < n; q++) {\n    var s = (f[q] + q * q - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\n\n    while (s <= z[k]) {\n      k--;\n      s = (f[q] + q * q - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\n    }\n\n    k++;\n    v[k] = q;\n    z[k] = s;\n    z[k + 1] = +INF;\n  }\n\n  for (q = 0, k = 0; q < n; q++) {\n    while (z[k + 1] < q) k++;\n\n    d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\n  }\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/bitmap-sdf/index.js"],"names":["clamp","require","module","exports","calcSDF","INF","src","options","cutoff","radius","channel","w","h","size","data","intData","stride","ctx","canvas","imgData","i","l","ArrayBuffer","isView","Array","isArray","width","height","Error","Math","floor","length","window","HTMLCanvasElement","getContext","getImageData","CanvasRenderingContext2D","ImageData","max","Uint8ClampedArray","Uint8Array","gridOuter","gridInner","f","d","z","v","a","pow","edt","dist","Float32Array","x","y","edt1d","sqrt","n","q","k","s"],"mappings":"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","sourcesContent":["'use strict'\r\n\r\nvar clamp = require('clamp')\r\n\r\nmodule.exports = calcSDF\r\n\r\nvar INF = 1e20;\r\n\r\nfunction calcSDF(src, options) {\r\n    if (!options) options = {}\r\n\r\n    var cutoff = options.cutoff == null ? 0.25 : options.cutoff\r\n    var radius = options.radius == null ? 8 : options.radius\r\n    var channel = options.channel || 0\r\n    var w, h, size, data, intData, stride, ctx, canvas, imgData, i, l\r\n\r\n    // handle image container\r\n    if (ArrayBuffer.isView(src) || Array.isArray(src)) {\r\n        if (!options.width || !options.height) throw Error('For raw data width and height should be provided by options')\r\n        w = options.width, h = options.height\r\n        data = src\r\n\r\n        if (!options.stride) stride = Math.floor(src.length / w / h)\r\n        else stride = options.stride\r\n    }\r\n    else {\r\n        if (window.HTMLCanvasElement && src instanceof window.HTMLCanvasElement) {\r\n            canvas = src\r\n            ctx = canvas.getContext('2d')\r\n            w = canvas.width, h = canvas.height\r\n            imgData = ctx.getImageData(0, 0, w, h)\r\n            data = imgData.data\r\n            stride = 4\r\n        }\r\n        else if (window.CanvasRenderingContext2D && src instanceof window.CanvasRenderingContext2D) {\r\n            canvas = src.canvas\r\n            ctx = src\r\n            w = canvas.width, h = canvas.height\r\n            imgData = ctx.getImageData(0, 0, w, h)\r\n            data = imgData.data\r\n            stride = 4\r\n        }\r\n        else if (window.ImageData && src instanceof window.ImageData) {\r\n            imgData = src\r\n            w = src.width, h = src.height\r\n            data = imgData.data\r\n            stride = 4\r\n        }\r\n    }\r\n\r\n    size = Math.max(w, h)\r\n\r\n    //convert int data to floats\r\n    if ((window.Uint8ClampedArray && data instanceof window.Uint8ClampedArray) || (window.Uint8Array && data instanceof window.Uint8Array)) {\r\n        intData = data\r\n        data = Array(w*h)\r\n\r\n        for (i = 0, l = intData.length; i < l; i++) {\r\n            data[i] = intData[i*stride + channel] / 255\r\n        }\r\n    }\r\n    else {\r\n        if (stride !== 1) throw Error('Raw data can have only 1 value per pixel')\r\n    }\r\n\r\n    // temporary arrays for the distance transform\r\n    var gridOuter = Array(w * h)\r\n    var gridInner = Array(w * h)\r\n    var f = Array(size)\r\n    var d = Array(size)\r\n    var z = Array(size + 1)\r\n    var v = Array(size)\r\n\r\n    for (i = 0, l = w * h; i < l; i++) {\r\n        var a = data[i]\r\n        gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2)\r\n        gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2)\r\n    }\r\n\r\n    edt(gridOuter, w, h, f, d, v, z)\r\n    edt(gridInner, w, h, f, d, v, z)\r\n\r\n    var dist = window.Float32Array ? new Float32Array(w * h) : new Array(w * h)\r\n\r\n    for (i = 0, l = w*h; i < l; i++) {\r\n        dist[i] = clamp(1 - ( (gridOuter[i] - gridInner[i]) / radius + cutoff), 0, 1)\r\n    }\r\n\r\n    return dist\r\n}\r\n\r\n// 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/dt/\r\nfunction edt(data, width, height, f, d, v, z) {\r\n    for (var x = 0; x < width; x++) {\r\n        for (var y = 0; y < height; y++) {\r\n            f[y] = data[y * width + x]\r\n        }\r\n        edt1d(f, d, v, z, height)\r\n        for (y = 0; y < height; y++) {\r\n            data[y * width + x] = d[y]\r\n        }\r\n    }\r\n    for (y = 0; y < height; y++) {\r\n        for (x = 0; x < width; x++) {\r\n            f[x] = data[y * width + x]\r\n        }\r\n        edt1d(f, d, v, z, width)\r\n        for (x = 0; x < width; x++) {\r\n            data[y * width + x] = Math.sqrt(d[x])\r\n        }\r\n    }\r\n}\r\n\r\n// 1D squared distance transform\r\nfunction edt1d(f, d, v, z, n) {\r\n    v[0] = 0;\r\n    z[0] = -INF\r\n    z[1] = +INF\r\n\r\n    for (var q = 1, k = 0; q < n; q++) {\r\n        var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k])\r\n        while (s <= z[k]) {\r\n            k--\r\n            s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k])\r\n        }\r\n        k++\r\n        v[k] = q\r\n        z[k] = s\r\n        z[k + 1] = +INF\r\n    }\r\n\r\n    for (q = 0, k = 0; q < n; q++) {\r\n        while (z[k + 1] < q) k++\r\n        d[q] = (q - v[k]) * (q - v[k]) + f[v[k]]\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}