{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar handleAnnotationCommonDefaults = require('./common_defaults');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n  handleArrayContainerDefaults(layoutIn, layoutOut, {\n    name: 'annotations',\n    handleItemDefaults: handleAnnotationDefaults\n  });\n};\n\nfunction handleAnnotationDefaults(annIn, annOut, fullLayout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(annIn, annOut, attributes, attr, dflt);\n  }\n\n  var visible = coerce('visible');\n  var clickToShow = coerce('clicktoshow');\n  if (!(visible || clickToShow)) return;\n  handleAnnotationCommonDefaults(annIn, annOut, fullLayout, coerce);\n  var showArrow = annOut.showarrow; // positioning\n\n  var axLetters = ['x', 'y'];\n  var arrowPosDflt = [-10, -30];\n  var gdMock = {\n    _fullLayout: fullLayout\n  };\n\n  for (var i = 0; i < 2; i++) {\n    var axLetter = axLetters[i]; // xref, yref\n\n    var axRef = Axes.coerceRef(annIn, annOut, gdMock, axLetter, '', 'paper');\n\n    if (axRef !== 'paper') {\n      var ax = Axes.getFromId(gdMock, axRef);\n\n      ax._annIndices.push(annOut._index);\n    } // x, y\n\n\n    Axes.coercePosition(annOut, gdMock, coerce, axRef, axLetter, 0.5);\n\n    if (showArrow) {\n      var arrowPosAttr = 'a' + axLetter; // axref, ayref\n\n      var aaxRef = Axes.coerceRef(annIn, annOut, gdMock, arrowPosAttr, 'pixel', ['pixel', 'paper']); // for now the arrow can only be on the same axis or specified as pixels\n      // TODO: sometime it might be interesting to allow it to be on *any* axis\n      // but that would require updates to drawing & autorange code and maybe more\n\n      if (aaxRef !== 'pixel' && aaxRef !== axRef) {\n        aaxRef = annOut[arrowPosAttr] = 'pixel';\n      } // ax, ay\n\n\n      var aDflt = aaxRef === 'pixel' ? arrowPosDflt[i] : 0.4;\n      Axes.coercePosition(annOut, gdMock, coerce, aaxRef, arrowPosAttr, aDflt);\n    } // xanchor, yanchor\n\n\n    coerce(axLetter + 'anchor'); // xshift, yshift\n\n    coerce(axLetter + 'shift');\n  } // if you have one coordinate you should have both\n\n\n  Lib.noneOrAll(annIn, annOut, ['x', 'y']); // if you have one part of arrow length you should have both\n\n  if (showArrow) {\n    Lib.noneOrAll(annIn, annOut, ['ax', 'ay']);\n  }\n\n  if (clickToShow) {\n    var xClick = coerce('xclick');\n    var yClick = coerce('yclick'); // put the actual click data to bind to into private attributes\n    // so we don't have to do this little bit of logic on every hover event\n\n    annOut._xclick = xClick === undefined ? annOut.x : Axes.cleanPosition(xClick, gdMock, annOut.xref);\n    annOut._yclick = yClick === undefined ? annOut.y : Axes.cleanPosition(yClick, gdMock, annOut.yref);\n  }\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/annotations/defaults.js"],"names":["Lib","require","Axes","handleArrayContainerDefaults","handleAnnotationCommonDefaults","attributes","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","name","handleItemDefaults","handleAnnotationDefaults","annIn","annOut","fullLayout","coerce","attr","dflt","visible","clickToShow","showArrow","showarrow","axLetters","arrowPosDflt","gdMock","_fullLayout","i","axLetter","axRef","coerceRef","ax","getFromId","_annIndices","push","_index","coercePosition","arrowPosAttr","aaxRef","aDflt","noneOrAll","xClick","yClick","_xclick","undefined","x","cleanPosition","xref","_yclick","y","yref"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar handleAnnotationCommonDefaults = require('./common_defaults');\nvar attributes = require('./attributes');\n\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n    handleArrayContainerDefaults(layoutIn, layoutOut, {\n        name: 'annotations',\n        handleItemDefaults: handleAnnotationDefaults\n    });\n};\n\nfunction handleAnnotationDefaults(annIn, annOut, fullLayout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(annIn, annOut, attributes, attr, dflt);\n    }\n\n    var visible = coerce('visible');\n    var clickToShow = coerce('clicktoshow');\n\n    if(!(visible || clickToShow)) return;\n\n    handleAnnotationCommonDefaults(annIn, annOut, fullLayout, coerce);\n\n    var showArrow = annOut.showarrow;\n\n    // positioning\n    var axLetters = ['x', 'y'];\n    var arrowPosDflt = [-10, -30];\n    var gdMock = {_fullLayout: fullLayout};\n\n    for(var i = 0; i < 2; i++) {\n        var axLetter = axLetters[i];\n\n        // xref, yref\n        var axRef = Axes.coerceRef(annIn, annOut, gdMock, axLetter, '', 'paper');\n\n        if(axRef !== 'paper') {\n            var ax = Axes.getFromId(gdMock, axRef);\n            ax._annIndices.push(annOut._index);\n        }\n\n        // x, y\n        Axes.coercePosition(annOut, gdMock, coerce, axRef, axLetter, 0.5);\n\n        if(showArrow) {\n            var arrowPosAttr = 'a' + axLetter;\n            // axref, ayref\n            var aaxRef = Axes.coerceRef(annIn, annOut, gdMock, arrowPosAttr, 'pixel',\n                    ['pixel', 'paper']);\n\n            // for now the arrow can only be on the same axis or specified as pixels\n            // TODO: sometime it might be interesting to allow it to be on *any* axis\n            // but that would require updates to drawing & autorange code and maybe more\n            if(aaxRef !== 'pixel' && aaxRef !== axRef) {\n                aaxRef = annOut[arrowPosAttr] = 'pixel';\n            }\n\n            // ax, ay\n            var aDflt = (aaxRef === 'pixel') ? arrowPosDflt[i] : 0.4;\n            Axes.coercePosition(annOut, gdMock, coerce, aaxRef, arrowPosAttr, aDflt);\n        }\n\n        // xanchor, yanchor\n        coerce(axLetter + 'anchor');\n\n        // xshift, yshift\n        coerce(axLetter + 'shift');\n    }\n\n    // if you have one coordinate you should have both\n    Lib.noneOrAll(annIn, annOut, ['x', 'y']);\n\n    // if you have one part of arrow length you should have both\n    if(showArrow) {\n        Lib.noneOrAll(annIn, annOut, ['ax', 'ay']);\n    }\n\n    if(clickToShow) {\n        var xClick = coerce('xclick');\n        var yClick = coerce('yclick');\n\n        // put the actual click data to bind to into private attributes\n        // so we don't have to do this little bit of logic on every hover event\n        annOut._xclick = (xClick === undefined) ?\n            annOut.x :\n            Axes.cleanPosition(xClick, gdMock, annOut.xref);\n        annOut._yclick = (yClick === undefined) ?\n            annOut.y :\n            Axes.cleanPosition(yClick, gdMock, annOut.yref);\n    }\n}\n"]},"metadata":{},"sourceType":"script"}