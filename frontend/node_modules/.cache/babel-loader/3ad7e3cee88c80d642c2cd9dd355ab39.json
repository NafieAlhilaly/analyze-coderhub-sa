{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar handleArrayContainerDefaults = require('../array_container_defaults');\n\nvar layoutAttributes = require('./layout_attributes');\n\nvar handleTickValueDefaults = require('./tick_value_defaults');\n\nvar handleTickMarkDefaults = require('./tick_mark_defaults');\n\nvar handleTickLabelDefaults = require('./tick_label_defaults');\n\nvar handleCategoryOrderDefaults = require('./category_order_defaults');\n\nvar handleLineGridDefaults = require('./line_grid_defaults');\n\nvar setConvert = require('./set_convert');\n\nvar DAY_OF_WEEK = require('./constants').WEEKDAY_PATTERN;\n\nvar HOUR = require('./constants').HOUR_PATTERN;\n/**\n * options: object containing:\n *\n *  letter: 'x' or 'y'\n *  title: name of the axis (ie 'Colorbar') to go in default title\n *  font: the default font to inherit\n *  outerTicks: boolean, should ticks default to outside?\n *  showGrid: boolean, should gridlines be shown by default?\n *  noHover: boolean, this axis doesn't support hover effects?\n *  noTickson: boolean, this axis doesn't support 'tickson'\n *  data: the plot data, used to manage categories\n *  bgColor: the plot background color, to calculate default gridline colors\n *  calendar:\n *  splomStash:\n *  visibleDflt: boolean\n *  reverseDflt: boolean\n *  automargin: boolean\n */\n\n\nmodule.exports = function handleAxisDefaults(containerIn, containerOut, coerce, options, layoutOut) {\n  var letter = options.letter;\n  var font = options.font || {};\n  var splomStash = options.splomStash || {};\n  var visible = coerce('visible', !options.visibleDflt);\n  var axTemplate = containerOut._template || {};\n  var axType = containerOut.type || axTemplate.type || '-';\n  var ticklabelmode;\n\n  if (axType === 'date') {\n    var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleDefaults');\n    handleCalendarDefaults(containerIn, containerOut, 'calendar', options.calendar);\n\n    if (!options.noTicklabelmode) {\n      ticklabelmode = coerce('ticklabelmode');\n    }\n  }\n\n  var ticklabelposition = '';\n\n  if (!options.noTicklabelposition || axType === 'multicategory') {\n    ticklabelposition = Lib.coerce(containerIn, containerOut, {\n      ticklabelposition: {\n        valType: 'enumerated',\n        dflt: 'outside',\n        values: ticklabelmode === 'period' ? ['outside', 'inside'] : letter === 'x' ? ['outside', 'inside', 'outside left', 'inside left', 'outside right', 'inside right'] : ['outside', 'inside', 'outside top', 'inside top', 'outside bottom', 'inside bottom']\n      }\n    }, 'ticklabelposition');\n  }\n\n  if (!options.noTicklabeloverflow) {\n    coerce('ticklabeloverflow', ticklabelposition.indexOf('inside') !== -1 ? 'hide past domain' : axType === 'category' || axType === 'multicategory' ? 'allow' : 'hide past div');\n  }\n\n  setConvert(containerOut, layoutOut);\n  var autorangeDflt = !containerOut.isValidRange(containerIn.range);\n  if (autorangeDflt && options.reverseDflt) autorangeDflt = 'reversed';\n  var autoRange = coerce('autorange', autorangeDflt);\n  if (autoRange && (axType === 'linear' || axType === '-')) coerce('rangemode');\n  coerce('range');\n  containerOut.cleanRange();\n  handleCategoryOrderDefaults(containerIn, containerOut, coerce, options);\n  if (axType !== 'category' && !options.noHover) coerce('hoverformat');\n  var dfltColor = coerce('color'); // if axis.color was provided, use it for fonts too; otherwise,\n  // inherit from global font color in case that was provided.\n  // Compare to dflt rather than to containerIn, so we can provide color via\n  // template too.\n\n  var dfltFontColor = dfltColor !== layoutAttributes.color.dflt ? dfltColor : font.color; // try to get default title from splom trace, fallback to graph-wide value\n\n  var dfltTitle = splomStash.label || layoutOut._dfltTitle[letter];\n  handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options, {\n    pass: 1\n  });\n  if (!visible) return containerOut;\n  coerce('title.text', dfltTitle);\n  Lib.coerceFont(coerce, 'title.font', {\n    family: font.family,\n    size: Lib.bigFont(font.size),\n    color: dfltFontColor\n  });\n  handleTickValueDefaults(containerIn, containerOut, coerce, axType);\n  handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options, {\n    pass: 2\n  });\n  handleTickMarkDefaults(containerIn, containerOut, coerce, options);\n  handleLineGridDefaults(containerIn, containerOut, coerce, {\n    dfltColor: dfltColor,\n    bgColor: options.bgColor,\n    showGrid: options.showGrid,\n    attributes: layoutAttributes\n  });\n  if (containerOut.showline || containerOut.ticks) coerce('mirror');\n  if (options.automargin) coerce('automargin');\n  var isMultiCategory = axType === 'multicategory';\n\n  if (!options.noTickson && (axType === 'category' || isMultiCategory) && (containerOut.ticks || containerOut.showgrid)) {\n    var ticksonDflt;\n    if (isMultiCategory) ticksonDflt = 'boundaries';\n    var tickson = coerce('tickson', ticksonDflt);\n\n    if (tickson === 'boundaries') {\n      delete containerOut.ticklabelposition;\n    }\n  }\n\n  if (isMultiCategory) {\n    var showDividers = coerce('showdividers');\n\n    if (showDividers) {\n      coerce('dividercolor');\n      coerce('dividerwidth');\n    }\n  }\n\n  if (axType === 'date') {\n    handleArrayContainerDefaults(containerIn, containerOut, {\n      name: 'rangebreaks',\n      inclusionAttr: 'enabled',\n      handleItemDefaults: rangebreaksDefaults\n    });\n\n    if (!containerOut.rangebreaks.length) {\n      delete containerOut.rangebreaks;\n    } else {\n      for (var k = 0; k < containerOut.rangebreaks.length; k++) {\n        if (containerOut.rangebreaks[k].pattern === DAY_OF_WEEK) {\n          containerOut._hasDayOfWeekBreaks = true;\n          break;\n        }\n      }\n\n      setConvert(containerOut, layoutOut);\n\n      if (layoutOut._has('scattergl') || layoutOut._has('splom')) {\n        for (var i = 0; i < options.data.length; i++) {\n          var trace = options.data[i];\n\n          if (trace.type === 'scattergl' || trace.type === 'splom') {\n            trace.visible = false;\n            Lib.warn(trace.type + ' traces do not work on axes with rangebreaks.' + ' Setting trace ' + trace.index + ' to `visible: false`.');\n          }\n        }\n      }\n    }\n  }\n\n  return containerOut;\n};\n\nfunction rangebreaksDefaults(itemIn, itemOut, containerOut) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(itemIn, itemOut, layoutAttributes.rangebreaks, attr, dflt);\n  }\n\n  var enabled = coerce('enabled');\n\n  if (enabled) {\n    var bnds = coerce('bounds');\n\n    if (bnds && bnds.length >= 2) {\n      var dfltPattern = '';\n      var i, q;\n\n      if (bnds.length === 2) {\n        for (i = 0; i < 2; i++) {\n          q = indexOfDay(bnds[i]);\n\n          if (q) {\n            dfltPattern = DAY_OF_WEEK;\n            break;\n          }\n        }\n      }\n\n      var pattern = coerce('pattern', dfltPattern);\n\n      if (pattern === DAY_OF_WEEK) {\n        for (i = 0; i < 2; i++) {\n          q = indexOfDay(bnds[i]);\n\n          if (q) {\n            // convert to integers i.e 'Sunday' --> 0\n            itemOut.bounds[i] = bnds[i] = q - 1;\n          }\n        }\n      }\n\n      if (pattern) {\n        // ensure types and ranges\n        for (i = 0; i < 2; i++) {\n          q = bnds[i];\n\n          switch (pattern) {\n            case DAY_OF_WEEK:\n              if (!isNumeric(q)) {\n                itemOut.enabled = false;\n                return;\n              }\n\n              q = +q;\n\n              if (q !== Math.floor(q) || // don't accept fractional days for mow\n              q < 0 || q >= 7) {\n                itemOut.enabled = false;\n                return;\n              } // use number\n\n\n              itemOut.bounds[i] = bnds[i] = q;\n              break;\n\n            case HOUR:\n              if (!isNumeric(q)) {\n                itemOut.enabled = false;\n                return;\n              }\n\n              q = +q;\n\n              if (q < 0 || q > 24) {\n                // accept 24\n                itemOut.enabled = false;\n                return;\n              } // use number\n\n\n              itemOut.bounds[i] = bnds[i] = q;\n              break;\n          }\n        }\n      }\n\n      if (containerOut.autorange === false) {\n        var rng = containerOut.range; // if bounds are bigger than the (set) range, disable break\n\n        if (rng[0] < rng[1]) {\n          if (bnds[0] < rng[0] && bnds[1] > rng[1]) {\n            itemOut.enabled = false;\n            return;\n          }\n        } else if (bnds[0] > rng[0] && bnds[1] < rng[1]) {\n          itemOut.enabled = false;\n          return;\n        }\n      }\n    } else {\n      var values = coerce('values');\n\n      if (values && values.length) {\n        coerce('dvalue');\n      } else {\n        itemOut.enabled = false;\n        return;\n      }\n    }\n  }\n} // these numbers are one more than what bounds would be mapped to\n\n\nvar dayStrToNum = {\n  sun: 1,\n  mon: 2,\n  tue: 3,\n  wed: 4,\n  thu: 5,\n  fri: 6,\n  sat: 7\n};\n\nfunction indexOfDay(v) {\n  if (typeof v !== 'string') return;\n  return dayStrToNum[v.substr(0, 3).toLowerCase()];\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/plots/cartesian/axis_defaults.js"],"names":["isNumeric","require","Registry","Lib","handleArrayContainerDefaults","layoutAttributes","handleTickValueDefaults","handleTickMarkDefaults","handleTickLabelDefaults","handleCategoryOrderDefaults","handleLineGridDefaults","setConvert","DAY_OF_WEEK","WEEKDAY_PATTERN","HOUR","HOUR_PATTERN","module","exports","handleAxisDefaults","containerIn","containerOut","coerce","options","layoutOut","letter","font","splomStash","visible","visibleDflt","axTemplate","_template","axType","type","ticklabelmode","handleCalendarDefaults","getComponentMethod","calendar","noTicklabelmode","ticklabelposition","noTicklabelposition","valType","dflt","values","noTicklabeloverflow","indexOf","autorangeDflt","isValidRange","range","reverseDflt","autoRange","cleanRange","noHover","dfltColor","dfltFontColor","color","dfltTitle","label","_dfltTitle","pass","coerceFont","family","size","bigFont","bgColor","showGrid","attributes","showline","ticks","automargin","isMultiCategory","noTickson","showgrid","ticksonDflt","tickson","showDividers","name","inclusionAttr","handleItemDefaults","rangebreaksDefaults","rangebreaks","length","k","pattern","_hasDayOfWeekBreaks","_has","i","data","trace","warn","index","itemIn","itemOut","attr","enabled","bnds","dfltPattern","q","indexOfDay","bounds","Math","floor","autorange","rng","dayStrToNum","sun","mon","tue","wed","thu","fri","sat","v","substr","toLowerCase"],"mappings":"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","sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\n\nvar handleArrayContainerDefaults = require('../array_container_defaults');\n\nvar layoutAttributes = require('./layout_attributes');\nvar handleTickValueDefaults = require('./tick_value_defaults');\nvar handleTickMarkDefaults = require('./tick_mark_defaults');\nvar handleTickLabelDefaults = require('./tick_label_defaults');\nvar handleCategoryOrderDefaults = require('./category_order_defaults');\nvar handleLineGridDefaults = require('./line_grid_defaults');\nvar setConvert = require('./set_convert');\n\nvar DAY_OF_WEEK = require('./constants').WEEKDAY_PATTERN;\nvar HOUR = require('./constants').HOUR_PATTERN;\n\n/**\n * options: object containing:\n *\n *  letter: 'x' or 'y'\n *  title: name of the axis (ie 'Colorbar') to go in default title\n *  font: the default font to inherit\n *  outerTicks: boolean, should ticks default to outside?\n *  showGrid: boolean, should gridlines be shown by default?\n *  noHover: boolean, this axis doesn't support hover effects?\n *  noTickson: boolean, this axis doesn't support 'tickson'\n *  data: the plot data, used to manage categories\n *  bgColor: the plot background color, to calculate default gridline colors\n *  calendar:\n *  splomStash:\n *  visibleDflt: boolean\n *  reverseDflt: boolean\n *  automargin: boolean\n */\nmodule.exports = function handleAxisDefaults(containerIn, containerOut, coerce, options, layoutOut) {\n    var letter = options.letter;\n    var font = options.font || {};\n    var splomStash = options.splomStash || {};\n\n    var visible = coerce('visible', !options.visibleDflt);\n\n    var axTemplate = containerOut._template || {};\n    var axType = containerOut.type || axTemplate.type || '-';\n\n    var ticklabelmode;\n    if(axType === 'date') {\n        var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleDefaults');\n        handleCalendarDefaults(containerIn, containerOut, 'calendar', options.calendar);\n\n        if(!options.noTicklabelmode) {\n            ticklabelmode = coerce('ticklabelmode');\n        }\n    }\n\n    var ticklabelposition = '';\n    if(!options.noTicklabelposition || axType === 'multicategory') {\n        ticklabelposition = Lib.coerce(containerIn, containerOut, {\n            ticklabelposition: {\n                valType: 'enumerated',\n                dflt: 'outside',\n                values: ticklabelmode === 'period' ? ['outside', 'inside'] :\n                letter === 'x' ? [\n                    'outside', 'inside',\n                    'outside left', 'inside left',\n                    'outside right', 'inside right'\n                ] : [\n                    'outside', 'inside',\n                    'outside top', 'inside top',\n                    'outside bottom', 'inside bottom'\n                ]\n            }\n        }, 'ticklabelposition');\n    }\n\n    if(!options.noTicklabeloverflow) {\n        coerce('ticklabeloverflow',\n            ticklabelposition.indexOf('inside') !== -1 ?\n                'hide past domain' :\n            axType === 'category' ||\n            axType === 'multicategory' ?\n                'allow' :\n                'hide past div'\n        );\n    }\n\n    setConvert(containerOut, layoutOut);\n\n    var autorangeDflt = !containerOut.isValidRange(containerIn.range);\n    if(autorangeDflt && options.reverseDflt) autorangeDflt = 'reversed';\n    var autoRange = coerce('autorange', autorangeDflt);\n    if(autoRange && (axType === 'linear' || axType === '-')) coerce('rangemode');\n\n    coerce('range');\n    containerOut.cleanRange();\n\n    handleCategoryOrderDefaults(containerIn, containerOut, coerce, options);\n\n    if(axType !== 'category' && !options.noHover) coerce('hoverformat');\n\n    var dfltColor = coerce('color');\n    // if axis.color was provided, use it for fonts too; otherwise,\n    // inherit from global font color in case that was provided.\n    // Compare to dflt rather than to containerIn, so we can provide color via\n    // template too.\n    var dfltFontColor = (dfltColor !== layoutAttributes.color.dflt) ? dfltColor : font.color;\n    // try to get default title from splom trace, fallback to graph-wide value\n    var dfltTitle = splomStash.label || layoutOut._dfltTitle[letter];\n\n    handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options, {pass: 1});\n    if(!visible) return containerOut;\n\n    coerce('title.text', dfltTitle);\n    Lib.coerceFont(coerce, 'title.font', {\n        family: font.family,\n        size: Lib.bigFont(font.size),\n        color: dfltFontColor\n    });\n\n    handleTickValueDefaults(containerIn, containerOut, coerce, axType);\n    handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options, {pass: 2});\n    handleTickMarkDefaults(containerIn, containerOut, coerce, options);\n    handleLineGridDefaults(containerIn, containerOut, coerce, {\n        dfltColor: dfltColor,\n        bgColor: options.bgColor,\n        showGrid: options.showGrid,\n        attributes: layoutAttributes\n    });\n\n    if(containerOut.showline || containerOut.ticks) coerce('mirror');\n\n    if(options.automargin) coerce('automargin');\n\n    var isMultiCategory = axType === 'multicategory';\n\n    if(!options.noTickson &&\n        (axType === 'category' || isMultiCategory) &&\n        (containerOut.ticks || containerOut.showgrid)\n    ) {\n        var ticksonDflt;\n        if(isMultiCategory) ticksonDflt = 'boundaries';\n        var tickson = coerce('tickson', ticksonDflt);\n        if(tickson === 'boundaries') {\n            delete containerOut.ticklabelposition;\n        }\n    }\n\n    if(isMultiCategory) {\n        var showDividers = coerce('showdividers');\n        if(showDividers) {\n            coerce('dividercolor');\n            coerce('dividerwidth');\n        }\n    }\n\n    if(axType === 'date') {\n        handleArrayContainerDefaults(containerIn, containerOut, {\n            name: 'rangebreaks',\n            inclusionAttr: 'enabled',\n            handleItemDefaults: rangebreaksDefaults\n        });\n\n        if(!containerOut.rangebreaks.length) {\n            delete containerOut.rangebreaks;\n        } else {\n            for(var k = 0; k < containerOut.rangebreaks.length; k++) {\n                if(containerOut.rangebreaks[k].pattern === DAY_OF_WEEK) {\n                    containerOut._hasDayOfWeekBreaks = true;\n                    break;\n                }\n            }\n\n            setConvert(containerOut, layoutOut);\n\n            if(layoutOut._has('scattergl') || layoutOut._has('splom')) {\n                for(var i = 0; i < options.data.length; i++) {\n                    var trace = options.data[i];\n                    if(trace.type === 'scattergl' || trace.type === 'splom') {\n                        trace.visible = false;\n                        Lib.warn(trace.type +\n                            ' traces do not work on axes with rangebreaks.' +\n                            ' Setting trace ' + trace.index + ' to `visible: false`.');\n                    }\n                }\n            }\n        }\n    }\n\n    return containerOut;\n};\n\nfunction rangebreaksDefaults(itemIn, itemOut, containerOut) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(itemIn, itemOut, layoutAttributes.rangebreaks, attr, dflt);\n    }\n\n    var enabled = coerce('enabled');\n\n    if(enabled) {\n        var bnds = coerce('bounds');\n        if(bnds && bnds.length >= 2) {\n            var dfltPattern = '';\n            var i, q;\n            if(bnds.length === 2) {\n                for(i = 0; i < 2; i++) {\n                    q = indexOfDay(bnds[i]);\n                    if(q) {\n                        dfltPattern = DAY_OF_WEEK;\n                        break;\n                    }\n                }\n            }\n            var pattern = coerce('pattern', dfltPattern);\n            if(pattern === DAY_OF_WEEK) {\n                for(i = 0; i < 2; i++) {\n                    q = indexOfDay(bnds[i]);\n                    if(q) {\n                        // convert to integers i.e 'Sunday' --> 0\n                        itemOut.bounds[i] = bnds[i] = q - 1;\n                    }\n                }\n            }\n            if(pattern) {\n                // ensure types and ranges\n                for(i = 0; i < 2; i++) {\n                    q = bnds[i];\n                    switch(pattern) {\n                        case DAY_OF_WEEK :\n                            if(!isNumeric(q)) {\n                                itemOut.enabled = false;\n                                return;\n                            }\n                            q = +q;\n\n                            if(\n                                q !== Math.floor(q) || // don't accept fractional days for mow\n                                q < 0 || q >= 7\n                            ) {\n                                itemOut.enabled = false;\n                                return;\n                            }\n                            // use number\n                            itemOut.bounds[i] = bnds[i] = q;\n                            break;\n\n                        case HOUR :\n                            if(!isNumeric(q)) {\n                                itemOut.enabled = false;\n                                return;\n                            }\n                            q = +q;\n\n                            if(q < 0 || q > 24) { // accept 24\n                                itemOut.enabled = false;\n                                return;\n                            }\n                            // use number\n                            itemOut.bounds[i] = bnds[i] = q;\n                            break;\n                    }\n                }\n            }\n\n            if(containerOut.autorange === false) {\n                var rng = containerOut.range;\n\n                // if bounds are bigger than the (set) range, disable break\n                if(rng[0] < rng[1]) {\n                    if(bnds[0] < rng[0] && bnds[1] > rng[1]) {\n                        itemOut.enabled = false;\n                        return;\n                    }\n                } else if(bnds[0] > rng[0] && bnds[1] < rng[1]) {\n                    itemOut.enabled = false;\n                    return;\n                }\n            }\n        } else {\n            var values = coerce('values');\n\n            if(values && values.length) {\n                coerce('dvalue');\n            } else {\n                itemOut.enabled = false;\n                return;\n            }\n        }\n    }\n}\n\n// these numbers are one more than what bounds would be mapped to\nvar dayStrToNum = {\n    sun: 1,\n    mon: 2,\n    tue: 3,\n    wed: 4,\n    thu: 5,\n    fri: 6,\n    sat: 7\n};\n\nfunction indexOfDay(v) {\n    if(typeof v !== 'string') return;\n    return dayStrToNum[\n        v.substr(0, 3).toLowerCase()\n    ];\n}\n"]},"metadata":{},"sourceType":"script"}