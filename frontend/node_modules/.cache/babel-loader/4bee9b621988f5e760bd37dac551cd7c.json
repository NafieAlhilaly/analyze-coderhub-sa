{"ast":null,"code":"'use strict';\n\nvar bsearch = require('binary-search-bounds');\n\nvar m4interp = require('mat4-interpolate');\n\nvar invert44 = require('gl-mat4/invert');\n\nvar rotateX = require('gl-mat4/rotateX');\n\nvar rotateY = require('gl-mat4/rotateY');\n\nvar rotateZ = require('gl-mat4/rotateZ');\n\nvar lookAt = require('gl-mat4/lookAt');\n\nvar translate = require('gl-mat4/translate');\n\nvar scale = require('gl-mat4/scale');\n\nvar normalize = require('gl-vec3/normalize');\n\nvar DEFAULT_CENTER = [0, 0, 0];\nmodule.exports = createMatrixCameraController;\n\nfunction MatrixCameraController(initialMatrix) {\n  this._components = initialMatrix.slice();\n  this._time = [0];\n  this.prevMatrix = initialMatrix.slice();\n  this.nextMatrix = initialMatrix.slice();\n  this.computedMatrix = initialMatrix.slice();\n  this.computedInverse = initialMatrix.slice();\n  this.computedEye = [0, 0, 0];\n  this.computedUp = [0, 0, 0];\n  this.computedCenter = [0, 0, 0];\n  this.computedRadius = [0];\n  this._limits = [-Infinity, Infinity];\n}\n\nvar proto = MatrixCameraController.prototype;\n\nproto.recalcMatrix = function (t) {\n  var time = this._time;\n  var tidx = bsearch.le(time, t);\n  var mat = this.computedMatrix;\n\n  if (tidx < 0) {\n    return;\n  }\n\n  var comps = this._components;\n\n  if (tidx === time.length - 1) {\n    var ptr = 16 * tidx;\n\n    for (var i = 0; i < 16; ++i) {\n      mat[i] = comps[ptr++];\n    }\n  } else {\n    var dt = time[tidx + 1] - time[tidx];\n    var ptr = 16 * tidx;\n    var prev = this.prevMatrix;\n    var allEqual = true;\n\n    for (var i = 0; i < 16; ++i) {\n      prev[i] = comps[ptr++];\n    }\n\n    var next = this.nextMatrix;\n\n    for (var i = 0; i < 16; ++i) {\n      next[i] = comps[ptr++];\n      allEqual = allEqual && prev[i] === next[i];\n    }\n\n    if (dt < 1e-6 || allEqual) {\n      for (var i = 0; i < 16; ++i) {\n        mat[i] = prev[i];\n      }\n    } else {\n      m4interp(mat, prev, next, (t - time[tidx]) / dt);\n    }\n  }\n\n  var up = this.computedUp;\n  up[0] = mat[1];\n  up[1] = mat[5];\n  up[2] = mat[9];\n  normalize(up, up);\n  var imat = this.computedInverse;\n  invert44(imat, mat);\n  var eye = this.computedEye;\n  var w = imat[15];\n  eye[0] = imat[12] / w;\n  eye[1] = imat[13] / w;\n  eye[2] = imat[14] / w;\n  var center = this.computedCenter;\n  var radius = Math.exp(this.computedRadius[0]);\n\n  for (var i = 0; i < 3; ++i) {\n    center[i] = eye[i] - mat[2 + 4 * i] * radius;\n  }\n};\n\nproto.idle = function (t) {\n  if (t < this.lastT()) {\n    return;\n  }\n\n  var mc = this._components;\n  var ptr = mc.length - 16;\n\n  for (var i = 0; i < 16; ++i) {\n    mc.push(mc[ptr++]);\n  }\n\n  this._time.push(t);\n};\n\nproto.flush = function (t) {\n  var idx = bsearch.gt(this._time, t) - 2;\n\n  if (idx < 0) {\n    return;\n  }\n\n  this._time.splice(0, idx);\n\n  this._components.splice(0, 16 * idx);\n};\n\nproto.lastT = function () {\n  return this._time[this._time.length - 1];\n};\n\nproto.lookAt = function (t, eye, center, up) {\n  this.recalcMatrix(t);\n  eye = eye || this.computedEye;\n  center = center || DEFAULT_CENTER;\n  up = up || this.computedUp;\n  this.setMatrix(t, lookAt(this.computedMatrix, eye, center, up));\n  var d2 = 0.0;\n\n  for (var i = 0; i < 3; ++i) {\n    d2 += Math.pow(center[i] - eye[i], 2);\n  }\n\n  d2 = Math.log(Math.sqrt(d2));\n  this.computedRadius[0] = d2;\n};\n\nproto.rotate = function (t, yaw, pitch, roll) {\n  this.recalcMatrix(t);\n  var mat = this.computedInverse;\n  if (yaw) rotateY(mat, mat, yaw);\n  if (pitch) rotateX(mat, mat, pitch);\n  if (roll) rotateZ(mat, mat, roll);\n  this.setMatrix(t, invert44(this.computedMatrix, mat));\n};\n\nvar tvec = [0, 0, 0];\n\nproto.pan = function (t, dx, dy, dz) {\n  tvec[0] = -(dx || 0.0);\n  tvec[1] = -(dy || 0.0);\n  tvec[2] = -(dz || 0.0);\n  this.recalcMatrix(t);\n  var mat = this.computedInverse;\n  translate(mat, mat, tvec);\n  this.setMatrix(t, invert44(mat, mat));\n};\n\nproto.translate = function (t, dx, dy, dz) {\n  tvec[0] = dx || 0.0;\n  tvec[1] = dy || 0.0;\n  tvec[2] = dz || 0.0;\n  this.recalcMatrix(t);\n  var mat = this.computedMatrix;\n  translate(mat, mat, tvec);\n  this.setMatrix(t, mat);\n};\n\nproto.setMatrix = function (t, mat) {\n  if (t < this.lastT()) {\n    return;\n  }\n\n  this._time.push(t);\n\n  for (var i = 0; i < 16; ++i) {\n    this._components.push(mat[i]);\n  }\n};\n\nproto.setDistance = function (t, d) {\n  this.computedRadius[0] = d;\n};\n\nproto.setDistanceLimits = function (a, b) {\n  var lim = this._limits;\n  lim[0] = a;\n  lim[1] = b;\n};\n\nproto.getDistanceLimits = function (out) {\n  var lim = this._limits;\n\n  if (out) {\n    out[0] = lim[0];\n    out[1] = lim[1];\n    return out;\n  }\n\n  return lim;\n};\n\nfunction createMatrixCameraController(options) {\n  options = options || {};\n  var matrix = options.matrix || [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n  return new MatrixCameraController(matrix);\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/matrix-camera-controller/matrix.js"],"names":["bsearch","require","m4interp","invert44","rotateX","rotateY","rotateZ","lookAt","translate","scale","normalize","DEFAULT_CENTER","module","exports","createMatrixCameraController","MatrixCameraController","initialMatrix","_components","slice","_time","prevMatrix","nextMatrix","computedMatrix","computedInverse","computedEye","computedUp","computedCenter","computedRadius","_limits","Infinity","proto","prototype","recalcMatrix","t","time","tidx","le","mat","comps","length","ptr","i","dt","prev","allEqual","next","up","imat","eye","w","center","radius","Math","exp","idle","lastT","mc","push","flush","idx","gt","splice","setMatrix","d2","pow","log","sqrt","rotate","yaw","pitch","roll","tvec","pan","dx","dy","dz","setDistance","d","setDistanceLimits","a","b","lim","getDistanceLimits","out","options","matrix"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAKC,OAAO,CAAC,sBAAD,CAAvB;;AACA,IAAIC,QAAQ,GAAID,OAAO,CAAC,kBAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAIF,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAIG,OAAO,GAAKH,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAII,OAAO,GAAKJ,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAIK,OAAO,GAAKL,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAIM,MAAM,GAAMN,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAIO,SAAS,GAAGP,OAAO,CAAC,mBAAD,CAAvB;;AACA,IAAIQ,KAAK,GAAOR,OAAO,CAAC,eAAD,CAAvB;;AACA,IAAIS,SAAS,GAAGT,OAAO,CAAC,mBAAD,CAAvB;;AAEA,IAAIU,cAAc,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAArB;AAEAC,MAAM,CAACC,OAAP,GAAiBC,4BAAjB;;AAEA,SAASC,sBAAT,CAAgCC,aAAhC,EAA+C;AAC7C,OAAKC,WAAL,GAAsBD,aAAa,CAACE,KAAd,EAAtB;AACA,OAAKC,KAAL,GAAsB,CAAC,CAAD,CAAtB;AACA,OAAKC,UAAL,GAAsBJ,aAAa,CAACE,KAAd,EAAtB;AACA,OAAKG,UAAL,GAAsBL,aAAa,CAACE,KAAd,EAAtB;AACA,OAAKI,cAAL,GAAsBN,aAAa,CAACE,KAAd,EAAtB;AACA,OAAKK,eAAL,GAAuBP,aAAa,CAACE,KAAd,EAAvB;AACA,OAAKM,WAAL,GAAsB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAtB;AACA,OAAKC,UAAL,GAAsB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAtB;AACA,OAAKC,cAAL,GAAsB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAtB;AACA,OAAKC,cAAL,GAAsB,CAAC,CAAD,CAAtB;AACA,OAAKC,OAAL,GAAsB,CAAC,CAACC,QAAF,EAAYA,QAAZ,CAAtB;AACD;;AAED,IAAIC,KAAK,GAAGf,sBAAsB,CAACgB,SAAnC;;AAEAD,KAAK,CAACE,YAAN,GAAqB,UAASC,CAAT,EAAY;AAC/B,MAAIC,IAAI,GAAG,KAAKf,KAAhB;AACA,MAAIgB,IAAI,GAAGnC,OAAO,CAACoC,EAAR,CAAWF,IAAX,EAAiBD,CAAjB,CAAX;AACA,MAAII,GAAG,GAAG,KAAKf,cAAf;;AACA,MAAGa,IAAI,GAAG,CAAV,EAAa;AACX;AACD;;AACD,MAAIG,KAAK,GAAG,KAAKrB,WAAjB;;AACA,MAAGkB,IAAI,KAAKD,IAAI,CAACK,MAAL,GAAY,CAAxB,EAA2B;AACzB,QAAIC,GAAG,GAAG,KAAGL,IAAb;;AACA,SAAI,IAAIM,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,EAAf,EAAmB,EAAEA,CAArB,EAAwB;AACtBJ,MAAAA,GAAG,CAACI,CAAD,CAAH,GAASH,KAAK,CAACE,GAAG,EAAJ,CAAd;AACD;AACF,GALD,MAKO;AACL,QAAIE,EAAE,GAAIR,IAAI,CAACC,IAAI,GAAC,CAAN,CAAJ,GAAeD,IAAI,CAACC,IAAD,CAA7B;AACA,QAAIK,GAAG,GAAG,KAAGL,IAAb;AACA,QAAIQ,IAAI,GAAG,KAAKvB,UAAhB;AACA,QAAIwB,QAAQ,GAAG,IAAf;;AACA,SAAI,IAAIH,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,EAAf,EAAmB,EAAEA,CAArB,EAAwB;AACtBE,MAAAA,IAAI,CAACF,CAAD,CAAJ,GAAUH,KAAK,CAACE,GAAG,EAAJ,CAAf;AACD;;AACD,QAAIK,IAAI,GAAG,KAAKxB,UAAhB;;AACA,SAAI,IAAIoB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,EAAf,EAAmB,EAAEA,CAArB,EAAwB;AACtBI,MAAAA,IAAI,CAACJ,CAAD,CAAJ,GAAUH,KAAK,CAACE,GAAG,EAAJ,CAAf;AACAI,MAAAA,QAAQ,GAAGA,QAAQ,IAAKD,IAAI,CAACF,CAAD,CAAJ,KAAYI,IAAI,CAACJ,CAAD,CAAxC;AACD;;AACD,QAAGC,EAAE,GAAG,IAAL,IAAaE,QAAhB,EAA0B;AACxB,WAAI,IAAIH,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,EAAf,EAAmB,EAAEA,CAArB,EAAwB;AACtBJ,QAAAA,GAAG,CAACI,CAAD,CAAH,GAASE,IAAI,CAACF,CAAD,CAAb;AACD;AACF,KAJD,MAIO;AACLvC,MAAAA,QAAQ,CAACmC,GAAD,EAAMM,IAAN,EAAYE,IAAZ,EAAkB,CAACZ,CAAC,GAAGC,IAAI,CAACC,IAAD,CAAT,IAAiBO,EAAnC,CAAR;AACD;AACF;;AAED,MAAII,EAAE,GAAG,KAAKrB,UAAd;AACAqB,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQT,GAAG,CAAC,CAAD,CAAX;AACAS,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQT,GAAG,CAAC,CAAD,CAAX;AACAS,EAAAA,EAAE,CAAC,CAAD,CAAF,GAAQT,GAAG,CAAC,CAAD,CAAX;AACA3B,EAAAA,SAAS,CAACoC,EAAD,EAAKA,EAAL,CAAT;AAEA,MAAIC,IAAI,GAAG,KAAKxB,eAAhB;AACApB,EAAAA,QAAQ,CAAC4C,IAAD,EAAOV,GAAP,CAAR;AACA,MAAIW,GAAG,GAAG,KAAKxB,WAAf;AACA,MAAIyB,CAAC,GAAGF,IAAI,CAAC,EAAD,CAAZ;AACAC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASD,IAAI,CAAC,EAAD,CAAJ,GAASE,CAAlB;AACAD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASD,IAAI,CAAC,EAAD,CAAJ,GAASE,CAAlB;AACAD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASD,IAAI,CAAC,EAAD,CAAJ,GAASE,CAAlB;AAEA,MAAIC,MAAM,GAAG,KAAKxB,cAAlB;AACA,MAAIyB,MAAM,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAK1B,cAAL,CAAoB,CAApB,CAAT,CAAb;;AACA,OAAI,IAAIc,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkB,EAAEA,CAApB,EAAuB;AACrBS,IAAAA,MAAM,CAACT,CAAD,CAAN,GAAYO,GAAG,CAACP,CAAD,CAAH,GAASJ,GAAG,CAAC,IAAE,IAAEI,CAAL,CAAH,GAAaU,MAAlC;AACD;AACF,CAtDD;;AAwDArB,KAAK,CAACwB,IAAN,GAAa,UAASrB,CAAT,EAAY;AACvB,MAAGA,CAAC,GAAG,KAAKsB,KAAL,EAAP,EAAqB;AACnB;AACD;;AACD,MAAIC,EAAE,GAAG,KAAKvC,WAAd;AACA,MAAIuB,GAAG,GAAGgB,EAAE,CAACjB,MAAH,GAAU,EAApB;;AACA,OAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,EAAf,EAAmB,EAAEA,CAArB,EAAwB;AACtBe,IAAAA,EAAE,CAACC,IAAH,CAAQD,EAAE,CAAChB,GAAG,EAAJ,CAAV;AACD;;AACD,OAAKrB,KAAL,CAAWsC,IAAX,CAAgBxB,CAAhB;AACD,CAVD;;AAYAH,KAAK,CAAC4B,KAAN,GAAc,UAASzB,CAAT,EAAY;AACxB,MAAI0B,GAAG,GAAG3D,OAAO,CAAC4D,EAAR,CAAW,KAAKzC,KAAhB,EAAuBc,CAAvB,IAA4B,CAAtC;;AACA,MAAG0B,GAAG,GAAG,CAAT,EAAY;AACV;AACD;;AACD,OAAKxC,KAAL,CAAW0C,MAAX,CAAkB,CAAlB,EAAqBF,GAArB;;AACA,OAAK1C,WAAL,CAAiB4C,MAAjB,CAAwB,CAAxB,EAA2B,KAAGF,GAA9B;AACD,CAPD;;AASA7B,KAAK,CAACyB,KAAN,GAAc,YAAW;AACvB,SAAO,KAAKpC,KAAL,CAAW,KAAKA,KAAL,CAAWoB,MAAX,GAAkB,CAA7B,CAAP;AACD,CAFD;;AAIAT,KAAK,CAACvB,MAAN,GAAe,UAAS0B,CAAT,EAAYe,GAAZ,EAAiBE,MAAjB,EAAyBJ,EAAzB,EAA6B;AAC1C,OAAKd,YAAL,CAAkBC,CAAlB;AACAe,EAAAA,GAAG,GAAMA,GAAG,IAAI,KAAKxB,WAArB;AACA0B,EAAAA,MAAM,GAAGA,MAAM,IAAIvC,cAAnB;AACAmC,EAAAA,EAAE,GAAOA,EAAE,IAAI,KAAKrB,UAApB;AACA,OAAKqC,SAAL,CAAe7B,CAAf,EAAkB1B,MAAM,CAAC,KAAKe,cAAN,EAAsB0B,GAAtB,EAA2BE,MAA3B,EAAmCJ,EAAnC,CAAxB;AACA,MAAIiB,EAAE,GAAG,GAAT;;AACA,OAAI,IAAItB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkB,EAAEA,CAApB,EAAuB;AACrBsB,IAAAA,EAAE,IAAIX,IAAI,CAACY,GAAL,CAASd,MAAM,CAACT,CAAD,CAAN,GAAYO,GAAG,CAACP,CAAD,CAAxB,EAA6B,CAA7B,CAAN;AACD;;AACDsB,EAAAA,EAAE,GAAGX,IAAI,CAACa,GAAL,CAASb,IAAI,CAACc,IAAL,CAAUH,EAAV,CAAT,CAAL;AACA,OAAKpC,cAAL,CAAoB,CAApB,IAAyBoC,EAAzB;AACD,CAZD;;AAcAjC,KAAK,CAACqC,MAAN,GAAe,UAASlC,CAAT,EAAYmC,GAAZ,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8B;AAC3C,OAAKtC,YAAL,CAAkBC,CAAlB;AACA,MAAII,GAAG,GAAG,KAAKd,eAAf;AACA,MAAG6C,GAAH,EAAU/D,OAAO,CAACgC,GAAD,EAAMA,GAAN,EAAW+B,GAAX,CAAP;AACV,MAAGC,KAAH,EAAUjE,OAAO,CAACiC,GAAD,EAAMA,GAAN,EAAWgC,KAAX,CAAP;AACV,MAAGC,IAAH,EAAUhE,OAAO,CAAC+B,GAAD,EAAMA,GAAN,EAAWiC,IAAX,CAAP;AACV,OAAKR,SAAL,CAAe7B,CAAf,EAAkB9B,QAAQ,CAAC,KAAKmB,cAAN,EAAsBe,GAAtB,CAA1B;AACD,CAPD;;AASA,IAAIkC,IAAI,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAX;;AAEAzC,KAAK,CAAC0C,GAAN,GAAY,UAASvC,CAAT,EAAYwC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwB;AAClCJ,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,EAAEE,EAAE,IAAI,GAAR,CAAV;AACAF,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,EAAEG,EAAE,IAAI,GAAR,CAAV;AACAH,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,EAAEI,EAAE,IAAI,GAAR,CAAV;AACA,OAAK3C,YAAL,CAAkBC,CAAlB;AACA,MAAII,GAAG,GAAG,KAAKd,eAAf;AACAf,EAAAA,SAAS,CAAC6B,GAAD,EAAMA,GAAN,EAAWkC,IAAX,CAAT;AACA,OAAKT,SAAL,CAAe7B,CAAf,EAAkB9B,QAAQ,CAACkC,GAAD,EAAMA,GAAN,CAA1B;AACD,CARD;;AAUAP,KAAK,CAACtB,SAAN,GAAkB,UAASyB,CAAT,EAAYwC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwB;AACxCJ,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUE,EAAE,IAAI,GAAhB;AACAF,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUG,EAAE,IAAI,GAAhB;AACAH,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUI,EAAE,IAAI,GAAhB;AACA,OAAK3C,YAAL,CAAkBC,CAAlB;AACA,MAAII,GAAG,GAAG,KAAKf,cAAf;AACAd,EAAAA,SAAS,CAAC6B,GAAD,EAAMA,GAAN,EAAWkC,IAAX,CAAT;AACA,OAAKT,SAAL,CAAe7B,CAAf,EAAkBI,GAAlB;AACD,CARD;;AAUAP,KAAK,CAACgC,SAAN,GAAkB,UAAS7B,CAAT,EAAYI,GAAZ,EAAiB;AACjC,MAAGJ,CAAC,GAAG,KAAKsB,KAAL,EAAP,EAAqB;AACnB;AACD;;AACD,OAAKpC,KAAL,CAAWsC,IAAX,CAAgBxB,CAAhB;;AACA,OAAI,IAAIQ,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,EAAf,EAAmB,EAAEA,CAArB,EAAwB;AACtB,SAAKxB,WAAL,CAAiBwC,IAAjB,CAAsBpB,GAAG,CAACI,CAAD,CAAzB;AACD;AACF,CARD;;AAUAX,KAAK,CAAC8C,WAAN,GAAoB,UAAS3C,CAAT,EAAY4C,CAAZ,EAAe;AACjC,OAAKlD,cAAL,CAAoB,CAApB,IAAyBkD,CAAzB;AACD,CAFD;;AAIA/C,KAAK,CAACgD,iBAAN,GAA0B,UAASC,CAAT,EAAWC,CAAX,EAAc;AACtC,MAAIC,GAAG,GAAG,KAAKrD,OAAf;AACAqD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASF,CAAT;AACAE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASD,CAAT;AACD,CAJD;;AAMAlD,KAAK,CAACoD,iBAAN,GAA0B,UAASC,GAAT,EAAc;AACtC,MAAIF,GAAG,GAAG,KAAKrD,OAAf;;AACA,MAAGuD,GAAH,EAAQ;AACNA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASF,GAAG,CAAC,CAAD,CAAZ;AACAE,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASF,GAAG,CAAC,CAAD,CAAZ;AACA,WAAOE,GAAP;AACD;;AACD,SAAOF,GAAP;AACD,CARD;;AAUA,SAASnE,4BAAT,CAAsCsE,OAAtC,EAA+C;AAC7CA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,MAAM,GAAGD,OAAO,CAACC,MAAR,IACD,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EACC,CADD,EACG,CADH,EACK,CADL,EACO,CADP,EAEC,CAFD,EAEG,CAFH,EAEK,CAFL,EAEO,CAFP,EAGC,CAHD,EAGG,CAHH,EAGK,CAHL,EAGO,CAHP,CADZ;AAKA,SAAO,IAAItE,sBAAJ,CAA2BsE,MAA3B,CAAP;AACD","sourcesContent":["'use strict'\n\nvar bsearch   = require('binary-search-bounds')\nvar m4interp  = require('mat4-interpolate')\nvar invert44  = require('gl-mat4/invert')\nvar rotateX   = require('gl-mat4/rotateX')\nvar rotateY   = require('gl-mat4/rotateY')\nvar rotateZ   = require('gl-mat4/rotateZ')\nvar lookAt    = require('gl-mat4/lookAt')\nvar translate = require('gl-mat4/translate')\nvar scale     = require('gl-mat4/scale')\nvar normalize = require('gl-vec3/normalize')\n\nvar DEFAULT_CENTER = [0,0,0]\n\nmodule.exports = createMatrixCameraController\n\nfunction MatrixCameraController(initialMatrix) {\n  this._components    = initialMatrix.slice()\n  this._time          = [0]\n  this.prevMatrix     = initialMatrix.slice()\n  this.nextMatrix     = initialMatrix.slice()\n  this.computedMatrix = initialMatrix.slice()\n  this.computedInverse = initialMatrix.slice()\n  this.computedEye    = [0,0,0]\n  this.computedUp     = [0,0,0]\n  this.computedCenter = [0,0,0]\n  this.computedRadius = [0]\n  this._limits        = [-Infinity, Infinity]\n}\n\nvar proto = MatrixCameraController.prototype\n\nproto.recalcMatrix = function(t) {\n  var time = this._time\n  var tidx = bsearch.le(time, t)\n  var mat = this.computedMatrix\n  if(tidx < 0) {\n    return\n  }\n  var comps = this._components\n  if(tidx === time.length-1) {\n    var ptr = 16*tidx\n    for(var i=0; i<16; ++i) {\n      mat[i] = comps[ptr++]\n    }\n  } else {\n    var dt = (time[tidx+1] - time[tidx])\n    var ptr = 16*tidx\n    var prev = this.prevMatrix\n    var allEqual = true\n    for(var i=0; i<16; ++i) {\n      prev[i] = comps[ptr++]\n    }\n    var next = this.nextMatrix\n    for(var i=0; i<16; ++i) {\n      next[i] = comps[ptr++]\n      allEqual = allEqual && (prev[i] === next[i])\n    }\n    if(dt < 1e-6 || allEqual) {\n      for(var i=0; i<16; ++i) {\n        mat[i] = prev[i]\n      }\n    } else {\n      m4interp(mat, prev, next, (t - time[tidx])/dt)\n    }\n  }\n\n  var up = this.computedUp\n  up[0] = mat[1]\n  up[1] = mat[5]\n  up[2] = mat[9]\n  normalize(up, up)\n\n  var imat = this.computedInverse\n  invert44(imat, mat)\n  var eye = this.computedEye\n  var w = imat[15]\n  eye[0] = imat[12]/w\n  eye[1] = imat[13]/w\n  eye[2] = imat[14]/w\n\n  var center = this.computedCenter\n  var radius = Math.exp(this.computedRadius[0])\n  for(var i=0; i<3; ++i) {\n    center[i] = eye[i] - mat[2+4*i] * radius\n  }\n}\n\nproto.idle = function(t) {\n  if(t < this.lastT()) {\n    return\n  }\n  var mc = this._components\n  var ptr = mc.length-16\n  for(var i=0; i<16; ++i) {\n    mc.push(mc[ptr++])\n  }\n  this._time.push(t)\n}\n\nproto.flush = function(t) {\n  var idx = bsearch.gt(this._time, t) - 2\n  if(idx < 0) {\n    return\n  }\n  this._time.splice(0, idx)\n  this._components.splice(0, 16*idx)\n}\n\nproto.lastT = function() {\n  return this._time[this._time.length-1]\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n  eye    = eye || this.computedEye\n  center = center || DEFAULT_CENTER\n  up     = up || this.computedUp\n  this.setMatrix(t, lookAt(this.computedMatrix, eye, center, up))\n  var d2 = 0.0\n  for(var i=0; i<3; ++i) {\n    d2 += Math.pow(center[i] - eye[i], 2)\n  }\n  d2 = Math.log(Math.sqrt(d2))\n  this.computedRadius[0] = d2\n}\n\nproto.rotate = function(t, yaw, pitch, roll) {\n  this.recalcMatrix(t)\n  var mat = this.computedInverse\n  if(yaw)   rotateY(mat, mat, yaw)\n  if(pitch) rotateX(mat, mat, pitch)\n  if(roll)  rotateZ(mat, mat, roll)\n  this.setMatrix(t, invert44(this.computedMatrix, mat))\n}\n\nvar tvec = [0,0,0]\n\nproto.pan = function(t, dx, dy, dz) {\n  tvec[0] = -(dx || 0.0)\n  tvec[1] = -(dy || 0.0)\n  tvec[2] = -(dz || 0.0)\n  this.recalcMatrix(t)\n  var mat = this.computedInverse\n  translate(mat, mat, tvec)\n  this.setMatrix(t, invert44(mat, mat))\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  tvec[0] = dx || 0.0\n  tvec[1] = dy || 0.0\n  tvec[2] = dz || 0.0\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n  translate(mat, mat, tvec)\n  this.setMatrix(t, mat)\n}\n\nproto.setMatrix = function(t, mat) {\n  if(t < this.lastT()) {\n    return\n  }\n  this._time.push(t)\n  for(var i=0; i<16; ++i) {\n    this._components.push(mat[i])\n  }\n}\n\nproto.setDistance = function(t, d) {\n  this.computedRadius[0] = d\n}\n\nproto.setDistanceLimits = function(a,b) {\n  var lim = this._limits\n  lim[0] = a\n  lim[1] = b\n}\n\nproto.getDistanceLimits = function(out) {\n  var lim = this._limits\n  if(out) {\n    out[0] = lim[0]\n    out[1] = lim[1]\n    return out\n  }\n  return lim\n}\n\nfunction createMatrixCameraController(options) {\n  options = options || {}\n  var matrix = options.matrix || \n              [1,0,0,0,\n               0,1,0,0,\n               0,0,1,0,\n               0,0,0,1]\n  return new MatrixCameraController(matrix)\n}\n"]},"metadata":{},"sourceType":"script"}