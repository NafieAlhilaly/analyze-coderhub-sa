{"ast":null,"code":"\"use strict\";\n\nmodule.exports = edgeToAdjacency;\n\nvar uniq = require(\"uniq\");\n\nfunction edgeToAdjacency(edges, numVertices) {\n  var numEdges = edges.length;\n\n  if (typeof numVertices !== \"number\") {\n    numVertices = 0;\n\n    for (var i = 0; i < numEdges; ++i) {\n      var e = edges[i];\n      numVertices = Math.max(numVertices, e[0], e[1]);\n    }\n\n    numVertices = (numVertices | 0) + 1;\n  }\n\n  numVertices = numVertices | 0;\n  var adj = new Array(numVertices);\n\n  for (var i = 0; i < numVertices; ++i) {\n    adj[i] = [];\n  }\n\n  for (var i = 0; i < numEdges; ++i) {\n    var e = edges[i];\n    adj[e[0]].push(e[1]);\n    adj[e[1]].push(e[0]);\n  }\n\n  for (var j = 0; j < numVertices; ++j) {\n    uniq(adj[j], function (a, b) {\n      return a - b;\n    });\n  }\n\n  return adj;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/edges-to-adjacency-list/e2a.js"],"names":["module","exports","edgeToAdjacency","uniq","require","edges","numVertices","numEdges","length","i","e","Math","max","adj","Array","push","j","a","b"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,eAAjB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,SAASF,eAAT,CAAyBG,KAAzB,EAAgCC,WAAhC,EAA6C;AAC3C,MAAIC,QAAQ,GAAGF,KAAK,CAACG,MAArB;;AACA,MAAG,OAAOF,WAAP,KAAuB,QAA1B,EAAoC;AAClCA,IAAAA,WAAW,GAAG,CAAd;;AACA,SAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,QAAf,EAAyB,EAAEE,CAA3B,EAA8B;AAC5B,UAAIC,CAAC,GAAGL,KAAK,CAACI,CAAD,CAAb;AACAH,MAAAA,WAAW,GAAGK,IAAI,CAACC,GAAL,CAASN,WAAT,EAAsBI,CAAC,CAAC,CAAD,CAAvB,EAA4BA,CAAC,CAAC,CAAD,CAA7B,CAAd;AACD;;AACDJ,IAAAA,WAAW,GAAG,CAACA,WAAW,GAAC,CAAb,IAAkB,CAAhC;AACD;;AACDA,EAAAA,WAAW,GAAGA,WAAW,GAAC,CAA1B;AACA,MAAIO,GAAG,GAAG,IAAIC,KAAJ,CAAUR,WAAV,CAAV;;AACA,OAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,WAAf,EAA4B,EAAEG,CAA9B,EAAiC;AAC/BI,IAAAA,GAAG,CAACJ,CAAD,CAAH,GAAS,EAAT;AACD;;AACD,OAAI,IAAIA,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,QAAf,EAAyB,EAAEE,CAA3B,EAA8B;AAC5B,QAAIC,CAAC,GAAGL,KAAK,CAACI,CAAD,CAAb;AACAI,IAAAA,GAAG,CAACH,CAAC,CAAC,CAAD,CAAF,CAAH,CAAUK,IAAV,CAAeL,CAAC,CAAC,CAAD,CAAhB;AACAG,IAAAA,GAAG,CAACH,CAAC,CAAC,CAAD,CAAF,CAAH,CAAUK,IAAV,CAAeL,CAAC,CAAC,CAAD,CAAhB;AACD;;AACD,OAAI,IAAIM,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACV,WAAf,EAA4B,EAAEU,CAA9B,EAAiC;AAC/Bb,IAAAA,IAAI,CAACU,GAAG,CAACG,CAAD,CAAJ,EAAS,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC1B,aAAOD,CAAC,GAAGC,CAAX;AACD,KAFG,CAAJ;AAGD;;AACD,SAAOL,GAAP;AACD","sourcesContent":["\"use strict\"\n\nmodule.exports = edgeToAdjacency\n\nvar uniq = require(\"uniq\")\n\nfunction edgeToAdjacency(edges, numVertices) {\n  var numEdges = edges.length\n  if(typeof numVertices !== \"number\") {\n    numVertices = 0\n    for(var i=0; i<numEdges; ++i) {\n      var e = edges[i]\n      numVertices = Math.max(numVertices, e[0], e[1])\n    }\n    numVertices = (numVertices|0) + 1\n  }\n  numVertices = numVertices|0\n  var adj = new Array(numVertices)\n  for(var i=0; i<numVertices; ++i) {\n    adj[i] = []\n  }\n  for(var i=0; i<numEdges; ++i) {\n    var e = edges[i]\n    adj[e[0]].push(e[1])\n    adj[e[1]].push(e[0])\n  }\n  for(var j=0; j<numVertices; ++j) {\n    uniq(adj[j], function(a, b) {\n      return a - b\n    })\n  }\n  return adj\n}"]},"metadata":{},"sourceType":"script"}