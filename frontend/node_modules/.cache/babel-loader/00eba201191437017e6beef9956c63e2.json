{"ast":null,"code":"'use strict';\n\nvar Registry = require('../../registry');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar Fx = require('../../components/fx');\n\nvar createPlot2D = require('gl-plot2d');\n\nvar createSpikes = require('gl-spikes2d');\n\nvar createSelectBox = require('gl-select-box');\n\nvar getContext = require('webgl-context');\n\nvar createOptions = require('./convert');\n\nvar createCamera = require('./camera');\n\nvar showNoWebGlMsg = require('../../lib/show_no_webgl_msg');\n\nvar axisConstraints = require('../cartesian/constraints');\n\nvar enforceAxisConstraints = axisConstraints.enforce;\nvar cleanAxisConstraints = axisConstraints.clean;\n\nvar doAutoRange = require('../cartesian/autorange').doAutoRange;\n\nvar dragHelpers = require('../../components/dragelement/helpers');\n\nvar drawMode = dragHelpers.drawMode;\nvar selectMode = dragHelpers.selectMode;\nvar AXES = ['xaxis', 'yaxis'];\nvar STATIC_CANVAS, STATIC_CONTEXT;\n\nvar SUBPLOT_PATTERN = require('../cartesian/constants').SUBPLOT_PATTERN;\n\nfunction Scene2D(options, fullLayout) {\n  this.container = options.container;\n  this.graphDiv = options.graphDiv;\n  this.pixelRatio = options.plotGlPixelRatio || window.devicePixelRatio;\n  this.id = options.id;\n  this.staticPlot = !!options.staticPlot;\n  this.scrollZoom = this.graphDiv._context._scrollZoom.cartesian;\n  this.fullData = null;\n  this.updateRefs(fullLayout);\n  this.makeFramework();\n  if (this.stopped) return; // update options\n\n  this.glplotOptions = createOptions(this);\n  this.glplotOptions.merge(fullLayout); // create the plot\n\n  this.glplot = createPlot2D(this.glplotOptions); // create camera\n\n  this.camera = createCamera(this); // trace set\n\n  this.traces = {}; // create axes spikes\n\n  this.spikes = createSpikes(this.glplot);\n  this.selectBox = createSelectBox(this.glplot, {\n    innerFill: false,\n    outerFill: true\n  }); // last button state\n\n  this.lastButtonState = 0; // last pick result\n\n  this.pickResult = null; // is the mouse over the plot?\n  // it's OK if this says true when it's not, so long as\n  // when we get a mouseout we set it to false before handling\n\n  this.isMouseOver = true; // flag to stop render loop\n\n  this.stopped = false; // redraw the plot\n\n  this.redraw = this.draw.bind(this);\n  this.redraw();\n}\n\nmodule.exports = Scene2D;\nvar proto = Scene2D.prototype;\n\nproto.makeFramework = function () {\n  // create canvas and gl context\n  if (this.staticPlot) {\n    if (!STATIC_CONTEXT) {\n      STATIC_CANVAS = document.createElement('canvas');\n      STATIC_CONTEXT = getContext({\n        canvas: STATIC_CANVAS,\n        preserveDrawingBuffer: false,\n        premultipliedAlpha: true,\n        antialias: true\n      });\n\n      if (!STATIC_CONTEXT) {\n        throw new Error('Error creating static canvas/context for image server');\n      }\n    }\n\n    this.canvas = STATIC_CANVAS;\n    this.gl = STATIC_CONTEXT;\n  } else {\n    var liveCanvas = this.container.querySelector('.gl-canvas-focus');\n    var gl = getContext({\n      canvas: liveCanvas,\n      preserveDrawingBuffer: true,\n      premultipliedAlpha: true\n    });\n\n    if (!gl) {\n      showNoWebGlMsg(this);\n      this.stopped = true;\n      return;\n    }\n\n    this.canvas = liveCanvas;\n    this.gl = gl;\n  } // position the canvas\n\n\n  var canvas = this.canvas;\n  canvas.style.width = '100%';\n  canvas.style.height = '100%';\n  canvas.style.position = 'absolute';\n  canvas.style.top = '0px';\n  canvas.style.left = '0px';\n  canvas.style['pointer-events'] = 'none';\n  this.updateSize(canvas); // create SVG container for hover text\n\n  var svgContainer = this.svgContainer = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svgContainer.style.position = 'absolute';\n  svgContainer.style.top = svgContainer.style.left = '0px';\n  svgContainer.style.width = svgContainer.style.height = '100%';\n  svgContainer.style['z-index'] = 20;\n  svgContainer.style['pointer-events'] = 'none'; // create div to catch the mouse event\n\n  var mouseContainer = this.mouseContainer = document.createElement('div');\n  mouseContainer.style.position = 'absolute';\n  mouseContainer.style['pointer-events'] = 'auto';\n  this.pickCanvas = this.container.querySelector('.gl-canvas-pick'); // append canvas, hover svg and mouse div to container\n\n  var container = this.container;\n  container.appendChild(svgContainer);\n  container.appendChild(mouseContainer);\n  var self = this;\n  mouseContainer.addEventListener('mouseout', function () {\n    self.isMouseOver = false;\n    self.unhover();\n  });\n  mouseContainer.addEventListener('mouseover', function () {\n    self.isMouseOver = true;\n  });\n};\n\nproto.toImage = function (format) {\n  if (!format) format = 'png';\n  this.stopped = true;\n  if (this.staticPlot) this.container.appendChild(STATIC_CANVAS); // update canvas size\n\n  this.updateSize(this.canvas); // grab context and yank out pixels\n\n  var gl = this.glplot.gl;\n  var w = gl.drawingBufferWidth;\n  var h = gl.drawingBufferHeight; // force redraw\n\n  gl.clearColor(1, 1, 1, 0);\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  this.glplot.setDirty();\n  this.glplot.draw();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  var pixels = new Uint8Array(w * h * 4);\n  gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels); // flip pixels\n\n  for (var j = 0, k = h - 1; j < k; ++j, --k) {\n    for (var i = 0; i < w; ++i) {\n      for (var l = 0; l < 4; ++l) {\n        var tmp = pixels[4 * (w * j + i) + l];\n        pixels[4 * (w * j + i) + l] = pixels[4 * (w * k + i) + l];\n        pixels[4 * (w * k + i) + l] = tmp;\n      }\n    }\n  }\n\n  var canvas = document.createElement('canvas');\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  var imageData = context.createImageData(w, h);\n  imageData.data.set(pixels);\n  context.putImageData(imageData, 0, 0);\n  var dataURL;\n\n  switch (format) {\n    case 'jpeg':\n      dataURL = canvas.toDataURL('image/jpeg');\n      break;\n\n    case 'webp':\n      dataURL = canvas.toDataURL('image/webp');\n      break;\n\n    default:\n      dataURL = canvas.toDataURL('image/png');\n  }\n\n  if (this.staticPlot) this.container.removeChild(STATIC_CANVAS);\n  return dataURL;\n};\n\nproto.updateSize = function (canvas) {\n  if (!canvas) canvas = this.canvas;\n  var pixelRatio = this.pixelRatio;\n  var fullLayout = this.fullLayout;\n  var width = fullLayout.width;\n  var height = fullLayout.height;\n  var pixelWidth = Math.ceil(pixelRatio * width) | 0;\n  var pixelHeight = Math.ceil(pixelRatio * height) | 0; // check for resize\n\n  if (canvas.width !== pixelWidth || canvas.height !== pixelHeight) {\n    canvas.width = pixelWidth;\n    canvas.height = pixelHeight;\n  }\n\n  return canvas;\n};\n\nproto.computeTickMarks = function () {\n  this.xaxis.setScale();\n  this.yaxis.setScale();\n  var nextTicks = [Axes.calcTicks(this.xaxis), Axes.calcTicks(this.yaxis)];\n\n  for (var j = 0; j < 2; ++j) {\n    for (var i = 0; i < nextTicks[j].length; ++i) {\n      // coercing tick value (may not be a string) to a string\n      nextTicks[j][i].text = nextTicks[j][i].text + '';\n    }\n  }\n\n  return nextTicks;\n};\n\nfunction compareTicks(a, b) {\n  for (var i = 0; i < 2; ++i) {\n    var aticks = a[i];\n    var bticks = b[i];\n    if (aticks.length !== bticks.length) return true;\n\n    for (var j = 0; j < aticks.length; ++j) {\n      if (aticks[j].x !== bticks[j].x) return true;\n    }\n  }\n\n  return false;\n}\n\nproto.updateRefs = function (newFullLayout) {\n  this.fullLayout = newFullLayout;\n  var spmatch = this.id.match(SUBPLOT_PATTERN);\n  var xaxisName = 'xaxis' + spmatch[1];\n  var yaxisName = 'yaxis' + spmatch[2];\n  this.xaxis = this.fullLayout[xaxisName];\n  this.yaxis = this.fullLayout[yaxisName];\n};\n\nproto.relayoutCallback = function () {\n  var graphDiv = this.graphDiv;\n  var xaxis = this.xaxis;\n  var yaxis = this.yaxis;\n  var layout = graphDiv.layout; // make a meaningful value to be passed on to possible 'plotly_relayout' subscriber(s)\n\n  var update = {};\n  var xrange = update[xaxis._name + '.range'] = xaxis.range.slice();\n  var yrange = update[yaxis._name + '.range'] = yaxis.range.slice();\n  update[xaxis._name + '.autorange'] = xaxis.autorange;\n  update[yaxis._name + '.autorange'] = yaxis.autorange;\n  Registry.call('_storeDirectGUIEdit', graphDiv.layout, graphDiv._fullLayout._preGUI, update); // update the input layout\n\n  var xaIn = layout[xaxis._name];\n  xaIn.range = xrange;\n  xaIn.autorange = xaxis.autorange;\n  var yaIn = layout[yaxis._name];\n  yaIn.range = yrange;\n  yaIn.autorange = yaxis.autorange; // lastInputTime helps determine which one is the latest input (if async)\n\n  update.lastInputTime = this.camera.lastInputTime;\n  graphDiv.emit('plotly_relayout', update);\n};\n\nproto.cameraChanged = function () {\n  var camera = this.camera;\n  this.glplot.setDataBox(this.calcDataBox());\n  var nextTicks = this.computeTickMarks();\n  var curTicks = this.glplotOptions.ticks;\n\n  if (compareTicks(nextTicks, curTicks)) {\n    this.glplotOptions.ticks = nextTicks;\n    this.glplotOptions.dataBox = camera.dataBox;\n    this.glplot.update(this.glplotOptions);\n    this.handleAnnotations();\n  }\n};\n\nproto.handleAnnotations = function () {\n  var gd = this.graphDiv;\n  var annotations = this.fullLayout.annotations;\n\n  for (var i = 0; i < annotations.length; i++) {\n    var ann = annotations[i];\n\n    if (ann.xref === this.xaxis._id && ann.yref === this.yaxis._id) {\n      Registry.getComponentMethod('annotations', 'drawOne')(gd, i);\n    }\n  }\n};\n\nproto.destroy = function () {\n  if (!this.glplot) return;\n  var traces = this.traces;\n\n  if (traces) {\n    Object.keys(traces).map(function (key) {\n      traces[key].dispose();\n      delete traces[key];\n    });\n  }\n\n  this.glplot.dispose();\n  this.container.removeChild(this.svgContainer);\n  this.container.removeChild(this.mouseContainer);\n  this.fullData = null;\n  this.glplot = null;\n  this.stopped = true;\n  this.camera.mouseListener.enabled = false;\n  this.mouseContainer.removeEventListener('wheel', this.camera.wheelListener);\n  this.camera = null;\n};\n\nproto.plot = function (fullData, calcData, fullLayout) {\n  var glplot = this.glplot;\n  this.updateRefs(fullLayout);\n  this.xaxis.clearCalc();\n  this.yaxis.clearCalc();\n  this.updateTraces(fullData, calcData);\n  this.updateFx(fullLayout.dragmode);\n  var width = fullLayout.width;\n  var height = fullLayout.height;\n  this.updateSize(this.canvas);\n  var options = this.glplotOptions;\n  options.merge(fullLayout);\n  options.screenBox = [0, 0, width, height];\n  var mockGraphDiv = {\n    _fullLayout: {\n      _axisConstraintGroups: fullLayout._axisConstraintGroups,\n      xaxis: this.xaxis,\n      yaxis: this.yaxis,\n      _size: fullLayout._size\n    }\n  };\n  cleanAxisConstraints(mockGraphDiv, this.xaxis);\n  cleanAxisConstraints(mockGraphDiv, this.yaxis);\n  var size = fullLayout._size;\n  var domainX = this.xaxis.domain;\n  var domainY = this.yaxis.domain;\n  options.viewBox = [size.l + domainX[0] * size.w, size.b + domainY[0] * size.h, width - size.r - (1 - domainX[1]) * size.w, height - size.t - (1 - domainY[1]) * size.h];\n  this.mouseContainer.style.width = size.w * (domainX[1] - domainX[0]) + 'px';\n  this.mouseContainer.style.height = size.h * (domainY[1] - domainY[0]) + 'px';\n  this.mouseContainer.height = size.h * (domainY[1] - domainY[0]);\n  this.mouseContainer.style.left = size.l + domainX[0] * size.w + 'px';\n  this.mouseContainer.style.top = size.t + (1 - domainY[1]) * size.h + 'px';\n  var ax, i;\n\n  for (i = 0; i < 2; ++i) {\n    ax = this[AXES[i]];\n    ax._length = options.viewBox[i + 2] - options.viewBox[i];\n    doAutoRange(this.graphDiv, ax);\n    ax.setScale();\n  }\n\n  enforceAxisConstraints(mockGraphDiv);\n  options.ticks = this.computeTickMarks();\n  options.dataBox = this.calcDataBox();\n  options.merge(fullLayout);\n  glplot.update(options); // force redraw so that promise is returned when rendering is completed\n\n  this.glplot.draw();\n};\n\nproto.calcDataBox = function () {\n  var xaxis = this.xaxis;\n  var yaxis = this.yaxis;\n  var xrange = xaxis.range;\n  var yrange = yaxis.range;\n  var xr2l = xaxis.r2l;\n  var yr2l = yaxis.r2l;\n  return [xr2l(xrange[0]), yr2l(yrange[0]), xr2l(xrange[1]), yr2l(yrange[1])];\n};\n\nproto.setRanges = function (dataBox) {\n  var xaxis = this.xaxis;\n  var yaxis = this.yaxis;\n  var xl2r = xaxis.l2r;\n  var yl2r = yaxis.l2r;\n  xaxis.range = [xl2r(dataBox[0]), xl2r(dataBox[2])];\n  yaxis.range = [yl2r(dataBox[1]), yl2r(dataBox[3])];\n};\n\nproto.updateTraces = function (fullData, calcData) {\n  var traceIds = Object.keys(this.traces);\n  var i, j, fullTrace;\n  this.fullData = fullData; // remove empty traces\n\n  traceIdLoop: for (i = 0; i < traceIds.length; i++) {\n    var oldUid = traceIds[i];\n    var oldTrace = this.traces[oldUid];\n\n    for (j = 0; j < fullData.length; j++) {\n      fullTrace = fullData[j];\n\n      if (fullTrace.uid === oldUid && fullTrace.type === oldTrace.type) {\n        continue traceIdLoop;\n      }\n    }\n\n    oldTrace.dispose();\n    delete this.traces[oldUid];\n  } // update / create trace objects\n\n\n  for (i = 0; i < fullData.length; i++) {\n    fullTrace = fullData[i];\n    var calcTrace = calcData[i];\n    var traceObj = this.traces[fullTrace.uid];\n    if (traceObj) traceObj.update(fullTrace, calcTrace);else {\n      traceObj = fullTrace._module.plot(this, fullTrace, calcTrace);\n      this.traces[fullTrace.uid] = traceObj;\n    }\n  } // order object per traces\n\n\n  this.glplot.objects.sort(function (a, b) {\n    return a._trace.index - b._trace.index;\n  });\n};\n\nproto.updateFx = function (dragmode) {\n  // switch to svg interactions in lasso/select mode & shape drawing\n  if (selectMode(dragmode) || drawMode(dragmode)) {\n    this.pickCanvas.style['pointer-events'] = 'none';\n    this.mouseContainer.style['pointer-events'] = 'none';\n  } else {\n    this.pickCanvas.style['pointer-events'] = 'auto';\n    this.mouseContainer.style['pointer-events'] = 'auto';\n  } // set proper cursor\n\n\n  if (dragmode === 'pan') {\n    this.mouseContainer.style.cursor = 'move';\n  } else if (dragmode === 'zoom') {\n    this.mouseContainer.style.cursor = 'crosshair';\n  } else {\n    this.mouseContainer.style.cursor = null;\n  }\n};\n\nproto.emitPointAction = function (nextSelection, eventType) {\n  var uid = nextSelection.trace.uid;\n  var ptNumber = nextSelection.pointIndex;\n  var trace;\n\n  for (var i = 0; i < this.fullData.length; i++) {\n    if (this.fullData[i].uid === uid) {\n      trace = this.fullData[i];\n    }\n  }\n\n  var pointData = {\n    x: nextSelection.traceCoord[0],\n    y: nextSelection.traceCoord[1],\n    curveNumber: trace.index,\n    pointNumber: ptNumber,\n    data: trace._input,\n    fullData: this.fullData,\n    xaxis: this.xaxis,\n    yaxis: this.yaxis\n  };\n  Fx.appendArrayPointValue(pointData, trace, ptNumber);\n  this.graphDiv.emit(eventType, {\n    points: [pointData]\n  });\n};\n\nproto.draw = function () {\n  if (this.stopped) return;\n  requestAnimationFrame(this.redraw);\n  var glplot = this.glplot;\n  var camera = this.camera;\n  var mouseListener = camera.mouseListener;\n  var mouseUp = this.lastButtonState === 1 && mouseListener.buttons === 0;\n  var fullLayout = this.fullLayout;\n  this.lastButtonState = mouseListener.buttons;\n  this.cameraChanged();\n  var x = mouseListener.x * glplot.pixelRatio;\n  var y = this.canvas.height - glplot.pixelRatio * mouseListener.y;\n  var result;\n\n  if (camera.boxEnabled && fullLayout.dragmode === 'zoom') {\n    this.selectBox.enabled = true;\n    var selectBox = this.selectBox.selectBox = [Math.min(camera.boxStart[0], camera.boxEnd[0]), Math.min(camera.boxStart[1], camera.boxEnd[1]), Math.max(camera.boxStart[0], camera.boxEnd[0]), Math.max(camera.boxStart[1], camera.boxEnd[1])]; // 1D zoom\n\n    for (var i = 0; i < 2; i++) {\n      if (camera.boxStart[i] === camera.boxEnd[i]) {\n        selectBox[i] = glplot.dataBox[i];\n        selectBox[i + 2] = glplot.dataBox[i + 2];\n      }\n    }\n\n    glplot.setDirty();\n  } else if (!camera.panning && this.isMouseOver) {\n    this.selectBox.enabled = false;\n    var size = fullLayout._size;\n    var domainX = this.xaxis.domain;\n    var domainY = this.yaxis.domain;\n    result = glplot.pick(x / glplot.pixelRatio + size.l + domainX[0] * size.w, y / glplot.pixelRatio - (size.t + (1 - domainY[1]) * size.h));\n\n    var nextSelection = result && result.object._trace.handlePick(result);\n\n    if (nextSelection && mouseUp) {\n      this.emitPointAction(nextSelection, 'plotly_click');\n    }\n\n    if (result && result.object._trace.hoverinfo !== 'skip' && fullLayout.hovermode) {\n      if (nextSelection && (!this.lastPickResult || this.lastPickResult.traceUid !== nextSelection.trace.uid || this.lastPickResult.dataCoord[0] !== nextSelection.dataCoord[0] || this.lastPickResult.dataCoord[1] !== nextSelection.dataCoord[1])) {\n        var selection = nextSelection;\n        this.lastPickResult = {\n          traceUid: nextSelection.trace ? nextSelection.trace.uid : null,\n          dataCoord: nextSelection.dataCoord.slice()\n        };\n        this.spikes.update({\n          center: result.dataCoord\n        });\n        selection.screenCoord = [((glplot.viewBox[2] - glplot.viewBox[0]) * (result.dataCoord[0] - glplot.dataBox[0]) / (glplot.dataBox[2] - glplot.dataBox[0]) + glplot.viewBox[0]) / glplot.pixelRatio, (this.canvas.height - (glplot.viewBox[3] - glplot.viewBox[1]) * (result.dataCoord[1] - glplot.dataBox[1]) / (glplot.dataBox[3] - glplot.dataBox[1]) - glplot.viewBox[1]) / glplot.pixelRatio]; // this needs to happen before the next block that deletes traceCoord data\n        // also it's important to copy, otherwise data is lost by the time event data is read\n\n        this.emitPointAction(nextSelection, 'plotly_hover');\n        var trace = this.fullData[selection.trace.index] || {};\n        var ptNumber = selection.pointIndex;\n        var hoverinfo = Fx.castHoverinfo(trace, fullLayout, ptNumber);\n\n        if (hoverinfo && hoverinfo !== 'all') {\n          var parts = hoverinfo.split('+');\n          if (parts.indexOf('x') === -1) selection.traceCoord[0] = undefined;\n          if (parts.indexOf('y') === -1) selection.traceCoord[1] = undefined;\n          if (parts.indexOf('z') === -1) selection.traceCoord[2] = undefined;\n          if (parts.indexOf('text') === -1) selection.textLabel = undefined;\n          if (parts.indexOf('name') === -1) selection.name = undefined;\n        }\n\n        Fx.loneHover({\n          x: selection.screenCoord[0],\n          y: selection.screenCoord[1],\n          xLabel: this.hoverFormatter('xaxis', selection.traceCoord[0]),\n          yLabel: this.hoverFormatter('yaxis', selection.traceCoord[1]),\n          zLabel: selection.traceCoord[2],\n          text: selection.textLabel,\n          name: selection.name,\n          color: Fx.castHoverOption(trace, ptNumber, 'bgcolor') || selection.color,\n          borderColor: Fx.castHoverOption(trace, ptNumber, 'bordercolor'),\n          fontFamily: Fx.castHoverOption(trace, ptNumber, 'font.family'),\n          fontSize: Fx.castHoverOption(trace, ptNumber, 'font.size'),\n          fontColor: Fx.castHoverOption(trace, ptNumber, 'font.color'),\n          nameLength: Fx.castHoverOption(trace, ptNumber, 'namelength'),\n          textAlign: Fx.castHoverOption(trace, ptNumber, 'align')\n        }, {\n          container: this.svgContainer,\n          gd: this.graphDiv\n        });\n      }\n    }\n  } // Remove hover effects if we're not over a point OR\n  // if we're zooming or panning (in which case result is not set)\n\n\n  if (!result) {\n    this.unhover();\n  }\n\n  glplot.draw();\n};\n\nproto.unhover = function () {\n  if (this.lastPickResult) {\n    this.spikes.update({});\n    this.lastPickResult = null;\n    this.graphDiv.emit('plotly_unhover');\n    Fx.loneUnhover(this.svgContainer);\n  }\n};\n\nproto.hoverFormatter = function (axisName, val) {\n  if (val === undefined) return undefined;\n  var axis = this[axisName];\n  return Axes.tickText(axis, axis.c2l(val), 'hover').text;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/plots/gl2d/scene2d.js"],"names":["Registry","require","Axes","Fx","createPlot2D","createSpikes","createSelectBox","getContext","createOptions","createCamera","showNoWebGlMsg","axisConstraints","enforceAxisConstraints","enforce","cleanAxisConstraints","clean","doAutoRange","dragHelpers","drawMode","selectMode","AXES","STATIC_CANVAS","STATIC_CONTEXT","SUBPLOT_PATTERN","Scene2D","options","fullLayout","container","graphDiv","pixelRatio","plotGlPixelRatio","window","devicePixelRatio","id","staticPlot","scrollZoom","_context","_scrollZoom","cartesian","fullData","updateRefs","makeFramework","stopped","glplotOptions","merge","glplot","camera","traces","spikes","selectBox","innerFill","outerFill","lastButtonState","pickResult","isMouseOver","redraw","draw","bind","module","exports","proto","prototype","document","createElement","canvas","preserveDrawingBuffer","premultipliedAlpha","antialias","Error","gl","liveCanvas","querySelector","style","width","height","position","top","left","updateSize","svgContainer","createElementNS","mouseContainer","pickCanvas","appendChild","self","addEventListener","unhover","toImage","format","w","drawingBufferWidth","h","drawingBufferHeight","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","setDirty","bindFramebuffer","FRAMEBUFFER","pixels","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","j","k","i","l","tmp","context","imageData","createImageData","data","set","putImageData","dataURL","toDataURL","removeChild","pixelWidth","Math","ceil","pixelHeight","computeTickMarks","xaxis","setScale","yaxis","nextTicks","calcTicks","length","text","compareTicks","a","b","aticks","bticks","x","newFullLayout","spmatch","match","xaxisName","yaxisName","relayoutCallback","layout","update","xrange","_name","range","slice","yrange","autorange","call","_fullLayout","_preGUI","xaIn","yaIn","lastInputTime","emit","cameraChanged","setDataBox","calcDataBox","curTicks","ticks","dataBox","handleAnnotations","gd","annotations","ann","xref","_id","yref","getComponentMethod","destroy","Object","keys","map","key","dispose","mouseListener","enabled","removeEventListener","wheelListener","plot","calcData","clearCalc","updateTraces","updateFx","dragmode","screenBox","mockGraphDiv","_axisConstraintGroups","_size","size","domainX","domain","domainY","viewBox","r","t","ax","_length","xr2l","r2l","yr2l","setRanges","xl2r","l2r","yl2r","traceIds","fullTrace","traceIdLoop","oldUid","oldTrace","uid","type","calcTrace","traceObj","_module","objects","sort","_trace","index","cursor","emitPointAction","nextSelection","eventType","trace","ptNumber","pointIndex","pointData","traceCoord","y","curveNumber","pointNumber","_input","appendArrayPointValue","points","requestAnimationFrame","mouseUp","buttons","result","boxEnabled","min","boxStart","boxEnd","max","panning","pick","object","handlePick","hoverinfo","hovermode","lastPickResult","traceUid","dataCoord","selection","center","screenCoord","castHoverinfo","parts","split","indexOf","undefined","textLabel","name","loneHover","xLabel","hoverFormatter","yLabel","zLabel","color","castHoverOption","borderColor","fontFamily","fontSize","fontColor","nameLength","textAlign","loneUnhover","axisName","val","axis","tickText","c2l"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Registry = require('../../registry');\nvar Axes = require('../../plots/cartesian/axes');\nvar Fx = require('../../components/fx');\n\nvar createPlot2D = require('gl-plot2d');\nvar createSpikes = require('gl-spikes2d');\nvar createSelectBox = require('gl-select-box');\nvar getContext = require('webgl-context');\n\nvar createOptions = require('./convert');\nvar createCamera = require('./camera');\nvar showNoWebGlMsg = require('../../lib/show_no_webgl_msg');\nvar axisConstraints = require('../cartesian/constraints');\nvar enforceAxisConstraints = axisConstraints.enforce;\nvar cleanAxisConstraints = axisConstraints.clean;\nvar doAutoRange = require('../cartesian/autorange').doAutoRange;\n\nvar dragHelpers = require('../../components/dragelement/helpers');\nvar drawMode = dragHelpers.drawMode;\nvar selectMode = dragHelpers.selectMode;\n\nvar AXES = ['xaxis', 'yaxis'];\nvar STATIC_CANVAS, STATIC_CONTEXT;\n\nvar SUBPLOT_PATTERN = require('../cartesian/constants').SUBPLOT_PATTERN;\n\n\nfunction Scene2D(options, fullLayout) {\n    this.container = options.container;\n    this.graphDiv = options.graphDiv;\n    this.pixelRatio = options.plotGlPixelRatio || window.devicePixelRatio;\n    this.id = options.id;\n    this.staticPlot = !!options.staticPlot;\n    this.scrollZoom = this.graphDiv._context._scrollZoom.cartesian;\n\n    this.fullData = null;\n    this.updateRefs(fullLayout);\n\n    this.makeFramework();\n    if(this.stopped) return;\n\n    // update options\n    this.glplotOptions = createOptions(this);\n    this.glplotOptions.merge(fullLayout);\n\n    // create the plot\n    this.glplot = createPlot2D(this.glplotOptions);\n\n    // create camera\n    this.camera = createCamera(this);\n\n    // trace set\n    this.traces = {};\n\n    // create axes spikes\n    this.spikes = createSpikes(this.glplot);\n\n    this.selectBox = createSelectBox(this.glplot, {\n        innerFill: false,\n        outerFill: true\n    });\n\n    // last button state\n    this.lastButtonState = 0;\n\n    // last pick result\n    this.pickResult = null;\n\n    // is the mouse over the plot?\n    // it's OK if this says true when it's not, so long as\n    // when we get a mouseout we set it to false before handling\n    this.isMouseOver = true;\n\n    // flag to stop render loop\n    this.stopped = false;\n\n    // redraw the plot\n    this.redraw = this.draw.bind(this);\n    this.redraw();\n}\n\nmodule.exports = Scene2D;\n\nvar proto = Scene2D.prototype;\n\nproto.makeFramework = function() {\n    // create canvas and gl context\n    if(this.staticPlot) {\n        if(!STATIC_CONTEXT) {\n            STATIC_CANVAS = document.createElement('canvas');\n\n            STATIC_CONTEXT = getContext({\n                canvas: STATIC_CANVAS,\n                preserveDrawingBuffer: false,\n                premultipliedAlpha: true,\n                antialias: true\n            });\n\n            if(!STATIC_CONTEXT) {\n                throw new Error('Error creating static canvas/context for image server');\n            }\n        }\n\n        this.canvas = STATIC_CANVAS;\n        this.gl = STATIC_CONTEXT;\n    } else {\n        var liveCanvas = this.container.querySelector('.gl-canvas-focus');\n\n        var gl = getContext({\n            canvas: liveCanvas,\n            preserveDrawingBuffer: true,\n            premultipliedAlpha: true\n        });\n\n        if(!gl) {\n            showNoWebGlMsg(this);\n            this.stopped = true;\n            return;\n        }\n\n        this.canvas = liveCanvas;\n        this.gl = gl;\n    }\n\n    // position the canvas\n    var canvas = this.canvas;\n\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    canvas.style.position = 'absolute';\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style['pointer-events'] = 'none';\n\n    this.updateSize(canvas);\n\n    // create SVG container for hover text\n    var svgContainer = this.svgContainer = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'svg');\n    svgContainer.style.position = 'absolute';\n    svgContainer.style.top = svgContainer.style.left = '0px';\n    svgContainer.style.width = svgContainer.style.height = '100%';\n    svgContainer.style['z-index'] = 20;\n    svgContainer.style['pointer-events'] = 'none';\n\n    // create div to catch the mouse event\n    var mouseContainer = this.mouseContainer = document.createElement('div');\n    mouseContainer.style.position = 'absolute';\n    mouseContainer.style['pointer-events'] = 'auto';\n\n    this.pickCanvas = this.container.querySelector('.gl-canvas-pick');\n\n\n    // append canvas, hover svg and mouse div to container\n    var container = this.container;\n    container.appendChild(svgContainer);\n    container.appendChild(mouseContainer);\n\n    var self = this;\n    mouseContainer.addEventListener('mouseout', function() {\n        self.isMouseOver = false;\n        self.unhover();\n    });\n    mouseContainer.addEventListener('mouseover', function() {\n        self.isMouseOver = true;\n    });\n};\n\nproto.toImage = function(format) {\n    if(!format) format = 'png';\n\n    this.stopped = true;\n\n    if(this.staticPlot) this.container.appendChild(STATIC_CANVAS);\n\n    // update canvas size\n    this.updateSize(this.canvas);\n\n\n    // grab context and yank out pixels\n    var gl = this.glplot.gl;\n    var w = gl.drawingBufferWidth;\n    var h = gl.drawingBufferHeight;\n\n    // force redraw\n    gl.clearColor(1, 1, 1, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.glplot.setDirty();\n    this.glplot.draw();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    var pixels = new Uint8Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n    // flip pixels\n    for(var j = 0, k = h - 1; j < k; ++j, --k) {\n        for(var i = 0; i < w; ++i) {\n            for(var l = 0; l < 4; ++l) {\n                var tmp = pixels[4 * (w * j + i) + l];\n                pixels[4 * (w * j + i) + l] = pixels[4 * (w * k + i) + l];\n                pixels[4 * (w * k + i) + l] = tmp;\n            }\n        }\n    }\n\n    var canvas = document.createElement('canvas');\n    canvas.width = w;\n    canvas.height = h;\n\n    var context = canvas.getContext('2d');\n    var imageData = context.createImageData(w, h);\n    imageData.data.set(pixels);\n    context.putImageData(imageData, 0, 0);\n\n    var dataURL;\n\n    switch(format) {\n        case 'jpeg':\n            dataURL = canvas.toDataURL('image/jpeg');\n            break;\n        case 'webp':\n            dataURL = canvas.toDataURL('image/webp');\n            break;\n        default:\n            dataURL = canvas.toDataURL('image/png');\n    }\n\n    if(this.staticPlot) this.container.removeChild(STATIC_CANVAS);\n\n    return dataURL;\n};\n\nproto.updateSize = function(canvas) {\n    if(!canvas) canvas = this.canvas;\n\n    var pixelRatio = this.pixelRatio;\n    var fullLayout = this.fullLayout;\n\n    var width = fullLayout.width;\n    var height = fullLayout.height;\n    var pixelWidth = Math.ceil(pixelRatio * width) |0;\n    var pixelHeight = Math.ceil(pixelRatio * height) |0;\n\n    // check for resize\n    if(canvas.width !== pixelWidth || canvas.height !== pixelHeight) {\n        canvas.width = pixelWidth;\n        canvas.height = pixelHeight;\n    }\n\n    return canvas;\n};\n\nproto.computeTickMarks = function() {\n    this.xaxis.setScale();\n    this.yaxis.setScale();\n\n    var nextTicks = [\n        Axes.calcTicks(this.xaxis),\n        Axes.calcTicks(this.yaxis)\n    ];\n\n    for(var j = 0; j < 2; ++j) {\n        for(var i = 0; i < nextTicks[j].length; ++i) {\n            // coercing tick value (may not be a string) to a string\n            nextTicks[j][i].text = nextTicks[j][i].text + '';\n        }\n    }\n\n    return nextTicks;\n};\n\nfunction compareTicks(a, b) {\n    for(var i = 0; i < 2; ++i) {\n        var aticks = a[i];\n        var bticks = b[i];\n\n        if(aticks.length !== bticks.length) return true;\n\n        for(var j = 0; j < aticks.length; ++j) {\n            if(aticks[j].x !== bticks[j].x) return true;\n        }\n    }\n\n    return false;\n}\n\nproto.updateRefs = function(newFullLayout) {\n    this.fullLayout = newFullLayout;\n\n    var spmatch = this.id.match(SUBPLOT_PATTERN);\n    var xaxisName = 'xaxis' + spmatch[1];\n    var yaxisName = 'yaxis' + spmatch[2];\n\n    this.xaxis = this.fullLayout[xaxisName];\n    this.yaxis = this.fullLayout[yaxisName];\n};\n\nproto.relayoutCallback = function() {\n    var graphDiv = this.graphDiv;\n    var xaxis = this.xaxis;\n    var yaxis = this.yaxis;\n    var layout = graphDiv.layout;\n\n    // make a meaningful value to be passed on to possible 'plotly_relayout' subscriber(s)\n    var update = {};\n    var xrange = update[xaxis._name + '.range'] = xaxis.range.slice();\n    var yrange = update[yaxis._name + '.range'] = yaxis.range.slice();\n    update[xaxis._name + '.autorange'] = xaxis.autorange;\n    update[yaxis._name + '.autorange'] = yaxis.autorange;\n\n    Registry.call('_storeDirectGUIEdit', graphDiv.layout, graphDiv._fullLayout._preGUI, update);\n\n    // update the input layout\n    var xaIn = layout[xaxis._name];\n    xaIn.range = xrange;\n    xaIn.autorange = xaxis.autorange;\n\n    var yaIn = layout[yaxis._name];\n    yaIn.range = yrange;\n    yaIn.autorange = yaxis.autorange;\n\n    // lastInputTime helps determine which one is the latest input (if async)\n    update.lastInputTime = this.camera.lastInputTime;\n    graphDiv.emit('plotly_relayout', update);\n};\n\nproto.cameraChanged = function() {\n    var camera = this.camera;\n\n    this.glplot.setDataBox(this.calcDataBox());\n\n    var nextTicks = this.computeTickMarks();\n    var curTicks = this.glplotOptions.ticks;\n\n    if(compareTicks(nextTicks, curTicks)) {\n        this.glplotOptions.ticks = nextTicks;\n        this.glplotOptions.dataBox = camera.dataBox;\n        this.glplot.update(this.glplotOptions);\n        this.handleAnnotations();\n    }\n};\n\nproto.handleAnnotations = function() {\n    var gd = this.graphDiv;\n    var annotations = this.fullLayout.annotations;\n\n    for(var i = 0; i < annotations.length; i++) {\n        var ann = annotations[i];\n\n        if(ann.xref === this.xaxis._id && ann.yref === this.yaxis._id) {\n            Registry.getComponentMethod('annotations', 'drawOne')(gd, i);\n        }\n    }\n};\n\nproto.destroy = function() {\n    if(!this.glplot) return;\n\n    var traces = this.traces;\n\n    if(traces) {\n        Object.keys(traces).map(function(key) {\n            traces[key].dispose();\n            delete traces[key];\n        });\n    }\n\n    this.glplot.dispose();\n\n    this.container.removeChild(this.svgContainer);\n    this.container.removeChild(this.mouseContainer);\n\n    this.fullData = null;\n    this.glplot = null;\n    this.stopped = true;\n    this.camera.mouseListener.enabled = false;\n    this.mouseContainer.removeEventListener('wheel', this.camera.wheelListener);\n    this.camera = null;\n};\n\nproto.plot = function(fullData, calcData, fullLayout) {\n    var glplot = this.glplot;\n\n    this.updateRefs(fullLayout);\n    this.xaxis.clearCalc();\n    this.yaxis.clearCalc();\n    this.updateTraces(fullData, calcData);\n    this.updateFx(fullLayout.dragmode);\n\n    var width = fullLayout.width;\n    var height = fullLayout.height;\n\n    this.updateSize(this.canvas);\n\n    var options = this.glplotOptions;\n    options.merge(fullLayout);\n    options.screenBox = [0, 0, width, height];\n\n    var mockGraphDiv = {_fullLayout: {\n        _axisConstraintGroups: fullLayout._axisConstraintGroups,\n        xaxis: this.xaxis,\n        yaxis: this.yaxis,\n        _size: fullLayout._size\n    }};\n\n    cleanAxisConstraints(mockGraphDiv, this.xaxis);\n    cleanAxisConstraints(mockGraphDiv, this.yaxis);\n\n    var size = fullLayout._size;\n    var domainX = this.xaxis.domain;\n    var domainY = this.yaxis.domain;\n\n    options.viewBox = [\n        size.l + domainX[0] * size.w,\n        size.b + domainY[0] * size.h,\n        (width - size.r) - (1 - domainX[1]) * size.w,\n        (height - size.t) - (1 - domainY[1]) * size.h\n    ];\n\n    this.mouseContainer.style.width = size.w * (domainX[1] - domainX[0]) + 'px';\n    this.mouseContainer.style.height = size.h * (domainY[1] - domainY[0]) + 'px';\n    this.mouseContainer.height = size.h * (domainY[1] - domainY[0]);\n    this.mouseContainer.style.left = size.l + domainX[0] * size.w + 'px';\n    this.mouseContainer.style.top = size.t + (1 - domainY[1]) * size.h + 'px';\n\n    var ax, i;\n\n    for(i = 0; i < 2; ++i) {\n        ax = this[AXES[i]];\n        ax._length = options.viewBox[i + 2] - options.viewBox[i];\n\n        doAutoRange(this.graphDiv, ax);\n        ax.setScale();\n    }\n\n    enforceAxisConstraints(mockGraphDiv);\n\n    options.ticks = this.computeTickMarks();\n\n    options.dataBox = this.calcDataBox();\n\n    options.merge(fullLayout);\n    glplot.update(options);\n\n    // force redraw so that promise is returned when rendering is completed\n    this.glplot.draw();\n};\n\nproto.calcDataBox = function() {\n    var xaxis = this.xaxis;\n    var yaxis = this.yaxis;\n    var xrange = xaxis.range;\n    var yrange = yaxis.range;\n    var xr2l = xaxis.r2l;\n    var yr2l = yaxis.r2l;\n\n    return [xr2l(xrange[0]), yr2l(yrange[0]), xr2l(xrange[1]), yr2l(yrange[1])];\n};\n\nproto.setRanges = function(dataBox) {\n    var xaxis = this.xaxis;\n    var yaxis = this.yaxis;\n    var xl2r = xaxis.l2r;\n    var yl2r = yaxis.l2r;\n\n    xaxis.range = [xl2r(dataBox[0]), xl2r(dataBox[2])];\n    yaxis.range = [yl2r(dataBox[1]), yl2r(dataBox[3])];\n};\n\nproto.updateTraces = function(fullData, calcData) {\n    var traceIds = Object.keys(this.traces);\n    var i, j, fullTrace;\n\n    this.fullData = fullData;\n\n    // remove empty traces\n    traceIdLoop:\n    for(i = 0; i < traceIds.length; i++) {\n        var oldUid = traceIds[i];\n        var oldTrace = this.traces[oldUid];\n\n        for(j = 0; j < fullData.length; j++) {\n            fullTrace = fullData[j];\n\n            if(fullTrace.uid === oldUid && fullTrace.type === oldTrace.type) {\n                continue traceIdLoop;\n            }\n        }\n\n        oldTrace.dispose();\n        delete this.traces[oldUid];\n    }\n\n    // update / create trace objects\n    for(i = 0; i < fullData.length; i++) {\n        fullTrace = fullData[i];\n        var calcTrace = calcData[i];\n        var traceObj = this.traces[fullTrace.uid];\n\n        if(traceObj) traceObj.update(fullTrace, calcTrace);\n        else {\n            traceObj = fullTrace._module.plot(this, fullTrace, calcTrace);\n            this.traces[fullTrace.uid] = traceObj;\n        }\n    }\n\n    // order object per traces\n    this.glplot.objects.sort(function(a, b) {\n        return a._trace.index - b._trace.index;\n    });\n};\n\nproto.updateFx = function(dragmode) {\n    // switch to svg interactions in lasso/select mode & shape drawing\n    if(selectMode(dragmode) || drawMode(dragmode)) {\n        this.pickCanvas.style['pointer-events'] = 'none';\n        this.mouseContainer.style['pointer-events'] = 'none';\n    } else {\n        this.pickCanvas.style['pointer-events'] = 'auto';\n        this.mouseContainer.style['pointer-events'] = 'auto';\n    }\n\n    // set proper cursor\n    if(dragmode === 'pan') {\n        this.mouseContainer.style.cursor = 'move';\n    } else if(dragmode === 'zoom') {\n        this.mouseContainer.style.cursor = 'crosshair';\n    } else {\n        this.mouseContainer.style.cursor = null;\n    }\n};\n\nproto.emitPointAction = function(nextSelection, eventType) {\n    var uid = nextSelection.trace.uid;\n    var ptNumber = nextSelection.pointIndex;\n    var trace;\n\n    for(var i = 0; i < this.fullData.length; i++) {\n        if(this.fullData[i].uid === uid) {\n            trace = this.fullData[i];\n        }\n    }\n\n    var pointData = {\n        x: nextSelection.traceCoord[0],\n        y: nextSelection.traceCoord[1],\n        curveNumber: trace.index,\n        pointNumber: ptNumber,\n        data: trace._input,\n        fullData: this.fullData,\n        xaxis: this.xaxis,\n        yaxis: this.yaxis\n    };\n\n    Fx.appendArrayPointValue(pointData, trace, ptNumber);\n\n    this.graphDiv.emit(eventType, {points: [pointData]});\n};\n\nproto.draw = function() {\n    if(this.stopped) return;\n\n    requestAnimationFrame(this.redraw);\n\n    var glplot = this.glplot;\n    var camera = this.camera;\n    var mouseListener = camera.mouseListener;\n    var mouseUp = this.lastButtonState === 1 && mouseListener.buttons === 0;\n    var fullLayout = this.fullLayout;\n\n    this.lastButtonState = mouseListener.buttons;\n\n    this.cameraChanged();\n\n    var x = mouseListener.x * glplot.pixelRatio;\n    var y = this.canvas.height - glplot.pixelRatio * mouseListener.y;\n\n    var result;\n\n    if(camera.boxEnabled && fullLayout.dragmode === 'zoom') {\n        this.selectBox.enabled = true;\n\n        var selectBox = this.selectBox.selectBox = [\n            Math.min(camera.boxStart[0], camera.boxEnd[0]),\n            Math.min(camera.boxStart[1], camera.boxEnd[1]),\n            Math.max(camera.boxStart[0], camera.boxEnd[0]),\n            Math.max(camera.boxStart[1], camera.boxEnd[1])\n        ];\n\n        // 1D zoom\n        for(var i = 0; i < 2; i++) {\n            if(camera.boxStart[i] === camera.boxEnd[i]) {\n                selectBox[i] = glplot.dataBox[i];\n                selectBox[i + 2] = glplot.dataBox[i + 2];\n            }\n        }\n\n        glplot.setDirty();\n    } else if(!camera.panning && this.isMouseOver) {\n        this.selectBox.enabled = false;\n\n        var size = fullLayout._size;\n        var domainX = this.xaxis.domain;\n        var domainY = this.yaxis.domain;\n\n        result = glplot.pick(\n            (x / glplot.pixelRatio) + size.l + domainX[0] * size.w,\n            (y / glplot.pixelRatio) - (size.t + (1 - domainY[1]) * size.h)\n        );\n\n        var nextSelection = result && result.object._trace.handlePick(result);\n\n        if(nextSelection && mouseUp) {\n            this.emitPointAction(nextSelection, 'plotly_click');\n        }\n\n        if(result && result.object._trace.hoverinfo !== 'skip' && fullLayout.hovermode) {\n            if(nextSelection && (\n                !this.lastPickResult ||\n                this.lastPickResult.traceUid !== nextSelection.trace.uid ||\n                this.lastPickResult.dataCoord[0] !== nextSelection.dataCoord[0] ||\n                this.lastPickResult.dataCoord[1] !== nextSelection.dataCoord[1])\n            ) {\n                var selection = nextSelection;\n\n                this.lastPickResult = {\n                    traceUid: nextSelection.trace ? nextSelection.trace.uid : null,\n                    dataCoord: nextSelection.dataCoord.slice()\n                };\n                this.spikes.update({ center: result.dataCoord });\n\n                selection.screenCoord = [\n                    ((glplot.viewBox[2] - glplot.viewBox[0]) *\n                    (result.dataCoord[0] - glplot.dataBox[0]) /\n                        (glplot.dataBox[2] - glplot.dataBox[0]) + glplot.viewBox[0]) /\n                            glplot.pixelRatio,\n                    (this.canvas.height - (glplot.viewBox[3] - glplot.viewBox[1]) *\n                    (result.dataCoord[1] - glplot.dataBox[1]) /\n                        (glplot.dataBox[3] - glplot.dataBox[1]) - glplot.viewBox[1]) /\n                            glplot.pixelRatio\n                ];\n\n                // this needs to happen before the next block that deletes traceCoord data\n                // also it's important to copy, otherwise data is lost by the time event data is read\n                this.emitPointAction(nextSelection, 'plotly_hover');\n\n                var trace = this.fullData[selection.trace.index] || {};\n                var ptNumber = selection.pointIndex;\n                var hoverinfo = Fx.castHoverinfo(trace, fullLayout, ptNumber);\n\n                if(hoverinfo && hoverinfo !== 'all') {\n                    var parts = hoverinfo.split('+');\n                    if(parts.indexOf('x') === -1) selection.traceCoord[0] = undefined;\n                    if(parts.indexOf('y') === -1) selection.traceCoord[1] = undefined;\n                    if(parts.indexOf('z') === -1) selection.traceCoord[2] = undefined;\n                    if(parts.indexOf('text') === -1) selection.textLabel = undefined;\n                    if(parts.indexOf('name') === -1) selection.name = undefined;\n                }\n\n                Fx.loneHover({\n                    x: selection.screenCoord[0],\n                    y: selection.screenCoord[1],\n                    xLabel: this.hoverFormatter('xaxis', selection.traceCoord[0]),\n                    yLabel: this.hoverFormatter('yaxis', selection.traceCoord[1]),\n                    zLabel: selection.traceCoord[2],\n                    text: selection.textLabel,\n                    name: selection.name,\n                    color: Fx.castHoverOption(trace, ptNumber, 'bgcolor') || selection.color,\n                    borderColor: Fx.castHoverOption(trace, ptNumber, 'bordercolor'),\n                    fontFamily: Fx.castHoverOption(trace, ptNumber, 'font.family'),\n                    fontSize: Fx.castHoverOption(trace, ptNumber, 'font.size'),\n                    fontColor: Fx.castHoverOption(trace, ptNumber, 'font.color'),\n                    nameLength: Fx.castHoverOption(trace, ptNumber, 'namelength'),\n                    textAlign: Fx.castHoverOption(trace, ptNumber, 'align')\n                }, {\n                    container: this.svgContainer,\n                    gd: this.graphDiv\n                });\n            }\n        }\n    }\n\n    // Remove hover effects if we're not over a point OR\n    // if we're zooming or panning (in which case result is not set)\n    if(!result) {\n        this.unhover();\n    }\n\n    glplot.draw();\n};\n\nproto.unhover = function() {\n    if(this.lastPickResult) {\n        this.spikes.update({});\n        this.lastPickResult = null;\n        this.graphDiv.emit('plotly_unhover');\n        Fx.loneUnhover(this.svgContainer);\n    }\n};\n\nproto.hoverFormatter = function(axisName, val) {\n    if(val === undefined) return undefined;\n\n    var axis = this[axisName];\n    return Axes.tickText(axis, axis.c2l(val), 'hover').text;\n};\n"]},"metadata":{},"sourceType":"script"}