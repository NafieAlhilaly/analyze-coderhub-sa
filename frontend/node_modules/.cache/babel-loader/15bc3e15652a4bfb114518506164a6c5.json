{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar subtypes = require('../scatter/subtypes');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nmodule.exports = function selectPoints(searchInfo, selectionTester) {\n  var cd = searchInfo.cd;\n  var xa = searchInfo.xaxis;\n  var ya = searchInfo.yaxis;\n  var selection = [];\n  var trace = cd[0].trace;\n  var i;\n  if (!subtypes.hasMarkers(trace)) return [];\n\n  if (selectionTester === false) {\n    for (i = 0; i < cd.length; i++) {\n      cd[i].selected = 0;\n    }\n  } else {\n    for (i = 0; i < cd.length; i++) {\n      var di = cd[i];\n      var lonlat = di.lonlat;\n\n      if (lonlat[0] !== BADNUM) {\n        var lonlat2 = [Lib.modHalf(lonlat[0], 360), lonlat[1]];\n        var xy = [xa.c2p(lonlat2), ya.c2p(lonlat2)];\n\n        if (selectionTester.contains(xy, null, i, searchInfo)) {\n          selection.push({\n            pointNumber: i,\n            lon: lonlat[0],\n            lat: lonlat[1]\n          });\n          di.selected = 1;\n        } else {\n          di.selected = 0;\n        }\n      }\n    }\n  }\n\n  return selection;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/scattermapbox/select.js"],"names":["Lib","require","subtypes","BADNUM","module","exports","selectPoints","searchInfo","selectionTester","cd","xa","xaxis","ya","yaxis","selection","trace","i","hasMarkers","length","selected","di","lonlat","lonlat2","modHalf","xy","c2p","contains","push","pointNumber","lon","lat"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAtB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,2BAAD,CAAP,CAAqCE,MAAlD;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,eAAlC,EAAmD;AAChE,MAAIC,EAAE,GAAGF,UAAU,CAACE,EAApB;AACA,MAAIC,EAAE,GAAGH,UAAU,CAACI,KAApB;AACA,MAAIC,EAAE,GAAGL,UAAU,CAACM,KAApB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,KAAK,GAAGN,EAAE,CAAC,CAAD,CAAF,CAAMM,KAAlB;AACA,MAAIC,CAAJ;AAEA,MAAG,CAACd,QAAQ,CAACe,UAAT,CAAoBF,KAApB,CAAJ,EAAgC,OAAO,EAAP;;AAEhC,MAAGP,eAAe,KAAK,KAAvB,EAA8B;AAC1B,SAAIQ,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGP,EAAE,CAACS,MAAlB,EAA0BF,CAAC,EAA3B,EAA+B;AAC3BP,MAAAA,EAAE,CAACO,CAAD,CAAF,CAAMG,QAAN,GAAiB,CAAjB;AACH;AACJ,GAJD,MAIO;AACH,SAAIH,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGP,EAAE,CAACS,MAAlB,EAA0BF,CAAC,EAA3B,EAA+B;AAC3B,UAAII,EAAE,GAAGX,EAAE,CAACO,CAAD,CAAX;AACA,UAAIK,MAAM,GAAGD,EAAE,CAACC,MAAhB;;AAEA,UAAGA,MAAM,CAAC,CAAD,CAAN,KAAclB,MAAjB,EAAyB;AACrB,YAAImB,OAAO,GAAG,CAACtB,GAAG,CAACuB,OAAJ,CAAYF,MAAM,CAAC,CAAD,CAAlB,EAAuB,GAAvB,CAAD,EAA8BA,MAAM,CAAC,CAAD,CAApC,CAAd;AACA,YAAIG,EAAE,GAAG,CAACd,EAAE,CAACe,GAAH,CAAOH,OAAP,CAAD,EAAkBV,EAAE,CAACa,GAAH,CAAOH,OAAP,CAAlB,CAAT;;AAEA,YAAGd,eAAe,CAACkB,QAAhB,CAAyBF,EAAzB,EAA6B,IAA7B,EAAmCR,CAAnC,EAAsCT,UAAtC,CAAH,EAAsD;AAClDO,UAAAA,SAAS,CAACa,IAAV,CAAe;AACXC,YAAAA,WAAW,EAAEZ,CADF;AAEXa,YAAAA,GAAG,EAAER,MAAM,CAAC,CAAD,CAFA;AAGXS,YAAAA,GAAG,EAAET,MAAM,CAAC,CAAD;AAHA,WAAf;AAKAD,UAAAA,EAAE,CAACD,QAAH,GAAc,CAAd;AACH,SAPD,MAOO;AACHC,UAAAA,EAAE,CAACD,QAAH,GAAc,CAAd;AACH;AACJ;AACJ;AACJ;;AAED,SAAOL,SAAP;AACH,CAtCD","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar subtypes = require('../scatter/subtypes');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nmodule.exports = function selectPoints(searchInfo, selectionTester) {\n    var cd = searchInfo.cd;\n    var xa = searchInfo.xaxis;\n    var ya = searchInfo.yaxis;\n    var selection = [];\n    var trace = cd[0].trace;\n    var i;\n\n    if(!subtypes.hasMarkers(trace)) return [];\n\n    if(selectionTester === false) {\n        for(i = 0; i < cd.length; i++) {\n            cd[i].selected = 0;\n        }\n    } else {\n        for(i = 0; i < cd.length; i++) {\n            var di = cd[i];\n            var lonlat = di.lonlat;\n\n            if(lonlat[0] !== BADNUM) {\n                var lonlat2 = [Lib.modHalf(lonlat[0], 360), lonlat[1]];\n                var xy = [xa.c2p(lonlat2), ya.c2p(lonlat2)];\n\n                if(selectionTester.contains(xy, null, i, searchInfo)) {\n                    selection.push({\n                        pointNumber: i,\n                        lon: lonlat[0],\n                        lat: lonlat[1]\n                    });\n                    di.selected = 1;\n                } else {\n                    di.selected = 0;\n                }\n            }\n        }\n    }\n\n    return selection;\n};\n"]},"metadata":{},"sourceType":"script"}