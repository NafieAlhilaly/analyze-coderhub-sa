{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Color = require('../../components/color');\n\nvar Registry = require('../../registry');\n\nvar handleXYDefaults = require('../scatter/xy_defaults');\n\nvar handlePeriodDefaults = require('../scatter/period_defaults');\n\nvar handleStyleDefaults = require('./style_defaults');\n\nvar getAxisGroup = require('../../plots/cartesian/constraints').getAxisGroup;\n\nvar attributes = require('./attributes');\n\nvar coerceFont = Lib.coerceFont;\n\nfunction supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var len = handleXYDefaults(traceIn, traceOut, layout, coerce);\n\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  }\n\n  handlePeriodDefaults(traceIn, traceOut, layout, coerce);\n  coerce('xhoverformat');\n  coerce('yhoverformat');\n  coerce('orientation', traceOut.x && !traceOut.y ? 'h' : 'v');\n  coerce('base');\n  coerce('offset');\n  coerce('width');\n  coerce('text');\n  coerce('hovertext');\n  coerce('hovertemplate');\n  var textposition = coerce('textposition');\n  handleText(traceIn, traceOut, layout, coerce, textposition, {\n    moduleHasSelected: true,\n    moduleHasUnselected: true,\n    moduleHasConstrain: true,\n    moduleHasCliponaxis: true,\n    moduleHasTextangle: true,\n    moduleHasInsideanchor: true\n  });\n  handleStyleDefaults(traceIn, traceOut, coerce, defaultColor, layout);\n  var lineColor = (traceOut.marker.line || {}).color; // override defaultColor for error bars with defaultLine\n\n  var errorBarsSupplyDefaults = Registry.getComponentMethod('errorbars', 'supplyDefaults');\n  errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {\n    axis: 'y'\n  });\n  errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {\n    axis: 'x',\n    inherit: 'y'\n  });\n  Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n}\n\nfunction handleGroupingDefaults(traceIn, traceOut, fullLayout, coerce) {\n  var orientation = traceOut.orientation; // N.B. grouping is done across all trace types that support it\n\n  var posAxId = traceOut[{\n    v: 'x',\n    h: 'y'\n  }[orientation] + 'axis'];\n  var groupId = getAxisGroup(fullLayout, posAxId) + orientation;\n  var alignmentOpts = fullLayout._alignmentOpts || {};\n  var alignmentgroup = coerce('alignmentgroup');\n  var alignmentGroups = alignmentOpts[groupId];\n  if (!alignmentGroups) alignmentGroups = alignmentOpts[groupId] = {};\n  var alignmentGroupOpts = alignmentGroups[alignmentgroup];\n\n  if (alignmentGroupOpts) {\n    alignmentGroupOpts.traces.push(traceOut);\n  } else {\n    alignmentGroupOpts = alignmentGroups[alignmentgroup] = {\n      traces: [traceOut],\n      alignmentIndex: Object.keys(alignmentGroups).length,\n      offsetGroups: {}\n    };\n  }\n\n  var offsetgroup = coerce('offsetgroup');\n  var offsetGroups = alignmentGroupOpts.offsetGroups;\n  var offsetGroupOpts = offsetGroups[offsetgroup];\n\n  if (offsetgroup) {\n    if (!offsetGroupOpts) {\n      offsetGroupOpts = offsetGroups[offsetgroup] = {\n        offsetIndex: Object.keys(offsetGroups).length\n      };\n    }\n\n    traceOut._offsetIndex = offsetGroupOpts.offsetIndex;\n  }\n}\n\nfunction crossTraceDefaults(fullData, fullLayout) {\n  var traceIn, traceOut;\n\n  function coerce(attr) {\n    return Lib.coerce(traceOut._input, traceOut, attributes, attr);\n  }\n\n  if (fullLayout.barmode === 'group') {\n    for (var i = 0; i < fullData.length; i++) {\n      traceOut = fullData[i];\n\n      if (traceOut.type === 'bar') {\n        traceIn = traceOut._input;\n        handleGroupingDefaults(traceIn, traceOut, fullLayout, coerce);\n      }\n    }\n  }\n}\n\nfunction handleText(traceIn, traceOut, layout, coerce, textposition, opts) {\n  opts = opts || {};\n  var moduleHasSelected = !(opts.moduleHasSelected === false);\n  var moduleHasUnselected = !(opts.moduleHasUnselected === false);\n  var moduleHasConstrain = !(opts.moduleHasConstrain === false);\n  var moduleHasCliponaxis = !(opts.moduleHasCliponaxis === false);\n  var moduleHasTextangle = !(opts.moduleHasTextangle === false);\n  var moduleHasInsideanchor = !(opts.moduleHasInsideanchor === false);\n  var hasPathbar = !!opts.hasPathbar;\n  var hasBoth = Array.isArray(textposition) || textposition === 'auto';\n  var hasInside = hasBoth || textposition === 'inside';\n  var hasOutside = hasBoth || textposition === 'outside';\n\n  if (hasInside || hasOutside) {\n    var dfltFont = coerceFont(coerce, 'textfont', layout.font); // Note that coercing `insidetextfont` is always needed –\n    // even if `textposition` is `outside` for each trace – since\n    // an outside label can become an inside one, for example because\n    // of a bar being stacked on top of it.\n\n    var insideTextFontDefault = Lib.extendFlat({}, dfltFont);\n    var isTraceTextfontColorSet = traceIn.textfont && traceIn.textfont.color;\n    var isColorInheritedFromLayoutFont = !isTraceTextfontColorSet;\n\n    if (isColorInheritedFromLayoutFont) {\n      delete insideTextFontDefault.color;\n    }\n\n    coerceFont(coerce, 'insidetextfont', insideTextFontDefault);\n\n    if (hasPathbar) {\n      var pathbarTextFontDefault = Lib.extendFlat({}, dfltFont);\n\n      if (isColorInheritedFromLayoutFont) {\n        delete pathbarTextFontDefault.color;\n      }\n\n      coerceFont(coerce, 'pathbar.textfont', pathbarTextFontDefault);\n    }\n\n    if (hasOutside) coerceFont(coerce, 'outsidetextfont', dfltFont);\n    if (moduleHasSelected) coerce('selected.textfont.color');\n    if (moduleHasUnselected) coerce('unselected.textfont.color');\n    if (moduleHasConstrain) coerce('constraintext');\n    if (moduleHasCliponaxis) coerce('cliponaxis');\n    if (moduleHasTextangle) coerce('textangle');\n    coerce('texttemplate');\n  }\n\n  if (hasInside) {\n    if (moduleHasInsideanchor) coerce('insidetextanchor');\n  }\n}\n\nmodule.exports = {\n  supplyDefaults: supplyDefaults,\n  crossTraceDefaults: crossTraceDefaults,\n  handleGroupingDefaults: handleGroupingDefaults,\n  handleText: handleText\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/bar/defaults.js"],"names":["Lib","require","Color","Registry","handleXYDefaults","handlePeriodDefaults","handleStyleDefaults","getAxisGroup","attributes","coerceFont","supplyDefaults","traceIn","traceOut","defaultColor","layout","coerce","attr","dflt","len","visible","x","y","textposition","handleText","moduleHasSelected","moduleHasUnselected","moduleHasConstrain","moduleHasCliponaxis","moduleHasTextangle","moduleHasInsideanchor","lineColor","marker","line","color","errorBarsSupplyDefaults","getComponentMethod","defaultLine","axis","inherit","coerceSelectionMarkerOpacity","handleGroupingDefaults","fullLayout","orientation","posAxId","v","h","groupId","alignmentOpts","_alignmentOpts","alignmentgroup","alignmentGroups","alignmentGroupOpts","traces","push","alignmentIndex","Object","keys","length","offsetGroups","offsetgroup","offsetGroupOpts","offsetIndex","_offsetIndex","crossTraceDefaults","fullData","_input","barmode","i","type","opts","hasPathbar","hasBoth","Array","isArray","hasInside","hasOutside","dfltFont","font","insideTextFontDefault","extendFlat","isTraceTextfontColorSet","textfont","isColorInheritedFromLayoutFont","pathbarTextFontDefault","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar Registry = require('../../registry');\n\nvar handleXYDefaults = require('../scatter/xy_defaults');\nvar handlePeriodDefaults = require('../scatter/period_defaults');\nvar handleStyleDefaults = require('./style_defaults');\nvar getAxisGroup = require('../../plots/cartesian/constraints').getAxisGroup;\nvar attributes = require('./attributes');\n\nvar coerceFont = Lib.coerceFont;\n\nfunction supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var len = handleXYDefaults(traceIn, traceOut, layout, coerce);\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    handlePeriodDefaults(traceIn, traceOut, layout, coerce);\n    coerce('xhoverformat');\n    coerce('yhoverformat');\n\n    coerce('orientation', (traceOut.x && !traceOut.y) ? 'h' : 'v');\n    coerce('base');\n    coerce('offset');\n    coerce('width');\n\n    coerce('text');\n    coerce('hovertext');\n    coerce('hovertemplate');\n\n    var textposition = coerce('textposition');\n    handleText(traceIn, traceOut, layout, coerce, textposition, {\n        moduleHasSelected: true,\n        moduleHasUnselected: true,\n        moduleHasConstrain: true,\n        moduleHasCliponaxis: true,\n        moduleHasTextangle: true,\n        moduleHasInsideanchor: true\n    });\n\n    handleStyleDefaults(traceIn, traceOut, coerce, defaultColor, layout);\n\n    var lineColor = (traceOut.marker.line || {}).color;\n\n    // override defaultColor for error bars with defaultLine\n    var errorBarsSupplyDefaults = Registry.getComponentMethod('errorbars', 'supplyDefaults');\n    errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {axis: 'y'});\n    errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {axis: 'x', inherit: 'y'});\n\n    Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n}\n\nfunction handleGroupingDefaults(traceIn, traceOut, fullLayout, coerce) {\n    var orientation = traceOut.orientation;\n    // N.B. grouping is done across all trace types that support it\n    var posAxId = traceOut[{v: 'x', h: 'y'}[orientation] + 'axis'];\n    var groupId = getAxisGroup(fullLayout, posAxId) + orientation;\n\n    var alignmentOpts = fullLayout._alignmentOpts || {};\n    var alignmentgroup = coerce('alignmentgroup');\n\n    var alignmentGroups = alignmentOpts[groupId];\n    if(!alignmentGroups) alignmentGroups = alignmentOpts[groupId] = {};\n\n    var alignmentGroupOpts = alignmentGroups[alignmentgroup];\n\n    if(alignmentGroupOpts) {\n        alignmentGroupOpts.traces.push(traceOut);\n    } else {\n        alignmentGroupOpts = alignmentGroups[alignmentgroup] = {\n            traces: [traceOut],\n            alignmentIndex: Object.keys(alignmentGroups).length,\n            offsetGroups: {}\n        };\n    }\n\n    var offsetgroup = coerce('offsetgroup');\n    var offsetGroups = alignmentGroupOpts.offsetGroups;\n    var offsetGroupOpts = offsetGroups[offsetgroup];\n\n    if(offsetgroup) {\n        if(!offsetGroupOpts) {\n            offsetGroupOpts = offsetGroups[offsetgroup] = {\n                offsetIndex: Object.keys(offsetGroups).length\n            };\n        }\n\n        traceOut._offsetIndex = offsetGroupOpts.offsetIndex;\n    }\n}\n\nfunction crossTraceDefaults(fullData, fullLayout) {\n    var traceIn, traceOut;\n\n    function coerce(attr) {\n        return Lib.coerce(traceOut._input, traceOut, attributes, attr);\n    }\n\n    if(fullLayout.barmode === 'group') {\n        for(var i = 0; i < fullData.length; i++) {\n            traceOut = fullData[i];\n\n            if(traceOut.type === 'bar') {\n                traceIn = traceOut._input;\n                handleGroupingDefaults(traceIn, traceOut, fullLayout, coerce);\n            }\n        }\n    }\n}\n\nfunction handleText(traceIn, traceOut, layout, coerce, textposition, opts) {\n    opts = opts || {};\n    var moduleHasSelected = !(opts.moduleHasSelected === false);\n    var moduleHasUnselected = !(opts.moduleHasUnselected === false);\n    var moduleHasConstrain = !(opts.moduleHasConstrain === false);\n    var moduleHasCliponaxis = !(opts.moduleHasCliponaxis === false);\n    var moduleHasTextangle = !(opts.moduleHasTextangle === false);\n    var moduleHasInsideanchor = !(opts.moduleHasInsideanchor === false);\n    var hasPathbar = !!opts.hasPathbar;\n\n    var hasBoth = Array.isArray(textposition) || textposition === 'auto';\n    var hasInside = hasBoth || textposition === 'inside';\n    var hasOutside = hasBoth || textposition === 'outside';\n\n    if(hasInside || hasOutside) {\n        var dfltFont = coerceFont(coerce, 'textfont', layout.font);\n\n        // Note that coercing `insidetextfont` is always needed –\n        // even if `textposition` is `outside` for each trace – since\n        // an outside label can become an inside one, for example because\n        // of a bar being stacked on top of it.\n        var insideTextFontDefault = Lib.extendFlat({}, dfltFont);\n        var isTraceTextfontColorSet = traceIn.textfont && traceIn.textfont.color;\n        var isColorInheritedFromLayoutFont = !isTraceTextfontColorSet;\n        if(isColorInheritedFromLayoutFont) {\n            delete insideTextFontDefault.color;\n        }\n        coerceFont(coerce, 'insidetextfont', insideTextFontDefault);\n\n        if(hasPathbar) {\n            var pathbarTextFontDefault = Lib.extendFlat({}, dfltFont);\n            if(isColorInheritedFromLayoutFont) {\n                delete pathbarTextFontDefault.color;\n            }\n            coerceFont(coerce, 'pathbar.textfont', pathbarTextFontDefault);\n        }\n\n        if(hasOutside) coerceFont(coerce, 'outsidetextfont', dfltFont);\n\n        if(moduleHasSelected) coerce('selected.textfont.color');\n        if(moduleHasUnselected) coerce('unselected.textfont.color');\n        if(moduleHasConstrain) coerce('constraintext');\n        if(moduleHasCliponaxis) coerce('cliponaxis');\n        if(moduleHasTextangle) coerce('textangle');\n\n        coerce('texttemplate');\n    }\n\n    if(hasInside) {\n        if(moduleHasInsideanchor) coerce('insidetextanchor');\n    }\n}\n\nmodule.exports = {\n    supplyDefaults: supplyDefaults,\n    crossTraceDefaults: crossTraceDefaults,\n    handleGroupingDefaults: handleGroupingDefaults,\n    handleText: handleText\n};\n"]},"metadata":{},"sourceType":"script"}