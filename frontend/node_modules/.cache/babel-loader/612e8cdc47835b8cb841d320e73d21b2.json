{"ast":null,"code":"var hasTypedArrays = false;\n\nif (typeof Float64Array !== \"undefined\") {\n  var DOUBLE_VIEW = new Float64Array(1),\n      UINT_VIEW = new Uint32Array(DOUBLE_VIEW.buffer);\n  DOUBLE_VIEW[0] = 1.0;\n  hasTypedArrays = true;\n\n  if (UINT_VIEW[1] === 0x3ff00000) {\n    var toDoubleLE = function toDoubleLE(lo, hi) {\n      UINT_VIEW[0] = lo;\n      UINT_VIEW[1] = hi;\n      return DOUBLE_VIEW[0];\n    };\n\n    var lowUintLE = function lowUintLE(n) {\n      DOUBLE_VIEW[0] = n;\n      return UINT_VIEW[0];\n    };\n\n    var highUintLE = function highUintLE(n) {\n      DOUBLE_VIEW[0] = n;\n      return UINT_VIEW[1];\n    };\n\n    //Use little endian\n    module.exports = function doubleBitsLE(n) {\n      DOUBLE_VIEW[0] = n;\n      return [UINT_VIEW[0], UINT_VIEW[1]];\n    };\n\n    module.exports.pack = toDoubleLE;\n    module.exports.lo = lowUintLE;\n    module.exports.hi = highUintLE;\n  } else if (UINT_VIEW[0] === 0x3ff00000) {\n    var toDoubleBE = function toDoubleBE(lo, hi) {\n      UINT_VIEW[1] = lo;\n      UINT_VIEW[0] = hi;\n      return DOUBLE_VIEW[0];\n    };\n\n    var lowUintBE = function lowUintBE(n) {\n      DOUBLE_VIEW[0] = n;\n      return UINT_VIEW[1];\n    };\n\n    var highUintBE = function highUintBE(n) {\n      DOUBLE_VIEW[0] = n;\n      return UINT_VIEW[0];\n    };\n\n    //Use big endian\n    module.exports = function doubleBitsBE(n) {\n      DOUBLE_VIEW[0] = n;\n      return [UINT_VIEW[1], UINT_VIEW[0]];\n    };\n\n    module.exports.pack = toDoubleBE;\n    module.exports.lo = lowUintBE;\n    module.exports.hi = highUintBE;\n  } else {\n    hasTypedArrays = false;\n  }\n}\n\nif (!hasTypedArrays) {\n  var toDouble = function toDouble(lo, hi) {\n    buffer.writeUInt32LE(lo, 0, true);\n    buffer.writeUInt32LE(hi, 4, true);\n    return buffer.readDoubleLE(0, true);\n  };\n\n  var lowUint = function lowUint(n) {\n    buffer.writeDoubleLE(n, 0, true);\n    return buffer.readUInt32LE(0, true);\n  };\n\n  var highUint = function highUint(n) {\n    buffer.writeDoubleLE(n, 0, true);\n    return buffer.readUInt32LE(4, true);\n  };\n\n  var buffer = new Buffer(8);\n\n  module.exports = function doubleBits(n) {\n    buffer.writeDoubleLE(n, 0, true);\n    return [buffer.readUInt32LE(0, true), buffer.readUInt32LE(4, true)];\n  };\n\n  module.exports.pack = toDouble;\n  module.exports.lo = lowUint;\n  module.exports.hi = highUint;\n}\n\nmodule.exports.sign = function (n) {\n  return module.exports.hi(n) >>> 31;\n};\n\nmodule.exports.exponent = function (n) {\n  var b = module.exports.hi(n);\n  return (b << 1 >>> 21) - 1023;\n};\n\nmodule.exports.fraction = function (n) {\n  var lo = module.exports.lo(n);\n  var hi = module.exports.hi(n);\n  var b = hi & (1 << 20) - 1;\n\n  if (hi & 0x7ff00000) {\n    b += 1 << 20;\n  }\n\n  return [lo, b];\n};\n\nmodule.exports.denormalized = function (n) {\n  var hi = module.exports.hi(n);\n  return !(hi & 0x7ff00000);\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/double-bits/double.js"],"names":["hasTypedArrays","Float64Array","DOUBLE_VIEW","UINT_VIEW","Uint32Array","buffer","toDoubleLE","lo","hi","lowUintLE","n","highUintLE","module","exports","doubleBitsLE","pack","toDoubleBE","lowUintBE","highUintBE","doubleBitsBE","toDouble","writeUInt32LE","readDoubleLE","lowUint","writeDoubleLE","readUInt32LE","highUint","Buffer","doubleBits","sign","exponent","b","fraction","denormalized"],"mappings":"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","sourcesContent":["var hasTypedArrays = false\nif(typeof Float64Array !== \"undefined\") {\n  var DOUBLE_VIEW = new Float64Array(1)\n    , UINT_VIEW   = new Uint32Array(DOUBLE_VIEW.buffer)\n  DOUBLE_VIEW[0] = 1.0\n  hasTypedArrays = true\n  if(UINT_VIEW[1] === 0x3ff00000) {\n    //Use little endian\n    module.exports = function doubleBitsLE(n) {\n      DOUBLE_VIEW[0] = n\n      return [ UINT_VIEW[0], UINT_VIEW[1] ]\n    }\n    function toDoubleLE(lo, hi) {\n      UINT_VIEW[0] = lo\n      UINT_VIEW[1] = hi\n      return DOUBLE_VIEW[0]\n    }\n    module.exports.pack = toDoubleLE\n    function lowUintLE(n) {\n      DOUBLE_VIEW[0] = n\n      return UINT_VIEW[0]\n    }\n    module.exports.lo = lowUintLE\n    function highUintLE(n) {\n      DOUBLE_VIEW[0] = n\n      return UINT_VIEW[1]\n    }\n    module.exports.hi = highUintLE\n  } else if(UINT_VIEW[0] === 0x3ff00000) {\n    //Use big endian\n    module.exports = function doubleBitsBE(n) {\n      DOUBLE_VIEW[0] = n\n      return [ UINT_VIEW[1], UINT_VIEW[0] ]\n    }\n    function toDoubleBE(lo, hi) {\n      UINT_VIEW[1] = lo\n      UINT_VIEW[0] = hi\n      return DOUBLE_VIEW[0]\n    }\n    module.exports.pack = toDoubleBE\n    function lowUintBE(n) {\n      DOUBLE_VIEW[0] = n\n      return UINT_VIEW[1]\n    }\n    module.exports.lo = lowUintBE\n    function highUintBE(n) {\n      DOUBLE_VIEW[0] = n\n      return UINT_VIEW[0]\n    }\n    module.exports.hi = highUintBE\n  } else {\n    hasTypedArrays = false\n  }\n}\nif(!hasTypedArrays) {\n  var buffer = new Buffer(8)\n  module.exports = function doubleBits(n) {\n    buffer.writeDoubleLE(n, 0, true)\n    return [ buffer.readUInt32LE(0, true), buffer.readUInt32LE(4, true) ]\n  }\n  function toDouble(lo, hi) {\n    buffer.writeUInt32LE(lo, 0, true)\n    buffer.writeUInt32LE(hi, 4, true)\n    return buffer.readDoubleLE(0, true)\n  }\n  module.exports.pack = toDouble  \n  function lowUint(n) {\n    buffer.writeDoubleLE(n, 0, true)\n    return buffer.readUInt32LE(0, true)\n  }\n  module.exports.lo = lowUint\n  function highUint(n) {\n    buffer.writeDoubleLE(n, 0, true)\n    return buffer.readUInt32LE(4, true)\n  }\n  module.exports.hi = highUint\n}\n\nmodule.exports.sign = function(n) {\n  return module.exports.hi(n) >>> 31\n}\n\nmodule.exports.exponent = function(n) {\n  var b = module.exports.hi(n)\n  return ((b<<1) >>> 21) - 1023\n}\n\nmodule.exports.fraction = function(n) {\n  var lo = module.exports.lo(n)\n  var hi = module.exports.hi(n)\n  var b = hi & ((1<<20) - 1)\n  if(hi & 0x7ff00000) {\n    b += (1<<20)\n  }\n  return [lo, b]\n}\n\nmodule.exports.denormalized = function(n) {\n  var hi = module.exports.hi(n)\n  return !(hi & 0x7ff00000)\n}"]},"metadata":{},"sourceType":"script"}