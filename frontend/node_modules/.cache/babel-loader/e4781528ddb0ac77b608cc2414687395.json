{"ast":null,"code":"'use strict';\n\nmodule.exports = createSpikes2D;\n\nfunction GLSpikes2D(plot) {\n  this.plot = plot;\n  this.enable = [true, true, false, false];\n  this.width = [1, 1, 1, 1];\n  this.color = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.center = [Infinity, Infinity];\n}\n\nvar proto = GLSpikes2D.prototype;\n\nproto.update = function (options) {\n  options = options || {};\n  this.enable = (options.enable || [true, true, false, false]).slice();\n  this.width = (options.width || [1, 1, 1, 1]).slice();\n  this.color = (options.color || [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]]).map(function (x) {\n    return x.slice();\n  });\n  this.center = (options.center || [Infinity, Infinity]).slice();\n  this.plot.setOverlayDirty();\n};\n\nproto.draw = function () {\n  var spikeEnable = this.enable;\n  var spikeWidth = this.width;\n  var spikeColor = this.color;\n  var spikeCenter = this.center;\n  var plot = this.plot;\n  var line = plot.line;\n  var dataBox = plot.dataBox;\n  var viewPixels = plot.viewBox;\n  line.bind();\n\n  if (dataBox[0] <= spikeCenter[0] && spikeCenter[0] <= dataBox[2] && dataBox[1] <= spikeCenter[1] && spikeCenter[1] <= dataBox[3]) {\n    var centerX = viewPixels[0] + (spikeCenter[0] - dataBox[0]) / (dataBox[2] - dataBox[0]) * (viewPixels[2] - viewPixels[0]);\n    var centerY = viewPixels[1] + (spikeCenter[1] - dataBox[1]) / (dataBox[3] - dataBox[1]) * (viewPixels[3] - viewPixels[1]);\n\n    if (spikeEnable[0]) {\n      line.drawLine(centerX, centerY, viewPixels[0], centerY, spikeWidth[0], spikeColor[0]);\n    }\n\n    if (spikeEnable[1]) {\n      line.drawLine(centerX, centerY, centerX, viewPixels[1], spikeWidth[1], spikeColor[1]);\n    }\n\n    if (spikeEnable[2]) {\n      line.drawLine(centerX, centerY, viewPixels[2], centerY, spikeWidth[2], spikeColor[2]);\n    }\n\n    if (spikeEnable[3]) {\n      line.drawLine(centerX, centerY, centerX, viewPixels[3], spikeWidth[3], spikeColor[3]);\n    }\n  }\n};\n\nproto.dispose = function () {\n  this.plot.removeOverlay(this);\n};\n\nfunction createSpikes2D(plot, options) {\n  var spikes = new GLSpikes2D(plot);\n  spikes.update(options);\n  plot.addOverlay(spikes);\n  return spikes;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/gl-spikes2d/spikes.js"],"names":["module","exports","createSpikes2D","GLSpikes2D","plot","enable","width","color","center","Infinity","proto","prototype","update","options","slice","map","x","setOverlayDirty","draw","spikeEnable","spikeWidth","spikeColor","spikeCenter","line","dataBox","viewPixels","viewBox","bind","centerX","centerY","drawLine","dispose","removeOverlay","spikes","addOverlay"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = createSpikes2D\n\nfunction GLSpikes2D(plot) {\n  this.plot = plot\n  this.enable = [true, true, false, false]\n  this.width  = [1, 1, 1, 1]\n  this.color  = [[0,0,0,1],\n                 [0,0,0,1],\n                 [0,0,0,1],\n                 [0,0,0,1]]\n  this.center = [Infinity, Infinity]\n}\n\nvar proto = GLSpikes2D.prototype\n\nproto.update = function(options) {\n  options = options || {}\n  this.enable = (options.enable || [true,true,false,false]).slice()\n  this.width  = (options.width || [1,1,1,1]).slice()\n  this.color  = (options.color || [\n                  [0,0,0,1],\n                  [0,0,0,1],\n                  [0,0,0,1],\n                  [0,0,0,1]]).map(function(x) { return x.slice() })\n  this.center = (options.center || [Infinity,Infinity]).slice()\n  this.plot.setOverlayDirty()\n}\n\nproto.draw = function() {\n  var spikeEnable = this.enable\n  var spikeWidth  = this.width\n  var spikeColor  = this.color\n  var spikeCenter = this.center\n  var plot        = this.plot\n  var line        = plot.line\n\n  var dataBox     = plot.dataBox\n  var viewPixels  = plot.viewBox\n\n  line.bind()\n\n  if(dataBox[0] <= spikeCenter[0] && spikeCenter[0] <= dataBox[2] &&\n     dataBox[1] <= spikeCenter[1] && spikeCenter[1] <= dataBox[3]) {\n\n    var centerX = viewPixels[0] + (spikeCenter[0] - dataBox[0]) / (dataBox[2] - dataBox[0]) * (viewPixels[2] - viewPixels[0])\n    var centerY = viewPixels[1] + (spikeCenter[1] - dataBox[1]) / (dataBox[3] - dataBox[1]) * (viewPixels[3] - viewPixels[1])\n\n    if(spikeEnable[0]) {\n     line.drawLine(\n       centerX, centerY,\n       viewPixels[0], centerY,\n       spikeWidth[0], spikeColor[0])\n    }\n    if(spikeEnable[1]) {\n     line.drawLine(\n       centerX, centerY,\n       centerX, viewPixels[1],\n       spikeWidth[1], spikeColor[1])\n    }\n    if(spikeEnable[2]) {\n      line.drawLine(\n        centerX, centerY,\n        viewPixels[2], centerY,\n        spikeWidth[2], spikeColor[2])\n    }\n    if(spikeEnable[3]) {\n      line.drawLine(\n        centerX, centerY,\n        centerX, viewPixels[3],\n        spikeWidth[3], spikeColor[3])\n    }\n  }\n}\n\nproto.dispose = function() {\n  this.plot.removeOverlay(this)\n}\n\nfunction createSpikes2D(plot, options) {\n  var spikes = new GLSpikes2D(plot)\n  spikes.update(options)\n  plot.addOverlay(spikes)\n  return spikes\n}\n"]},"metadata":{},"sourceType":"script"}