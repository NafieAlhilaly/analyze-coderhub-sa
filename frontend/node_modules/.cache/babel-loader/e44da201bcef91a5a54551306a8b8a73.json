{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Color = require('../../components/color');\n\nvar Drawing = require('../../components/drawing');\n\nvar Lib = require('../../lib');\n\nvar Registry = require('../../registry');\n\nvar resizeText = require('./uniform_text').resizeText;\n\nvar attributes = require('./attributes');\n\nvar attributeTextFont = attributes.textfont;\nvar attributeInsideTextFont = attributes.insidetextfont;\nvar attributeOutsideTextFont = attributes.outsidetextfont;\n\nvar helpers = require('./helpers');\n\nfunction style(gd) {\n  var s = d3.select(gd).selectAll('g.barlayer').selectAll('g.trace');\n  resizeText(gd, s, 'bar');\n  var barcount = s.size();\n  var fullLayout = gd._fullLayout; // trace styling\n\n  s.style('opacity', function (d) {\n    return d[0].trace.opacity;\n  }) // for gapless (either stacked or neighboring grouped) bars use\n  // crispEdges to turn off antialiasing so an artificial gap\n  // isn't introduced.\n  .each(function (d) {\n    if (fullLayout.barmode === 'stack' && barcount > 1 || fullLayout.bargap === 0 && fullLayout.bargroupgap === 0 && !d[0].trace.marker.line.width) {\n      d3.select(this).attr('shape-rendering', 'crispEdges');\n    }\n  });\n  s.selectAll('g.points').each(function (d) {\n    var sel = d3.select(this);\n    var trace = d[0].trace;\n    stylePoints(sel, trace, gd);\n  });\n  Registry.getComponentMethod('errorbars', 'style')(s);\n}\n\nfunction stylePoints(sel, trace, gd) {\n  Drawing.pointStyle(sel.selectAll('path'), trace, gd);\n  styleTextPoints(sel, trace, gd);\n}\n\nfunction styleTextPoints(sel, trace, gd) {\n  sel.selectAll('text').each(function (d) {\n    var tx = d3.select(this);\n    var font = Lib.ensureUniformFontSize(gd, determineFont(tx, d, trace, gd));\n    Drawing.font(tx, font);\n  });\n}\n\nfunction styleOnSelect(gd, cd, sel) {\n  var trace = cd[0].trace;\n\n  if (trace.selectedpoints) {\n    stylePointsInSelectionMode(sel, trace, gd);\n  } else {\n    stylePoints(sel, trace, gd);\n    Registry.getComponentMethod('errorbars', 'style')(sel);\n  }\n}\n\nfunction stylePointsInSelectionMode(s, trace, gd) {\n  Drawing.selectedPointStyle(s.selectAll('path'), trace);\n  styleTextInSelectionMode(s.selectAll('text'), trace, gd);\n}\n\nfunction styleTextInSelectionMode(txs, trace, gd) {\n  txs.each(function (d) {\n    var tx = d3.select(this);\n    var font;\n\n    if (d.selected) {\n      font = Lib.ensureUniformFontSize(gd, determineFont(tx, d, trace, gd));\n      var selectedFontColor = trace.selected.textfont && trace.selected.textfont.color;\n\n      if (selectedFontColor) {\n        font.color = selectedFontColor;\n      }\n\n      Drawing.font(tx, font);\n    } else {\n      Drawing.selectedTextStyle(tx, trace);\n    }\n  });\n}\n\nfunction determineFont(tx, d, trace, gd) {\n  var layoutFont = gd._fullLayout.font;\n  var textFont = trace.textfont;\n\n  if (tx.classed('bartext-inside')) {\n    var barColor = getBarColor(d, trace);\n    textFont = getInsideTextFont(trace, d.i, layoutFont, barColor);\n  } else if (tx.classed('bartext-outside')) {\n    textFont = getOutsideTextFont(trace, d.i, layoutFont);\n  }\n\n  return textFont;\n}\n\nfunction getTextFont(trace, index, defaultValue) {\n  return getFontValue(attributeTextFont, trace.textfont, index, defaultValue);\n}\n\nfunction getInsideTextFont(trace, index, layoutFont, barColor) {\n  var defaultFont = getTextFont(trace, index, layoutFont);\n  var wouldFallBackToLayoutFont = trace._input.textfont === undefined || trace._input.textfont.color === undefined || Array.isArray(trace.textfont.color) && trace.textfont.color[index] === undefined;\n\n  if (wouldFallBackToLayoutFont) {\n    defaultFont = {\n      color: Color.contrast(barColor),\n      family: defaultFont.family,\n      size: defaultFont.size\n    };\n  }\n\n  return getFontValue(attributeInsideTextFont, trace.insidetextfont, index, defaultFont);\n}\n\nfunction getOutsideTextFont(trace, index, layoutFont) {\n  var defaultFont = getTextFont(trace, index, layoutFont);\n  return getFontValue(attributeOutsideTextFont, trace.outsidetextfont, index, defaultFont);\n}\n\nfunction getFontValue(attributeDefinition, attributeValue, index, defaultValue) {\n  attributeValue = attributeValue || {};\n  var familyValue = helpers.getValue(attributeValue.family, index);\n  var sizeValue = helpers.getValue(attributeValue.size, index);\n  var colorValue = helpers.getValue(attributeValue.color, index);\n  return {\n    family: helpers.coerceString(attributeDefinition.family, familyValue, defaultValue.family),\n    size: helpers.coerceNumber(attributeDefinition.size, sizeValue, defaultValue.size),\n    color: helpers.coerceColor(attributeDefinition.color, colorValue, defaultValue.color)\n  };\n}\n\nfunction getBarColor(cd, trace) {\n  if (trace.type === 'waterfall') {\n    return trace[cd.dir].marker.color;\n  }\n\n  return cd.mcc || cd.mc || trace.marker.color;\n}\n\nmodule.exports = {\n  style: style,\n  styleTextPoints: styleTextPoints,\n  styleOnSelect: styleOnSelect,\n  getInsideTextFont: getInsideTextFont,\n  getOutsideTextFont: getOutsideTextFont,\n  getBarColor: getBarColor,\n  resizeText: resizeText\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/bar/style.js"],"names":["d3","require","Color","Drawing","Lib","Registry","resizeText","attributes","attributeTextFont","textfont","attributeInsideTextFont","insidetextfont","attributeOutsideTextFont","outsidetextfont","helpers","style","gd","s","select","selectAll","barcount","size","fullLayout","_fullLayout","d","trace","opacity","each","barmode","bargap","bargroupgap","marker","line","width","attr","sel","stylePoints","getComponentMethod","pointStyle","styleTextPoints","tx","font","ensureUniformFontSize","determineFont","styleOnSelect","cd","selectedpoints","stylePointsInSelectionMode","selectedPointStyle","styleTextInSelectionMode","txs","selected","selectedFontColor","color","selectedTextStyle","layoutFont","textFont","classed","barColor","getBarColor","getInsideTextFont","i","getOutsideTextFont","getTextFont","index","defaultValue","getFontValue","defaultFont","wouldFallBackToLayoutFont","_input","undefined","Array","isArray","contrast","family","attributeDefinition","attributeValue","familyValue","getValue","sizeValue","colorValue","coerceString","coerceNumber","coerceColor","type","dir","mcc","mc","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Lib = require('../../lib');\nvar Registry = require('../../registry');\n\nvar resizeText = require('./uniform_text').resizeText;\nvar attributes = require('./attributes');\nvar attributeTextFont = attributes.textfont;\nvar attributeInsideTextFont = attributes.insidetextfont;\nvar attributeOutsideTextFont = attributes.outsidetextfont;\nvar helpers = require('./helpers');\n\nfunction style(gd) {\n    var s = d3.select(gd).selectAll('g.barlayer').selectAll('g.trace');\n    resizeText(gd, s, 'bar');\n\n    var barcount = s.size();\n    var fullLayout = gd._fullLayout;\n\n    // trace styling\n    s.style('opacity', function(d) { return d[0].trace.opacity; })\n\n    // for gapless (either stacked or neighboring grouped) bars use\n    // crispEdges to turn off antialiasing so an artificial gap\n    // isn't introduced.\n    .each(function(d) {\n        if((fullLayout.barmode === 'stack' && barcount > 1) ||\n                (fullLayout.bargap === 0 &&\n                 fullLayout.bargroupgap === 0 &&\n                 !d[0].trace.marker.line.width)) {\n            d3.select(this).attr('shape-rendering', 'crispEdges');\n        }\n    });\n\n    s.selectAll('g.points').each(function(d) {\n        var sel = d3.select(this);\n        var trace = d[0].trace;\n        stylePoints(sel, trace, gd);\n    });\n\n    Registry.getComponentMethod('errorbars', 'style')(s);\n}\n\nfunction stylePoints(sel, trace, gd) {\n    Drawing.pointStyle(sel.selectAll('path'), trace, gd);\n    styleTextPoints(sel, trace, gd);\n}\n\nfunction styleTextPoints(sel, trace, gd) {\n    sel.selectAll('text').each(function(d) {\n        var tx = d3.select(this);\n        var font = Lib.ensureUniformFontSize(gd, determineFont(tx, d, trace, gd));\n\n        Drawing.font(tx, font);\n    });\n}\n\nfunction styleOnSelect(gd, cd, sel) {\n    var trace = cd[0].trace;\n\n    if(trace.selectedpoints) {\n        stylePointsInSelectionMode(sel, trace, gd);\n    } else {\n        stylePoints(sel, trace, gd);\n        Registry.getComponentMethod('errorbars', 'style')(sel);\n    }\n}\n\nfunction stylePointsInSelectionMode(s, trace, gd) {\n    Drawing.selectedPointStyle(s.selectAll('path'), trace);\n    styleTextInSelectionMode(s.selectAll('text'), trace, gd);\n}\n\nfunction styleTextInSelectionMode(txs, trace, gd) {\n    txs.each(function(d) {\n        var tx = d3.select(this);\n        var font;\n\n        if(d.selected) {\n            font = Lib.ensureUniformFontSize(gd, determineFont(tx, d, trace, gd));\n\n            var selectedFontColor = trace.selected.textfont && trace.selected.textfont.color;\n            if(selectedFontColor) {\n                font.color = selectedFontColor;\n            }\n\n            Drawing.font(tx, font);\n        } else {\n            Drawing.selectedTextStyle(tx, trace);\n        }\n    });\n}\n\nfunction determineFont(tx, d, trace, gd) {\n    var layoutFont = gd._fullLayout.font;\n    var textFont = trace.textfont;\n\n    if(tx.classed('bartext-inside')) {\n        var barColor = getBarColor(d, trace);\n        textFont = getInsideTextFont(trace, d.i, layoutFont, barColor);\n    } else if(tx.classed('bartext-outside')) {\n        textFont = getOutsideTextFont(trace, d.i, layoutFont);\n    }\n\n    return textFont;\n}\n\nfunction getTextFont(trace, index, defaultValue) {\n    return getFontValue(\n      attributeTextFont, trace.textfont, index, defaultValue);\n}\n\nfunction getInsideTextFont(trace, index, layoutFont, barColor) {\n    var defaultFont = getTextFont(trace, index, layoutFont);\n\n    var wouldFallBackToLayoutFont =\n      (trace._input.textfont === undefined || trace._input.textfont.color === undefined) ||\n      (Array.isArray(trace.textfont.color) && trace.textfont.color[index] === undefined);\n    if(wouldFallBackToLayoutFont) {\n        defaultFont = {\n            color: Color.contrast(barColor),\n            family: defaultFont.family,\n            size: defaultFont.size\n        };\n    }\n\n    return getFontValue(\n      attributeInsideTextFont, trace.insidetextfont, index, defaultFont);\n}\n\nfunction getOutsideTextFont(trace, index, layoutFont) {\n    var defaultFont = getTextFont(trace, index, layoutFont);\n    return getFontValue(\n      attributeOutsideTextFont, trace.outsidetextfont, index, defaultFont);\n}\n\nfunction getFontValue(attributeDefinition, attributeValue, index, defaultValue) {\n    attributeValue = attributeValue || {};\n\n    var familyValue = helpers.getValue(attributeValue.family, index);\n    var sizeValue = helpers.getValue(attributeValue.size, index);\n    var colorValue = helpers.getValue(attributeValue.color, index);\n\n    return {\n        family: helpers.coerceString(\n          attributeDefinition.family, familyValue, defaultValue.family),\n        size: helpers.coerceNumber(\n          attributeDefinition.size, sizeValue, defaultValue.size),\n        color: helpers.coerceColor(\n          attributeDefinition.color, colorValue, defaultValue.color)\n    };\n}\n\nfunction getBarColor(cd, trace) {\n    if(trace.type === 'waterfall') {\n        return trace[cd.dir].marker.color;\n    }\n    return cd.mcc || cd.mc || trace.marker.color;\n}\n\nmodule.exports = {\n    style: style,\n    styleTextPoints: styleTextPoints,\n    styleOnSelect: styleOnSelect,\n    getInsideTextFont: getInsideTextFont,\n    getOutsideTextFont: getOutsideTextFont,\n    getBarColor: getBarColor,\n    resizeText: resizeText\n};\n"]},"metadata":{},"sourceType":"script"}