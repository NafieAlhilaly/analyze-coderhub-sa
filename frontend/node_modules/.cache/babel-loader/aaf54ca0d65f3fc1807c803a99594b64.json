{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Registry = require('../../registry');\n\nvar Plots = require('../../plots/plots');\n\nvar Color = require('../color');\n\nvar Drawing = require('../drawing');\n\nvar Lib = require('../../lib');\n\nvar strTranslate = Lib.strTranslate;\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar axisIds = require('../../plots/cartesian/axis_ids');\n\nvar alignmentConstants = require('../../constants/alignment');\n\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\n\nvar constants = require('./constants');\n\nvar getUpdateObject = require('./get_update_object');\n\nmodule.exports = function draw(gd) {\n  var fullLayout = gd._fullLayout;\n\n  var selectors = fullLayout._infolayer.selectAll('.rangeselector').data(makeSelectorData(gd), selectorKeyFunc);\n\n  selectors.enter().append('g').classed('rangeselector', true);\n  selectors.exit().remove();\n  selectors.style({\n    cursor: 'pointer',\n    'pointer-events': 'all'\n  });\n  selectors.each(function (d) {\n    var selector = d3.select(this);\n    var axisLayout = d;\n    var selectorLayout = axisLayout.rangeselector;\n    var buttons = selector.selectAll('g.button').data(Lib.filterVisible(selectorLayout.buttons));\n    buttons.enter().append('g').classed('button', true);\n    buttons.exit().remove();\n    buttons.each(function (d) {\n      var button = d3.select(this);\n      var update = getUpdateObject(axisLayout, d);\n      d._isActive = isActive(axisLayout, d, update);\n      button.call(drawButtonRect, selectorLayout, d);\n      button.call(drawButtonText, selectorLayout, d, gd);\n      button.on('click', function () {\n        if (gd._dragged) return;\n        Registry.call('_guiRelayout', gd, update);\n      });\n      button.on('mouseover', function () {\n        d._isHovered = true;\n        button.call(drawButtonRect, selectorLayout, d);\n      });\n      button.on('mouseout', function () {\n        d._isHovered = false;\n        button.call(drawButtonRect, selectorLayout, d);\n      });\n    });\n    reposition(gd, buttons, selectorLayout, axisLayout._name, selector);\n  });\n};\n\nfunction makeSelectorData(gd) {\n  var axes = axisIds.list(gd, 'x', true);\n  var data = [];\n\n  for (var i = 0; i < axes.length; i++) {\n    var axis = axes[i];\n\n    if (axis.rangeselector && axis.rangeselector.visible) {\n      data.push(axis);\n    }\n  }\n\n  return data;\n}\n\nfunction selectorKeyFunc(d) {\n  return d._id;\n}\n\nfunction isActive(axisLayout, opts, update) {\n  if (opts.step === 'all') {\n    return axisLayout.autorange === true;\n  } else {\n    var keys = Object.keys(update);\n    return axisLayout.range[0] === update[keys[0]] && axisLayout.range[1] === update[keys[1]];\n  }\n}\n\nfunction drawButtonRect(button, selectorLayout, d) {\n  var rect = Lib.ensureSingle(button, 'rect', 'selector-rect', function (s) {\n    s.attr('shape-rendering', 'crispEdges');\n  });\n  rect.attr({\n    'rx': constants.rx,\n    'ry': constants.ry\n  });\n  rect.call(Color.stroke, selectorLayout.bordercolor).call(Color.fill, getFillColor(selectorLayout, d)).style('stroke-width', selectorLayout.borderwidth + 'px');\n}\n\nfunction getFillColor(selectorLayout, d) {\n  return d._isActive || d._isHovered ? selectorLayout.activecolor : selectorLayout.bgcolor;\n}\n\nfunction drawButtonText(button, selectorLayout, d, gd) {\n  function textLayout(s) {\n    svgTextUtils.convertToTspans(s, gd);\n  }\n\n  var text = Lib.ensureSingle(button, 'text', 'selector-text', function (s) {\n    s.attr('text-anchor', 'middle');\n  });\n  text.call(Drawing.font, selectorLayout.font).text(getLabel(d, gd._fullLayout._meta)).call(textLayout);\n}\n\nfunction getLabel(opts, _meta) {\n  if (opts.label) {\n    return _meta ? Lib.templateString(opts.label, _meta) : opts.label;\n  }\n\n  if (opts.step === 'all') return 'all';\n  return opts.count + opts.step.charAt(0);\n}\n\nfunction reposition(gd, buttons, opts, axName, selector) {\n  var width = 0;\n  var height = 0;\n  var borderWidth = opts.borderwidth;\n  buttons.each(function () {\n    var button = d3.select(this);\n    var text = button.select('.selector-text');\n    var tHeight = opts.font.size * LINE_SPACING;\n    var hEff = Math.max(tHeight * svgTextUtils.lineCount(text), 16) + 3;\n    height = Math.max(height, hEff);\n  });\n  buttons.each(function () {\n    var button = d3.select(this);\n    var rect = button.select('.selector-rect');\n    var text = button.select('.selector-text');\n    var tWidth = text.node() && Drawing.bBox(text.node()).width;\n    var tHeight = opts.font.size * LINE_SPACING;\n    var tLines = svgTextUtils.lineCount(text);\n    var wEff = Math.max(tWidth + 10, constants.minButtonWidth); // TODO add MathJax support\n    // TODO add buttongap attribute\n\n    button.attr('transform', strTranslate(borderWidth + width, borderWidth));\n    rect.attr({\n      x: 0,\n      y: 0,\n      width: wEff,\n      height: height\n    });\n    svgTextUtils.positionText(text, wEff / 2, height / 2 - (tLines - 1) * tHeight / 2 + 3);\n    width += wEff + 5;\n  });\n  var graphSize = gd._fullLayout._size;\n  var lx = graphSize.l + graphSize.w * opts.x;\n  var ly = graphSize.t + graphSize.h * (1 - opts.y);\n  var xanchor = 'left';\n\n  if (Lib.isRightAnchor(opts)) {\n    lx -= width;\n    xanchor = 'right';\n  }\n\n  if (Lib.isCenterAnchor(opts)) {\n    lx -= width / 2;\n    xanchor = 'center';\n  }\n\n  var yanchor = 'top';\n\n  if (Lib.isBottomAnchor(opts)) {\n    ly -= height;\n    yanchor = 'bottom';\n  }\n\n  if (Lib.isMiddleAnchor(opts)) {\n    ly -= height / 2;\n    yanchor = 'middle';\n  }\n\n  width = Math.ceil(width);\n  height = Math.ceil(height);\n  lx = Math.round(lx);\n  ly = Math.round(ly);\n  Plots.autoMargin(gd, axName + '-range-selector', {\n    x: opts.x,\n    y: opts.y,\n    l: width * FROM_TL[xanchor],\n    r: width * FROM_BR[xanchor],\n    b: height * FROM_BR[yanchor],\n    t: height * FROM_TL[yanchor]\n  });\n  selector.attr('transform', strTranslate(lx, ly));\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/rangeselector/draw.js"],"names":["d3","require","Registry","Plots","Color","Drawing","Lib","strTranslate","svgTextUtils","axisIds","alignmentConstants","LINE_SPACING","FROM_TL","FROM_BR","constants","getUpdateObject","module","exports","draw","gd","fullLayout","_fullLayout","selectors","_infolayer","selectAll","data","makeSelectorData","selectorKeyFunc","enter","append","classed","exit","remove","style","cursor","each","d","selector","select","axisLayout","selectorLayout","rangeselector","buttons","filterVisible","button","update","_isActive","isActive","call","drawButtonRect","drawButtonText","on","_dragged","_isHovered","reposition","_name","axes","list","i","length","axis","visible","push","_id","opts","step","autorange","keys","Object","range","rect","ensureSingle","s","attr","rx","ry","stroke","bordercolor","fill","getFillColor","borderwidth","activecolor","bgcolor","textLayout","convertToTspans","text","font","getLabel","_meta","label","templateString","count","charAt","axName","width","height","borderWidth","tHeight","size","hEff","Math","max","lineCount","tWidth","node","bBox","tLines","wEff","minButtonWidth","x","y","positionText","graphSize","_size","lx","l","w","ly","t","h","xanchor","isRightAnchor","isCenterAnchor","yanchor","isBottomAnchor","isMiddleAnchor","ceil","round","autoMargin","r","b"],"mappings":"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","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Registry = require('../../registry');\nvar Plots = require('../../plots/plots');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar axisIds = require('../../plots/cartesian/axis_ids');\n\nvar alignmentConstants = require('../../constants/alignment');\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\n\nvar constants = require('./constants');\nvar getUpdateObject = require('./get_update_object');\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout;\n\n    var selectors = fullLayout._infolayer.selectAll('.rangeselector')\n        .data(makeSelectorData(gd), selectorKeyFunc);\n\n    selectors.enter().append('g')\n        .classed('rangeselector', true);\n\n    selectors.exit().remove();\n\n    selectors.style({\n        cursor: 'pointer',\n        'pointer-events': 'all'\n    });\n\n    selectors.each(function(d) {\n        var selector = d3.select(this);\n        var axisLayout = d;\n        var selectorLayout = axisLayout.rangeselector;\n\n        var buttons = selector.selectAll('g.button')\n            .data(Lib.filterVisible(selectorLayout.buttons));\n\n        buttons.enter().append('g')\n            .classed('button', true);\n\n        buttons.exit().remove();\n\n        buttons.each(function(d) {\n            var button = d3.select(this);\n            var update = getUpdateObject(axisLayout, d);\n\n            d._isActive = isActive(axisLayout, d, update);\n\n            button.call(drawButtonRect, selectorLayout, d);\n            button.call(drawButtonText, selectorLayout, d, gd);\n\n            button.on('click', function() {\n                if(gd._dragged) return;\n\n                Registry.call('_guiRelayout', gd, update);\n            });\n\n            button.on('mouseover', function() {\n                d._isHovered = true;\n                button.call(drawButtonRect, selectorLayout, d);\n            });\n\n            button.on('mouseout', function() {\n                d._isHovered = false;\n                button.call(drawButtonRect, selectorLayout, d);\n            });\n        });\n\n        reposition(gd, buttons, selectorLayout, axisLayout._name, selector);\n    });\n};\n\nfunction makeSelectorData(gd) {\n    var axes = axisIds.list(gd, 'x', true);\n    var data = [];\n\n    for(var i = 0; i < axes.length; i++) {\n        var axis = axes[i];\n\n        if(axis.rangeselector && axis.rangeselector.visible) {\n            data.push(axis);\n        }\n    }\n\n    return data;\n}\n\nfunction selectorKeyFunc(d) {\n    return d._id;\n}\n\nfunction isActive(axisLayout, opts, update) {\n    if(opts.step === 'all') {\n        return axisLayout.autorange === true;\n    } else {\n        var keys = Object.keys(update);\n\n        return (\n            axisLayout.range[0] === update[keys[0]] &&\n            axisLayout.range[1] === update[keys[1]]\n        );\n    }\n}\n\nfunction drawButtonRect(button, selectorLayout, d) {\n    var rect = Lib.ensureSingle(button, 'rect', 'selector-rect', function(s) {\n        s.attr('shape-rendering', 'crispEdges');\n    });\n\n    rect.attr({\n        'rx': constants.rx,\n        'ry': constants.ry\n    });\n\n    rect.call(Color.stroke, selectorLayout.bordercolor)\n        .call(Color.fill, getFillColor(selectorLayout, d))\n        .style('stroke-width', selectorLayout.borderwidth + 'px');\n}\n\nfunction getFillColor(selectorLayout, d) {\n    return (d._isActive || d._isHovered) ?\n        selectorLayout.activecolor :\n        selectorLayout.bgcolor;\n}\n\nfunction drawButtonText(button, selectorLayout, d, gd) {\n    function textLayout(s) {\n        svgTextUtils.convertToTspans(s, gd);\n    }\n\n    var text = Lib.ensureSingle(button, 'text', 'selector-text', function(s) {\n        s.attr('text-anchor', 'middle');\n    });\n\n    text.call(Drawing.font, selectorLayout.font)\n        .text(getLabel(d, gd._fullLayout._meta))\n        .call(textLayout);\n}\n\nfunction getLabel(opts, _meta) {\n    if(opts.label) {\n        return _meta ?\n            Lib.templateString(opts.label, _meta) :\n            opts.label;\n    }\n\n    if(opts.step === 'all') return 'all';\n\n    return opts.count + opts.step.charAt(0);\n}\n\nfunction reposition(gd, buttons, opts, axName, selector) {\n    var width = 0;\n    var height = 0;\n\n    var borderWidth = opts.borderwidth;\n\n    buttons.each(function() {\n        var button = d3.select(this);\n        var text = button.select('.selector-text');\n\n        var tHeight = opts.font.size * LINE_SPACING;\n        var hEff = Math.max(tHeight * svgTextUtils.lineCount(text), 16) + 3;\n\n        height = Math.max(height, hEff);\n    });\n\n    buttons.each(function() {\n        var button = d3.select(this);\n        var rect = button.select('.selector-rect');\n        var text = button.select('.selector-text');\n\n        var tWidth = text.node() && Drawing.bBox(text.node()).width;\n        var tHeight = opts.font.size * LINE_SPACING;\n        var tLines = svgTextUtils.lineCount(text);\n\n        var wEff = Math.max(tWidth + 10, constants.minButtonWidth);\n\n        // TODO add MathJax support\n\n        // TODO add buttongap attribute\n\n        button.attr('transform', strTranslate(borderWidth + width, borderWidth));\n\n        rect.attr({\n            x: 0,\n            y: 0,\n            width: wEff,\n            height: height\n        });\n\n        svgTextUtils.positionText(text, wEff / 2,\n            height / 2 - ((tLines - 1) * tHeight / 2) + 3);\n\n        width += wEff + 5;\n    });\n\n    var graphSize = gd._fullLayout._size;\n    var lx = graphSize.l + graphSize.w * opts.x;\n    var ly = graphSize.t + graphSize.h * (1 - opts.y);\n\n    var xanchor = 'left';\n    if(Lib.isRightAnchor(opts)) {\n        lx -= width;\n        xanchor = 'right';\n    }\n    if(Lib.isCenterAnchor(opts)) {\n        lx -= width / 2;\n        xanchor = 'center';\n    }\n\n    var yanchor = 'top';\n    if(Lib.isBottomAnchor(opts)) {\n        ly -= height;\n        yanchor = 'bottom';\n    }\n    if(Lib.isMiddleAnchor(opts)) {\n        ly -= height / 2;\n        yanchor = 'middle';\n    }\n\n    width = Math.ceil(width);\n    height = Math.ceil(height);\n    lx = Math.round(lx);\n    ly = Math.round(ly);\n\n    Plots.autoMargin(gd, axName + '-range-selector', {\n        x: opts.x,\n        y: opts.y,\n        l: width * FROM_TL[xanchor],\n        r: width * FROM_BR[xanchor],\n        b: height * FROM_BR[yanchor],\n        t: height * FROM_TL[yanchor]\n    });\n\n    selector.attr('transform', strTranslate(lx, ly));\n}\n"]},"metadata":{},"sourceType":"script"}