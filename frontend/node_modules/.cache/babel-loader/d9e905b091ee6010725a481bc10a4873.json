{"ast":null,"code":"'use strict';\n\nvar bsearch = require('binary-search-bounds');\n\nmodule.exports = createTriangulation;\n\nfunction Triangulation(stars, edges) {\n  this.stars = stars;\n  this.edges = edges;\n}\n\nvar proto = Triangulation.prototype;\n\nfunction removePair(list, j, k) {\n  for (var i = 1, n = list.length; i < n; i += 2) {\n    if (list[i - 1] === j && list[i] === k) {\n      list[i - 1] = list[n - 2];\n      list[i] = list[n - 1];\n      list.length = n - 2;\n      return;\n    }\n  }\n}\n\nproto.isConstraint = function () {\n  var e = [0, 0];\n\n  function compareLex(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  return function (i, j) {\n    e[0] = Math.min(i, j);\n    e[1] = Math.max(i, j);\n    return bsearch.eq(this.edges, e, compareLex) >= 0;\n  };\n}();\n\nproto.removeTriangle = function (i, j, k) {\n  var stars = this.stars;\n  removePair(stars[i], j, k);\n  removePair(stars[j], k, i);\n  removePair(stars[k], i, j);\n};\n\nproto.addTriangle = function (i, j, k) {\n  var stars = this.stars;\n  stars[i].push(j, k);\n  stars[j].push(k, i);\n  stars[k].push(i, j);\n};\n\nproto.opposite = function (j, i) {\n  var list = this.stars[i];\n\n  for (var k = 1, n = list.length; k < n; k += 2) {\n    if (list[k] === j) {\n      return list[k - 1];\n    }\n  }\n\n  return -1;\n};\n\nproto.flip = function (i, j) {\n  var a = this.opposite(i, j);\n  var b = this.opposite(j, i);\n  this.removeTriangle(i, j, a);\n  this.removeTriangle(j, i, b);\n  this.addTriangle(i, b, a);\n  this.addTriangle(j, a, b);\n};\n\nproto.edges = function () {\n  var stars = this.stars;\n  var result = [];\n\n  for (var i = 0, n = stars.length; i < n; ++i) {\n    var list = stars[i];\n\n    for (var j = 0, m = list.length; j < m; j += 2) {\n      result.push([list[j], list[j + 1]]);\n    }\n  }\n\n  return result;\n};\n\nproto.cells = function () {\n  var stars = this.stars;\n  var result = [];\n\n  for (var i = 0, n = stars.length; i < n; ++i) {\n    var list = stars[i];\n\n    for (var j = 0, m = list.length; j < m; j += 2) {\n      var s = list[j];\n      var t = list[j + 1];\n\n      if (i < Math.min(s, t)) {\n        result.push([i, s, t]);\n      }\n    }\n  }\n\n  return result;\n};\n\nfunction createTriangulation(numVerts, edges) {\n  var stars = new Array(numVerts);\n\n  for (var i = 0; i < numVerts; ++i) {\n    stars[i] = [];\n  }\n\n  return new Triangulation(stars, edges);\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/cdt2d/lib/triangulation.js"],"names":["bsearch","require","module","exports","createTriangulation","Triangulation","stars","edges","proto","prototype","removePair","list","j","k","i","n","length","isConstraint","e","compareLex","a","b","Math","min","max","eq","removeTriangle","addTriangle","push","opposite","flip","result","m","cells","s","t","numVerts","Array"],"mappings":"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","sourcesContent":["'use strict'\n\nvar bsearch = require('binary-search-bounds')\n\nmodule.exports = createTriangulation\n\nfunction Triangulation(stars, edges) {\n  this.stars = stars\n  this.edges = edges\n}\n\nvar proto = Triangulation.prototype\n\nfunction removePair(list, j, k) {\n  for(var i=1, n=list.length; i<n; i+=2) {\n    if(list[i-1] === j && list[i] === k) {\n      list[i-1] = list[n-2]\n      list[i] = list[n-1]\n      list.length = n - 2\n      return\n    }\n  }\n}\n\nproto.isConstraint = (function() {\n  var e = [0,0]\n  function compareLex(a, b) {\n    return a[0] - b[0] || a[1] - b[1]\n  }\n  return function(i, j) {\n    e[0] = Math.min(i,j)\n    e[1] = Math.max(i,j)\n    return bsearch.eq(this.edges, e, compareLex) >= 0\n  }\n})()\n\nproto.removeTriangle = function(i, j, k) {\n  var stars = this.stars\n  removePair(stars[i], j, k)\n  removePair(stars[j], k, i)\n  removePair(stars[k], i, j)\n}\n\nproto.addTriangle = function(i, j, k) {\n  var stars = this.stars\n  stars[i].push(j, k)\n  stars[j].push(k, i)\n  stars[k].push(i, j)\n}\n\nproto.opposite = function(j, i) {\n  var list = this.stars[i]\n  for(var k=1, n=list.length; k<n; k+=2) {\n    if(list[k] === j) {\n      return list[k-1]\n    }\n  }\n  return -1\n}\n\nproto.flip = function(i, j) {\n  var a = this.opposite(i, j)\n  var b = this.opposite(j, i)\n  this.removeTriangle(i, j, a)\n  this.removeTriangle(j, i, b)\n  this.addTriangle(i, b, a)\n  this.addTriangle(j, a, b)\n}\n\nproto.edges = function() {\n  var stars = this.stars\n  var result = []\n  for(var i=0, n=stars.length; i<n; ++i) {\n    var list = stars[i]\n    for(var j=0, m=list.length; j<m; j+=2) {\n      result.push([list[j], list[j+1]])\n    }\n  }\n  return result\n}\n\nproto.cells = function() {\n  var stars = this.stars\n  var result = []\n  for(var i=0, n=stars.length; i<n; ++i) {\n    var list = stars[i]\n    for(var j=0, m=list.length; j<m; j+=2) {\n      var s = list[j]\n      var t = list[j+1]\n      if(i < Math.min(s, t)) {\n        result.push([i, s, t])\n      }\n    }\n  }\n  return result\n}\n\nfunction createTriangulation(numVerts, edges) {\n  var stars = new Array(numVerts)\n  for(var i=0; i<numVerts; ++i) {\n    stars[i] = []\n  }\n  return new Triangulation(stars, edges)\n}\n"]},"metadata":{},"sourceType":"script"}