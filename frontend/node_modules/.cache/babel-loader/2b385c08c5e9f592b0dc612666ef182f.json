{"ast":null,"code":"module.exports = rotateX;\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\n\nfunction rotateX(out, a, b, c) {\n  var by = b[1];\n  var bz = b[2]; // Translate point to the origin\n\n  var py = a[1] - by;\n  var pz = a[2] - bz;\n  var sc = Math.sin(c);\n  var cc = Math.cos(c); // perform rotation and translate to correct position\n\n  out[0] = a[0];\n  out[1] = by + py * cc - pz * sc;\n  out[2] = bz + py * sc + pz * cc;\n  return out;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/gl-vec3/rotateX.js"],"names":["module","exports","rotateX","out","a","b","c","by","bz","py","pz","sc","Math","sin","cc","cos"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4BC,CAA5B,EAA8B;AAC1B,MAAIC,EAAE,GAAGF,CAAC,CAAC,CAAD,CAAV;AACA,MAAIG,EAAE,GAAGH,CAAC,CAAC,CAAD,CAAV,CAF0B,CAI1B;;AACA,MAAII,EAAE,GAAGL,CAAC,CAAC,CAAD,CAAD,GAAOG,EAAhB;AACA,MAAIG,EAAE,GAAGN,CAAC,CAAC,CAAD,CAAD,GAAOI,EAAhB;AAEA,MAAIG,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASP,CAAT,CAAT;AACA,MAAIQ,EAAE,GAAGF,IAAI,CAACG,GAAL,CAAST,CAAT,CAAT,CAT0B,CAW1B;;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASI,EAAE,GAAGE,EAAE,GAAGK,EAAV,GAAeJ,EAAE,GAAGC,EAA7B;AACAR,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASK,EAAE,GAAGC,EAAE,GAAGE,EAAV,GAAeD,EAAE,GAAGI,EAA7B;AAEA,SAAOX,GAAP;AACH","sourcesContent":["module.exports = rotateX;\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateX(out, a, b, c){\n    var by = b[1]\n    var bz = b[2]\n\n    // Translate point to the origin\n    var py = a[1] - by\n    var pz = a[2] - bz\n\n    var sc = Math.sin(c)\n    var cc = Math.cos(c)\n\n    // perform rotation and translate to correct position\n    out[0] = a[0]\n    out[1] = by + py * cc - pz * sc\n    out[2] = bz + py * sc + pz * cc\n\n    return out\n}\n"]},"metadata":{},"sourceType":"script"}