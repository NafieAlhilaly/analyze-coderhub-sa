{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Drawing = require('../../components/drawing');\n\nvar map1dArray = require('./map_1d_array');\n\nvar makepath = require('./makepath');\n\nvar orientText = require('./orient_text');\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar Lib = require('../../lib');\n\nvar strRotate = Lib.strRotate;\nvar strTranslate = Lib.strTranslate;\n\nvar alignmentConstants = require('../../constants/alignment');\n\nmodule.exports = function plot(gd, plotinfo, cdcarpet, carpetLayer) {\n  var xa = plotinfo.xaxis;\n  var ya = plotinfo.yaxis;\n  var fullLayout = gd._fullLayout;\n  var clipLayer = fullLayout._clips;\n  Lib.makeTraceGroups(carpetLayer, cdcarpet, 'trace').each(function (cd) {\n    var axisLayer = d3.select(this);\n    var cd0 = cd[0];\n    var trace = cd0.trace;\n    var aax = trace.aaxis;\n    var bax = trace.baxis;\n    var minorLayer = Lib.ensureSingle(axisLayer, 'g', 'minorlayer');\n    var majorLayer = Lib.ensureSingle(axisLayer, 'g', 'majorlayer');\n    var boundaryLayer = Lib.ensureSingle(axisLayer, 'g', 'boundarylayer');\n    var labelLayer = Lib.ensureSingle(axisLayer, 'g', 'labellayer');\n    axisLayer.style('opacity', trace.opacity);\n    drawGridLines(xa, ya, majorLayer, aax, 'a', aax._gridlines, true);\n    drawGridLines(xa, ya, majorLayer, bax, 'b', bax._gridlines, true);\n    drawGridLines(xa, ya, minorLayer, aax, 'a', aax._minorgridlines, true);\n    drawGridLines(xa, ya, minorLayer, bax, 'b', bax._minorgridlines, true); // NB: These are not omitted if the lines are not active. The joins must be executed\n    // in order for them to get cleaned up without a full redraw\n\n    drawGridLines(xa, ya, boundaryLayer, aax, 'a-boundary', aax._boundarylines);\n    drawGridLines(xa, ya, boundaryLayer, bax, 'b-boundary', bax._boundarylines);\n    var labelOrientationA = drawAxisLabels(gd, xa, ya, trace, cd0, labelLayer, aax._labels, 'a-label');\n    var labelOrientationB = drawAxisLabels(gd, xa, ya, trace, cd0, labelLayer, bax._labels, 'b-label');\n    drawAxisTitles(gd, labelLayer, trace, cd0, xa, ya, labelOrientationA, labelOrientationB);\n    drawClipPath(trace, cd0, clipLayer, xa, ya);\n  });\n};\n\nfunction drawClipPath(trace, t, layer, xaxis, yaxis) {\n  var seg, xp, yp, i;\n  var clip = layer.select('#' + trace._clipPathId);\n\n  if (!clip.size()) {\n    clip = layer.append('clipPath').classed('carpetclip', true);\n  }\n\n  var path = Lib.ensureSingle(clip, 'path', 'carpetboundary');\n  var segments = t.clipsegments;\n  var segs = [];\n\n  for (i = 0; i < segments.length; i++) {\n    seg = segments[i];\n    xp = map1dArray([], seg.x, xaxis.c2p);\n    yp = map1dArray([], seg.y, yaxis.c2p);\n    segs.push(makepath(xp, yp, seg.bicubic));\n  } // This could be optimized ever so slightly to avoid no-op L segments\n  // at the corners, but it's so negligible that I don't think it's worth\n  // the extra complexity\n\n\n  var clipPathData = 'M' + segs.join('L') + 'Z';\n  clip.attr('id', trace._clipPathId);\n  path.attr('d', clipPathData);\n}\n\nfunction drawGridLines(xaxis, yaxis, layer, axis, axisLetter, gridlines) {\n  var lineClass = 'const-' + axisLetter + '-lines';\n  var gridJoin = layer.selectAll('.' + lineClass).data(gridlines);\n  gridJoin.enter().append('path').classed(lineClass, true).style('vector-effect', 'non-scaling-stroke');\n  gridJoin.each(function (d) {\n    var gridline = d;\n    var x = gridline.x;\n    var y = gridline.y;\n    var xp = map1dArray([], x, xaxis.c2p);\n    var yp = map1dArray([], y, yaxis.c2p);\n    var path = 'M' + makepath(xp, yp, gridline.smoothing);\n    var el = d3.select(this);\n    el.attr('d', path).style('stroke-width', gridline.width).style('stroke', gridline.color).style('fill', 'none');\n  });\n  gridJoin.exit().remove();\n}\n\nfunction drawAxisLabels(gd, xaxis, yaxis, trace, t, layer, labels, labelClass) {\n  var labelJoin = layer.selectAll('text.' + labelClass).data(labels);\n  labelJoin.enter().append('text').classed(labelClass, true);\n  var maxExtent = 0;\n  var labelOrientation = {};\n  labelJoin.each(function (label, i) {\n    // Most of the positioning is done in calc_labels. Only the parts that depend upon\n    // the screen space representation of the x and y axes are here:\n    var orientation;\n\n    if (label.axis.tickangle === 'auto') {\n      orientation = orientText(trace, xaxis, yaxis, label.xy, label.dxy);\n    } else {\n      var angle = (label.axis.tickangle + 180.0) * Math.PI / 180.0;\n      orientation = orientText(trace, xaxis, yaxis, label.xy, [Math.cos(angle), Math.sin(angle)]);\n    }\n\n    if (!i) {\n      // TODO: offsetMultiplier? Not currently used anywhere...\n      labelOrientation = {\n        angle: orientation.angle,\n        flip: orientation.flip\n      };\n    }\n\n    var direction = (label.endAnchor ? -1 : 1) * orientation.flip;\n    var labelEl = d3.select(this).attr({\n      'text-anchor': direction > 0 ? 'start' : 'end',\n      'data-notex': 1\n    }).call(Drawing.font, label.font).text(label.text).call(svgTextUtils.convertToTspans, gd);\n    var bbox = Drawing.bBox(this);\n    labelEl.attr('transform', // Translate to the correct point:\n    strTranslate(orientation.p[0], orientation.p[1]) + // Rotate to line up with grid line tangent:\n    strRotate(orientation.angle) + // Adjust the baseline and indentation:\n    strTranslate(label.axis.labelpadding * direction, bbox.height * 0.3));\n    maxExtent = Math.max(maxExtent, bbox.width + label.axis.labelpadding);\n  });\n  labelJoin.exit().remove();\n  labelOrientation.maxExtent = maxExtent;\n  return labelOrientation;\n}\n\nfunction drawAxisTitles(gd, layer, trace, t, xa, ya, labelOrientationA, labelOrientationB) {\n  var a, b, xy, dxy;\n  var aMin = Lib.aggNums(Math.min, null, trace.a);\n  var aMax = Lib.aggNums(Math.max, null, trace.a);\n  var bMin = Lib.aggNums(Math.min, null, trace.b);\n  var bMax = Lib.aggNums(Math.max, null, trace.b);\n  a = 0.5 * (aMin + aMax);\n  b = bMin;\n  xy = trace.ab2xy(a, b, true);\n  dxy = trace.dxyda_rough(a, b);\n\n  if (labelOrientationA.angle === undefined) {\n    Lib.extendFlat(labelOrientationA, orientText(trace, xa, ya, xy, trace.dxydb_rough(a, b)));\n  }\n\n  drawAxisTitle(gd, layer, trace, t, xy, dxy, trace.aaxis, xa, ya, labelOrientationA, 'a-title');\n  a = aMin;\n  b = 0.5 * (bMin + bMax);\n  xy = trace.ab2xy(a, b, true);\n  dxy = trace.dxydb_rough(a, b);\n\n  if (labelOrientationB.angle === undefined) {\n    Lib.extendFlat(labelOrientationB, orientText(trace, xa, ya, xy, trace.dxyda_rough(a, b)));\n  }\n\n  drawAxisTitle(gd, layer, trace, t, xy, dxy, trace.baxis, xa, ya, labelOrientationB, 'b-title');\n}\n\nvar lineSpacing = alignmentConstants.LINE_SPACING;\nvar midShift = (1 - alignmentConstants.MID_SHIFT) / lineSpacing + 1;\n\nfunction drawAxisTitle(gd, layer, trace, t, xy, dxy, axis, xa, ya, labelOrientation, labelClass) {\n  var data = [];\n  if (axis.title.text) data.push(axis.title.text);\n  var titleJoin = layer.selectAll('text.' + labelClass).data(data);\n  var offset = labelOrientation.maxExtent;\n  titleJoin.enter().append('text').classed(labelClass, true); // There's only one, but we'll do it as a join so it's updated nicely:\n\n  titleJoin.each(function () {\n    var orientation = orientText(trace, xa, ya, xy, dxy);\n\n    if (['start', 'both'].indexOf(axis.showticklabels) === -1) {\n      offset = 0;\n    } // In addition to the size of the labels, add on some extra padding:\n\n\n    var titleSize = axis.title.font.size;\n    offset += titleSize + axis.title.offset;\n    var labelNorm = labelOrientation.angle + (labelOrientation.flip < 0 ? 180 : 0);\n    var angleDiff = (labelNorm - orientation.angle + 450) % 360;\n    var reverseTitle = angleDiff > 90 && angleDiff < 270;\n    var el = d3.select(this);\n    el.text(axis.title.text).call(svgTextUtils.convertToTspans, gd);\n\n    if (reverseTitle) {\n      offset = (-svgTextUtils.lineCount(el) + midShift) * lineSpacing * titleSize - offset;\n    }\n\n    el.attr('transform', strTranslate(orientation.p[0], orientation.p[1]) + strRotate(orientation.angle) + strTranslate(0, offset)).attr('text-anchor', 'middle').call(Drawing.font, axis.title.font);\n  });\n  titleJoin.exit().remove();\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/carpet/plot.js"],"names":["d3","require","Drawing","map1dArray","makepath","orientText","svgTextUtils","Lib","strRotate","strTranslate","alignmentConstants","module","exports","plot","gd","plotinfo","cdcarpet","carpetLayer","xa","xaxis","ya","yaxis","fullLayout","_fullLayout","clipLayer","_clips","makeTraceGroups","each","cd","axisLayer","select","cd0","trace","aax","aaxis","bax","baxis","minorLayer","ensureSingle","majorLayer","boundaryLayer","labelLayer","style","opacity","drawGridLines","_gridlines","_minorgridlines","_boundarylines","labelOrientationA","drawAxisLabels","_labels","labelOrientationB","drawAxisTitles","drawClipPath","t","layer","seg","xp","yp","i","clip","_clipPathId","size","append","classed","path","segments","clipsegments","segs","length","x","c2p","y","push","bicubic","clipPathData","join","attr","axis","axisLetter","gridlines","lineClass","gridJoin","selectAll","data","enter","d","gridline","smoothing","el","width","color","exit","remove","labels","labelClass","labelJoin","maxExtent","labelOrientation","label","orientation","tickangle","xy","dxy","angle","Math","PI","cos","sin","flip","direction","endAnchor","labelEl","call","font","text","convertToTspans","bbox","bBox","p","labelpadding","height","max","a","b","aMin","aggNums","min","aMax","bMin","bMax","ab2xy","dxyda_rough","undefined","extendFlat","dxydb_rough","drawAxisTitle","lineSpacing","LINE_SPACING","midShift","MID_SHIFT","title","titleJoin","offset","indexOf","showticklabels","titleSize","labelNorm","angleDiff","reverseTitle","lineCount"],"mappings":"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","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Drawing = require('../../components/drawing');\nvar map1dArray = require('./map_1d_array');\nvar makepath = require('./makepath');\nvar orientText = require('./orient_text');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar Lib = require('../../lib');\nvar strRotate = Lib.strRotate;\nvar strTranslate = Lib.strTranslate;\nvar alignmentConstants = require('../../constants/alignment');\n\nmodule.exports = function plot(gd, plotinfo, cdcarpet, carpetLayer) {\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n    var fullLayout = gd._fullLayout;\n    var clipLayer = fullLayout._clips;\n\n    Lib.makeTraceGroups(carpetLayer, cdcarpet, 'trace').each(function(cd) {\n        var axisLayer = d3.select(this);\n        var cd0 = cd[0];\n        var trace = cd0.trace;\n        var aax = trace.aaxis;\n        var bax = trace.baxis;\n\n        var minorLayer = Lib.ensureSingle(axisLayer, 'g', 'minorlayer');\n        var majorLayer = Lib.ensureSingle(axisLayer, 'g', 'majorlayer');\n        var boundaryLayer = Lib.ensureSingle(axisLayer, 'g', 'boundarylayer');\n        var labelLayer = Lib.ensureSingle(axisLayer, 'g', 'labellayer');\n\n        axisLayer.style('opacity', trace.opacity);\n\n        drawGridLines(xa, ya, majorLayer, aax, 'a', aax._gridlines, true);\n        drawGridLines(xa, ya, majorLayer, bax, 'b', bax._gridlines, true);\n        drawGridLines(xa, ya, minorLayer, aax, 'a', aax._minorgridlines, true);\n        drawGridLines(xa, ya, minorLayer, bax, 'b', bax._minorgridlines, true);\n\n        // NB: These are not omitted if the lines are not active. The joins must be executed\n        // in order for them to get cleaned up without a full redraw\n        drawGridLines(xa, ya, boundaryLayer, aax, 'a-boundary', aax._boundarylines);\n        drawGridLines(xa, ya, boundaryLayer, bax, 'b-boundary', bax._boundarylines);\n\n        var labelOrientationA = drawAxisLabels(gd, xa, ya, trace, cd0, labelLayer, aax._labels, 'a-label');\n        var labelOrientationB = drawAxisLabels(gd, xa, ya, trace, cd0, labelLayer, bax._labels, 'b-label');\n\n        drawAxisTitles(gd, labelLayer, trace, cd0, xa, ya, labelOrientationA, labelOrientationB);\n\n        drawClipPath(trace, cd0, clipLayer, xa, ya);\n    });\n};\n\nfunction drawClipPath(trace, t, layer, xaxis, yaxis) {\n    var seg, xp, yp, i;\n\n    var clip = layer.select('#' + trace._clipPathId);\n\n    if(!clip.size()) {\n        clip = layer.append('clipPath')\n            .classed('carpetclip', true);\n    }\n\n    var path = Lib.ensureSingle(clip, 'path', 'carpetboundary');\n    var segments = t.clipsegments;\n    var segs = [];\n\n    for(i = 0; i < segments.length; i++) {\n        seg = segments[i];\n        xp = map1dArray([], seg.x, xaxis.c2p);\n        yp = map1dArray([], seg.y, yaxis.c2p);\n        segs.push(makepath(xp, yp, seg.bicubic));\n    }\n\n    // This could be optimized ever so slightly to avoid no-op L segments\n    // at the corners, but it's so negligible that I don't think it's worth\n    // the extra complexity\n    var clipPathData = 'M' + segs.join('L') + 'Z';\n    clip.attr('id', trace._clipPathId);\n    path.attr('d', clipPathData);\n}\n\nfunction drawGridLines(xaxis, yaxis, layer, axis, axisLetter, gridlines) {\n    var lineClass = 'const-' + axisLetter + '-lines';\n    var gridJoin = layer.selectAll('.' + lineClass).data(gridlines);\n\n    gridJoin.enter().append('path')\n        .classed(lineClass, true)\n        .style('vector-effect', 'non-scaling-stroke');\n\n    gridJoin.each(function(d) {\n        var gridline = d;\n        var x = gridline.x;\n        var y = gridline.y;\n\n        var xp = map1dArray([], x, xaxis.c2p);\n        var yp = map1dArray([], y, yaxis.c2p);\n\n        var path = 'M' + makepath(xp, yp, gridline.smoothing);\n\n        var el = d3.select(this);\n\n        el.attr('d', path)\n            .style('stroke-width', gridline.width)\n            .style('stroke', gridline.color)\n            .style('fill', 'none');\n    });\n\n    gridJoin.exit().remove();\n}\n\nfunction drawAxisLabels(gd, xaxis, yaxis, trace, t, layer, labels, labelClass) {\n    var labelJoin = layer.selectAll('text.' + labelClass).data(labels);\n\n    labelJoin.enter().append('text')\n        .classed(labelClass, true);\n\n    var maxExtent = 0;\n    var labelOrientation = {};\n\n    labelJoin.each(function(label, i) {\n        // Most of the positioning is done in calc_labels. Only the parts that depend upon\n        // the screen space representation of the x and y axes are here:\n        var orientation;\n        if(label.axis.tickangle === 'auto') {\n            orientation = orientText(trace, xaxis, yaxis, label.xy, label.dxy);\n        } else {\n            var angle = (label.axis.tickangle + 180.0) * Math.PI / 180.0;\n            orientation = orientText(trace, xaxis, yaxis, label.xy, [Math.cos(angle), Math.sin(angle)]);\n        }\n\n        if(!i) {\n            // TODO: offsetMultiplier? Not currently used anywhere...\n            labelOrientation = {angle: orientation.angle, flip: orientation.flip};\n        }\n        var direction = (label.endAnchor ? -1 : 1) * orientation.flip;\n\n        var labelEl = d3.select(this)\n            .attr({\n                'text-anchor': direction > 0 ? 'start' : 'end',\n                'data-notex': 1\n            })\n            .call(Drawing.font, label.font)\n            .text(label.text)\n            .call(svgTextUtils.convertToTspans, gd);\n\n        var bbox = Drawing.bBox(this);\n\n        labelEl.attr('transform',\n                // Translate to the correct point:\n                strTranslate(orientation.p[0], orientation.p[1]) +\n                // Rotate to line up with grid line tangent:\n                strRotate(orientation.angle) +\n                // Adjust the baseline and indentation:\n                strTranslate(label.axis.labelpadding * direction, bbox.height * 0.3)\n            );\n\n        maxExtent = Math.max(maxExtent, bbox.width + label.axis.labelpadding);\n    });\n\n    labelJoin.exit().remove();\n\n    labelOrientation.maxExtent = maxExtent;\n    return labelOrientation;\n}\n\nfunction drawAxisTitles(gd, layer, trace, t, xa, ya, labelOrientationA, labelOrientationB) {\n    var a, b, xy, dxy;\n\n    var aMin = Lib.aggNums(Math.min, null, trace.a);\n    var aMax = Lib.aggNums(Math.max, null, trace.a);\n    var bMin = Lib.aggNums(Math.min, null, trace.b);\n    var bMax = Lib.aggNums(Math.max, null, trace.b);\n\n    a = 0.5 * (aMin + aMax);\n    b = bMin;\n    xy = trace.ab2xy(a, b, true);\n    dxy = trace.dxyda_rough(a, b);\n    if(labelOrientationA.angle === undefined) {\n        Lib.extendFlat(labelOrientationA, orientText(trace, xa, ya, xy, trace.dxydb_rough(a, b)));\n    }\n    drawAxisTitle(gd, layer, trace, t, xy, dxy, trace.aaxis, xa, ya, labelOrientationA, 'a-title');\n\n    a = aMin;\n    b = 0.5 * (bMin + bMax);\n    xy = trace.ab2xy(a, b, true);\n    dxy = trace.dxydb_rough(a, b);\n    if(labelOrientationB.angle === undefined) {\n        Lib.extendFlat(labelOrientationB, orientText(trace, xa, ya, xy, trace.dxyda_rough(a, b)));\n    }\n    drawAxisTitle(gd, layer, trace, t, xy, dxy, trace.baxis, xa, ya, labelOrientationB, 'b-title');\n}\n\nvar lineSpacing = alignmentConstants.LINE_SPACING;\nvar midShift = ((1 - alignmentConstants.MID_SHIFT) / lineSpacing) + 1;\n\nfunction drawAxisTitle(gd, layer, trace, t, xy, dxy, axis, xa, ya, labelOrientation, labelClass) {\n    var data = [];\n    if(axis.title.text) data.push(axis.title.text);\n    var titleJoin = layer.selectAll('text.' + labelClass).data(data);\n    var offset = labelOrientation.maxExtent;\n\n    titleJoin.enter().append('text')\n        .classed(labelClass, true);\n\n    // There's only one, but we'll do it as a join so it's updated nicely:\n    titleJoin.each(function() {\n        var orientation = orientText(trace, xa, ya, xy, dxy);\n\n        if(['start', 'both'].indexOf(axis.showticklabels) === -1) {\n            offset = 0;\n        }\n\n        // In addition to the size of the labels, add on some extra padding:\n        var titleSize = axis.title.font.size;\n        offset += titleSize + axis.title.offset;\n\n        var labelNorm = labelOrientation.angle + (labelOrientation.flip < 0 ? 180 : 0);\n        var angleDiff = (labelNorm - orientation.angle + 450) % 360;\n        var reverseTitle = angleDiff > 90 && angleDiff < 270;\n\n        var el = d3.select(this);\n\n        el.text(axis.title.text)\n            .call(svgTextUtils.convertToTspans, gd);\n\n        if(reverseTitle) {\n            offset = (-svgTextUtils.lineCount(el) + midShift) * lineSpacing * titleSize - offset;\n        }\n\n        el.attr('transform',\n                strTranslate(orientation.p[0], orientation.p[1]) +\n                strRotate(orientation.angle) +\n                strTranslate(0, offset)\n            )\n            .attr('text-anchor', 'middle')\n            .call(Drawing.font, axis.title.font);\n    });\n\n    titleJoin.exit().remove();\n}\n"]},"metadata":{},"sourceType":"script"}