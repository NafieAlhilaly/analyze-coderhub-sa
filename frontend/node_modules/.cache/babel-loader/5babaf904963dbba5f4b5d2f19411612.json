{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar interpolate = require('d3-interpolate').interpolate;\n\nvar interpolateNumber = require('d3-interpolate').interpolateNumber;\n\nvar Lib = require('../../lib');\n\nvar strScale = Lib.strScale;\nvar strTranslate = Lib.strTranslate;\nvar rad2deg = Lib.rad2deg;\n\nvar MID_SHIFT = require('../../constants/alignment').MID_SHIFT;\n\nvar Drawing = require('../../components/drawing');\n\nvar cn = require('./constants');\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar handleAxisDefaults = require('../../plots/cartesian/axis_defaults');\n\nvar handleAxisPositionDefaults = require('../../plots/cartesian/position_defaults');\n\nvar axisLayoutAttrs = require('../../plots/cartesian/layout_attributes');\n\nvar Color = require('../../components/color');\n\nvar anchor = {\n  'left': 'start',\n  'center': 'middle',\n  'right': 'end'\n};\nvar position = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1\n};\nvar SI_PREFIX = /[yzafpnÂµmkMGTPEZY]/;\n\nfunction hasTransition(transitionOpts) {\n  // If transition config is provided, then it is only a partial replot and traces not\n  // updated are removed.\n  return transitionOpts && transitionOpts.duration > 0;\n}\n\nmodule.exports = function plot(gd, cdModule, transitionOpts, makeOnCompleteCallback) {\n  var fullLayout = gd._fullLayout;\n  var onComplete;\n\n  if (hasTransition(transitionOpts)) {\n    if (makeOnCompleteCallback) {\n      // If it was passed a callback to register completion, make a callback. If\n      // this is created, then it must be executed on completion, otherwise the\n      // pos-transition redraw will not execute:\n      onComplete = makeOnCompleteCallback();\n    }\n  }\n\n  Lib.makeTraceGroups(fullLayout._indicatorlayer, cdModule, 'trace').each(function (cd) {\n    var cd0 = cd[0];\n    var trace = cd0.trace;\n    var plotGroup = d3.select(this); // Elements in trace\n\n    var hasGauge = trace._hasGauge;\n    var isAngular = trace._isAngular;\n    var isBullet = trace._isBullet; // Domain size\n\n    var domain = trace.domain;\n    var size = {\n      w: fullLayout._size.w * (domain.x[1] - domain.x[0]),\n      h: fullLayout._size.h * (domain.y[1] - domain.y[0]),\n      l: fullLayout._size.l + fullLayout._size.w * domain.x[0],\n      r: fullLayout._size.r + fullLayout._size.w * (1 - domain.x[1]),\n      t: fullLayout._size.t + fullLayout._size.h * (1 - domain.y[1]),\n      b: fullLayout._size.b + fullLayout._size.h * domain.y[0]\n    };\n    var centerX = size.l + size.w / 2;\n    var centerY = size.t + size.h / 2; // Angular gauge size\n\n    var radius = Math.min(size.w / 2, size.h); // fill domain\n\n    var innerRadius = cn.innerRadius * radius; // Position numbers based on mode and set the scaling logic\n\n    var numbersX, numbersY, numbersScaler;\n    var numbersAlign = trace.align || 'center';\n    numbersY = centerY;\n\n    if (!hasGauge) {\n      numbersX = size.l + position[numbersAlign] * size.w;\n\n      numbersScaler = function numbersScaler(el) {\n        return fitTextInsideBox(el, size.w, size.h);\n      };\n    } else {\n      if (isAngular) {\n        numbersX = centerX;\n        numbersY = centerY + radius / 2;\n\n        numbersScaler = function numbersScaler(el) {\n          return fitTextInsideCircle(el, 0.9 * innerRadius);\n        };\n      }\n\n      if (isBullet) {\n        var padding = cn.bulletPadding;\n        var p = 1 - cn.bulletNumberDomainSize + padding;\n        numbersX = size.l + (p + (1 - p) * position[numbersAlign]) * size.w;\n\n        numbersScaler = function numbersScaler(el) {\n          return fitTextInsideBox(el, (cn.bulletNumberDomainSize - padding) * size.w, size.h);\n        };\n      }\n    } // Draw numbers\n\n\n    drawNumbers(gd, plotGroup, cd, {\n      numbersX: numbersX,\n      numbersY: numbersY,\n      numbersScaler: numbersScaler,\n      transitionOpts: transitionOpts,\n      onComplete: onComplete\n    }); // Reexpress our gauge background attributes for drawing\n\n    var gaugeBg, gaugeOutline;\n\n    if (hasGauge) {\n      gaugeBg = {\n        range: trace.gauge.axis.range,\n        color: trace.gauge.bgcolor,\n        line: {\n          color: trace.gauge.bordercolor,\n          width: 0\n        },\n        thickness: 1\n      };\n      gaugeOutline = {\n        range: trace.gauge.axis.range,\n        color: 'rgba(0, 0, 0, 0)',\n        line: {\n          color: trace.gauge.bordercolor,\n          width: trace.gauge.borderwidth\n        },\n        thickness: 1\n      };\n    } // Prepare angular gauge layers\n\n\n    var angularGauge = plotGroup.selectAll('g.angular').data(isAngular ? cd : []);\n    angularGauge.exit().remove();\n    var angularaxisLayer = plotGroup.selectAll('g.angularaxis').data(isAngular ? cd : []);\n    angularaxisLayer.exit().remove();\n\n    if (isAngular) {\n      drawAngularGauge(gd, plotGroup, cd, {\n        radius: radius,\n        innerRadius: innerRadius,\n        gauge: angularGauge,\n        layer: angularaxisLayer,\n        size: size,\n        gaugeBg: gaugeBg,\n        gaugeOutline: gaugeOutline,\n        transitionOpts: transitionOpts,\n        onComplete: onComplete\n      });\n    } // Prepare bullet layers\n\n\n    var bulletGauge = plotGroup.selectAll('g.bullet').data(isBullet ? cd : []);\n    bulletGauge.exit().remove();\n    var bulletaxisLayer = plotGroup.selectAll('g.bulletaxis').data(isBullet ? cd : []);\n    bulletaxisLayer.exit().remove();\n\n    if (isBullet) {\n      drawBulletGauge(gd, plotGroup, cd, {\n        gauge: bulletGauge,\n        layer: bulletaxisLayer,\n        size: size,\n        gaugeBg: gaugeBg,\n        gaugeOutline: gaugeOutline,\n        transitionOpts: transitionOpts,\n        onComplete: onComplete\n      });\n    } // title\n\n\n    var title = plotGroup.selectAll('text.title').data(cd);\n    title.exit().remove();\n    title.enter().append('text').classed('title', true);\n    title.attr('text-anchor', function () {\n      return isBullet ? anchor.right : anchor[trace.title.align];\n    }).text(trace.title.text).call(Drawing.font, trace.title.font).call(svgTextUtils.convertToTspans, gd); // Position title\n\n    title.attr('transform', function () {\n      var titleX = size.l + size.w * position[trace.title.align];\n      var titleY;\n      var titlePadding = cn.titlePadding;\n      var titlebBox = Drawing.bBox(title.node());\n\n      if (hasGauge) {\n        if (isAngular) {\n          // position above axis ticks/labels\n          if (trace.gauge.axis.visible) {\n            var bBox = Drawing.bBox(angularaxisLayer.node());\n            titleY = bBox.top - titlePadding - titlebBox.bottom;\n          } else {\n            titleY = size.t + size.h / 2 - radius / 2 - titlebBox.bottom - titlePadding;\n          }\n        }\n\n        if (isBullet) {\n          // position outside domain\n          titleY = numbersY - (titlebBox.top + titlebBox.bottom) / 2;\n          titleX = size.l - cn.bulletPadding * size.w; // Outside domain, on the left\n        }\n      } else {\n        // position above numbers\n        titleY = trace._numbersTop - titlePadding - titlebBox.bottom;\n      }\n\n      return strTranslate(titleX, titleY);\n    });\n  });\n};\n\nfunction drawBulletGauge(gd, plotGroup, cd, opts) {\n  var trace = cd[0].trace;\n  var bullet = opts.gauge;\n  var axisLayer = opts.layer;\n  var gaugeBg = opts.gaugeBg;\n  var gaugeOutline = opts.gaugeOutline;\n  var size = opts.size;\n  var domain = trace.domain;\n  var transitionOpts = opts.transitionOpts;\n  var onComplete = opts.onComplete; // preparing axis\n\n  var ax, vals, transFn, tickSign, shift; // Enter bullet, axis\n\n  bullet.enter().append('g').classed('bullet', true);\n  bullet.attr('transform', strTranslate(size.l, size.t));\n  axisLayer.enter().append('g').classed('bulletaxis', true).classed('crisp', true);\n  axisLayer.selectAll('g.' + 'xbulletaxis' + 'tick,path,text').remove(); // Draw bullet\n\n  var bulletHeight = size.h; // use all vertical domain\n\n  var innerBulletHeight = trace.gauge.bar.thickness * bulletHeight;\n  var bulletLeft = domain.x[0];\n  var bulletRight = domain.x[0] + (domain.x[1] - domain.x[0]) * (trace._hasNumber || trace._hasDelta ? 1 - cn.bulletNumberDomainSize : 1);\n  ax = mockAxis(gd, trace.gauge.axis);\n  ax._id = 'xbulletaxis';\n  ax.domain = [bulletLeft, bulletRight];\n  ax.setScale();\n  vals = Axes.calcTicks(ax);\n  transFn = Axes.makeTransTickFn(ax);\n  tickSign = Axes.getTickSigns(ax)[2];\n  shift = size.t + size.h;\n\n  if (ax.visible) {\n    Axes.drawTicks(gd, ax, {\n      vals: ax.ticks === 'inside' ? Axes.clipEnds(ax, vals) : vals,\n      layer: axisLayer,\n      path: Axes.makeTickPath(ax, shift, tickSign),\n      transFn: transFn\n    });\n    Axes.drawLabels(gd, ax, {\n      vals: vals,\n      layer: axisLayer,\n      transFn: transFn,\n      labelFns: Axes.makeLabelFns(ax, shift)\n    });\n  }\n\n  function drawRect(s) {\n    s.attr('width', function (d) {\n      return Math.max(0, ax.c2p(d.range[1]) - ax.c2p(d.range[0]));\n    }).attr('x', function (d) {\n      return ax.c2p(d.range[0]);\n    }).attr('y', function (d) {\n      return 0.5 * (1 - d.thickness) * bulletHeight;\n    }).attr('height', function (d) {\n      return d.thickness * bulletHeight;\n    });\n  } // Draw bullet background, steps\n\n\n  var boxes = [gaugeBg].concat(trace.gauge.steps);\n  var bgBullet = bullet.selectAll('g.bg-bullet').data(boxes);\n  bgBullet.enter().append('g').classed('bg-bullet', true).append('rect');\n  bgBullet.select('rect').call(drawRect).call(styleShape);\n  bgBullet.exit().remove(); // Draw value bar with transitions\n\n  var fgBullet = bullet.selectAll('g.value-bullet').data([trace.gauge.bar]);\n  fgBullet.enter().append('g').classed('value-bullet', true).append('rect');\n  fgBullet.select('rect').attr('height', innerBulletHeight).attr('y', (bulletHeight - innerBulletHeight) / 2).call(styleShape);\n\n  if (hasTransition(transitionOpts)) {\n    fgBullet.select('rect').transition().duration(transitionOpts.duration).ease(transitionOpts.easing).each('end', function () {\n      onComplete && onComplete();\n    }).each('interrupt', function () {\n      onComplete && onComplete();\n    }).attr('width', Math.max(0, ax.c2p(Math.min(trace.gauge.axis.range[1], cd[0].y))));\n  } else {\n    fgBullet.select('rect').attr('width', typeof cd[0].y === 'number' ? Math.max(0, ax.c2p(Math.min(trace.gauge.axis.range[1], cd[0].y))) : 0);\n  }\n\n  fgBullet.exit().remove();\n  var data = cd.filter(function () {\n    return trace.gauge.threshold.value || trace.gauge.threshold.value === 0;\n  });\n  var threshold = bullet.selectAll('g.threshold-bullet').data(data);\n  threshold.enter().append('g').classed('threshold-bullet', true).append('line');\n  threshold.select('line').attr('x1', ax.c2p(trace.gauge.threshold.value)).attr('x2', ax.c2p(trace.gauge.threshold.value)).attr('y1', (1 - trace.gauge.threshold.thickness) / 2 * bulletHeight).attr('y2', (1 - (1 - trace.gauge.threshold.thickness) / 2) * bulletHeight).call(Color.stroke, trace.gauge.threshold.line.color).style('stroke-width', trace.gauge.threshold.line.width);\n  threshold.exit().remove();\n  var bulletOutline = bullet.selectAll('g.gauge-outline').data([gaugeOutline]);\n  bulletOutline.enter().append('g').classed('gauge-outline', true).append('rect');\n  bulletOutline.select('rect').call(drawRect).call(styleShape);\n  bulletOutline.exit().remove();\n}\n\nfunction drawAngularGauge(gd, plotGroup, cd, opts) {\n  var trace = cd[0].trace;\n  var size = opts.size;\n  var radius = opts.radius;\n  var innerRadius = opts.innerRadius;\n  var gaugeBg = opts.gaugeBg;\n  var gaugeOutline = opts.gaugeOutline;\n  var gaugePosition = [size.l + size.w / 2, size.t + size.h / 2 + radius / 2];\n  var gauge = opts.gauge;\n  var axisLayer = opts.layer;\n  var transitionOpts = opts.transitionOpts;\n  var onComplete = opts.onComplete; // circular gauge\n\n  var theta = Math.PI / 2;\n\n  function valueToAngle(v) {\n    var min = trace.gauge.axis.range[0];\n    var max = trace.gauge.axis.range[1];\n    var angle = (v - min) / (max - min) * Math.PI - theta;\n    if (angle < -theta) return -theta;\n    if (angle > theta) return theta;\n    return angle;\n  }\n\n  function arcPathGenerator(size) {\n    return d3.svg.arc().innerRadius((innerRadius + radius) / 2 - size / 2 * (radius - innerRadius)).outerRadius((innerRadius + radius) / 2 + size / 2 * (radius - innerRadius)).startAngle(-theta);\n  }\n\n  function drawArc(p) {\n    p.attr('d', function (d) {\n      return arcPathGenerator(d.thickness).startAngle(valueToAngle(d.range[0])).endAngle(valueToAngle(d.range[1]))();\n    });\n  } // preparing axis\n\n\n  var ax, vals, transFn, tickSign; // Enter gauge and axis\n\n  gauge.enter().append('g').classed('angular', true);\n  gauge.attr('transform', strTranslate(gaugePosition[0], gaugePosition[1]));\n  axisLayer.enter().append('g').classed('angularaxis', true).classed('crisp', true);\n  axisLayer.selectAll('g.' + 'xangularaxis' + 'tick,path,text').remove();\n  ax = mockAxis(gd, trace.gauge.axis);\n  ax.type = 'linear';\n  ax.range = trace.gauge.axis.range;\n  ax._id = 'xangularaxis'; // or 'y', but I don't think this makes a difference here\n\n  ax.ticklabeloverflow = 'allow';\n  ax.setScale(); // 't'ick to 'g'eometric radians is used all over the place here\n\n  var t2g = function t2g(d) {\n    return (ax.range[0] - d.x) / (ax.range[1] - ax.range[0]) * Math.PI + Math.PI;\n  };\n\n  var labelFns = {};\n  var out = Axes.makeLabelFns(ax, 0);\n  var labelStandoff = out.labelStandoff;\n\n  labelFns.xFn = function (d) {\n    var rad = t2g(d);\n    return Math.cos(rad) * labelStandoff;\n  };\n\n  labelFns.yFn = function (d) {\n    var rad = t2g(d);\n    var ff = Math.sin(rad) > 0 ? 0.2 : 1;\n    return -Math.sin(rad) * (labelStandoff + d.fontSize * ff) + Math.abs(Math.cos(rad)) * (d.fontSize * MID_SHIFT);\n  };\n\n  labelFns.anchorFn = function (d) {\n    var rad = t2g(d);\n    var cos = Math.cos(rad);\n    return Math.abs(cos) < 0.1 ? 'middle' : cos > 0 ? 'start' : 'end';\n  };\n\n  labelFns.heightFn = function (d, a, h) {\n    var rad = t2g(d);\n    return -0.5 * (1 + Math.sin(rad)) * h;\n  };\n\n  var _transFn = function _transFn(rad) {\n    return strTranslate(gaugePosition[0] + radius * Math.cos(rad), gaugePosition[1] - radius * Math.sin(rad));\n  };\n\n  transFn = function transFn(d) {\n    return _transFn(t2g(d));\n  };\n\n  var transFn2 = function transFn2(d) {\n    var rad = t2g(d);\n    return _transFn(rad) + 'rotate(' + -rad2deg(rad) + ')';\n  };\n\n  vals = Axes.calcTicks(ax);\n  tickSign = Axes.getTickSigns(ax)[2];\n\n  if (ax.visible) {\n    tickSign = ax.ticks === 'inside' ? -1 : 1;\n    var pad = (ax.linewidth || 1) / 2;\n    Axes.drawTicks(gd, ax, {\n      vals: vals,\n      layer: axisLayer,\n      path: 'M' + tickSign * pad + ',0h' + tickSign * ax.ticklen,\n      transFn: transFn2\n    });\n    Axes.drawLabels(gd, ax, {\n      vals: vals,\n      layer: axisLayer,\n      transFn: transFn,\n      labelFns: labelFns\n    });\n  } // Draw background + steps\n\n\n  var arcs = [gaugeBg].concat(trace.gauge.steps);\n  var bgArc = gauge.selectAll('g.bg-arc').data(arcs);\n  bgArc.enter().append('g').classed('bg-arc', true).append('path');\n  bgArc.select('path').call(drawArc).call(styleShape);\n  bgArc.exit().remove(); // Draw foreground with transition\n\n  var valueArcPathGenerator = arcPathGenerator(trace.gauge.bar.thickness);\n  var valueArc = gauge.selectAll('g.value-arc').data([trace.gauge.bar]);\n  valueArc.enter().append('g').classed('value-arc', true).append('path');\n  var valueArcPath = valueArc.select('path');\n\n  if (hasTransition(transitionOpts)) {\n    valueArcPath.transition().duration(transitionOpts.duration).ease(transitionOpts.easing).each('end', function () {\n      onComplete && onComplete();\n    }).each('interrupt', function () {\n      onComplete && onComplete();\n    }).attrTween('d', arcTween(valueArcPathGenerator, valueToAngle(cd[0].lastY), valueToAngle(cd[0].y)));\n    trace._lastValue = cd[0].y;\n  } else {\n    valueArcPath.attr('d', typeof cd[0].y === 'number' ? valueArcPathGenerator.endAngle(valueToAngle(cd[0].y)) : 'M0,0Z');\n  }\n\n  valueArcPath.call(styleShape);\n  valueArc.exit().remove(); // Draw threshold\n\n  arcs = [];\n  var v = trace.gauge.threshold.value;\n\n  if (v || v === 0) {\n    arcs.push({\n      range: [v, v],\n      color: trace.gauge.threshold.color,\n      line: {\n        color: trace.gauge.threshold.line.color,\n        width: trace.gauge.threshold.line.width\n      },\n      thickness: trace.gauge.threshold.thickness\n    });\n  }\n\n  var thresholdArc = gauge.selectAll('g.threshold-arc').data(arcs);\n  thresholdArc.enter().append('g').classed('threshold-arc', true).append('path');\n  thresholdArc.select('path').call(drawArc).call(styleShape);\n  thresholdArc.exit().remove(); // Draw border last\n\n  var gaugeBorder = gauge.selectAll('g.gauge-outline').data([gaugeOutline]);\n  gaugeBorder.enter().append('g').classed('gauge-outline', true).append('path');\n  gaugeBorder.select('path').call(drawArc).call(styleShape);\n  gaugeBorder.exit().remove();\n}\n\nfunction drawNumbers(gd, plotGroup, cd, opts) {\n  var trace = cd[0].trace;\n  var numbersX = opts.numbersX;\n  var numbersY = opts.numbersY;\n  var numbersAlign = trace.align || 'center';\n  var numbersAnchor = anchor[numbersAlign];\n  var transitionOpts = opts.transitionOpts;\n  var onComplete = opts.onComplete;\n  var numbers = Lib.ensureSingle(plotGroup, 'g', 'numbers');\n  var bignumberbBox, deltabBox;\n  var numbersbBox;\n  var data = [];\n  if (trace._hasNumber) data.push('number');\n\n  if (trace._hasDelta) {\n    data.push('delta');\n    if (trace.delta.position === 'left') data.reverse();\n  }\n\n  var sel = numbers.selectAll('text').data(data);\n  sel.enter().append('text');\n  sel.attr('text-anchor', function () {\n    return numbersAnchor;\n  }).attr('class', function (d) {\n    return d;\n  }).attr('x', null).attr('y', null).attr('dx', null).attr('dy', null);\n  sel.exit().remove(); // Function to override the number formatting used during transitions\n\n  function transitionFormat(valueformat, fmt, from, to) {\n    // For now, do not display SI prefix if start and end value do not have any\n    if (valueformat.match('s') && from >= 0 !== to >= 0 && !fmt(from).slice(-1).match(SI_PREFIX) && !fmt(to).slice(-1).match(SI_PREFIX) // Has no SI prefix\n    ) {\n      var transitionValueFormat = valueformat.slice().replace('s', 'f').replace(/\\d+/, function (m) {\n        return parseInt(m) - 1;\n      });\n      var transitionAx = mockAxis(gd, {\n        tickformat: transitionValueFormat\n      });\n      return function (v) {\n        // Switch to fixed precision if number is smaller than one\n        if (Math.abs(v) < 1) return Axes.tickText(transitionAx, v).text;\n        return fmt(v);\n      };\n    } else {\n      return fmt;\n    }\n  }\n\n  function drawBignumber() {\n    var bignumberAx = mockAxis(gd, {\n      tickformat: trace.number.valueformat\n    }, trace._range);\n    bignumberAx.setScale();\n    Axes.prepTicks(bignumberAx);\n\n    var fmt = function fmt(v) {\n      return Axes.tickText(bignumberAx, v).text;\n    };\n\n    var bignumberSuffix = trace.number.suffix;\n    var bignumberPrefix = trace.number.prefix;\n    var number = numbers.select('text.number');\n\n    function writeNumber() {\n      var txt = typeof cd[0].y === 'number' ? bignumberPrefix + fmt(cd[0].y) + bignumberSuffix : '-';\n      number.text(txt).call(Drawing.font, trace.number.font).call(svgTextUtils.convertToTspans, gd);\n    }\n\n    if (hasTransition(transitionOpts)) {\n      number.transition().duration(transitionOpts.duration).ease(transitionOpts.easing).each('end', function () {\n        writeNumber();\n        onComplete && onComplete();\n      }).each('interrupt', function () {\n        writeNumber();\n        onComplete && onComplete();\n      }).attrTween('text', function () {\n        var that = d3.select(this);\n        var interpolator = interpolateNumber(cd[0].lastY, cd[0].y);\n        trace._lastValue = cd[0].y;\n        var transitionFmt = transitionFormat(trace.number.valueformat, fmt, cd[0].lastY, cd[0].y);\n        return function (t) {\n          that.text(bignumberPrefix + transitionFmt(interpolator(t)) + bignumberSuffix);\n        };\n      });\n    } else {\n      writeNumber();\n    }\n\n    bignumberbBox = measureText(bignumberPrefix + fmt(cd[0].y) + bignumberSuffix, trace.number.font, numbersAnchor, gd);\n    return number;\n  }\n\n  function drawDelta() {\n    var deltaAx = mockAxis(gd, {\n      tickformat: trace.delta.valueformat\n    }, trace._range);\n    deltaAx.setScale();\n    Axes.prepTicks(deltaAx);\n\n    var deltaFmt = function deltaFmt(v) {\n      return Axes.tickText(deltaAx, v).text;\n    };\n\n    var deltaValue = function deltaValue(d) {\n      var value = trace.delta.relative ? d.relativeDelta : d.delta;\n      return value;\n    };\n\n    var deltaFormatText = function deltaFormatText(value, numberFmt) {\n      if (value === 0 || typeof value !== 'number' || isNaN(value)) return '-';\n      return (value > 0 ? trace.delta.increasing.symbol : trace.delta.decreasing.symbol) + numberFmt(value);\n    };\n\n    var deltaFill = function deltaFill(d) {\n      return d.delta >= 0 ? trace.delta.increasing.color : trace.delta.decreasing.color;\n    };\n\n    if (trace._deltaLastValue === undefined) {\n      trace._deltaLastValue = deltaValue(cd[0]);\n    }\n\n    var delta = numbers.select('text.delta');\n    delta.call(Drawing.font, trace.delta.font).call(Color.fill, deltaFill({\n      delta: trace._deltaLastValue\n    }));\n\n    function writeDelta() {\n      delta.text(deltaFormatText(deltaValue(cd[0]), deltaFmt)).call(Color.fill, deltaFill(cd[0])).call(svgTextUtils.convertToTspans, gd);\n    }\n\n    if (hasTransition(transitionOpts)) {\n      delta.transition().duration(transitionOpts.duration).ease(transitionOpts.easing).tween('text', function () {\n        var that = d3.select(this);\n        var to = deltaValue(cd[0]);\n        var from = trace._deltaLastValue;\n        var transitionFmt = transitionFormat(trace.delta.valueformat, deltaFmt, from, to);\n        var interpolator = interpolateNumber(from, to);\n        trace._deltaLastValue = to;\n        return function (t) {\n          that.text(deltaFormatText(interpolator(t), transitionFmt));\n          that.call(Color.fill, deltaFill({\n            delta: interpolator(t)\n          }));\n        };\n      }).each('end', function () {\n        writeDelta();\n        onComplete && onComplete();\n      }).each('interrupt', function () {\n        writeDelta();\n        onComplete && onComplete();\n      });\n    } else {\n      writeDelta();\n    }\n\n    deltabBox = measureText(deltaFormatText(deltaValue(cd[0]), deltaFmt), trace.delta.font, numbersAnchor, gd);\n    return delta;\n  }\n\n  var key = trace.mode + trace.align;\n  var delta;\n\n  if (trace._hasDelta) {\n    delta = drawDelta();\n    key += trace.delta.position + trace.delta.font.size + trace.delta.font.family + trace.delta.valueformat;\n    key += trace.delta.increasing.symbol + trace.delta.decreasing.symbol;\n    numbersbBox = deltabBox;\n  }\n\n  if (trace._hasNumber) {\n    drawBignumber();\n    key += trace.number.font.size + trace.number.font.family + trace.number.valueformat + trace.number.suffix + trace.number.prefix;\n    numbersbBox = bignumberbBox;\n  } // Position delta relative to bignumber\n\n\n  if (trace._hasDelta && trace._hasNumber) {\n    var bignumberCenter = [(bignumberbBox.left + bignumberbBox.right) / 2, (bignumberbBox.top + bignumberbBox.bottom) / 2];\n    var deltaCenter = [(deltabBox.left + deltabBox.right) / 2, (deltabBox.top + deltabBox.bottom) / 2];\n    var dx, dy;\n    var padding = 0.75 * trace.delta.font.size;\n\n    if (trace.delta.position === 'left') {\n      dx = cache(trace, 'deltaPos', 0, -1 * (bignumberbBox.width * position[trace.align] + deltabBox.width * (1 - position[trace.align]) + padding), key, Math.min);\n      dy = bignumberCenter[1] - deltaCenter[1];\n      numbersbBox = {\n        width: bignumberbBox.width + deltabBox.width + padding,\n        height: Math.max(bignumberbBox.height, deltabBox.height),\n        left: deltabBox.left + dx,\n        right: bignumberbBox.right,\n        top: Math.min(bignumberbBox.top, deltabBox.top + dy),\n        bottom: Math.max(bignumberbBox.bottom, deltabBox.bottom + dy)\n      };\n    }\n\n    if (trace.delta.position === 'right') {\n      dx = cache(trace, 'deltaPos', 0, bignumberbBox.width * (1 - position[trace.align]) + deltabBox.width * position[trace.align] + padding, key, Math.max);\n      dy = bignumberCenter[1] - deltaCenter[1];\n      numbersbBox = {\n        width: bignumberbBox.width + deltabBox.width + padding,\n        height: Math.max(bignumberbBox.height, deltabBox.height),\n        left: bignumberbBox.left,\n        right: deltabBox.right + dx,\n        top: Math.min(bignumberbBox.top, deltabBox.top + dy),\n        bottom: Math.max(bignumberbBox.bottom, deltabBox.bottom + dy)\n      };\n    }\n\n    if (trace.delta.position === 'bottom') {\n      dx = null;\n      dy = deltabBox.height;\n      numbersbBox = {\n        width: Math.max(bignumberbBox.width, deltabBox.width),\n        height: bignumberbBox.height + deltabBox.height,\n        left: Math.min(bignumberbBox.left, deltabBox.left),\n        right: Math.max(bignumberbBox.right, deltabBox.right),\n        top: bignumberbBox.bottom - bignumberbBox.height,\n        bottom: bignumberbBox.bottom + deltabBox.height\n      };\n    }\n\n    if (trace.delta.position === 'top') {\n      dx = null;\n      dy = bignumberbBox.top;\n      numbersbBox = {\n        width: Math.max(bignumberbBox.width, deltabBox.width),\n        height: bignumberbBox.height + deltabBox.height,\n        left: Math.min(bignumberbBox.left, deltabBox.left),\n        right: Math.max(bignumberbBox.right, deltabBox.right),\n        top: bignumberbBox.bottom - bignumberbBox.height - deltabBox.height,\n        bottom: bignumberbBox.bottom\n      };\n    }\n\n    delta.attr({\n      dx: dx,\n      dy: dy\n    });\n  } // Resize numbers to fit within space and position\n\n\n  if (trace._hasNumber || trace._hasDelta) {\n    numbers.attr('transform', function () {\n      var m = opts.numbersScaler(numbersbBox);\n      key += m[2];\n      var scaleRatio = cache(trace, 'numbersScale', 1, m[0], key, Math.min);\n      var translateY;\n      if (!trace._scaleNumbers) scaleRatio = 1;\n\n      if (trace._isAngular) {\n        // align vertically to bottom\n        translateY = numbersY - scaleRatio * numbersbBox.bottom;\n      } else {\n        // align vertically to center\n        translateY = numbersY - scaleRatio * (numbersbBox.top + numbersbBox.bottom) / 2;\n      } // Stash the top position of numbersbBox for title positioning\n\n\n      trace._numbersTop = scaleRatio * numbersbBox.top + translateY;\n      var ref = numbersbBox[numbersAlign];\n      if (numbersAlign === 'center') ref = (numbersbBox.left + numbersbBox.right) / 2;\n      var translateX = numbersX - scaleRatio * ref; // Stash translateX\n\n      translateX = cache(trace, 'numbersTranslate', 0, translateX, key, Math.max);\n      return strTranslate(translateX, translateY) + strScale(scaleRatio);\n    });\n  }\n} // Apply fill, stroke, stroke-width to SVG shape\n\n\nfunction styleShape(p) {\n  p.each(function (d) {\n    Color.stroke(d3.select(this), d.line.color);\n  }).each(function (d) {\n    Color.fill(d3.select(this), d.color);\n  }).style('stroke-width', function (d) {\n    return d.line.width;\n  });\n} // Returns a tween for a transitionâs \"d\" attribute, transitioning any selected\n// arcs from their current angle to the specified new angle.\n\n\nfunction arcTween(arc, endAngle, newAngle) {\n  return function () {\n    var interp = interpolate(endAngle, newAngle);\n    return function (t) {\n      return arc.endAngle(interp(t))();\n    };\n  };\n} // mocks our axis\n\n\nfunction mockAxis(gd, opts, zrange) {\n  var fullLayout = gd._fullLayout;\n  var axisIn = Lib.extendFlat({\n    type: 'linear',\n    ticks: 'outside',\n    range: zrange,\n    showline: true\n  }, opts);\n  var axisOut = {\n    type: 'linear',\n    _id: 'x' + opts._id\n  };\n  var axisOptions = {\n    letter: 'x',\n    font: fullLayout.font,\n    noHover: true,\n    noTickson: true\n  };\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(axisIn, axisOut, axisLayoutAttrs, attr, dflt);\n  }\n\n  handleAxisDefaults(axisIn, axisOut, coerce, axisOptions, fullLayout);\n  handleAxisPositionDefaults(axisIn, axisOut, coerce, axisOptions);\n  return axisOut;\n}\n\nfunction fitTextInsideBox(textBB, width, height) {\n  // compute scaling ratio to have text fit within specified width and height\n  var ratio = Math.min(width / textBB.width, height / textBB.height);\n  return [ratio, textBB, width + 'x' + height];\n}\n\nfunction fitTextInsideCircle(textBB, radius) {\n  // compute scaling ratio to have text fit within specified radius\n  var elRadius = Math.sqrt(textBB.width / 2 * (textBB.width / 2) + textBB.height * textBB.height);\n  var ratio = radius / elRadius;\n  return [ratio, textBB, radius];\n}\n\nfunction measureText(txt, font, textAnchor, gd) {\n  var element = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n  var sel = d3.select(element);\n  sel.text(txt).attr('x', 0).attr('y', 0).attr('text-anchor', textAnchor).attr('data-unformatted', txt).call(svgTextUtils.convertToTspans, gd).call(Drawing.font, font);\n  return Drawing.bBox(sel.node());\n}\n\nfunction cache(trace, name, initialValue, value, key, fn) {\n  var objName = '_cache' + name;\n\n  if (!(trace[objName] && trace[objName].key === key)) {\n    trace[objName] = {\n      key: key,\n      value: initialValue\n    };\n  }\n\n  var v = Lib.aggNums(fn, null, [trace[objName].value, value], 2);\n  trace[objName].value = v;\n  return v;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/indicator/plot.js"],"names":["d3","require","interpolate","interpolateNumber","Lib","strScale","strTranslate","rad2deg","MID_SHIFT","Drawing","cn","svgTextUtils","Axes","handleAxisDefaults","handleAxisPositionDefaults","axisLayoutAttrs","Color","anchor","position","SI_PREFIX","hasTransition","transitionOpts","duration","module","exports","plot","gd","cdModule","makeOnCompleteCallback","fullLayout","_fullLayout","onComplete","makeTraceGroups","_indicatorlayer","each","cd","cd0","trace","plotGroup","select","hasGauge","_hasGauge","isAngular","_isAngular","isBullet","_isBullet","domain","size","w","_size","x","h","y","l","r","t","b","centerX","centerY","radius","Math","min","innerRadius","numbersX","numbersY","numbersScaler","numbersAlign","align","el","fitTextInsideBox","fitTextInsideCircle","padding","bulletPadding","p","bulletNumberDomainSize","drawNumbers","gaugeBg","gaugeOutline","range","gauge","axis","color","bgcolor","line","bordercolor","width","thickness","borderwidth","angularGauge","selectAll","data","exit","remove","angularaxisLayer","drawAngularGauge","layer","bulletGauge","bulletaxisLayer","drawBulletGauge","title","enter","append","classed","attr","right","text","call","font","convertToTspans","titleX","titleY","titlePadding","titlebBox","bBox","node","visible","top","bottom","_numbersTop","opts","bullet","axisLayer","ax","vals","transFn","tickSign","shift","bulletHeight","innerBulletHeight","bar","bulletLeft","bulletRight","_hasNumber","_hasDelta","mockAxis","_id","setScale","calcTicks","makeTransTickFn","getTickSigns","drawTicks","ticks","clipEnds","path","makeTickPath","drawLabels","labelFns","makeLabelFns","drawRect","s","d","max","c2p","boxes","concat","steps","bgBullet","styleShape","fgBullet","transition","ease","easing","filter","threshold","value","stroke","style","bulletOutline","gaugePosition","theta","PI","valueToAngle","v","angle","arcPathGenerator","svg","arc","outerRadius","startAngle","drawArc","endAngle","type","ticklabeloverflow","t2g","out","labelStandoff","xFn","rad","cos","yFn","ff","sin","fontSize","abs","anchorFn","heightFn","a","_transFn","transFn2","pad","linewidth","ticklen","arcs","bgArc","valueArcPathGenerator","valueArc","valueArcPath","attrTween","arcTween","lastY","_lastValue","push","thresholdArc","gaugeBorder","numbersAnchor","numbers","ensureSingle","bignumberbBox","deltabBox","numbersbBox","delta","reverse","sel","transitionFormat","valueformat","fmt","from","to","match","slice","transitionValueFormat","replace","m","parseInt","transitionAx","tickformat","tickText","drawBignumber","bignumberAx","number","_range","prepTicks","bignumberSuffix","suffix","bignumberPrefix","prefix","writeNumber","txt","that","interpolator","transitionFmt","measureText","drawDelta","deltaAx","deltaFmt","deltaValue","relative","relativeDelta","deltaFormatText","numberFmt","isNaN","increasing","symbol","decreasing","deltaFill","_deltaLastValue","undefined","fill","writeDelta","tween","key","mode","family","bignumberCenter","left","deltaCenter","dx","dy","cache","height","scaleRatio","translateY","_scaleNumbers","ref","translateX","newAngle","interp","zrange","axisIn","extendFlat","showline","axisOut","axisOptions","letter","noHover","noTickson","coerce","dflt","textBB","ratio","elRadius","sqrt","textAnchor","element","document","createElementNS","name","initialValue","fn","objName","aggNums"],"mappings":"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","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar interpolate = require('d3-interpolate').interpolate;\nvar interpolateNumber = require('d3-interpolate').interpolateNumber;\n\nvar Lib = require('../../lib');\nvar strScale = Lib.strScale;\nvar strTranslate = Lib.strTranslate;\nvar rad2deg = Lib.rad2deg;\nvar MID_SHIFT = require('../../constants/alignment').MID_SHIFT;\nvar Drawing = require('../../components/drawing');\nvar cn = require('./constants');\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar Axes = require('../../plots/cartesian/axes');\nvar handleAxisDefaults = require('../../plots/cartesian/axis_defaults');\nvar handleAxisPositionDefaults = require('../../plots/cartesian/position_defaults');\nvar axisLayoutAttrs = require('../../plots/cartesian/layout_attributes');\n\nvar Color = require('../../components/color');\nvar anchor = {\n    'left': 'start',\n    'center': 'middle',\n    'right': 'end'\n};\nvar position = {\n    'left': 0,\n    'center': 0.5,\n    'right': 1\n};\n\nvar SI_PREFIX = /[yzafpnÂµmkMGTPEZY]/;\n\nfunction hasTransition(transitionOpts) {\n    // If transition config is provided, then it is only a partial replot and traces not\n    // updated are removed.\n    return transitionOpts && transitionOpts.duration > 0;\n}\n\nmodule.exports = function plot(gd, cdModule, transitionOpts, makeOnCompleteCallback) {\n    var fullLayout = gd._fullLayout;\n    var onComplete;\n\n    if(hasTransition(transitionOpts)) {\n        if(makeOnCompleteCallback) {\n            // If it was passed a callback to register completion, make a callback. If\n            // this is created, then it must be executed on completion, otherwise the\n            // pos-transition redraw will not execute:\n            onComplete = makeOnCompleteCallback();\n        }\n    }\n\n    Lib.makeTraceGroups(fullLayout._indicatorlayer, cdModule, 'trace').each(function(cd) {\n        var cd0 = cd[0];\n        var trace = cd0.trace;\n\n        var plotGroup = d3.select(this);\n\n        // Elements in trace\n        var hasGauge = trace._hasGauge;\n        var isAngular = trace._isAngular;\n        var isBullet = trace._isBullet;\n\n        // Domain size\n        var domain = trace.domain;\n        var size = {\n            w: fullLayout._size.w * (domain.x[1] - domain.x[0]),\n            h: fullLayout._size.h * (domain.y[1] - domain.y[0]),\n            l: fullLayout._size.l + fullLayout._size.w * domain.x[0],\n            r: fullLayout._size.r + fullLayout._size.w * (1 - domain.x[1]),\n            t: fullLayout._size.t + fullLayout._size.h * (1 - domain.y[1]),\n            b: fullLayout._size.b + fullLayout._size.h * (domain.y[0])\n        };\n        var centerX = size.l + size.w / 2;\n        var centerY = size.t + size.h / 2;\n\n        // Angular gauge size\n        var radius = Math.min(size.w / 2, size.h); // fill domain\n        var innerRadius = cn.innerRadius * radius;\n\n        // Position numbers based on mode and set the scaling logic\n        var numbersX, numbersY, numbersScaler;\n        var numbersAlign = trace.align || 'center';\n\n        numbersY = centerY;\n        if(!hasGauge) {\n            numbersX = size.l + position[numbersAlign] * size.w;\n            numbersScaler = function(el) {\n                return fitTextInsideBox(el, size.w, size.h);\n            };\n        } else {\n            if(isAngular) {\n                numbersX = centerX;\n                numbersY = centerY + radius / 2;\n                numbersScaler = function(el) {\n                    return fitTextInsideCircle(el, 0.9 * innerRadius);\n                };\n            }\n            if(isBullet) {\n                var padding = cn.bulletPadding;\n                var p = (1 - cn.bulletNumberDomainSize) + padding;\n                numbersX = size.l + (p + (1 - p) * position[numbersAlign]) * size.w;\n                numbersScaler = function(el) {\n                    return fitTextInsideBox(el, (cn.bulletNumberDomainSize - padding) * size.w, size.h);\n                };\n            }\n        }\n\n        // Draw numbers\n        drawNumbers(gd, plotGroup, cd, {\n            numbersX: numbersX,\n            numbersY: numbersY,\n            numbersScaler: numbersScaler,\n            transitionOpts: transitionOpts,\n            onComplete: onComplete\n        });\n\n        // Reexpress our gauge background attributes for drawing\n        var gaugeBg, gaugeOutline;\n        if(hasGauge) {\n            gaugeBg = {\n                range: trace.gauge.axis.range,\n                color: trace.gauge.bgcolor,\n                line: {\n                    color: trace.gauge.bordercolor,\n                    width: 0\n                },\n                thickness: 1\n            };\n\n            gaugeOutline = {\n                range: trace.gauge.axis.range,\n                color: 'rgba(0, 0, 0, 0)',\n                line: {\n                    color: trace.gauge.bordercolor,\n                    width: trace.gauge.borderwidth\n                },\n                thickness: 1\n            };\n        }\n\n        // Prepare angular gauge layers\n        var angularGauge = plotGroup.selectAll('g.angular').data(isAngular ? cd : []);\n        angularGauge.exit().remove();\n        var angularaxisLayer = plotGroup.selectAll('g.angularaxis').data(isAngular ? cd : []);\n        angularaxisLayer.exit().remove();\n\n        if(isAngular) {\n            drawAngularGauge(gd, plotGroup, cd, {\n                radius: radius,\n                innerRadius: innerRadius,\n\n                gauge: angularGauge,\n                layer: angularaxisLayer,\n                size: size,\n                gaugeBg: gaugeBg,\n                gaugeOutline: gaugeOutline,\n                transitionOpts: transitionOpts,\n                onComplete: onComplete\n            });\n        }\n\n        // Prepare bullet layers\n        var bulletGauge = plotGroup.selectAll('g.bullet').data(isBullet ? cd : []);\n        bulletGauge.exit().remove();\n        var bulletaxisLayer = plotGroup.selectAll('g.bulletaxis').data(isBullet ? cd : []);\n        bulletaxisLayer.exit().remove();\n\n        if(isBullet) {\n            drawBulletGauge(gd, plotGroup, cd, {\n                gauge: bulletGauge,\n                layer: bulletaxisLayer,\n                size: size,\n                gaugeBg: gaugeBg,\n                gaugeOutline: gaugeOutline,\n                transitionOpts: transitionOpts,\n                onComplete: onComplete\n            });\n        }\n\n        // title\n        var title = plotGroup.selectAll('text.title').data(cd);\n        title.exit().remove();\n        title.enter().append('text').classed('title', true);\n        title\n            .attr('text-anchor', function() {\n                return isBullet ? anchor.right : anchor[trace.title.align];\n            })\n            .text(trace.title.text)\n            .call(Drawing.font, trace.title.font)\n            .call(svgTextUtils.convertToTspans, gd);\n\n        // Position title\n        title.attr('transform', function() {\n            var titleX = size.l + size.w * position[trace.title.align];\n            var titleY;\n            var titlePadding = cn.titlePadding;\n            var titlebBox = Drawing.bBox(title.node());\n            if(hasGauge) {\n                if(isAngular) {\n                    // position above axis ticks/labels\n                    if(trace.gauge.axis.visible) {\n                        var bBox = Drawing.bBox(angularaxisLayer.node());\n                        titleY = (bBox.top - titlePadding) - titlebBox.bottom;\n                    } else {\n                        titleY = size.t + size.h / 2 - radius / 2 - titlebBox.bottom - titlePadding;\n                    }\n                }\n                if(isBullet) {\n                    // position outside domain\n                    titleY = numbersY - (titlebBox.top + titlebBox.bottom) / 2;\n                    titleX = size.l - cn.bulletPadding * size.w; // Outside domain, on the left\n                }\n            } else {\n                // position above numbers\n                titleY = (trace._numbersTop - titlePadding) - titlebBox.bottom;\n            }\n            return strTranslate(titleX, titleY);\n        });\n    });\n};\n\nfunction drawBulletGauge(gd, plotGroup, cd, opts) {\n    var trace = cd[0].trace;\n\n    var bullet = opts.gauge;\n    var axisLayer = opts.layer;\n    var gaugeBg = opts.gaugeBg;\n    var gaugeOutline = opts.gaugeOutline;\n    var size = opts.size;\n    var domain = trace.domain;\n\n    var transitionOpts = opts.transitionOpts;\n    var onComplete = opts.onComplete;\n\n    // preparing axis\n    var ax, vals, transFn, tickSign, shift;\n\n    // Enter bullet, axis\n    bullet.enter().append('g').classed('bullet', true);\n    bullet.attr('transform', strTranslate(size.l, size.t));\n\n    axisLayer.enter().append('g')\n        .classed('bulletaxis', true)\n        .classed('crisp', true);\n    axisLayer.selectAll('g.' + 'xbulletaxis' + 'tick,path,text').remove();\n\n    // Draw bullet\n    var bulletHeight = size.h; // use all vertical domain\n    var innerBulletHeight = trace.gauge.bar.thickness * bulletHeight;\n    var bulletLeft = domain.x[0];\n    var bulletRight = domain.x[0] + (domain.x[1] - domain.x[0]) * ((trace._hasNumber || trace._hasDelta) ? (1 - cn.bulletNumberDomainSize) : 1);\n\n    ax = mockAxis(gd, trace.gauge.axis);\n    ax._id = 'xbulletaxis';\n    ax.domain = [bulletLeft, bulletRight];\n    ax.setScale();\n\n    vals = Axes.calcTicks(ax);\n    transFn = Axes.makeTransTickFn(ax);\n    tickSign = Axes.getTickSigns(ax)[2];\n\n    shift = size.t + size.h;\n    if(ax.visible) {\n        Axes.drawTicks(gd, ax, {\n            vals: ax.ticks === 'inside' ? Axes.clipEnds(ax, vals) : vals,\n            layer: axisLayer,\n            path: Axes.makeTickPath(ax, shift, tickSign),\n            transFn: transFn\n        });\n\n        Axes.drawLabels(gd, ax, {\n            vals: vals,\n            layer: axisLayer,\n            transFn: transFn,\n            labelFns: Axes.makeLabelFns(ax, shift)\n        });\n    }\n\n    function drawRect(s) {\n        s\n            .attr('width', function(d) { return Math.max(0, ax.c2p(d.range[1]) - ax.c2p(d.range[0]));})\n            .attr('x', function(d) { return ax.c2p(d.range[0]);})\n            .attr('y', function(d) { return 0.5 * (1 - d.thickness) * bulletHeight;})\n            .attr('height', function(d) { return d.thickness * bulletHeight; });\n    }\n\n    // Draw bullet background, steps\n    var boxes = [gaugeBg].concat(trace.gauge.steps);\n    var bgBullet = bullet.selectAll('g.bg-bullet').data(boxes);\n    bgBullet.enter().append('g').classed('bg-bullet', true).append('rect');\n    bgBullet.select('rect')\n        .call(drawRect)\n        .call(styleShape);\n    bgBullet.exit().remove();\n\n    // Draw value bar with transitions\n    var fgBullet = bullet.selectAll('g.value-bullet').data([trace.gauge.bar]);\n    fgBullet.enter().append('g').classed('value-bullet', true).append('rect');\n    fgBullet.select('rect')\n        .attr('height', innerBulletHeight)\n        .attr('y', (bulletHeight - innerBulletHeight) / 2)\n        .call(styleShape);\n    if(hasTransition(transitionOpts)) {\n        fgBullet.select('rect')\n            .transition()\n            .duration(transitionOpts.duration)\n            .ease(transitionOpts.easing)\n            .each('end', function() { onComplete && onComplete(); })\n            .each('interrupt', function() { onComplete && onComplete(); })\n            .attr('width', Math.max(0, ax.c2p(Math.min(trace.gauge.axis.range[1], cd[0].y))));\n    } else {\n        fgBullet.select('rect')\n            .attr('width', typeof cd[0].y === 'number' ?\n                Math.max(0, ax.c2p(Math.min(trace.gauge.axis.range[1], cd[0].y))) :\n                0);\n    }\n    fgBullet.exit().remove();\n\n    var data = cd.filter(function() {return trace.gauge.threshold.value || trace.gauge.threshold.value === 0;});\n    var threshold = bullet.selectAll('g.threshold-bullet').data(data);\n    threshold.enter().append('g').classed('threshold-bullet', true).append('line');\n    threshold.select('line')\n        .attr('x1', ax.c2p(trace.gauge.threshold.value))\n        .attr('x2', ax.c2p(trace.gauge.threshold.value))\n        .attr('y1', (1 - trace.gauge.threshold.thickness) / 2 * bulletHeight)\n        .attr('y2', (1 - (1 - trace.gauge.threshold.thickness) / 2) * bulletHeight)\n        .call(Color.stroke, trace.gauge.threshold.line.color)\n        .style('stroke-width', trace.gauge.threshold.line.width);\n    threshold.exit().remove();\n\n    var bulletOutline = bullet.selectAll('g.gauge-outline').data([gaugeOutline]);\n    bulletOutline.enter().append('g').classed('gauge-outline', true).append('rect');\n    bulletOutline.select('rect')\n        .call(drawRect)\n        .call(styleShape);\n    bulletOutline.exit().remove();\n}\n\nfunction drawAngularGauge(gd, plotGroup, cd, opts) {\n    var trace = cd[0].trace;\n\n    var size = opts.size;\n    var radius = opts.radius;\n    var innerRadius = opts.innerRadius;\n    var gaugeBg = opts.gaugeBg;\n    var gaugeOutline = opts.gaugeOutline;\n    var gaugePosition = [size.l + size.w / 2, size.t + size.h / 2 + radius / 2];\n    var gauge = opts.gauge;\n    var axisLayer = opts.layer;\n\n    var transitionOpts = opts.transitionOpts;\n    var onComplete = opts.onComplete;\n\n    // circular gauge\n    var theta = Math.PI / 2;\n    function valueToAngle(v) {\n        var min = trace.gauge.axis.range[0];\n        var max = trace.gauge.axis.range[1];\n        var angle = (v - min) / (max - min) * Math.PI - theta;\n        if(angle < -theta) return -theta;\n        if(angle > theta) return theta;\n        return angle;\n    }\n\n    function arcPathGenerator(size) {\n        return d3.svg.arc()\n                  .innerRadius((innerRadius + radius) / 2 - size / 2 * (radius - innerRadius))\n                  .outerRadius((innerRadius + radius) / 2 + size / 2 * (radius - innerRadius))\n                  .startAngle(-theta);\n    }\n\n    function drawArc(p) {\n        p\n            .attr('d', function(d) {\n                return arcPathGenerator(d.thickness)\n                  .startAngle(valueToAngle(d.range[0]))\n                  .endAngle(valueToAngle(d.range[1]))();\n            });\n    }\n\n    // preparing axis\n    var ax, vals, transFn, tickSign;\n\n    // Enter gauge and axis\n    gauge.enter().append('g').classed('angular', true);\n    gauge.attr('transform', strTranslate(gaugePosition[0], gaugePosition[1]));\n\n    axisLayer.enter().append('g')\n        .classed('angularaxis', true)\n        .classed('crisp', true);\n    axisLayer.selectAll('g.' + 'xangularaxis' + 'tick,path,text').remove();\n\n    ax = mockAxis(gd, trace.gauge.axis);\n    ax.type = 'linear';\n    ax.range = trace.gauge.axis.range;\n    ax._id = 'xangularaxis'; // or 'y', but I don't think this makes a difference here\n    ax.ticklabeloverflow = 'allow';\n    ax.setScale();\n\n    // 't'ick to 'g'eometric radians is used all over the place here\n    var t2g = function(d) {\n        return (ax.range[0] - d.x) / (ax.range[1] - ax.range[0]) * Math.PI + Math.PI;\n    };\n\n    var labelFns = {};\n    var out = Axes.makeLabelFns(ax, 0);\n    var labelStandoff = out.labelStandoff;\n    labelFns.xFn = function(d) {\n        var rad = t2g(d);\n        return Math.cos(rad) * labelStandoff;\n    };\n    labelFns.yFn = function(d) {\n        var rad = t2g(d);\n        var ff = Math.sin(rad) > 0 ? 0.2 : 1;\n        return -Math.sin(rad) * (labelStandoff + d.fontSize * ff) +\n                Math.abs(Math.cos(rad)) * (d.fontSize * MID_SHIFT);\n    };\n    labelFns.anchorFn = function(d) {\n        var rad = t2g(d);\n        var cos = Math.cos(rad);\n        return Math.abs(cos) < 0.1 ?\n                'middle' :\n                (cos > 0 ? 'start' : 'end');\n    };\n    labelFns.heightFn = function(d, a, h) {\n        var rad = t2g(d);\n        return -0.5 * (1 + Math.sin(rad)) * h;\n    };\n    var _transFn = function(rad) {\n        return strTranslate(\n            gaugePosition[0] + radius * Math.cos(rad),\n            gaugePosition[1] - radius * Math.sin(rad)\n        );\n    };\n    transFn = function(d) {\n        return _transFn(t2g(d));\n    };\n    var transFn2 = function(d) {\n        var rad = t2g(d);\n        return _transFn(rad) + 'rotate(' + -rad2deg(rad) + ')';\n    };\n    vals = Axes.calcTicks(ax);\n    tickSign = Axes.getTickSigns(ax)[2];\n    if(ax.visible) {\n        tickSign = ax.ticks === 'inside' ? -1 : 1;\n        var pad = (ax.linewidth || 1) / 2;\n        Axes.drawTicks(gd, ax, {\n            vals: vals,\n            layer: axisLayer,\n            path: 'M' + (tickSign * pad) + ',0h' + (tickSign * ax.ticklen),\n            transFn: transFn2\n        });\n        Axes.drawLabels(gd, ax, {\n            vals: vals,\n            layer: axisLayer,\n            transFn: transFn,\n            labelFns: labelFns\n        });\n    }\n\n    // Draw background + steps\n    var arcs = [gaugeBg].concat(trace.gauge.steps);\n    var bgArc = gauge.selectAll('g.bg-arc').data(arcs);\n    bgArc.enter().append('g').classed('bg-arc', true).append('path');\n    bgArc.select('path').call(drawArc).call(styleShape);\n    bgArc.exit().remove();\n\n    // Draw foreground with transition\n    var valueArcPathGenerator = arcPathGenerator(trace.gauge.bar.thickness);\n    var valueArc = gauge.selectAll('g.value-arc').data([trace.gauge.bar]);\n    valueArc.enter().append('g').classed('value-arc', true).append('path');\n    var valueArcPath = valueArc.select('path');\n    if(hasTransition(transitionOpts)) {\n        valueArcPath\n            .transition()\n            .duration(transitionOpts.duration)\n            .ease(transitionOpts.easing)\n            .each('end', function() { onComplete && onComplete(); })\n            .each('interrupt', function() { onComplete && onComplete(); })\n            .attrTween('d', arcTween(valueArcPathGenerator, valueToAngle(cd[0].lastY), valueToAngle(cd[0].y)));\n        trace._lastValue = cd[0].y;\n    } else {\n        valueArcPath.attr('d', typeof cd[0].y === 'number' ?\n            valueArcPathGenerator.endAngle(valueToAngle(cd[0].y)) :\n            'M0,0Z');\n    }\n    valueArcPath.call(styleShape);\n    valueArc.exit().remove();\n\n    // Draw threshold\n    arcs = [];\n    var v = trace.gauge.threshold.value;\n    if(v || v === 0) {\n        arcs.push({\n            range: [v, v],\n            color: trace.gauge.threshold.color,\n            line: {\n                color: trace.gauge.threshold.line.color,\n                width: trace.gauge.threshold.line.width\n            },\n            thickness: trace.gauge.threshold.thickness\n        });\n    }\n    var thresholdArc = gauge.selectAll('g.threshold-arc').data(arcs);\n    thresholdArc.enter().append('g').classed('threshold-arc', true).append('path');\n    thresholdArc.select('path').call(drawArc).call(styleShape);\n    thresholdArc.exit().remove();\n\n    // Draw border last\n    var gaugeBorder = gauge.selectAll('g.gauge-outline').data([gaugeOutline]);\n    gaugeBorder.enter().append('g').classed('gauge-outline', true).append('path');\n    gaugeBorder.select('path').call(drawArc).call(styleShape);\n    gaugeBorder.exit().remove();\n}\n\nfunction drawNumbers(gd, plotGroup, cd, opts) {\n    var trace = cd[0].trace;\n\n    var numbersX = opts.numbersX;\n    var numbersY = opts.numbersY;\n    var numbersAlign = trace.align || 'center';\n    var numbersAnchor = anchor[numbersAlign];\n\n    var transitionOpts = opts.transitionOpts;\n    var onComplete = opts.onComplete;\n\n    var numbers = Lib.ensureSingle(plotGroup, 'g', 'numbers');\n    var bignumberbBox, deltabBox;\n    var numbersbBox;\n\n    var data = [];\n    if(trace._hasNumber) data.push('number');\n    if(trace._hasDelta) {\n        data.push('delta');\n        if(trace.delta.position === 'left') data.reverse();\n    }\n    var sel = numbers.selectAll('text').data(data);\n    sel.enter().append('text');\n    sel\n        .attr('text-anchor', function() {return numbersAnchor;})\n        .attr('class', function(d) { return d;})\n        .attr('x', null)\n        .attr('y', null)\n        .attr('dx', null)\n        .attr('dy', null);\n    sel.exit().remove();\n\n    // Function to override the number formatting used during transitions\n    function transitionFormat(valueformat, fmt, from, to) {\n        // For now, do not display SI prefix if start and end value do not have any\n        if(valueformat.match('s') && // If using SI prefix\n            (from >= 0 !== to >= 0) && // If sign change\n            (!fmt(from).slice(-1).match(SI_PREFIX) && !fmt(to).slice(-1).match(SI_PREFIX)) // Has no SI prefix\n        ) {\n            var transitionValueFormat = valueformat.slice().replace('s', 'f').replace(/\\d+/, function(m) { return parseInt(m) - 1;});\n            var transitionAx = mockAxis(gd, {tickformat: transitionValueFormat});\n            return function(v) {\n                // Switch to fixed precision if number is smaller than one\n                if(Math.abs(v) < 1) return Axes.tickText(transitionAx, v).text;\n                return fmt(v);\n            };\n        } else {\n            return fmt;\n        }\n    }\n\n    function drawBignumber() {\n        var bignumberAx = mockAxis(gd, {tickformat: trace.number.valueformat}, trace._range);\n        bignumberAx.setScale();\n        Axes.prepTicks(bignumberAx);\n\n        var fmt = function(v) { return Axes.tickText(bignumberAx, v).text;};\n        var bignumberSuffix = trace.number.suffix;\n        var bignumberPrefix = trace.number.prefix;\n\n        var number = numbers.select('text.number');\n\n        function writeNumber() {\n            var txt = typeof cd[0].y === 'number' ?\n                bignumberPrefix + fmt(cd[0].y) + bignumberSuffix :\n                '-';\n            number.text(txt)\n                .call(Drawing.font, trace.number.font)\n                .call(svgTextUtils.convertToTspans, gd);\n        }\n\n        if(hasTransition(transitionOpts)) {\n            number\n                .transition()\n                .duration(transitionOpts.duration)\n                .ease(transitionOpts.easing)\n                .each('end', function() { writeNumber(); onComplete && onComplete(); })\n                .each('interrupt', function() { writeNumber(); onComplete && onComplete(); })\n                .attrTween('text', function() {\n                    var that = d3.select(this);\n                    var interpolator = interpolateNumber(cd[0].lastY, cd[0].y);\n                    trace._lastValue = cd[0].y;\n\n                    var transitionFmt = transitionFormat(trace.number.valueformat, fmt, cd[0].lastY, cd[0].y);\n                    return function(t) {\n                        that.text(bignumberPrefix + transitionFmt(interpolator(t)) + bignumberSuffix);\n                    };\n                });\n        } else {\n            writeNumber();\n        }\n\n        bignumberbBox = measureText(bignumberPrefix + fmt(cd[0].y) + bignumberSuffix, trace.number.font, numbersAnchor, gd);\n        return number;\n    }\n\n    function drawDelta() {\n        var deltaAx = mockAxis(gd, {tickformat: trace.delta.valueformat}, trace._range);\n        deltaAx.setScale();\n        Axes.prepTicks(deltaAx);\n\n        var deltaFmt = function(v) { return Axes.tickText(deltaAx, v).text;};\n        var deltaValue = function(d) {\n            var value = trace.delta.relative ? d.relativeDelta : d.delta;\n            return value;\n        };\n        var deltaFormatText = function(value, numberFmt) {\n            if(value === 0 || typeof value !== 'number' || isNaN(value)) return '-';\n            return (value > 0 ? trace.delta.increasing.symbol : trace.delta.decreasing.symbol) + numberFmt(value);\n        };\n        var deltaFill = function(d) {\n            return d.delta >= 0 ? trace.delta.increasing.color : trace.delta.decreasing.color;\n        };\n        if(trace._deltaLastValue === undefined) {\n            trace._deltaLastValue = deltaValue(cd[0]);\n        }\n        var delta = numbers.select('text.delta');\n        delta\n            .call(Drawing.font, trace.delta.font)\n            .call(Color.fill, deltaFill({delta: trace._deltaLastValue}));\n\n        function writeDelta() {\n            delta.text(deltaFormatText(deltaValue(cd[0]), deltaFmt))\n                .call(Color.fill, deltaFill(cd[0]))\n                .call(svgTextUtils.convertToTspans, gd);\n        }\n\n        if(hasTransition(transitionOpts)) {\n            delta\n                .transition()\n                .duration(transitionOpts.duration)\n                .ease(transitionOpts.easing)\n                .tween('text', function() {\n                    var that = d3.select(this);\n                    var to = deltaValue(cd[0]);\n                    var from = trace._deltaLastValue;\n                    var transitionFmt = transitionFormat(trace.delta.valueformat, deltaFmt, from, to);\n                    var interpolator = interpolateNumber(from, to);\n                    trace._deltaLastValue = to;\n                    return function(t) {\n                        that.text(deltaFormatText(interpolator(t), transitionFmt));\n                        that.call(Color.fill, deltaFill({delta: interpolator(t)}));\n                    };\n                })\n                .each('end', function() { writeDelta(); onComplete && onComplete(); })\n                .each('interrupt', function() { writeDelta(); onComplete && onComplete(); });\n        } else {\n            writeDelta();\n        }\n\n        deltabBox = measureText(deltaFormatText(deltaValue(cd[0]), deltaFmt), trace.delta.font, numbersAnchor, gd);\n        return delta;\n    }\n\n    var key = trace.mode + trace.align;\n    var delta;\n    if(trace._hasDelta) {\n        delta = drawDelta();\n        key += trace.delta.position + trace.delta.font.size + trace.delta.font.family + trace.delta.valueformat;\n        key += trace.delta.increasing.symbol + trace.delta.decreasing.symbol;\n        numbersbBox = deltabBox;\n    }\n    if(trace._hasNumber) {\n        drawBignumber();\n        key += trace.number.font.size + trace.number.font.family + trace.number.valueformat + trace.number.suffix + trace.number.prefix;\n        numbersbBox = bignumberbBox;\n    }\n\n    // Position delta relative to bignumber\n    if(trace._hasDelta && trace._hasNumber) {\n        var bignumberCenter = [\n            (bignumberbBox.left + bignumberbBox.right) / 2,\n            (bignumberbBox.top + bignumberbBox.bottom) / 2\n        ];\n        var deltaCenter = [\n            (deltabBox.left + deltabBox.right) / 2,\n            (deltabBox.top + deltabBox.bottom) / 2\n        ];\n\n        var dx, dy;\n        var padding = 0.75 * trace.delta.font.size;\n        if(trace.delta.position === 'left') {\n            dx = cache(trace, 'deltaPos', 0, -1 * (bignumberbBox.width * (position[trace.align]) + deltabBox.width * (1 - position[trace.align]) + padding), key, Math.min);\n            dy = bignumberCenter[1] - deltaCenter[1];\n\n            numbersbBox = {\n                width: bignumberbBox.width + deltabBox.width + padding,\n                height: Math.max(bignumberbBox.height, deltabBox.height),\n                left: deltabBox.left + dx,\n                right: bignumberbBox.right,\n                top: Math.min(bignumberbBox.top, deltabBox.top + dy),\n                bottom: Math.max(bignumberbBox.bottom, deltabBox.bottom + dy)\n            };\n        }\n        if(trace.delta.position === 'right') {\n            dx = cache(trace, 'deltaPos', 0, bignumberbBox.width * (1 - position[trace.align]) + deltabBox.width * position[trace.align] + padding, key, Math.max);\n            dy = bignumberCenter[1] - deltaCenter[1];\n\n            numbersbBox = {\n                width: bignumberbBox.width + deltabBox.width + padding,\n                height: Math.max(bignumberbBox.height, deltabBox.height),\n                left: bignumberbBox.left,\n                right: deltabBox.right + dx,\n                top: Math.min(bignumberbBox.top, deltabBox.top + dy),\n                bottom: Math.max(bignumberbBox.bottom, deltabBox.bottom + dy)\n            };\n        }\n        if(trace.delta.position === 'bottom') {\n            dx = null;\n            dy = deltabBox.height;\n\n            numbersbBox = {\n                width: Math.max(bignumberbBox.width, deltabBox.width),\n                height: bignumberbBox.height + deltabBox.height,\n                left: Math.min(bignumberbBox.left, deltabBox.left),\n                right: Math.max(bignumberbBox.right, deltabBox.right),\n                top: bignumberbBox.bottom - bignumberbBox.height,\n                bottom: bignumberbBox.bottom + deltabBox.height\n            };\n        }\n        if(trace.delta.position === 'top') {\n            dx = null;\n            dy = bignumberbBox.top;\n\n            numbersbBox = {\n                width: Math.max(bignumberbBox.width, deltabBox.width),\n                height: bignumberbBox.height + deltabBox.height,\n                left: Math.min(bignumberbBox.left, deltabBox.left),\n                right: Math.max(bignumberbBox.right, deltabBox.right),\n                top: bignumberbBox.bottom - bignumberbBox.height - deltabBox.height,\n                bottom: bignumberbBox.bottom\n            };\n        }\n\n        delta.attr({dx: dx, dy: dy});\n    }\n\n    // Resize numbers to fit within space and position\n    if(trace._hasNumber || trace._hasDelta) {\n        numbers.attr('transform', function() {\n            var m = opts.numbersScaler(numbersbBox);\n            key += m[2];\n            var scaleRatio = cache(trace, 'numbersScale', 1, m[0], key, Math.min);\n            var translateY;\n            if(!trace._scaleNumbers) scaleRatio = 1;\n            if(trace._isAngular) {\n                // align vertically to bottom\n                translateY = numbersY - scaleRatio * numbersbBox.bottom;\n            } else {\n                // align vertically to center\n                translateY = numbersY - scaleRatio * (numbersbBox.top + numbersbBox.bottom) / 2;\n            }\n\n            // Stash the top position of numbersbBox for title positioning\n            trace._numbersTop = scaleRatio * (numbersbBox.top) + translateY;\n\n            var ref = numbersbBox[numbersAlign];\n            if(numbersAlign === 'center') ref = (numbersbBox.left + numbersbBox.right) / 2;\n            var translateX = numbersX - scaleRatio * ref;\n\n            // Stash translateX\n            translateX = cache(trace, 'numbersTranslate', 0, translateX, key, Math.max);\n            return strTranslate(translateX, translateY) + strScale(scaleRatio);\n        });\n    }\n}\n\n// Apply fill, stroke, stroke-width to SVG shape\nfunction styleShape(p) {\n    p\n        .each(function(d) { Color.stroke(d3.select(this), d.line.color);})\n        .each(function(d) { Color.fill(d3.select(this), d.color);})\n        .style('stroke-width', function(d) { return d.line.width;});\n}\n\n// Returns a tween for a transitionâs \"d\" attribute, transitioning any selected\n// arcs from their current angle to the specified new angle.\nfunction arcTween(arc, endAngle, newAngle) {\n    return function() {\n        var interp = interpolate(endAngle, newAngle);\n        return function(t) {\n            return arc.endAngle(interp(t))();\n        };\n    };\n}\n\n// mocks our axis\nfunction mockAxis(gd, opts, zrange) {\n    var fullLayout = gd._fullLayout;\n\n    var axisIn = Lib.extendFlat({\n        type: 'linear',\n        ticks: 'outside',\n        range: zrange,\n        showline: true\n    }, opts);\n\n    var axisOut = {\n        type: 'linear',\n        _id: 'x' + opts._id\n    };\n\n    var axisOptions = {\n        letter: 'x',\n        font: fullLayout.font,\n        noHover: true,\n        noTickson: true\n    };\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(axisIn, axisOut, axisLayoutAttrs, attr, dflt);\n    }\n\n    handleAxisDefaults(axisIn, axisOut, coerce, axisOptions, fullLayout);\n    handleAxisPositionDefaults(axisIn, axisOut, coerce, axisOptions);\n\n    return axisOut;\n}\n\nfunction fitTextInsideBox(textBB, width, height) {\n    // compute scaling ratio to have text fit within specified width and height\n    var ratio = Math.min(width / textBB.width, height / textBB.height);\n    return [ratio, textBB, width + 'x' + height];\n}\n\nfunction fitTextInsideCircle(textBB, radius) {\n    // compute scaling ratio to have text fit within specified radius\n    var elRadius = Math.sqrt((textBB.width / 2) * (textBB.width / 2) + textBB.height * textBB.height);\n    var ratio = radius / elRadius;\n    return [ratio, textBB, radius];\n}\n\nfunction measureText(txt, font, textAnchor, gd) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    var sel = d3.select(element);\n    sel.text(txt)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('text-anchor', textAnchor)\n      .attr('data-unformatted', txt)\n      .call(svgTextUtils.convertToTspans, gd)\n      .call(Drawing.font, font);\n    return Drawing.bBox(sel.node());\n}\n\nfunction cache(trace, name, initialValue, value, key, fn) {\n    var objName = '_cache' + name;\n    if(!(trace[objName] && trace[objName].key === key)) {\n        trace[objName] = {key: key, value: initialValue};\n    }\n    var v = Lib.aggNums(fn, null, [trace[objName].value, value], 2);\n    trace[objName].value = v;\n\n    return v;\n}\n"]},"metadata":{},"sourceType":"script"}