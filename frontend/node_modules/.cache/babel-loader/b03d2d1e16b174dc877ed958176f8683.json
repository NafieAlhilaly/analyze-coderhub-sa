{"ast":null,"code":"/**\n * inspired by is-number <https://github.com/jonschlinkert/is-number>\n * but significantly simplified and sped up by ignoring number and string constructors\n * ie these return false:\n *   new Number(1)\n *   new String('1')\n */\n'use strict';\n\nvar allBlankCharCodes = require('is-string-blank');\n\nmodule.exports = function (n) {\n  var type = typeof n;\n\n  if (type === 'string') {\n    var original = n;\n    n = +n; // whitespace strings cast to zero - filter them out\n\n    if (n === 0 && allBlankCharCodes(original)) return false;\n  } else if (type !== 'number') return false;\n\n  return n - n < 1;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/fast-isnumeric/index.js"],"names":["allBlankCharCodes","require","module","exports","n","type","original"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,iBAAD,CAA/B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAASC,CAAT,EAAY;AACzB,MAAIC,IAAI,GAAG,OAAOD,CAAlB;;AACA,MAAGC,IAAI,KAAK,QAAZ,EAAsB;AAClB,QAAIC,QAAQ,GAAGF,CAAf;AACAA,IAAAA,CAAC,GAAG,CAACA,CAAL,CAFkB,CAGlB;;AACA,QAAGA,CAAC,KAAG,CAAJ,IAASJ,iBAAiB,CAACM,QAAD,CAA7B,EAAyC,OAAO,KAAP;AAC5C,GALD,MAMK,IAAGD,IAAI,KAAK,QAAZ,EAAsB,OAAO,KAAP;;AAE3B,SAAOD,CAAC,GAAGA,CAAJ,GAAQ,CAAf;AACH,CAXD","sourcesContent":["/**\n * inspired by is-number <https://github.com/jonschlinkert/is-number>\n * but significantly simplified and sped up by ignoring number and string constructors\n * ie these return false:\n *   new Number(1)\n *   new String('1')\n */\n\n'use strict';\n\nvar allBlankCharCodes = require('is-string-blank');\n\nmodule.exports = function(n) {\n    var type = typeof n;\n    if(type === 'string') {\n        var original = n;\n        n = +n;\n        // whitespace strings cast to zero - filter them out\n        if(n===0 && allBlankCharCodes(original)) return false;\n    }\n    else if(type !== 'number') return false;\n\n    return n - n < 1;\n};\n"]},"metadata":{},"sourceType":"script"}