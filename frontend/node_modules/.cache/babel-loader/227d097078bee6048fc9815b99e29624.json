{"ast":null,"code":"'use strict';\n\nmodule.exports = monotoneConvexHull2D;\n\nvar orient = require('robust-orientation')[3];\n\nfunction monotoneConvexHull2D(points) {\n  var n = points.length;\n\n  if (n < 3) {\n    var result = new Array(n);\n\n    for (var i = 0; i < n; ++i) {\n      result[i] = i;\n    }\n\n    if (n === 2 && points[0][0] === points[1][0] && points[0][1] === points[1][1]) {\n      return [0];\n    }\n\n    return result;\n  } //Sort point indices along x-axis\n\n\n  var sorted = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    sorted[i] = i;\n  }\n\n  sorted.sort(function (a, b) {\n    var d = points[a][0] - points[b][0];\n\n    if (d) {\n      return d;\n    }\n\n    return points[a][1] - points[b][1];\n  }); //Construct upper and lower hulls\n\n  var lower = [sorted[0], sorted[1]];\n  var upper = [sorted[0], sorted[1]];\n\n  for (var i = 2; i < n; ++i) {\n    var idx = sorted[i];\n    var p = points[idx]; //Insert into lower list\n\n    var m = lower.length;\n\n    while (m > 1 && orient(points[lower[m - 2]], points[lower[m - 1]], p) <= 0) {\n      m -= 1;\n      lower.pop();\n    }\n\n    lower.push(idx); //Insert into upper list\n\n    m = upper.length;\n\n    while (m > 1 && orient(points[upper[m - 2]], points[upper[m - 1]], p) >= 0) {\n      m -= 1;\n      upper.pop();\n    }\n\n    upper.push(idx);\n  } //Merge lists together\n\n\n  var result = new Array(upper.length + lower.length - 2);\n  var ptr = 0;\n\n  for (var i = 0, nl = lower.length; i < nl; ++i) {\n    result[ptr++] = lower[i];\n  }\n\n  for (var j = upper.length - 2; j > 0; --j) {\n    result[ptr++] = upper[j];\n  } //Return result\n\n\n  return result;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/monotone-convex-hull-2d/index.js"],"names":["module","exports","monotoneConvexHull2D","orient","require","points","n","length","result","Array","i","sorted","sort","a","b","d","lower","upper","idx","p","m","pop","push","ptr","nl","j"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = monotoneConvexHull2D\n\nvar orient = require('robust-orientation')[3]\n\nfunction monotoneConvexHull2D(points) {\n  var n = points.length\n\n  if(n < 3) {\n    var result = new Array(n)\n    for(var i=0; i<n; ++i) {\n      result[i] = i\n    }\n\n    if(n === 2 &&\n       points[0][0] === points[1][0] &&\n       points[0][1] === points[1][1]) {\n      return [0]\n    }\n\n    return result\n  }\n\n  //Sort point indices along x-axis\n  var sorted = new Array(n)\n  for(var i=0; i<n; ++i) {\n    sorted[i] = i\n  }\n  sorted.sort(function(a,b) {\n    var d = points[a][0]-points[b][0]\n    if(d) {\n      return d\n    }\n    return points[a][1] - points[b][1]\n  })\n\n  //Construct upper and lower hulls\n  var lower = [sorted[0], sorted[1]]\n  var upper = [sorted[0], sorted[1]]\n\n  for(var i=2; i<n; ++i) {\n    var idx = sorted[i]\n    var p   = points[idx]\n\n    //Insert into lower list\n    var m = lower.length\n    while(m > 1 && orient(\n        points[lower[m-2]], \n        points[lower[m-1]], \n        p) <= 0) {\n      m -= 1\n      lower.pop()\n    }\n    lower.push(idx)\n\n    //Insert into upper list\n    m = upper.length\n    while(m > 1 && orient(\n        points[upper[m-2]], \n        points[upper[m-1]], \n        p) >= 0) {\n      m -= 1\n      upper.pop()\n    }\n    upper.push(idx)\n  }\n\n  //Merge lists together\n  var result = new Array(upper.length + lower.length - 2)\n  var ptr    = 0\n  for(var i=0, nl=lower.length; i<nl; ++i) {\n    result[ptr++] = lower[i]\n  }\n  for(var j=upper.length-2; j>0; --j) {\n    result[ptr++] = upper[j]\n  }\n\n  //Return result\n  return result\n}"]},"metadata":{},"sourceType":"script"}