{"ast":null,"code":"/** @module  color-id */\n'use strict';\n\nvar clamp = require('clamp');\n\nmodule.exports = toNumber;\nmodule.exports.to = toNumber;\nmodule.exports.from = fromNumber;\n\nfunction toNumber(rgba, normalized) {\n  if (normalized == null) normalized = true;\n  var r = rgba[0],\n      g = rgba[1],\n      b = rgba[2],\n      a = rgba[3];\n  if (a == null) a = normalized ? 1 : 255;\n\n  if (normalized) {\n    r *= 255;\n    g *= 255;\n    b *= 255;\n    a *= 255;\n  }\n\n  r = clamp(r, 0, 255) & 0xFF;\n  g = clamp(g, 0, 255) & 0xFF;\n  b = clamp(b, 0, 255) & 0xFF;\n  a = clamp(a, 0, 255) & 0xFF; //hi-order shift converts to -1, so we can't use <<24\n\n  var n = r * 0x01000000 + (g << 16) + (b << 8) + a;\n  return n;\n}\n\nfunction fromNumber(n, normalized) {\n  n = +n;\n  var r = n >>> 24;\n  var g = (n & 0x00ff0000) >>> 16;\n  var b = (n & 0x0000ff00) >>> 8;\n  var a = n & 0x000000ff;\n  if (normalized === false) return [r, g, b, a];\n  return [r / 255, g / 255, b / 255, a / 255];\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/color-id/index.js"],"names":["clamp","require","module","exports","toNumber","to","from","fromNumber","rgba","normalized","r","g","b","a","n"],"mappings":"AAAA;AAEA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AACAF,MAAM,CAACC,OAAP,CAAeE,EAAf,GAAoBD,QAApB;AACAF,MAAM,CAACC,OAAP,CAAeG,IAAf,GAAsBC,UAAtB;;AAEA,SAASH,QAAT,CAAmBI,IAAnB,EAAyBC,UAAzB,EAAqC;AACpC,MAAGA,UAAU,IAAI,IAAjB,EAAuBA,UAAU,GAAG,IAAb;AAEvB,MAAIC,CAAC,GAAGF,IAAI,CAAC,CAAD,CAAZ;AAAA,MAAiBG,CAAC,GAAGH,IAAI,CAAC,CAAD,CAAzB;AAAA,MAA8BI,CAAC,GAAGJ,IAAI,CAAC,CAAD,CAAtC;AAAA,MAA2CK,CAAC,GAAGL,IAAI,CAAC,CAAD,CAAnD;AAEA,MAAIK,CAAC,IAAI,IAAT,EAAeA,CAAC,GAAGJ,UAAU,GAAG,CAAH,GAAO,GAArB;;AAEf,MAAIA,UAAJ,EAAgB;AACfC,IAAAA,CAAC,IAAI,GAAL;AACAC,IAAAA,CAAC,IAAI,GAAL;AACAC,IAAAA,CAAC,IAAI,GAAL;AACAC,IAAAA,CAAC,IAAI,GAAL;AACA;;AAEDH,EAAAA,CAAC,GAAGV,KAAK,CAACU,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAL,GAAmB,IAAvB;AACAC,EAAAA,CAAC,GAAGX,KAAK,CAACW,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAL,GAAmB,IAAvB;AACAC,EAAAA,CAAC,GAAGZ,KAAK,CAACY,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAL,GAAmB,IAAvB;AACAC,EAAAA,CAAC,GAAGb,KAAK,CAACa,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAL,GAAmB,IAAvB,CAjBoC,CAmBpC;;AACA,MAAIC,CAAC,GAAIJ,CAAC,GAAG,UAAL,IAAoBC,CAAC,IAAI,EAAzB,KAAgCC,CAAC,IAAI,CAArC,IAA2CC,CAAnD;AAEA,SAAOC,CAAP;AACA;;AAED,SAASP,UAAT,CAAqBO,CAArB,EAAwBL,UAAxB,EAAoC;AACnCK,EAAAA,CAAC,GAAG,CAACA,CAAL;AAEA,MAAIJ,CAAC,GAAGI,CAAC,KAAK,EAAd;AACA,MAAIH,CAAC,GAAG,CAACG,CAAC,GAAG,UAAL,MAAqB,EAA7B;AACA,MAAIF,CAAC,GAAG,CAACE,CAAC,GAAG,UAAL,MAAqB,CAA7B;AACA,MAAID,CAAC,GAAGC,CAAC,GAAG,UAAZ;AAEA,MAAIL,UAAU,KAAK,KAAnB,EAA0B,OAAO,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAP;AAE1B,SAAO,CAACH,CAAC,GAAC,GAAH,EAAQC,CAAC,GAAC,GAAV,EAAeC,CAAC,GAAC,GAAjB,EAAsBC,CAAC,GAAC,GAAxB,CAAP;AACA","sourcesContent":["/** @module  color-id */\r\n\r\n'use strict'\r\n\r\nvar clamp = require('clamp')\r\n\r\nmodule.exports = toNumber\r\nmodule.exports.to = toNumber\r\nmodule.exports.from = fromNumber\r\n\r\nfunction toNumber (rgba, normalized) {\r\n\tif(normalized == null) normalized = true\r\n\r\n\tvar r = rgba[0], g = rgba[1], b = rgba[2], a = rgba[3]\r\n\r\n\tif (a == null) a = normalized ? 1 : 255\r\n\r\n\tif (normalized) {\r\n\t\tr *= 255\r\n\t\tg *= 255\r\n\t\tb *= 255\r\n\t\ta *= 255\r\n\t}\r\n\r\n\tr = clamp(r, 0, 255) & 0xFF\r\n\tg = clamp(g, 0, 255) & 0xFF\r\n\tb = clamp(b, 0, 255) & 0xFF\r\n\ta = clamp(a, 0, 255) & 0xFF\r\n\r\n\t//hi-order shift converts to -1, so we can't use <<24\r\n\tvar n = (r * 0x01000000) + (g << 16) + (b << 8) + (a)\r\n\r\n\treturn n\r\n}\r\n\r\nfunction fromNumber (n, normalized) {\r\n\tn = +n\r\n\r\n\tvar r = n >>> 24\r\n\tvar g = (n & 0x00ff0000) >>> 16\r\n\tvar b = (n & 0x0000ff00) >>> 8\r\n\tvar a = n & 0x000000ff\r\n\r\n\tif (normalized === false) return [r, g, b, a]\r\n\r\n\treturn [r/255, g/255, b/255, a/255]\r\n}\r\n"]},"metadata":{},"sourceType":"script"}