{"ast":null,"code":"'use strict';\n\nvar opacity = require('../../components/color').opacity;\n\nvar hoverOnBars = require('../bar/hover').hoverOnBars;\n\nvar formatPercent = require('../../lib').formatPercent;\n\nmodule.exports = function hoverPoints(pointData, xval, yval, hovermode, opts) {\n  var point = hoverOnBars(pointData, xval, yval, hovermode, opts);\n  if (!point) return;\n  var cd = point.cd;\n  var trace = cd[0].trace;\n  var isHorizontal = trace.orientation === 'h'; // the closest data point\n\n  var index = point.index;\n  var di = cd[index];\n  var sizeLetter = isHorizontal ? 'x' : 'y';\n  point[sizeLetter + 'LabelVal'] = di.s;\n  point.percentInitial = di.begR;\n  point.percentInitialLabel = formatPercent(di.begR, 1);\n  point.percentPrevious = di.difR;\n  point.percentPreviousLabel = formatPercent(di.difR, 1);\n  point.percentTotal = di.sumR;\n  point.percentTotalLabel = formatPercent(di.sumR, 1);\n  var hoverinfo = di.hi || trace.hoverinfo;\n  var text = [];\n\n  if (hoverinfo && hoverinfo !== 'none' && hoverinfo !== 'skip') {\n    var isAll = hoverinfo === 'all';\n    var parts = hoverinfo.split('+');\n\n    var hasFlag = function (flag) {\n      return isAll || parts.indexOf(flag) !== -1;\n    };\n\n    if (hasFlag('percent initial')) {\n      text.push(point.percentInitialLabel + ' of initial');\n    }\n\n    if (hasFlag('percent previous')) {\n      text.push(point.percentPreviousLabel + ' of previous');\n    }\n\n    if (hasFlag('percent total')) {\n      text.push(point.percentTotalLabel + ' of total');\n    }\n  }\n\n  point.extraText = text.join('<br>');\n  point.color = getTraceColor(trace, di);\n  return [point];\n};\n\nfunction getTraceColor(trace, di) {\n  var cont = trace.marker;\n  var mc = di.mc || cont.color;\n  var mlc = di.mlc || cont.line.color;\n  var mlw = di.mlw || cont.line.width;\n  if (opacity(mc)) return mc;else if (opacity(mlc) && mlw) return mlc;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/funnel/hover.js"],"names":["opacity","require","hoverOnBars","formatPercent","module","exports","hoverPoints","pointData","xval","yval","hovermode","opts","point","cd","trace","isHorizontal","orientation","index","di","sizeLetter","s","percentInitial","begR","percentInitialLabel","percentPrevious","difR","percentPreviousLabel","percentTotal","sumR","percentTotalLabel","hoverinfo","hi","text","isAll","parts","split","hasFlag","flag","indexOf","push","extraText","join","color","getTraceColor","cont","marker","mc","mlc","line","mlw","width"],"mappings":"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","sourcesContent":["'use strict';\n\nvar opacity = require('../../components/color').opacity;\nvar hoverOnBars = require('../bar/hover').hoverOnBars;\nvar formatPercent = require('../../lib').formatPercent;\n\nmodule.exports = function hoverPoints(pointData, xval, yval, hovermode, opts) {\n    var point = hoverOnBars(pointData, xval, yval, hovermode, opts);\n    if(!point) return;\n\n    var cd = point.cd;\n    var trace = cd[0].trace;\n    var isHorizontal = (trace.orientation === 'h');\n\n    // the closest data point\n    var index = point.index;\n    var di = cd[index];\n\n    var sizeLetter = isHorizontal ? 'x' : 'y';\n    point[sizeLetter + 'LabelVal'] = di.s;\n\n    point.percentInitial = di.begR;\n    point.percentInitialLabel = formatPercent(di.begR, 1);\n\n    point.percentPrevious = di.difR;\n    point.percentPreviousLabel = formatPercent(di.difR, 1);\n\n    point.percentTotal = di.sumR;\n    point.percentTotalLabel = formatPercent(di.sumR, 1);\n\n    var hoverinfo = di.hi || trace.hoverinfo;\n    var text = [];\n    if(hoverinfo && hoverinfo !== 'none' && hoverinfo !== 'skip') {\n        var isAll = (hoverinfo === 'all');\n        var parts = hoverinfo.split('+');\n\n        var hasFlag = function(flag) { return isAll || parts.indexOf(flag) !== -1; };\n\n        if(hasFlag('percent initial')) {\n            text.push(point.percentInitialLabel + ' of initial');\n        }\n        if(hasFlag('percent previous')) {\n            text.push(point.percentPreviousLabel + ' of previous');\n        }\n        if(hasFlag('percent total')) {\n            text.push(point.percentTotalLabel + ' of total');\n        }\n    }\n    point.extraText = text.join('<br>');\n\n    point.color = getTraceColor(trace, di);\n\n    return [point];\n};\n\nfunction getTraceColor(trace, di) {\n    var cont = trace.marker;\n    var mc = di.mc || cont.color;\n    var mlc = di.mlc || cont.line.color;\n    var mlw = di.mlw || cont.line.width;\n    if(opacity(mc)) return mc;\n    else if(opacity(mlc) && mlw) return mlc;\n}\n"]},"metadata":{},"sourceType":"script"}