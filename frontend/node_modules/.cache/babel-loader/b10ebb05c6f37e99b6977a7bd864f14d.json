{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar layoutAttributes = require('./layout_attributes');\n\nvar handleHoverModeDefaults = require('./hovermode_defaults');\n\nvar handleHoverLabelDefaults = require('./hoverlabel_defaults');\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n  }\n\n  var hoverMode = handleHoverModeDefaults(layoutIn, layoutOut);\n\n  if (hoverMode) {\n    coerce('hoverdistance');\n    coerce('spikedistance');\n  }\n\n  var dragMode = coerce('dragmode');\n  if (dragMode === 'select') coerce('selectdirection'); // if only mapbox or geo subplots is present on graph,\n  // reset 'zoom' dragmode to 'pan' until 'zoom' is implemented,\n  // so that the correct modebar button is active\n\n  var hasMapbox = layoutOut._has('mapbox');\n\n  var hasGeo = layoutOut._has('geo');\n\n  var len = layoutOut._basePlotModules.length;\n\n  if (layoutOut.dragmode === 'zoom' && ((hasMapbox || hasGeo) && len === 1 || hasMapbox && hasGeo && len === 2)) {\n    layoutOut.dragmode = 'pan';\n  }\n\n  handleHoverLabelDefaults(layoutIn, layoutOut, coerce);\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/fx/layout_defaults.js"],"names":["Lib","require","layoutAttributes","handleHoverModeDefaults","handleHoverLabelDefaults","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","coerce","attr","dflt","hoverMode","dragMode","hasMapbox","_has","hasGeo","len","_basePlotModules","length","dragmode"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,qBAAD,CAA9B;;AACA,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,sBAAD,CAArC;;AACA,IAAIG,wBAAwB,GAAGH,OAAO,CAAC,uBAAD,CAAtC;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,QAA9B,EAAwCC,SAAxC,EAAmD;AAChE,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACxB,WAAOZ,GAAG,CAACU,MAAJ,CAAWF,QAAX,EAAqBC,SAArB,EAAgCP,gBAAhC,EAAkDS,IAAlD,EAAwDC,IAAxD,CAAP;AACH;;AAED,MAAIC,SAAS,GAAGV,uBAAuB,CAACK,QAAD,EAAWC,SAAX,CAAvC;;AACA,MAAGI,SAAH,EAAc;AACVH,IAAAA,MAAM,CAAC,eAAD,CAAN;AACAA,IAAAA,MAAM,CAAC,eAAD,CAAN;AACH;;AAED,MAAII,QAAQ,GAAGJ,MAAM,CAAC,UAAD,CAArB;AACA,MAAGI,QAAQ,KAAK,QAAhB,EAA0BJ,MAAM,CAAC,iBAAD,CAAN,CAZsC,CAchE;AACA;AACA;;AACA,MAAIK,SAAS,GAAGN,SAAS,CAACO,IAAV,CAAe,QAAf,CAAhB;;AACA,MAAIC,MAAM,GAAGR,SAAS,CAACO,IAAV,CAAe,KAAf,CAAb;;AACA,MAAIE,GAAG,GAAGT,SAAS,CAACU,gBAAV,CAA2BC,MAArC;;AAEA,MAAGX,SAAS,CAACY,QAAV,KAAuB,MAAvB,KACE,CAACN,SAAS,IAAIE,MAAd,KAAyBC,GAAG,KAAK,CAAlC,IACCH,SAAS,IAAIE,MAAb,IAAuBC,GAAG,KAAK,CAFjC,CAAH,EAGG;AACCT,IAAAA,SAAS,CAACY,QAAV,GAAqB,KAArB;AACH;;AAEDjB,EAAAA,wBAAwB,CAACI,QAAD,EAAWC,SAAX,EAAsBC,MAAtB,CAAxB;AACH,CA7BD","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar layoutAttributes = require('./layout_attributes');\nvar handleHoverModeDefaults = require('./hovermode_defaults');\nvar handleHoverLabelDefaults = require('./hoverlabel_defaults');\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n    }\n\n    var hoverMode = handleHoverModeDefaults(layoutIn, layoutOut);\n    if(hoverMode) {\n        coerce('hoverdistance');\n        coerce('spikedistance');\n    }\n\n    var dragMode = coerce('dragmode');\n    if(dragMode === 'select') coerce('selectdirection');\n\n    // if only mapbox or geo subplots is present on graph,\n    // reset 'zoom' dragmode to 'pan' until 'zoom' is implemented,\n    // so that the correct modebar button is active\n    var hasMapbox = layoutOut._has('mapbox');\n    var hasGeo = layoutOut._has('geo');\n    var len = layoutOut._basePlotModules.length;\n\n    if(layoutOut.dragmode === 'zoom' && (\n        ((hasMapbox || hasGeo) && len === 1) ||\n        (hasMapbox && hasGeo && len === 2)\n    )) {\n        layoutOut.dragmode = 'pan';\n    }\n\n    handleHoverLabelDefaults(layoutIn, layoutOut, coerce);\n};\n"]},"metadata":{},"sourceType":"script"}