{"ast":null,"code":"'use strict';\n\nmodule.exports = function handleContourDefaults(traceIn, traceOut, coerce, coerce2) {\n  var contourStart = coerce2('contours.start');\n  var contourEnd = coerce2('contours.end');\n  var missingEnd = contourStart === false || contourEnd === false; // normally we only need size if autocontour is off. But contour.calc\n  // pushes its calculated contour size back to the input trace, so for\n  // things like restyle that can call supplyDefaults without calc\n  // after the initial draw, we can just reuse the previous calculation\n\n  var contourSize = coerce('contours.size');\n  var autoContour;\n  if (missingEnd) autoContour = traceOut.autocontour = true;else autoContour = coerce('autocontour', false);\n  if (autoContour || !contourSize) coerce('ncontours');\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/contour/contours_defaults.js"],"names":["module","exports","handleContourDefaults","traceIn","traceOut","coerce","coerce2","contourStart","contourEnd","missingEnd","contourSize","autoContour","autocontour"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,qBAAT,CAA+BC,OAA/B,EAAwCC,QAAxC,EAAkDC,MAAlD,EAA0DC,OAA1D,EAAmE;AAChF,MAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA1B;AACA,MAAIE,UAAU,GAAGF,OAAO,CAAC,cAAD,CAAxB;AACA,MAAIG,UAAU,GAAIF,YAAY,KAAK,KAAlB,IAA6BC,UAAU,KAAK,KAA7D,CAHgF,CAKhF;AACA;AACA;AACA;;AACA,MAAIE,WAAW,GAAGL,MAAM,CAAC,eAAD,CAAxB;AACA,MAAIM,WAAJ;AAEA,MAAGF,UAAH,EAAeE,WAAW,GAAGP,QAAQ,CAACQ,WAAT,GAAuB,IAArC,CAAf,KACKD,WAAW,GAAGN,MAAM,CAAC,aAAD,EAAgB,KAAhB,CAApB;AAEL,MAAGM,WAAW,IAAI,CAACD,WAAnB,EAAgCL,MAAM,CAAC,WAAD,CAAN;AACnC,CAhBD","sourcesContent":["'use strict';\n\nmodule.exports = function handleContourDefaults(traceIn, traceOut, coerce, coerce2) {\n    var contourStart = coerce2('contours.start');\n    var contourEnd = coerce2('contours.end');\n    var missingEnd = (contourStart === false) || (contourEnd === false);\n\n    // normally we only need size if autocontour is off. But contour.calc\n    // pushes its calculated contour size back to the input trace, so for\n    // things like restyle that can call supplyDefaults without calc\n    // after the initial draw, we can just reuse the previous calculation\n    var contourSize = coerce('contours.size');\n    var autoContour;\n\n    if(missingEnd) autoContour = traceOut.autocontour = true;\n    else autoContour = coerce('autocontour', false);\n\n    if(autoContour || !contourSize) coerce('ncontours');\n};\n"]},"metadata":{},"sourceType":"script"}