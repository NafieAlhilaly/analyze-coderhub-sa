{"ast":null,"code":"\"use strict\";\n\nvar pool = require(\"typedarray-pool\");\n\nvar ops = require(\"ndarray-ops\");\n\nvar ndarray = require(\"ndarray\");\n\nvar SUPPORTED_TYPES = [\"uint8\", \"uint8_clamped\", \"uint16\", \"uint32\", \"int8\", \"int16\", \"int32\", \"float32\"];\n\nfunction GLBuffer(gl, type, handle, length, usage) {\n  this.gl = gl;\n  this.type = type;\n  this.handle = handle;\n  this.length = length;\n  this.usage = usage;\n}\n\nvar proto = GLBuffer.prototype;\n\nproto.bind = function () {\n  this.gl.bindBuffer(this.type, this.handle);\n};\n\nproto.unbind = function () {\n  this.gl.bindBuffer(this.type, null);\n};\n\nproto.dispose = function () {\n  this.gl.deleteBuffer(this.handle);\n};\n\nfunction updateTypeArray(gl, type, len, usage, data, offset) {\n  var dataLen = data.length * data.BYTES_PER_ELEMENT;\n\n  if (offset < 0) {\n    gl.bufferData(type, data, usage);\n    return dataLen;\n  }\n\n  if (dataLen + offset > len) {\n    throw new Error(\"gl-buffer: If resizing buffer, must not specify offset\");\n  }\n\n  gl.bufferSubData(type, offset, data);\n  return len;\n}\n\nfunction makeScratchTypeArray(array, dtype) {\n  var res = pool.malloc(array.length, dtype);\n  var n = array.length;\n\n  for (var i = 0; i < n; ++i) {\n    res[i] = array[i];\n  }\n\n  return res;\n}\n\nfunction isPacked(shape, stride) {\n  var n = 1;\n\n  for (var i = stride.length - 1; i >= 0; --i) {\n    if (stride[i] !== n) {\n      return false;\n    }\n\n    n *= shape[i];\n  }\n\n  return true;\n}\n\nproto.update = function (array, offset) {\n  if (typeof offset !== \"number\") {\n    offset = -1;\n  }\n\n  this.bind();\n\n  if (typeof array === \"object\" && typeof array.shape !== \"undefined\") {\n    //ndarray\n    var dtype = array.dtype;\n\n    if (SUPPORTED_TYPES.indexOf(dtype) < 0) {\n      dtype = \"float32\";\n    }\n\n    if (this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      var ext = gl.getExtension('OES_element_index_uint');\n\n      if (ext && dtype !== \"uint16\") {\n        dtype = \"uint32\";\n      } else {\n        dtype = \"uint16\";\n      }\n    }\n\n    if (dtype === array.dtype && isPacked(array.shape, array.stride)) {\n      if (array.offset === 0 && array.data.length === array.shape[0]) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data, offset);\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data.subarray(array.offset, array.shape[0]), offset);\n      }\n    } else {\n      var tmp = pool.malloc(array.size, dtype);\n      var ndt = ndarray(tmp, array.shape);\n      ops.assign(ndt, array);\n\n      if (offset < 0) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp, offset);\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp.subarray(0, array.size), offset);\n      }\n\n      pool.free(tmp);\n    }\n  } else if (Array.isArray(array)) {\n    //Vanilla array\n    var t;\n\n    if (this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      t = makeScratchTypeArray(array, \"uint16\");\n    } else {\n      t = makeScratchTypeArray(array, \"float32\");\n    }\n\n    if (offset < 0) {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t, offset);\n    } else {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t.subarray(0, array.length), offset);\n    }\n\n    pool.free(t);\n  } else if (typeof array === \"object\" && typeof array.length === \"number\") {\n    //Typed array\n    this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array, offset);\n  } else if (typeof array === \"number\" || array === undefined) {\n    //Number/default\n    if (offset >= 0) {\n      throw new Error(\"gl-buffer: Cannot specify offset when resizing buffer\");\n    }\n\n    array = array | 0;\n\n    if (array <= 0) {\n      array = 1;\n    }\n\n    this.gl.bufferData(this.type, array | 0, this.usage);\n    this.length = array;\n  } else {\n    //Error, case should not happen\n    throw new Error(\"gl-buffer: Invalid data type\");\n  }\n};\n\nfunction createBuffer(gl, data, type, usage) {\n  type = type || gl.ARRAY_BUFFER;\n  usage = usage || gl.DYNAMIC_DRAW;\n\n  if (type !== gl.ARRAY_BUFFER && type !== gl.ELEMENT_ARRAY_BUFFER) {\n    throw new Error(\"gl-buffer: Invalid type for webgl buffer, must be either gl.ARRAY_BUFFER or gl.ELEMENT_ARRAY_BUFFER\");\n  }\n\n  if (usage !== gl.DYNAMIC_DRAW && usage !== gl.STATIC_DRAW && usage !== gl.STREAM_DRAW) {\n    throw new Error(\"gl-buffer: Invalid usage for buffer, must be either gl.DYNAMIC_DRAW, gl.STATIC_DRAW or gl.STREAM_DRAW\");\n  }\n\n  var handle = gl.createBuffer();\n  var result = new GLBuffer(gl, type, handle, 0, usage);\n  result.update(data);\n  return result;\n}\n\nmodule.exports = createBuffer;","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/gl-buffer/buffer.js"],"names":["pool","require","ops","ndarray","SUPPORTED_TYPES","GLBuffer","gl","type","handle","length","usage","proto","prototype","bind","bindBuffer","unbind","dispose","deleteBuffer","updateTypeArray","len","data","offset","dataLen","BYTES_PER_ELEMENT","bufferData","Error","bufferSubData","makeScratchTypeArray","array","dtype","res","malloc","n","i","isPacked","shape","stride","update","indexOf","ELEMENT_ARRAY_BUFFER","ext","getExtension","subarray","tmp","size","ndt","assign","free","Array","isArray","t","undefined","createBuffer","ARRAY_BUFFER","DYNAMIC_DRAW","STATIC_DRAW","STREAM_DRAW","result","module","exports"],"mappings":"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","sourcesContent":["\"use strict\"\n\nvar pool = require(\"typedarray-pool\")\nvar ops = require(\"ndarray-ops\")\nvar ndarray = require(\"ndarray\")\n\nvar SUPPORTED_TYPES = [\n  \"uint8\",\n  \"uint8_clamped\",\n  \"uint16\",\n  \"uint32\",\n  \"int8\",\n  \"int16\",\n  \"int32\",\n  \"float32\" ]\n\nfunction GLBuffer(gl, type, handle, length, usage) {\n  this.gl = gl\n  this.type = type\n  this.handle = handle\n  this.length = length\n  this.usage = usage\n}\n\nvar proto = GLBuffer.prototype\n\nproto.bind = function() {\n  this.gl.bindBuffer(this.type, this.handle)\n}\n\nproto.unbind = function() {\n  this.gl.bindBuffer(this.type, null)\n}\n\nproto.dispose = function() {\n  this.gl.deleteBuffer(this.handle)\n}\n\nfunction updateTypeArray(gl, type, len, usage, data, offset) {\n  var dataLen = data.length * data.BYTES_PER_ELEMENT\n  if(offset < 0) {\n    gl.bufferData(type, data, usage)\n    return dataLen\n  }\n  if(dataLen + offset > len) {\n    throw new Error(\"gl-buffer: If resizing buffer, must not specify offset\")\n  }\n  gl.bufferSubData(type, offset, data)\n  return len\n}\n\nfunction makeScratchTypeArray(array, dtype) {\n  var res = pool.malloc(array.length, dtype)\n  var n = array.length\n  for(var i=0; i<n; ++i) {\n    res[i] = array[i]\n  }\n  return res\n}\n\nfunction isPacked(shape, stride) {\n  var n = 1\n  for(var i=stride.length-1; i>=0; --i) {\n    if(stride[i] !== n) {\n      return false\n    }\n    n *= shape[i]\n  }\n  return true\n}\n\nproto.update = function(array, offset) {\n  if(typeof offset !== \"number\") {\n    offset = -1\n  }\n  this.bind()\n  if(typeof array === \"object\" && typeof array.shape !== \"undefined\") { //ndarray\n    var dtype = array.dtype\n    if(SUPPORTED_TYPES.indexOf(dtype) < 0) {\n      dtype = \"float32\"\n    }\n    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      var ext = gl.getExtension('OES_element_index_uint')\n      if(ext && dtype !== \"uint16\") {\n        dtype = \"uint32\"\n      } else {\n        dtype = \"uint16\"\n      }\n    }\n    if(dtype === array.dtype && isPacked(array.shape, array.stride)) {\n      if(array.offset === 0 && array.data.length === array.shape[0]) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data, offset)\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data.subarray(array.offset, array.shape[0]), offset)\n      }\n    } else {\n      var tmp = pool.malloc(array.size, dtype)\n      var ndt = ndarray(tmp, array.shape)\n      ops.assign(ndt, array)\n      if(offset < 0) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp, offset)\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp.subarray(0, array.size), offset)\n      }\n      pool.free(tmp)\n    }\n  } else if(Array.isArray(array)) { //Vanilla array\n    var t\n    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      t = makeScratchTypeArray(array, \"uint16\")\n    } else {\n      t = makeScratchTypeArray(array, \"float32\")\n    }\n    if(offset < 0) {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t, offset)\n    } else {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t.subarray(0, array.length), offset)\n    }\n    pool.free(t)\n  } else if(typeof array === \"object\" && typeof array.length === \"number\") { //Typed array\n    this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array, offset)\n  } else if(typeof array === \"number\" || array === undefined) { //Number/default\n    if(offset >= 0) {\n      throw new Error(\"gl-buffer: Cannot specify offset when resizing buffer\")\n    }\n    array = array | 0\n    if(array <= 0) {\n      array = 1\n    }\n    this.gl.bufferData(this.type, array|0, this.usage)\n    this.length = array\n  } else { //Error, case should not happen\n    throw new Error(\"gl-buffer: Invalid data type\")\n  }\n}\n\nfunction createBuffer(gl, data, type, usage) {\n  type = type || gl.ARRAY_BUFFER\n  usage = usage || gl.DYNAMIC_DRAW\n  if(type !== gl.ARRAY_BUFFER && type !== gl.ELEMENT_ARRAY_BUFFER) {\n    throw new Error(\"gl-buffer: Invalid type for webgl buffer, must be either gl.ARRAY_BUFFER or gl.ELEMENT_ARRAY_BUFFER\")\n  }\n  if(usage !== gl.DYNAMIC_DRAW && usage !== gl.STATIC_DRAW && usage !== gl.STREAM_DRAW) {\n    throw new Error(\"gl-buffer: Invalid usage for buffer, must be either gl.DYNAMIC_DRAW, gl.STATIC_DRAW or gl.STREAM_DRAW\")\n  }\n  var handle = gl.createBuffer()\n  var result = new GLBuffer(gl, type, handle, 0, usage)\n  result.update(data)\n  return result\n}\n\nmodule.exports = createBuffer\n"]},"metadata":{},"sourceType":"script"}