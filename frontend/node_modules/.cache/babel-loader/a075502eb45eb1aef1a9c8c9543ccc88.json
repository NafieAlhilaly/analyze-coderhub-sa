{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Color = require('../color');\n\nmodule.exports = function style(traces) {\n  traces.each(function (d) {\n    var trace = d[0].trace;\n    var yObj = trace.error_y || {};\n    var xObj = trace.error_x || {};\n    var s = d3.select(this);\n    s.selectAll('path.yerror').style('stroke-width', yObj.thickness + 'px').call(Color.stroke, yObj.color);\n    if (xObj.copy_ystyle) xObj = yObj;\n    s.selectAll('path.xerror').style('stroke-width', xObj.thickness + 'px').call(Color.stroke, xObj.color);\n  });\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/errorbars/style.js"],"names":["d3","require","Color","module","exports","style","traces","each","d","trace","yObj","error_y","xObj","error_x","s","select","selectAll","thickness","call","stroke","color","copy_ystyle"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,YAAD,CAAhB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAnB;;AAGAE,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,MAAf,EAAuB;AACpCA,EAAAA,MAAM,CAACC,IAAP,CAAY,UAASC,CAAT,EAAY;AACpB,QAAIC,KAAK,GAAGD,CAAC,CAAC,CAAD,CAAD,CAAKC,KAAjB;AACA,QAAIC,IAAI,GAAGD,KAAK,CAACE,OAAN,IAAiB,EAA5B;AACA,QAAIC,IAAI,GAAGH,KAAK,CAACI,OAAN,IAAiB,EAA5B;AAEA,QAAIC,CAAC,GAAGd,EAAE,CAACe,MAAH,CAAU,IAAV,CAAR;AAEAD,IAAAA,CAAC,CAACE,SAAF,CAAY,aAAZ,EACKX,KADL,CACW,cADX,EAC2BK,IAAI,CAACO,SAAL,GAAiB,IAD5C,EAEKC,IAFL,CAEUhB,KAAK,CAACiB,MAFhB,EAEwBT,IAAI,CAACU,KAF7B;AAIA,QAAGR,IAAI,CAACS,WAAR,EAAqBT,IAAI,GAAGF,IAAP;AAErBI,IAAAA,CAAC,CAACE,SAAF,CAAY,aAAZ,EACKX,KADL,CACW,cADX,EAC2BO,IAAI,CAACK,SAAL,GAAiB,IAD5C,EAEKC,IAFL,CAEUhB,KAAK,CAACiB,MAFhB,EAEwBP,IAAI,CAACQ,KAF7B;AAGH,GAhBD;AAiBH,CAlBD","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Color = require('../color');\n\n\nmodule.exports = function style(traces) {\n    traces.each(function(d) {\n        var trace = d[0].trace;\n        var yObj = trace.error_y || {};\n        var xObj = trace.error_x || {};\n\n        var s = d3.select(this);\n\n        s.selectAll('path.yerror')\n            .style('stroke-width', yObj.thickness + 'px')\n            .call(Color.stroke, yObj.color);\n\n        if(xObj.copy_ystyle) xObj = yObj;\n\n        s.selectAll('path.xerror')\n            .style('stroke-width', xObj.thickness + 'px')\n            .call(Color.stroke, xObj.color);\n    });\n};\n"]},"metadata":{},"sourceType":"script"}