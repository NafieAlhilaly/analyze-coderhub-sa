{"ast":null,"code":"/*\n * World Calendars\n * https://github.com/alexcjohnson/world-calendars\n *\n * Batch-converted from kbwood/calendars\n * Many thanks to Keith Wood and all of the contributors to the original project!\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* http://keith-wood.name/calendars.html\n  Traditional Chinese calendar for jQuery v2.0.2.\n  Written by Nicolas Riesco (enquiries@nicolasriesco.net) December 2016.\n  Available under the MIT (http://keith-wood.name/licence.html) license. \n  Please attribute the author if you use it. */\nvar main = require('../main');\n\nvar assign = require('object-assign');\n\nvar gregorianCalendar = main.instance();\n/** Implementation of the traditional Chinese calendar.\n    Source of calendar tables https://github.com/isee15/Lunar-Solar-Calendar-Converter .\n    @class ChineseCalendar\n    @param [language=''] {string} The language code (default English) for localisation. */\n\nfunction ChineseCalendar(language) {\n  this.local = this.regionalOptions[language || ''] || this.regionalOptions[''];\n}\n\nChineseCalendar.prototype = new main.baseCalendar();\nassign(ChineseCalendar.prototype, {\n  /** The calendar name.\n      @memberof ChineseCalendar */\n  name: 'Chinese',\n\n  /** Julian date of start of Gregorian epoch: 1 January 0001 CE.\n     @memberof GregorianCalendar */\n  jdEpoch: 1721425.5,\n\n  /** <code>true</code> if has a year zero, <code>false</code> if not.\n      @memberof ChineseCalendar */\n  hasYearZero: false,\n\n  /** The minimum month number.\n      This calendar uses month indices to account for intercalary months. \n      @memberof ChineseCalendar */\n  minMonth: 0,\n\n  /** The first month in the year.\n      This calendar uses month indices to account for intercalary months. \n      @memberof ChineseCalendar */\n  firstMonth: 0,\n\n  /** The minimum day number.\n      @memberof ChineseCalendar */\n  minDay: 1,\n\n  /** Localisations for the plugin.\n      Entries are objects indexed by the language code ('' being the default US/English).\n      Each object has the following attributes.\n      @memberof ChineseCalendar\n      @property name {string} The calendar name.\n      @property epochs {string[]} The epoch names.\n      @property monthNames {string[]} The long names of the months of the year.\n      @property monthNamesShort {string[]} The short names of the months of the year.\n      @property dayNames {string[]} The long names of the days of the week.\n      @property dayNamesShort {string[]} The short names of the days of the week.\n      @property dayNamesMin {string[]} The minimal names of the days of the week.\n      @property dateFormat {string} The date format for this calendar.\n              See the options on <a href=\"BaseCalendar.html#formatDate\"><code>formatDate</code></a> for details.\n      @property firstDay {number} The number of the first day of the week, starting at 0.\n      @property isRTL {number} <code>true</code> if this localisation reads right-to-left. */\n  regionalOptions: {\n    // Localisations\n    '': {\n      name: 'Chinese',\n      epochs: ['BEC', 'EC'],\n      monthNumbers: function (date, padded) {\n        if (typeof date === 'string') {\n          var match = date.match(MONTH_NUMBER_REGEXP);\n          return match ? match[0] : '';\n        }\n\n        var year = this._validateYear(date);\n\n        var monthIndex = date.month();\n        var month = '' + this.toChineseMonth(year, monthIndex);\n\n        if (padded && month.length < 2) {\n          month = \"0\" + month;\n        }\n\n        if (this.isIntercalaryMonth(year, monthIndex)) {\n          month += 'i';\n        }\n\n        return month;\n      },\n      monthNames: function (date) {\n        if (typeof date === 'string') {\n          var match = date.match(MONTH_NAME_REGEXP);\n          return match ? match[0] : '';\n        }\n\n        var year = this._validateYear(date);\n\n        var monthIndex = date.month();\n        var month = this.toChineseMonth(year, monthIndex);\n        var monthName = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'][month - 1];\n\n        if (this.isIntercalaryMonth(year, monthIndex)) {\n          monthName = '闰' + monthName;\n        }\n\n        return monthName;\n      },\n      monthNamesShort: function (date) {\n        if (typeof date === 'string') {\n          var match = date.match(MONTH_SHORT_NAME_REGEXP);\n          return match ? match[0] : '';\n        }\n\n        var year = this._validateYear(date);\n\n        var monthIndex = date.month();\n        var month = this.toChineseMonth(year, monthIndex);\n        var monthName = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'][month - 1];\n\n        if (this.isIntercalaryMonth(year, monthIndex)) {\n          monthName = '闰' + monthName;\n        }\n\n        return monthName;\n      },\n      parseMonth: function (year, monthString) {\n        year = this._validateYear(year);\n        var month = parseInt(monthString);\n        var isIntercalary;\n\n        if (!isNaN(month)) {\n          var i = monthString[monthString.length - 1];\n          isIntercalary = i === 'i' || i === 'I';\n        } else {\n          if (monthString[0] === '闰') {\n            isIntercalary = true;\n            monthString = monthString.substring(1);\n          }\n\n          if (monthString[monthString.length - 1] === '月') {\n            monthString = monthString.substring(0, monthString.length - 1);\n          }\n\n          month = 1 + ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'].indexOf(monthString);\n        }\n\n        var monthIndex = this.toMonthIndex(year, month, isIntercalary);\n        return monthIndex;\n      },\n      dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n      digits: null,\n      dateFormat: 'yyyy/mm/dd',\n      firstDay: 1,\n      isRTL: false\n    }\n  },\n\n  /** Check that a candidate date is from the same calendar and is valid.\n      @memberof BaseCalendar\n      @private\n      @param year {CDate|number} The date or the year to validate.\n      @param error {string} Error message if invalid.\n      @return {number} The year.\n      @throws Error if year out of range. */\n  _validateYear: function (year, error) {\n    if (year.year) {\n      year = year.year();\n    }\n\n    if (typeof year !== 'number' || year < 1888 || year > 2111) {\n      throw error.replace(/\\{0\\}/, this.local.name);\n    }\n\n    return year;\n  },\n\n  /** Retrieve the month index (i.e. accounting for intercalary months).\n      @memberof ChineseCalendar\n      @param year {number} The year.\n      @param month {number} The month (1 for first month).\n      @param [isIntercalary=false] {boolean} If month is intercalary.\n      @return {number} The month index (0 for first month).\n      @throws Error if an invalid month/year or a different calendar used. */\n  toMonthIndex: function (year, month, isIntercalary) {\n    // compute intercalary month in the year (0 if none)\n    var intercalaryMonth = this.intercalaryMonth(year); // validate month\n\n    var invalidIntercalaryMonth = isIntercalary && month !== intercalaryMonth;\n\n    if (invalidIntercalaryMonth || month < 1 || month > 12) {\n      throw main.local.invalidMonth.replace(/\\{0\\}/, this.local.name);\n    } // compute month index\n\n\n    var monthIndex;\n\n    if (!intercalaryMonth) {\n      monthIndex = month - 1;\n    } else if (!isIntercalary && month <= intercalaryMonth) {\n      monthIndex = month - 1;\n    } else {\n      monthIndex = month;\n    }\n\n    return monthIndex;\n  },\n\n  /** Retrieve the month (i.e. accounting for intercalary months).\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date or the year to examine.\n      @param monthIndex {number} The month index (0 for first month).\n      @return {number} The month (1 for first month).\n      @throws Error if an invalid month/year or a different calendar used. */\n  toChineseMonth: function (year, monthIndex) {\n    if (year.year) {\n      year = year.year();\n      monthIndex = year.month();\n    } // compute intercalary month in the year (0 if none)\n\n\n    var intercalaryMonth = this.intercalaryMonth(year); // validate month\n\n    var maxMonthIndex = intercalaryMonth ? 12 : 11;\n\n    if (monthIndex < 0 || monthIndex > maxMonthIndex) {\n      throw main.local.invalidMonth.replace(/\\{0\\}/, this.local.name);\n    } // compute Chinese month\n\n\n    var month;\n\n    if (!intercalaryMonth) {\n      month = monthIndex + 1;\n    } else if (monthIndex < intercalaryMonth) {\n      month = monthIndex + 1;\n    } else {\n      month = monthIndex;\n    }\n\n    return month;\n  },\n\n  /** Determine the intercalary month of a year (if any).\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @return {number} The intercalary month number, or 0 if none.\n      @throws Error if an invalid year or a different calendar used. */\n  intercalaryMonth: function (year) {\n    year = this._validateYear(year);\n    var monthDaysTable = LUNAR_MONTH_DAYS[year - LUNAR_MONTH_DAYS[0]];\n    var intercalaryMonth = monthDaysTable >> 13;\n    return intercalaryMonth;\n  },\n\n  /** Determine whether this date is an intercalary month.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @param [monthIndex] {number} The month index to examine.\n      @return {boolean} <code>true</code> if this is an intercalary month, <code>false</code> if not.\n      @throws Error if an invalid year or a different calendar used. */\n  isIntercalaryMonth: function (year, monthIndex) {\n    if (year.year) {\n      year = year.year();\n      monthIndex = year.month();\n    }\n\n    var intercalaryMonth = this.intercalaryMonth(year);\n    return !!intercalaryMonth && intercalaryMonth === monthIndex;\n  },\n\n  /** Determine whether this date is in a leap year.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @return {boolean} <code>true</code> if this is a leap year, <code>false</code> if not.\n      @throws Error if an invalid year or a different calendar used. */\n  leapYear: function (year) {\n    return this.intercalaryMonth(year) !== 0;\n  },\n\n  /** Determine the week of the year for a date - ISO 8601.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @param [monthIndex] {number} The month index to examine.\n      @param [day] {number} The day to examine.\n      @return {number} The week of the year.\n      @throws Error if an invalid date or a different calendar used. */\n  weekOfYear: function (year, monthIndex, day) {\n    // compute Chinese new year\n    var validatedYear = this._validateYear(year, main.local.invalidyear);\n\n    var packedDate = CHINESE_NEW_YEAR[validatedYear - CHINESE_NEW_YEAR[0]];\n    var y = packedDate >> 9 & 0xFFF;\n    var m = packedDate >> 5 & 0x0F;\n    var d = packedDate & 0x1F; // find first Thrusday of the year\n\n    var firstThursday;\n    firstThursday = gregorianCalendar.newDate(y, m, d);\n    firstThursday.add(4 - (firstThursday.dayOfWeek() || 7), 'd'); // compute days from first Thursday\n\n    var offset = this.toJD(year, monthIndex, day) - firstThursday.toJD();\n    return 1 + Math.floor(offset / 7);\n  },\n\n  /** Retrieve the number of months in a year.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @return {number} The number of months.\n      @throws Error if an invalid year or a different calendar used. */\n  monthsInYear: function (year) {\n    return this.leapYear(year) ? 13 : 12;\n  },\n\n  /** Retrieve the number of days in a month.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year of the month.\n      @param [monthIndex] {number} The month index.\n      @return {number} The number of days in this month.\n      @throws Error if an invalid month/year or a different calendar used. */\n  daysInMonth: function (year, monthIndex) {\n    if (year.year) {\n      monthIndex = year.month();\n      year = year.year();\n    }\n\n    year = this._validateYear(year);\n    var monthDaysTable = LUNAR_MONTH_DAYS[year - LUNAR_MONTH_DAYS[0]];\n    var intercalaryMonth = monthDaysTable >> 13;\n    var maxMonthIndex = intercalaryMonth ? 12 : 11;\n\n    if (monthIndex > maxMonthIndex) {\n      throw main.local.invalidMonth.replace(/\\{0\\}/, this.local.name);\n    }\n\n    var daysInMonth = monthDaysTable & 1 << 12 - monthIndex ? 30 : 29;\n    return daysInMonth;\n  },\n\n  /** Determine whether this date is a week day.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @param [monthIndex] {number} The month index to examine.\n      @param [day] {number} The day to examine.\n      @return {boolean} <code>true</code> if a week day, <code>false</code> if not.\n      @throws Error if an invalid date or a different calendar used. */\n  weekDay: function (year, monthIndex, day) {\n    return (this.dayOfWeek(year, monthIndex, day) || 7) < 6;\n  },\n\n  /** Retrieve the Julian date equivalent for this date,\n      i.e. days since January 1, 4713 BCE Greenwich noon.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to convert or the year to convert.\n      @param [monthIndex] {number} The month index to convert.\n      @param [day] {number} The day to convert.\n      @return {number} The equivalent Julian date.\n      @throws Error if an invalid date or a different calendar used. */\n  toJD: function (year, monthIndex, day) {\n    var date = this._validate(year, month, day, main.local.invalidDate);\n\n    year = this._validateYear(date.year());\n    monthIndex = date.month();\n    day = date.day();\n    var isIntercalary = this.isIntercalaryMonth(year, monthIndex);\n    var month = this.toChineseMonth(year, monthIndex);\n    var solar = toSolar(year, month, day, isIntercalary);\n    return gregorianCalendar.toJD(solar.year, solar.month, solar.day);\n  },\n\n  /** Create a new date from a Julian date.\n      @memberof ChineseCalendar\n      @param jd {number} The Julian date to convert.\n      @return {CDate} The equivalent date. */\n  fromJD: function (jd) {\n    var date = gregorianCalendar.fromJD(jd);\n    var lunar = toLunar(date.year(), date.month(), date.day());\n    var monthIndex = this.toMonthIndex(lunar.year, lunar.month, lunar.isIntercalary);\n    return this.newDate(lunar.year, monthIndex, lunar.day);\n  },\n\n  /** Create a new date from a string.\n      @memberof ChineseCalendar\n      @param dateString {string} String representing a Chinese date\n      @return {CDate} The new date.\n      @throws Error if an invalid date. */\n  fromString: function (dateString) {\n    var match = dateString.match(DATE_REGEXP);\n\n    var year = this._validateYear(+match[1]);\n\n    var month = +match[2];\n    var isIntercalary = !!match[3];\n    var monthIndex = this.toMonthIndex(year, month, isIntercalary);\n    var day = +match[4];\n    return this.newDate(year, monthIndex, day);\n  },\n\n  /** Add period(s) to a date.\n      Cater for no year zero.\n      @memberof ChineseCalendar\n      @param date {CDate} The starting date.\n      @param offset {number} The number of periods to adjust by.\n      @param period {string} One of 'y' for year, 'm' for month, 'w' for week, 'd' for day.\n      @return {CDate} The updated date.\n      @throws Error if a different calendar used. */\n  add: function (date, offset, period) {\n    var year = date.year();\n    var monthIndex = date.month();\n    var isIntercalary = this.isIntercalaryMonth(year, monthIndex);\n    var month = this.toChineseMonth(year, monthIndex);\n    var cdate = Object.getPrototypeOf(ChineseCalendar.prototype).add.call(this, date, offset, period);\n\n    if (period === 'y') {\n      // Resync month\n      var resultYear = cdate.year();\n      var resultMonthIndex = cdate.month(); // Using the fact the month index of an intercalary month\n      // equals its month number:\n\n      var resultCanBeIntercalaryMonth = this.isIntercalaryMonth(resultYear, month);\n      var correctedMonthIndex = isIntercalary && resultCanBeIntercalaryMonth ? this.toMonthIndex(resultYear, month, true) : this.toMonthIndex(resultYear, month, false);\n\n      if (correctedMonthIndex !== resultMonthIndex) {\n        cdate.month(correctedMonthIndex);\n      }\n    }\n\n    return cdate;\n  }\n}); // Used by ChineseCalendar.prototype.fromString\n\nvar DATE_REGEXP = /^\\s*(-?\\d\\d\\d\\d|\\d\\d)[-/](\\d?\\d)([iI]?)[-/](\\d?\\d)/m;\nvar MONTH_NUMBER_REGEXP = /^\\d?\\d[iI]?/m;\nvar MONTH_NAME_REGEXP = /^闰?十?[一二三四五六七八九]?月/m;\nvar MONTH_SHORT_NAME_REGEXP = /^闰?十?[一二三四五六七八九]?/m; // Chinese calendar implementation\n\nmain.calendars.chinese = ChineseCalendar; // Chinese calendar tables from year 1888 to 2111\n//\n// Source:\n// https://github.com/isee15/Lunar-Solar-Calendar-Converter.git\n// Table of intercalary months and days per month from year 1888 to 2111\n//\n// bit (12 - i):        days in the i^th month\n//                      (= 0 if i^th lunar month has 29 days)\n//                      (= 1 if i^th lunar month has 30 days)\n//                      (first month in lunar year is i = 0)\n// bits (13,14,15,16):  intercalary month\n//                      (= 0 if lunar year has no intercalary month)\n\nvar LUNAR_MONTH_DAYS = [1887, 0x1694, 0x16aa, 0x4ad5, 0xab6, 0xc4b7, 0x4ae, 0xa56, 0xb52a, 0x1d2a, 0xd54, 0x75aa, 0x156a, 0x1096d, 0x95c, 0x14ae, 0xaa4d, 0x1a4c, 0x1b2a, 0x8d55, 0xad4, 0x135a, 0x495d, 0x95c, 0xd49b, 0x149a, 0x1a4a, 0xbaa5, 0x16a8, 0x1ad4, 0x52da, 0x12b6, 0xe937, 0x92e, 0x1496, 0xb64b, 0xd4a, 0xda8, 0x95b5, 0x56c, 0x12ae, 0x492f, 0x92e, 0xcc96, 0x1a94, 0x1d4a, 0xada9, 0xb5a, 0x56c, 0x726e, 0x125c, 0xf92d, 0x192a, 0x1a94, 0xdb4a, 0x16aa, 0xad4, 0x955b, 0x4ba, 0x125a, 0x592b, 0x152a, 0xf695, 0xd94, 0x16aa, 0xaab5, 0x9b4, 0x14b6, 0x6a57, 0xa56, 0x1152a, 0x1d2a, 0xd54, 0xd5aa, 0x156a, 0x96c, 0x94ae, 0x14ae, 0xa4c, 0x7d26, 0x1b2a, 0xeb55, 0xad4, 0x12da, 0xa95d, 0x95a, 0x149a, 0x9a4d, 0x1a4a, 0x11aa5, 0x16a8, 0x16d4, 0xd2da, 0x12b6, 0x936, 0x9497, 0x1496, 0x1564b, 0xd4a, 0xda8, 0xd5b4, 0x156c, 0x12ae, 0xa92f, 0x92e, 0xc96, 0x6d4a, 0x1d4a, 0x10d65, 0xb58, 0x156c, 0xb26d, 0x125c, 0x192c, 0x9a95, 0x1a94, 0x1b4a, 0x4b55, 0xad4, 0xf55b, 0x4ba, 0x125a, 0xb92b, 0x152a, 0x1694, 0x96aa, 0x15aa, 0x12ab5, 0x974, 0x14b6, 0xca57, 0xa56, 0x1526, 0x8e95, 0xd54, 0x15aa, 0x49b5, 0x96c, 0xd4ae, 0x149c, 0x1a4c, 0xbd26, 0x1aa6, 0xb54, 0x6d6a, 0x12da, 0x1695d, 0x95a, 0x149a, 0xda4b, 0x1a4a, 0x1aa4, 0xbb54, 0x16b4, 0xada, 0x495b, 0x936, 0xf497, 0x1496, 0x154a, 0xb6a5, 0xda4, 0x15b4, 0x6ab6, 0x126e, 0x1092f, 0x92e, 0xc96, 0xcd4a, 0x1d4a, 0xd64, 0x956c, 0x155c, 0x125c, 0x792e, 0x192c, 0xfa95, 0x1a94, 0x1b4a, 0xab55, 0xad4, 0x14da, 0x8a5d, 0xa5a, 0x1152b, 0x152a, 0x1694, 0xd6aa, 0x15aa, 0xab4, 0x94ba, 0x14b6, 0xa56, 0x7527, 0xd26, 0xee53, 0xd54, 0x15aa, 0xa9b5, 0x96c, 0x14ae, 0x8a4e, 0x1a4c, 0x11d26, 0x1aa4, 0x1b54, 0xcd6a, 0xada, 0x95c, 0x949d, 0x149a, 0x1a2a, 0x5b25, 0x1aa4, 0xfb52, 0x16b4, 0xaba, 0xa95b, 0x936, 0x1496, 0x9a4b, 0x154a, 0x136a5, 0xda4, 0x15ac]; // Table of Chinese New Years from year 1888 to 2111\n// \n// bits (0 to 4):   solar day\n// bits (5 to 8):   solar month\n// bits (9 to 20):  solar year\n\nvar CHINESE_NEW_YEAR = [1887, 0xec04c, 0xec23f, 0xec435, 0xec649, 0xec83e, 0xeca51, 0xecc46, 0xece3a, 0xed04d, 0xed242, 0xed436, 0xed64a, 0xed83f, 0xeda53, 0xedc48, 0xede3d, 0xee050, 0xee244, 0xee439, 0xee64d, 0xee842, 0xeea36, 0xeec4a, 0xeee3e, 0xef052, 0xef246, 0xef43a, 0xef64e, 0xef843, 0xefa37, 0xefc4b, 0xefe41, 0xf0054, 0xf0248, 0xf043c, 0xf0650, 0xf0845, 0xf0a38, 0xf0c4d, 0xf0e42, 0xf1037, 0xf124a, 0xf143e, 0xf1651, 0xf1846, 0xf1a3a, 0xf1c4e, 0xf1e44, 0xf2038, 0xf224b, 0xf243f, 0xf2653, 0xf2848, 0xf2a3b, 0xf2c4f, 0xf2e45, 0xf3039, 0xf324d, 0xf3442, 0xf3636, 0xf384a, 0xf3a3d, 0xf3c51, 0xf3e46, 0xf403b, 0xf424e, 0xf4443, 0xf4638, 0xf484c, 0xf4a3f, 0xf4c52, 0xf4e48, 0xf503c, 0xf524f, 0xf5445, 0xf5639, 0xf584d, 0xf5a42, 0xf5c35, 0xf5e49, 0xf603e, 0xf6251, 0xf6446, 0xf663b, 0xf684f, 0xf6a43, 0xf6c37, 0xf6e4b, 0xf703f, 0xf7252, 0xf7447, 0xf763c, 0xf7850, 0xf7a45, 0xf7c39, 0xf7e4d, 0xf8042, 0xf8254, 0xf8449, 0xf863d, 0xf8851, 0xf8a46, 0xf8c3b, 0xf8e4f, 0xf9044, 0xf9237, 0xf944a, 0xf963f, 0xf9853, 0xf9a47, 0xf9c3c, 0xf9e50, 0xfa045, 0xfa238, 0xfa44c, 0xfa641, 0xfa836, 0xfaa49, 0xfac3d, 0xfae52, 0xfb047, 0xfb23a, 0xfb44e, 0xfb643, 0xfb837, 0xfba4a, 0xfbc3f, 0xfbe53, 0xfc048, 0xfc23c, 0xfc450, 0xfc645, 0xfc839, 0xfca4c, 0xfcc41, 0xfce36, 0xfd04a, 0xfd23d, 0xfd451, 0xfd646, 0xfd83a, 0xfda4d, 0xfdc43, 0xfde37, 0xfe04b, 0xfe23f, 0xfe453, 0xfe648, 0xfe83c, 0xfea4f, 0xfec44, 0xfee38, 0xff04c, 0xff241, 0xff436, 0xff64a, 0xff83e, 0xffa51, 0xffc46, 0xffe3a, 0x10004e, 0x100242, 0x100437, 0x10064b, 0x100841, 0x100a53, 0x100c48, 0x100e3c, 0x10104f, 0x101244, 0x101438, 0x10164c, 0x101842, 0x101a35, 0x101c49, 0x101e3d, 0x102051, 0x102245, 0x10243a, 0x10264e, 0x102843, 0x102a37, 0x102c4b, 0x102e3f, 0x103053, 0x103247, 0x10343b, 0x10364f, 0x103845, 0x103a38, 0x103c4c, 0x103e42, 0x104036, 0x104249, 0x10443d, 0x104651, 0x104846, 0x104a3a, 0x104c4e, 0x104e43, 0x105038, 0x10524a, 0x10543e, 0x105652, 0x105847, 0x105a3b, 0x105c4f, 0x105e45, 0x106039, 0x10624c, 0x106441, 0x106635, 0x106849, 0x106a3d, 0x106c51, 0x106e47, 0x10703c, 0x10724f, 0x107444, 0x107638, 0x10784c, 0x107a3f, 0x107c53, 0x107e48];\n\nfunction toLunar(yearOrDate, monthOrResult, day, result) {\n  var solarDate;\n  var lunarDate;\n\n  if (typeof yearOrDate === 'object') {\n    solarDate = yearOrDate;\n    lunarDate = monthOrResult || {};\n  } else {\n    var isValidYear = typeof yearOrDate === 'number' && yearOrDate >= 1888 && yearOrDate <= 2111;\n    if (!isValidYear) throw new Error(\"Solar year outside range 1888-2111\");\n    var isValidMonth = typeof monthOrResult === 'number' && monthOrResult >= 1 && monthOrResult <= 12;\n    if (!isValidMonth) throw new Error(\"Solar month outside range 1 - 12\");\n    var isValidDay = typeof day === 'number' && day >= 1 && day <= 31;\n    if (!isValidDay) throw new Error(\"Solar day outside range 1 - 31\");\n    solarDate = {\n      year: yearOrDate,\n      month: monthOrResult,\n      day: day\n    };\n    lunarDate = result || {};\n  } // Compute Chinese new year and lunar year\n\n\n  var chineseNewYearPackedDate = CHINESE_NEW_YEAR[solarDate.year - CHINESE_NEW_YEAR[0]];\n  var packedDate = solarDate.year << 9 | solarDate.month << 5 | solarDate.day;\n  lunarDate.year = packedDate >= chineseNewYearPackedDate ? solarDate.year : solarDate.year - 1;\n  chineseNewYearPackedDate = CHINESE_NEW_YEAR[lunarDate.year - CHINESE_NEW_YEAR[0]];\n  var y = chineseNewYearPackedDate >> 9 & 0xFFF;\n  var m = chineseNewYearPackedDate >> 5 & 0x0F;\n  var d = chineseNewYearPackedDate & 0x1F; // Compute days from new year\n\n  var daysFromNewYear;\n  var chineseNewYearJSDate = new Date(y, m - 1, d);\n  var jsDate = new Date(solarDate.year, solarDate.month - 1, solarDate.day);\n  daysFromNewYear = Math.round((jsDate - chineseNewYearJSDate) / (24 * 3600 * 1000)); // Compute lunar month and day\n\n  var monthDaysTable = LUNAR_MONTH_DAYS[lunarDate.year - LUNAR_MONTH_DAYS[0]];\n  var i;\n\n  for (i = 0; i < 13; i++) {\n    var daysInMonth = monthDaysTable & 1 << 12 - i ? 30 : 29;\n\n    if (daysFromNewYear < daysInMonth) {\n      break;\n    }\n\n    daysFromNewYear -= daysInMonth;\n  }\n\n  var intercalaryMonth = monthDaysTable >> 13;\n\n  if (!intercalaryMonth || i < intercalaryMonth) {\n    lunarDate.isIntercalary = false;\n    lunarDate.month = 1 + i;\n  } else if (i === intercalaryMonth) {\n    lunarDate.isIntercalary = true;\n    lunarDate.month = i;\n  } else {\n    lunarDate.isIntercalary = false;\n    lunarDate.month = i;\n  }\n\n  lunarDate.day = 1 + daysFromNewYear;\n  return lunarDate;\n}\n\nfunction toSolar(yearOrDate, monthOrResult, day, isIntercalaryOrResult, result) {\n  var solarDate;\n  var lunarDate;\n\n  if (typeof yearOrDate === 'object') {\n    lunarDate = yearOrDate;\n    solarDate = monthOrResult || {};\n  } else {\n    var isValidYear = typeof yearOrDate === 'number' && yearOrDate >= 1888 && yearOrDate <= 2111;\n    if (!isValidYear) throw new Error(\"Lunar year outside range 1888-2111\");\n    var isValidMonth = typeof monthOrResult === 'number' && monthOrResult >= 1 && monthOrResult <= 12;\n    if (!isValidMonth) throw new Error(\"Lunar month outside range 1 - 12\");\n    var isValidDay = typeof day === 'number' && day >= 1 && day <= 30;\n    if (!isValidDay) throw new Error(\"Lunar day outside range 1 - 30\");\n    var isIntercalary;\n\n    if (typeof isIntercalaryOrResult === 'object') {\n      isIntercalary = false;\n      solarDate = isIntercalaryOrResult;\n    } else {\n      isIntercalary = !!isIntercalaryOrResult;\n      solarDate = result || {};\n    }\n\n    lunarDate = {\n      year: yearOrDate,\n      month: monthOrResult,\n      day: day,\n      isIntercalary: isIntercalary\n    };\n  } // Compute days from new year\n\n\n  var daysFromNewYear;\n  daysFromNewYear = lunarDate.day - 1;\n  var monthDaysTable = LUNAR_MONTH_DAYS[lunarDate.year - LUNAR_MONTH_DAYS[0]];\n  var intercalaryMonth = monthDaysTable >> 13;\n  var monthsFromNewYear;\n\n  if (!intercalaryMonth) {\n    monthsFromNewYear = lunarDate.month - 1;\n  } else if (lunarDate.month > intercalaryMonth) {\n    monthsFromNewYear = lunarDate.month;\n  } else if (lunarDate.isIntercalary) {\n    monthsFromNewYear = lunarDate.month;\n  } else {\n    monthsFromNewYear = lunarDate.month - 1;\n  }\n\n  for (var i = 0; i < monthsFromNewYear; i++) {\n    var daysInMonth = monthDaysTable & 1 << 12 - i ? 30 : 29;\n    daysFromNewYear += daysInMonth;\n  } // Compute Chinese new year\n\n\n  var packedDate = CHINESE_NEW_YEAR[lunarDate.year - CHINESE_NEW_YEAR[0]];\n  var y = packedDate >> 9 & 0xFFF;\n  var m = packedDate >> 5 & 0x0F;\n  var d = packedDate & 0x1F; // Compute solar date\n\n  var jsDate = new Date(y, m - 1, d + daysFromNewYear);\n  solarDate.year = jsDate.getFullYear();\n  solarDate.month = 1 + jsDate.getMonth();\n  solarDate.day = jsDate.getDate();\n  return solarDate;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/world-calendars/dist/calendars/chinese.js"],"names":["main","require","assign","gregorianCalendar","instance","ChineseCalendar","language","local","regionalOptions","prototype","baseCalendar","name","jdEpoch","hasYearZero","minMonth","firstMonth","minDay","epochs","monthNumbers","date","padded","match","MONTH_NUMBER_REGEXP","year","_validateYear","monthIndex","month","toChineseMonth","length","isIntercalaryMonth","monthNames","MONTH_NAME_REGEXP","monthName","monthNamesShort","MONTH_SHORT_NAME_REGEXP","parseMonth","monthString","parseInt","isIntercalary","isNaN","i","substring","indexOf","toMonthIndex","dayNames","dayNamesShort","dayNamesMin","digits","dateFormat","firstDay","isRTL","error","replace","intercalaryMonth","invalidIntercalaryMonth","invalidMonth","maxMonthIndex","monthDaysTable","LUNAR_MONTH_DAYS","leapYear","weekOfYear","day","validatedYear","invalidyear","packedDate","CHINESE_NEW_YEAR","y","m","d","firstThursday","newDate","add","dayOfWeek","offset","toJD","Math","floor","monthsInYear","daysInMonth","weekDay","_validate","invalidDate","solar","toSolar","fromJD","jd","lunar","toLunar","fromString","dateString","DATE_REGEXP","period","cdate","Object","getPrototypeOf","call","resultYear","resultMonthIndex","resultCanBeIntercalaryMonth","correctedMonthIndex","calendars","chinese","yearOrDate","monthOrResult","result","solarDate","lunarDate","isValidYear","Error","isValidMonth","isValidDay","chineseNewYearPackedDate","daysFromNewYear","chineseNewYearJSDate","Date","jsDate","round","isIntercalaryOrResult","monthsFromNewYear","getFullYear","getMonth","getDate"],"mappings":"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","sourcesContent":["/*\n * World Calendars\n * https://github.com/alexcjohnson/world-calendars\n *\n * Batch-converted from kbwood/calendars\n * Many thanks to Keith Wood and all of the contributors to the original project!\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n﻿/* http://keith-wood.name/calendars.html\n   Traditional Chinese calendar for jQuery v2.0.2.\n   Written by Nicolas Riesco (enquiries@nicolasriesco.net) December 2016.\n   Available under the MIT (http://keith-wood.name/licence.html) license. \n   Please attribute the author if you use it. */\n\nvar main = require('../main');\nvar assign = require('object-assign');\n\n\nvar gregorianCalendar = main.instance();\n\n/** Implementation of the traditional Chinese calendar.\n    Source of calendar tables https://github.com/isee15/Lunar-Solar-Calendar-Converter .\n    @class ChineseCalendar\n    @param [language=''] {string} The language code (default English) for localisation. */\nfunction ChineseCalendar(language) {\n    this.local = this.regionalOptions[language || ''] || this.regionalOptions[''];\n}\n\nChineseCalendar.prototype = new main.baseCalendar;\n\nassign(ChineseCalendar.prototype, {\n    /** The calendar name.\n        @memberof ChineseCalendar */\n    name: 'Chinese',\n     /** Julian date of start of Gregorian epoch: 1 January 0001 CE.\n        @memberof GregorianCalendar */\n    jdEpoch: 1721425.5,\n    /** <code>true</code> if has a year zero, <code>false</code> if not.\n        @memberof ChineseCalendar */\n    hasYearZero: false,\n    /** The minimum month number.\n        This calendar uses month indices to account for intercalary months. \n        @memberof ChineseCalendar */\n    minMonth: 0,\n    /** The first month in the year.\n        This calendar uses month indices to account for intercalary months. \n        @memberof ChineseCalendar */\n    firstMonth: 0,\n    /** The minimum day number.\n        @memberof ChineseCalendar */\n    minDay: 1,\n\n    /** Localisations for the plugin.\n        Entries are objects indexed by the language code ('' being the default US/English).\n        Each object has the following attributes.\n        @memberof ChineseCalendar\n        @property name {string} The calendar name.\n        @property epochs {string[]} The epoch names.\n        @property monthNames {string[]} The long names of the months of the year.\n        @property monthNamesShort {string[]} The short names of the months of the year.\n        @property dayNames {string[]} The long names of the days of the week.\n        @property dayNamesShort {string[]} The short names of the days of the week.\n        @property dayNamesMin {string[]} The minimal names of the days of the week.\n        @property dateFormat {string} The date format for this calendar.\n                See the options on <a href=\"BaseCalendar.html#formatDate\"><code>formatDate</code></a> for details.\n        @property firstDay {number} The number of the first day of the week, starting at 0.\n        @property isRTL {number} <code>true</code> if this localisation reads right-to-left. */\n    regionalOptions: { // Localisations\n        '': {\n            name: 'Chinese',\n            epochs: ['BEC', 'EC'],\n            monthNumbers: function(date, padded) {\n                if (typeof date === 'string') {\n                    var match = date.match(MONTH_NUMBER_REGEXP);\n                    return (match) ? match[0] : '';\n                }\n\n                var year = this._validateYear(date);\n                var monthIndex = date.month();\n\n                var month = '' + this.toChineseMonth(year, monthIndex);\n\n                if (padded && month.length < 2) {\n                    month = \"0\" + month;\n                }\n\n                if (this.isIntercalaryMonth(year, monthIndex)) {\n                    month += 'i';\n                }\n\n                return month;\n            },\n            monthNames: function(date) {\n                if (typeof date === 'string') {\n                    var match = date.match(MONTH_NAME_REGEXP);\n                    return (match) ? match[0] : '';\n                }\n\n                var year = this._validateYear(date);\n                var monthIndex = date.month();\n\n                var month = this.toChineseMonth(year, monthIndex);\n\n                var monthName = ['一月','二月','三月','四月','五月','六月',\n                    '七月','八月','九月','十月','十一月','十二月'][month - 1];\n\n                if (this.isIntercalaryMonth(year, monthIndex)) {\n                    monthName = '闰' + monthName;\n                }\n\n                return monthName;\n            },\n            monthNamesShort: function(date) {\n                if (typeof date === 'string') {\n                    var match = date.match(MONTH_SHORT_NAME_REGEXP);\n                    return (match) ? match[0] : '';\n                }\n\n                var year = this._validateYear(date);\n                var monthIndex = date.month();\n\n                var month = this.toChineseMonth(year, monthIndex);\n\n                var monthName = ['一','二','三','四','五','六',\n                    '七','八','九','十','十一','十二'][month - 1];\n\n                if (this.isIntercalaryMonth(year, monthIndex)) {\n                    monthName = '闰' + monthName;\n                }\n\n                return monthName;\n            },\n            parseMonth: function(year, monthString) {\n                year = this._validateYear(year);\n                var month = parseInt(monthString);\n                var isIntercalary;\n\n                if (!isNaN(month)) {\n                    var i = monthString[monthString.length - 1];\n                    isIntercalary = (i === 'i' || i === 'I');\n                } else {\n                    if (monthString[0] === '闰') {\n                        isIntercalary = true;\n                        monthString = monthString.substring(1);\n                    }\n                    if (monthString[monthString.length - 1] === '月') {\n                        monthString = monthString.substring(0, monthString.length - 1);\n                    }\n                    month = 1 +\n                        ['一','二','三','四','五','六',\n                        '七','八','九','十','十一','十二'].indexOf(monthString);\n                }\n\n                var monthIndex = this.toMonthIndex(year, month, isIntercalary);\n                return monthIndex;\n            },\n            dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n            digits: null,\n            dateFormat: 'yyyy/mm/dd',\n            firstDay: 1,\n            isRTL: false\n        }\n    },\n\n    /** Check that a candidate date is from the same calendar and is valid.\n        @memberof BaseCalendar\n        @private\n        @param year {CDate|number} The date or the year to validate.\n        @param error {string} Error message if invalid.\n        @return {number} The year.\n        @throws Error if year out of range. */\n    _validateYear: function(year, error) {\n        if (year.year) {\n            year = year.year();\n        }\n\n        if (typeof year !== 'number' || year < 1888 || year > 2111) {\n            throw error.replace(/\\{0\\}/, this.local.name);\n        }\n\n        return year;\n    },\n\n    /** Retrieve the month index (i.e. accounting for intercalary months).\n        @memberof ChineseCalendar\n        @param year {number} The year.\n        @param month {number} The month (1 for first month).\n        @param [isIntercalary=false] {boolean} If month is intercalary.\n        @return {number} The month index (0 for first month).\n        @throws Error if an invalid month/year or a different calendar used. */\n    toMonthIndex: function(year, month, isIntercalary) {\n        // compute intercalary month in the year (0 if none)\n        var intercalaryMonth = this.intercalaryMonth(year);\n\n        // validate month\n        var invalidIntercalaryMonth = \n            (isIntercalary && month !== intercalaryMonth);\n        if (invalidIntercalaryMonth || month < 1 || month > 12) {\n            throw main.local.invalidMonth\n                .replace(/\\{0\\}/, this.local.name);\n        }\n\n        // compute month index\n        var monthIndex;\n\n        if (!intercalaryMonth) {\n            monthIndex = month - 1;\n        } else if(!isIntercalary && month <= intercalaryMonth) {\n            monthIndex = month - 1;\n        } else {\n            monthIndex = month;\n        }\n\n        return monthIndex;\n    },\n\n    /** Retrieve the month (i.e. accounting for intercalary months).\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date or the year to examine.\n        @param monthIndex {number} The month index (0 for first month).\n        @return {number} The month (1 for first month).\n        @throws Error if an invalid month/year or a different calendar used. */\n    toChineseMonth: function(year, monthIndex) {\n        if (year.year) {\n            year = year.year();\n            monthIndex = year.month();\n        }\n\n        // compute intercalary month in the year (0 if none)\n        var intercalaryMonth = this.intercalaryMonth(year);\n\n        // validate month\n        var maxMonthIndex = (intercalaryMonth) ? 12 : 11;\n        if (monthIndex < 0 || monthIndex > maxMonthIndex) {\n            throw main.local.invalidMonth\n                .replace(/\\{0\\}/, this.local.name);\n        }\n\n        // compute Chinese month\n        var month;\n\n        if (!intercalaryMonth) {\n            month = monthIndex + 1;\n        } else if(monthIndex < intercalaryMonth) {\n            month = monthIndex + 1;\n        } else {\n            month = monthIndex;\n        }\n\n        return month;\n    },\n\n    /** Determine the intercalary month of a year (if any).\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @return {number} The intercalary month number, or 0 if none.\n        @throws Error if an invalid year or a different calendar used. */\n    intercalaryMonth: function(year) {\n        year = this._validateYear(year);\n\n        var monthDaysTable = LUNAR_MONTH_DAYS[year - LUNAR_MONTH_DAYS[0]];\n        var intercalaryMonth = monthDaysTable >> 13;\n\n        return intercalaryMonth;\n    },\n\n    /** Determine whether this date is an intercalary month.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @param [monthIndex] {number} The month index to examine.\n        @return {boolean} <code>true</code> if this is an intercalary month, <code>false</code> if not.\n        @throws Error if an invalid year or a different calendar used. */\n    isIntercalaryMonth: function(year, monthIndex) {\n        if (year.year) {\n            year = year.year();\n            monthIndex = year.month();\n        }\n\n        var intercalaryMonth = this.intercalaryMonth(year);\n\n        return !!intercalaryMonth && intercalaryMonth === monthIndex;\n    },\n\n    /** Determine whether this date is in a leap year.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @return {boolean} <code>true</code> if this is a leap year, <code>false</code> if not.\n        @throws Error if an invalid year or a different calendar used. */\n    leapYear: function(year) {\n        return (this.intercalaryMonth(year) !== 0);\n    },\n\n    /** Determine the week of the year for a date - ISO 8601.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @param [monthIndex] {number} The month index to examine.\n        @param [day] {number} The day to examine.\n        @return {number} The week of the year.\n        @throws Error if an invalid date or a different calendar used. */\n    weekOfYear: function(year, monthIndex, day) {\n        // compute Chinese new year\n        var validatedYear =\n            this._validateYear(year, main.local.invalidyear);\n        var packedDate =\n            CHINESE_NEW_YEAR[validatedYear - CHINESE_NEW_YEAR[0]];\n\n        var y = (packedDate >> 9) & 0xFFF;\n        var m = (packedDate >> 5) & 0x0F;\n        var d = packedDate & 0x1F;\n        \n        // find first Thrusday of the year\n        var firstThursday;\n        firstThursday = gregorianCalendar.newDate(y, m, d);\n        firstThursday.add(4 - (firstThursday.dayOfWeek() || 7), 'd');\n\n        // compute days from first Thursday\n        var offset =\n            this.toJD(year, monthIndex, day) - firstThursday.toJD();\n        return 1 + Math.floor(offset / 7);\n    },\n\n    /** Retrieve the number of months in a year.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @return {number} The number of months.\n        @throws Error if an invalid year or a different calendar used. */\n    monthsInYear: function(year) {\n        return (this.leapYear(year)) ? 13 : 12;\n    },\n\n    /** Retrieve the number of days in a month.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year of the month.\n        @param [monthIndex] {number} The month index.\n        @return {number} The number of days in this month.\n        @throws Error if an invalid month/year or a different calendar used. */\n    daysInMonth: function(year, monthIndex) {\n        if (year.year) {\n            monthIndex = year.month();\n            year = year.year();\n        }\n\n        year = this._validateYear(year);\n\n        var monthDaysTable = LUNAR_MONTH_DAYS[year - LUNAR_MONTH_DAYS[0]];\n\n        var intercalaryMonth = monthDaysTable >> 13;\n        var maxMonthIndex = (intercalaryMonth) ? 12 : 11;\n        if (monthIndex > maxMonthIndex) {\n            throw main.local.invalidMonth\n                .replace(/\\{0\\}/, this.local.name);\n        }\n\n        var daysInMonth = (monthDaysTable & (1 << (12 - monthIndex))) ?\n            30 : 29;\n\n        return daysInMonth;\n    },\n\n    /** Determine whether this date is a week day.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @param [monthIndex] {number} The month index to examine.\n        @param [day] {number} The day to examine.\n        @return {boolean} <code>true</code> if a week day, <code>false</code> if not.\n        @throws Error if an invalid date or a different calendar used. */\n    weekDay: function(year, monthIndex, day) {\n        return (this.dayOfWeek(year, monthIndex, day) || 7) < 6;\n    },\n\n    /** Retrieve the Julian date equivalent for this date,\n        i.e. days since January 1, 4713 BCE Greenwich noon.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to convert or the year to convert.\n        @param [monthIndex] {number} The month index to convert.\n        @param [day] {number} The day to convert.\n        @return {number} The equivalent Julian date.\n        @throws Error if an invalid date or a different calendar used. */\n    toJD: function(year, monthIndex, day) {\n        var date = this._validate(year, month, day, main.local.invalidDate);\n        year = this._validateYear(date.year());\n        monthIndex = date.month();\n        day = date.day();\n\n        var isIntercalary = this.isIntercalaryMonth(year, monthIndex);\n        var month = this.toChineseMonth(year, monthIndex);\n\n        var solar = toSolar(year, month, day, isIntercalary);\n\n        return gregorianCalendar.toJD(solar.year, solar.month, solar.day);\n    },\n\n    /** Create a new date from a Julian date.\n        @memberof ChineseCalendar\n        @param jd {number} The Julian date to convert.\n        @return {CDate} The equivalent date. */\n    fromJD: function(jd) {\n        var date = gregorianCalendar.fromJD(jd);\n        var lunar = toLunar(date.year(), date.month(), date.day());\n        var monthIndex = this.toMonthIndex(\n            lunar.year, lunar.month, lunar.isIntercalary);\n        return this.newDate(lunar.year, monthIndex, lunar.day);\n    },\n\n    /** Create a new date from a string.\n        @memberof ChineseCalendar\n        @param dateString {string} String representing a Chinese date\n        @return {CDate} The new date.\n        @throws Error if an invalid date. */\n    fromString: function(dateString) {\n        var match = dateString.match(DATE_REGEXP);\n\n        var year = this._validateYear(+match[1]);\n\n        var month = +match[2];\n        var isIntercalary = !!match[3];\n        var monthIndex = this.toMonthIndex(year, month, isIntercalary);\n\n        var day = +match[4];\n\n        return this.newDate(year, monthIndex, day);\n    },\n\n    /** Add period(s) to a date.\n        Cater for no year zero.\n        @memberof ChineseCalendar\n        @param date {CDate} The starting date.\n        @param offset {number} The number of periods to adjust by.\n        @param period {string} One of 'y' for year, 'm' for month, 'w' for week, 'd' for day.\n        @return {CDate} The updated date.\n        @throws Error if a different calendar used. */\n    add: function(date, offset, period) {\n        var year = date.year();\n        var monthIndex = date.month();\n        var isIntercalary = this.isIntercalaryMonth(year, monthIndex);\n        var month = this.toChineseMonth(year, monthIndex);\n\n        var cdate = Object.getPrototypeOf(ChineseCalendar.prototype)\n            .add.call(this, date, offset, period);\n\n        if (period === 'y') {\n            // Resync month\n            var resultYear = cdate.year();\n            var resultMonthIndex = cdate.month();\n\n            // Using the fact the month index of an intercalary month\n            // equals its month number:\n            var resultCanBeIntercalaryMonth =\n                this.isIntercalaryMonth(resultYear, month);\n\n            var correctedMonthIndex =\n                (isIntercalary && resultCanBeIntercalaryMonth) ?\n                this.toMonthIndex(resultYear, month, true) :\n                this.toMonthIndex(resultYear, month, false);\n\n            if (correctedMonthIndex !== resultMonthIndex) {\n                cdate.month(correctedMonthIndex);\n            }\n        }\n\n        return cdate;\n    },\n});\n\n// Used by ChineseCalendar.prototype.fromString\nvar DATE_REGEXP = /^\\s*(-?\\d\\d\\d\\d|\\d\\d)[-/](\\d?\\d)([iI]?)[-/](\\d?\\d)/m;\nvar MONTH_NUMBER_REGEXP = /^\\d?\\d[iI]?/m;\nvar MONTH_NAME_REGEXP = /^闰?十?[一二三四五六七八九]?月/m;\nvar MONTH_SHORT_NAME_REGEXP = /^闰?十?[一二三四五六七八九]?/m;\n\n// Chinese calendar implementation\nmain.calendars.chinese = ChineseCalendar;\n\n// Chinese calendar tables from year 1888 to 2111\n//\n// Source:\n// https://github.com/isee15/Lunar-Solar-Calendar-Converter.git\n\n// Table of intercalary months and days per month from year 1888 to 2111\n//\n// bit (12 - i):        days in the i^th month\n//                      (= 0 if i^th lunar month has 29 days)\n//                      (= 1 if i^th lunar month has 30 days)\n//                      (first month in lunar year is i = 0)\n// bits (13,14,15,16):  intercalary month\n//                      (= 0 if lunar year has no intercalary month)\nvar LUNAR_MONTH_DAYS = [1887, 0x1694, 0x16aa, 0x4ad5,\n    0xab6, 0xc4b7, 0x4ae, 0xa56, 0xb52a, 0x1d2a, 0xd54, 0x75aa, 0x156a,\n    0x1096d, 0x95c, 0x14ae, 0xaa4d, 0x1a4c, 0x1b2a, 0x8d55, 0xad4,\n    0x135a, 0x495d, 0x95c, 0xd49b, 0x149a, 0x1a4a, 0xbaa5, 0x16a8,\n    0x1ad4, 0x52da, 0x12b6, 0xe937, 0x92e, 0x1496, 0xb64b, 0xd4a,\n    0xda8, 0x95b5, 0x56c, 0x12ae, 0x492f, 0x92e, 0xcc96, 0x1a94,\n    0x1d4a, 0xada9, 0xb5a, 0x56c, 0x726e, 0x125c, 0xf92d, 0x192a,\n    0x1a94, 0xdb4a, 0x16aa, 0xad4, 0x955b, 0x4ba, 0x125a, 0x592b,\n    0x152a, 0xf695, 0xd94, 0x16aa, 0xaab5, 0x9b4, 0x14b6, 0x6a57,\n    0xa56, 0x1152a, 0x1d2a, 0xd54, 0xd5aa, 0x156a, 0x96c, 0x94ae,\n    0x14ae, 0xa4c, 0x7d26, 0x1b2a, 0xeb55, 0xad4, 0x12da, 0xa95d,\n    0x95a, 0x149a, 0x9a4d, 0x1a4a, 0x11aa5, 0x16a8, 0x16d4, 0xd2da,\n    0x12b6, 0x936, 0x9497, 0x1496, 0x1564b, 0xd4a, 0xda8, 0xd5b4,\n    0x156c, 0x12ae, 0xa92f, 0x92e, 0xc96, 0x6d4a, 0x1d4a, 0x10d65,\n    0xb58, 0x156c, 0xb26d, 0x125c, 0x192c, 0x9a95, 0x1a94, 0x1b4a,\n    0x4b55, 0xad4, 0xf55b, 0x4ba, 0x125a, 0xb92b, 0x152a, 0x1694,\n    0x96aa, 0x15aa, 0x12ab5, 0x974, 0x14b6, 0xca57, 0xa56, 0x1526,\n    0x8e95, 0xd54, 0x15aa, 0x49b5, 0x96c, 0xd4ae, 0x149c, 0x1a4c,\n    0xbd26, 0x1aa6, 0xb54, 0x6d6a, 0x12da, 0x1695d, 0x95a, 0x149a,\n    0xda4b, 0x1a4a, 0x1aa4, 0xbb54, 0x16b4, 0xada, 0x495b, 0x936,\n    0xf497, 0x1496, 0x154a, 0xb6a5, 0xda4, 0x15b4, 0x6ab6, 0x126e,\n    0x1092f, 0x92e, 0xc96, 0xcd4a, 0x1d4a, 0xd64, 0x956c, 0x155c,\n    0x125c, 0x792e, 0x192c, 0xfa95, 0x1a94, 0x1b4a, 0xab55, 0xad4,\n    0x14da, 0x8a5d, 0xa5a, 0x1152b, 0x152a, 0x1694, 0xd6aa, 0x15aa,\n    0xab4, 0x94ba, 0x14b6, 0xa56, 0x7527, 0xd26, 0xee53, 0xd54, 0x15aa,\n    0xa9b5, 0x96c, 0x14ae, 0x8a4e, 0x1a4c, 0x11d26, 0x1aa4, 0x1b54,\n    0xcd6a, 0xada, 0x95c, 0x949d, 0x149a, 0x1a2a, 0x5b25, 0x1aa4,\n    0xfb52, 0x16b4, 0xaba, 0xa95b, 0x936, 0x1496, 0x9a4b, 0x154a,\n    0x136a5, 0xda4, 0x15ac];\n\n// Table of Chinese New Years from year 1888 to 2111\n// \n// bits (0 to 4):   solar day\n// bits (5 to 8):   solar month\n// bits (9 to 20):  solar year\nvar CHINESE_NEW_YEAR = [1887, 0xec04c, 0xec23f, 0xec435, 0xec649,\n    0xec83e, 0xeca51, 0xecc46, 0xece3a, 0xed04d, 0xed242, 0xed436,\n    0xed64a, 0xed83f, 0xeda53, 0xedc48, 0xede3d, 0xee050, 0xee244,\n    0xee439, 0xee64d, 0xee842, 0xeea36, 0xeec4a, 0xeee3e, 0xef052,\n    0xef246, 0xef43a, 0xef64e, 0xef843, 0xefa37, 0xefc4b, 0xefe41,\n    0xf0054, 0xf0248, 0xf043c, 0xf0650, 0xf0845, 0xf0a38, 0xf0c4d,\n    0xf0e42, 0xf1037, 0xf124a, 0xf143e, 0xf1651, 0xf1846, 0xf1a3a,\n    0xf1c4e, 0xf1e44, 0xf2038, 0xf224b, 0xf243f, 0xf2653, 0xf2848,\n    0xf2a3b, 0xf2c4f, 0xf2e45, 0xf3039, 0xf324d, 0xf3442, 0xf3636,\n    0xf384a, 0xf3a3d, 0xf3c51, 0xf3e46, 0xf403b, 0xf424e, 0xf4443,\n    0xf4638, 0xf484c, 0xf4a3f, 0xf4c52, 0xf4e48, 0xf503c, 0xf524f,\n    0xf5445, 0xf5639, 0xf584d, 0xf5a42, 0xf5c35, 0xf5e49, 0xf603e,\n    0xf6251, 0xf6446, 0xf663b, 0xf684f, 0xf6a43, 0xf6c37, 0xf6e4b,\n    0xf703f, 0xf7252, 0xf7447, 0xf763c, 0xf7850, 0xf7a45, 0xf7c39,\n    0xf7e4d, 0xf8042, 0xf8254, 0xf8449, 0xf863d, 0xf8851, 0xf8a46,\n    0xf8c3b, 0xf8e4f, 0xf9044, 0xf9237, 0xf944a, 0xf963f, 0xf9853,\n    0xf9a47, 0xf9c3c, 0xf9e50, 0xfa045, 0xfa238, 0xfa44c, 0xfa641,\n    0xfa836, 0xfaa49, 0xfac3d, 0xfae52, 0xfb047, 0xfb23a, 0xfb44e,\n    0xfb643, 0xfb837, 0xfba4a, 0xfbc3f, 0xfbe53, 0xfc048, 0xfc23c,\n    0xfc450, 0xfc645, 0xfc839, 0xfca4c, 0xfcc41, 0xfce36, 0xfd04a,\n    0xfd23d, 0xfd451, 0xfd646, 0xfd83a, 0xfda4d, 0xfdc43, 0xfde37,\n    0xfe04b, 0xfe23f, 0xfe453, 0xfe648, 0xfe83c, 0xfea4f, 0xfec44,\n    0xfee38, 0xff04c, 0xff241, 0xff436, 0xff64a, 0xff83e, 0xffa51,\n    0xffc46, 0xffe3a, 0x10004e, 0x100242, 0x100437, 0x10064b, 0x100841,\n    0x100a53, 0x100c48, 0x100e3c, 0x10104f, 0x101244, 0x101438,\n    0x10164c, 0x101842, 0x101a35, 0x101c49, 0x101e3d, 0x102051,\n    0x102245, 0x10243a, 0x10264e, 0x102843, 0x102a37, 0x102c4b,\n    0x102e3f, 0x103053, 0x103247, 0x10343b, 0x10364f, 0x103845,\n    0x103a38, 0x103c4c, 0x103e42, 0x104036, 0x104249, 0x10443d,\n    0x104651, 0x104846, 0x104a3a, 0x104c4e, 0x104e43, 0x105038,\n    0x10524a, 0x10543e, 0x105652, 0x105847, 0x105a3b, 0x105c4f,\n    0x105e45, 0x106039, 0x10624c, 0x106441, 0x106635, 0x106849,\n    0x106a3d, 0x106c51, 0x106e47, 0x10703c, 0x10724f, 0x107444,\n    0x107638, 0x10784c, 0x107a3f, 0x107c53, 0x107e48];\n\nfunction toLunar(yearOrDate, monthOrResult, day, result) {\n    var solarDate;\n    var lunarDate;\n\n    if(typeof yearOrDate === 'object') {\n        solarDate = yearOrDate;\n        lunarDate = monthOrResult || {};\n\n    } else {\n        var isValidYear = (typeof yearOrDate === 'number') &&\n            (yearOrDate >= 1888) && (yearOrDate <= 2111);\n        if(!isValidYear)\n            throw new Error(\"Solar year outside range 1888-2111\");\n\n        var isValidMonth = (typeof monthOrResult === 'number') &&\n            (monthOrResult >= 1) && (monthOrResult <= 12);\n        if(!isValidMonth)\n            throw new Error(\"Solar month outside range 1 - 12\");\n\n        var isValidDay = (typeof day === 'number') && (day >= 1) && (day <= 31);\n        if(!isValidDay)\n            throw new Error(\"Solar day outside range 1 - 31\");\n\n        solarDate = {\n            year: yearOrDate,\n            month: monthOrResult,\n            day: day,\n        };\n        lunarDate = result || {};\n    }\n\n    // Compute Chinese new year and lunar year\n    var chineseNewYearPackedDate =\n        CHINESE_NEW_YEAR[solarDate.year - CHINESE_NEW_YEAR[0]];\n\n    var packedDate = (solarDate.year << 9) | (solarDate.month << 5)\n        | solarDate.day;\n\n    lunarDate.year = (packedDate >= chineseNewYearPackedDate) ?\n        solarDate.year :\n        solarDate.year - 1;\n\n    chineseNewYearPackedDate =\n        CHINESE_NEW_YEAR[lunarDate.year - CHINESE_NEW_YEAR[0]];\n\n    var y = (chineseNewYearPackedDate >> 9) & 0xFFF;\n    var m = (chineseNewYearPackedDate >> 5) & 0x0F;\n    var d = chineseNewYearPackedDate & 0x1F;\n\n    // Compute days from new year\n    var daysFromNewYear;\n\n    var chineseNewYearJSDate = new Date(y, m -1, d);\n    var jsDate = new Date(solarDate.year, solarDate.month - 1, solarDate.day);\n\n    daysFromNewYear = Math.round(\n        (jsDate - chineseNewYearJSDate) / (24 * 3600 * 1000));\n\n    // Compute lunar month and day\n    var monthDaysTable = LUNAR_MONTH_DAYS[lunarDate.year - LUNAR_MONTH_DAYS[0]];\n\n    var i;\n    for(i = 0; i < 13; i++) {\n        var daysInMonth = (monthDaysTable & (1 << (12 - i))) ? 30 : 29;\n\n        if (daysFromNewYear < daysInMonth) {\n            break;\n        }\n\n        daysFromNewYear -= daysInMonth;\n    }\n\n    var intercalaryMonth = monthDaysTable >> 13;\n    if (!intercalaryMonth || i < intercalaryMonth) {\n        lunarDate.isIntercalary = false;\n        lunarDate.month = 1 + i;\n    } else if (i === intercalaryMonth) {\n        lunarDate.isIntercalary = true;\n        lunarDate.month = i;\n    } else {\n        lunarDate.isIntercalary = false;\n        lunarDate.month = i;\n    }\n\n    lunarDate.day = 1 + daysFromNewYear;\n\n    return lunarDate;\n}\n\nfunction toSolar(yearOrDate, monthOrResult, day, isIntercalaryOrResult, result) {\n    var solarDate;\n    var lunarDate;\n\n    if(typeof yearOrDate === 'object') {\n        lunarDate = yearOrDate;\n        solarDate = monthOrResult || {};\n\n    } else {\n        var isValidYear = (typeof yearOrDate === 'number') &&\n            (yearOrDate >= 1888) && (yearOrDate <= 2111);\n        if(!isValidYear)\n            throw new Error(\"Lunar year outside range 1888-2111\");\n\n        var isValidMonth = (typeof monthOrResult === 'number') &&\n            (monthOrResult >= 1) && (monthOrResult <= 12);\n        if(!isValidMonth)\n            throw new Error(\"Lunar month outside range 1 - 12\");\n\n        var isValidDay = (typeof day === 'number') && (day >= 1) && (day <= 30);\n        if(!isValidDay)\n            throw new Error(\"Lunar day outside range 1 - 30\");\n\n        var isIntercalary;\n        if(typeof isIntercalaryOrResult === 'object') {\n            isIntercalary = false;\n            solarDate = isIntercalaryOrResult;\n        } else {\n            isIntercalary = !!isIntercalaryOrResult;\n            solarDate = result || {};\n        }\n\n        lunarDate = {\n            year: yearOrDate,\n            month: monthOrResult,\n            day: day,\n            isIntercalary: isIntercalary,\n        };\n    }\n\n    // Compute days from new year\n    var daysFromNewYear;\n\n    daysFromNewYear = lunarDate.day - 1;\n\n    var monthDaysTable = LUNAR_MONTH_DAYS[lunarDate.year - LUNAR_MONTH_DAYS[0]];\n    var intercalaryMonth = monthDaysTable >> 13;\n\n    var monthsFromNewYear;\n    if (!intercalaryMonth) {\n        monthsFromNewYear = lunarDate.month - 1;\n    } else if (lunarDate.month > intercalaryMonth) {\n        monthsFromNewYear = lunarDate.month;\n    } else if (lunarDate.isIntercalary) {\n        monthsFromNewYear = lunarDate.month;\n    } else {\n        monthsFromNewYear = lunarDate.month - 1;\n    }\n\n    for(var i = 0; i < monthsFromNewYear; i++) {\n        var daysInMonth = (monthDaysTable & (1 << (12 - i))) ? 30 : 29;\n        daysFromNewYear += daysInMonth;\n    }\n\n    // Compute Chinese new year\n    var packedDate = CHINESE_NEW_YEAR[lunarDate.year - CHINESE_NEW_YEAR[0]];\n\n    var y = (packedDate >> 9) & 0xFFF;\n    var m = (packedDate >> 5) & 0x0F;\n    var d = packedDate & 0x1F;\n\n    // Compute solar date\n    var jsDate = new Date(y, m - 1, d + daysFromNewYear);\n\n    solarDate.year = jsDate.getFullYear();\n    solarDate.month = 1 + jsDate.getMonth();\n    solarDate.day = jsDate.getDate();\n\n    return solarDate;\n}\n\n"]},"metadata":{},"sourceType":"script"}