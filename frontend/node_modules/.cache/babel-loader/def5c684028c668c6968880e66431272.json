{"ast":null,"code":"'use strict';\n\nvar d3Time = require('d3-time');\n\nvar titleCase = require('../../lib').titleCase;\n\nmodule.exports = function getUpdateObject(axisLayout, buttonLayout) {\n  var axName = axisLayout._name;\n  var update = {};\n\n  if (buttonLayout.step === 'all') {\n    update[axName + '.autorange'] = true;\n  } else {\n    var xrange = getXRange(axisLayout, buttonLayout);\n    update[axName + '.range[0]'] = xrange[0];\n    update[axName + '.range[1]'] = xrange[1];\n  }\n\n  return update;\n};\n\nfunction getXRange(axisLayout, buttonLayout) {\n  var currentRange = axisLayout.range;\n  var base = new Date(axisLayout.r2l(currentRange[1]));\n  var step = buttonLayout.step;\n  var utcStep = d3Time['utc' + titleCase(step)];\n  var count = buttonLayout.count;\n  var range0;\n\n  switch (buttonLayout.stepmode) {\n    case 'backward':\n      range0 = axisLayout.l2r(+utcStep.offset(base, -count));\n      break;\n\n    case 'todate':\n      var base2 = utcStep.offset(base, -count);\n      range0 = axisLayout.l2r(+utcStep.ceil(base2));\n      break;\n  }\n\n  var range1 = currentRange[1];\n  return [range0, range1];\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/rangeselector/get_update_object.js"],"names":["d3Time","require","titleCase","module","exports","getUpdateObject","axisLayout","buttonLayout","axName","_name","update","step","xrange","getXRange","currentRange","range","base","Date","r2l","utcStep","count","range0","stepmode","l2r","offset","base2","ceil","range1"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAP,CAAqBC,SAArC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,UAAzB,EAAqCC,YAArC,EAAmD;AAChE,MAAIC,MAAM,GAAGF,UAAU,CAACG,KAAxB;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAGH,YAAY,CAACI,IAAb,KAAsB,KAAzB,EAAgC;AAC5BD,IAAAA,MAAM,CAACF,MAAM,GAAG,YAAV,CAAN,GAAgC,IAAhC;AACH,GAFD,MAEO;AACH,QAAII,MAAM,GAAGC,SAAS,CAACP,UAAD,EAAaC,YAAb,CAAtB;AAEAG,IAAAA,MAAM,CAACF,MAAM,GAAG,WAAV,CAAN,GAA+BI,MAAM,CAAC,CAAD,CAArC;AACAF,IAAAA,MAAM,CAACF,MAAM,GAAG,WAAV,CAAN,GAA+BI,MAAM,CAAC,CAAD,CAArC;AACH;;AAED,SAAOF,MAAP;AACH,CAdD;;AAgBA,SAASG,SAAT,CAAmBP,UAAnB,EAA+BC,YAA/B,EAA6C;AACzC,MAAIO,YAAY,GAAGR,UAAU,CAACS,KAA9B;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASX,UAAU,CAACY,GAAX,CAAeJ,YAAY,CAAC,CAAD,CAA3B,CAAT,CAAX;AACA,MAAIH,IAAI,GAAGJ,YAAY,CAACI,IAAxB;AAEA,MAAIQ,OAAO,GAAGnB,MAAM,CAAC,QAAQE,SAAS,CAACS,IAAD,CAAlB,CAApB;AAEA,MAAIS,KAAK,GAAGb,YAAY,CAACa,KAAzB;AACA,MAAIC,MAAJ;;AAEA,UAAOd,YAAY,CAACe,QAApB;AACI,SAAK,UAAL;AACID,MAAAA,MAAM,GAAGf,UAAU,CAACiB,GAAX,CAAe,CAACJ,OAAO,CAACK,MAAR,CAAeR,IAAf,EAAqB,CAACI,KAAtB,CAAhB,CAAT;AACA;;AAEJ,SAAK,QAAL;AACI,UAAIK,KAAK,GAAGN,OAAO,CAACK,MAAR,CAAeR,IAAf,EAAqB,CAACI,KAAtB,CAAZ;AAEAC,MAAAA,MAAM,GAAGf,UAAU,CAACiB,GAAX,CAAe,CAACJ,OAAO,CAACO,IAAR,CAAaD,KAAb,CAAhB,CAAT;AACA;AATR;;AAYA,MAAIE,MAAM,GAAGb,YAAY,CAAC,CAAD,CAAzB;AAEA,SAAO,CAACO,MAAD,EAASM,MAAT,CAAP;AACH","sourcesContent":["'use strict';\n\nvar d3Time = require('d3-time');\nvar titleCase = require('../../lib').titleCase;\n\nmodule.exports = function getUpdateObject(axisLayout, buttonLayout) {\n    var axName = axisLayout._name;\n    var update = {};\n\n    if(buttonLayout.step === 'all') {\n        update[axName + '.autorange'] = true;\n    } else {\n        var xrange = getXRange(axisLayout, buttonLayout);\n\n        update[axName + '.range[0]'] = xrange[0];\n        update[axName + '.range[1]'] = xrange[1];\n    }\n\n    return update;\n};\n\nfunction getXRange(axisLayout, buttonLayout) {\n    var currentRange = axisLayout.range;\n    var base = new Date(axisLayout.r2l(currentRange[1]));\n    var step = buttonLayout.step;\n\n    var utcStep = d3Time['utc' + titleCase(step)];\n\n    var count = buttonLayout.count;\n    var range0;\n\n    switch(buttonLayout.stepmode) {\n        case 'backward':\n            range0 = axisLayout.l2r(+utcStep.offset(base, -count));\n            break;\n\n        case 'todate':\n            var base2 = utcStep.offset(base, -count);\n\n            range0 = axisLayout.l2r(+utcStep.ceil(base2));\n            break;\n    }\n\n    var range1 = currentRange[1];\n\n    return [range0, range1];\n}\n"]},"metadata":{},"sourceType":"script"}