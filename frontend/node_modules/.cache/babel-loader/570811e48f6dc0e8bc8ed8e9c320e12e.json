{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar tinycolor = require('tinycolor2');\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar strRotate = Lib.strRotate;\nvar strTranslate = Lib.strTranslate;\n\nvar Color = require('../../components/color');\n\nvar Drawing = require('../../components/drawing');\n\nvar Plots = require('../plots');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar setConvertCartesian = require('../cartesian/set_convert');\n\nvar setConvertPolar = require('./set_convert');\n\nvar doAutoRange = require('../cartesian/autorange').doAutoRange;\n\nvar dragBox = require('../cartesian/dragbox');\n\nvar dragElement = require('../../components/dragelement');\n\nvar Fx = require('../../components/fx');\n\nvar Titles = require('../../components/titles');\n\nvar prepSelect = require('../cartesian/select').prepSelect;\n\nvar selectOnClick = require('../cartesian/select').selectOnClick;\n\nvar clearSelect = require('../cartesian/select').clearSelect;\n\nvar setCursor = require('../../lib/setcursor');\n\nvar clearGlCanvases = require('../../lib/clear_gl_canvases');\n\nvar redrawReglTraces = require('../../plot_api/subroutines').redrawReglTraces;\n\nvar MID_SHIFT = require('../../constants/alignment').MID_SHIFT;\n\nvar constants = require('./constants');\n\nvar helpers = require('./helpers');\n\nvar _ = Lib._;\nvar mod = Lib.mod;\nvar deg2rad = Lib.deg2rad;\nvar rad2deg = Lib.rad2deg;\n\nfunction Polar(gd, id) {\n  this.id = id;\n  this.gd = gd;\n  this._hasClipOnAxisFalse = null;\n  this.vangles = null;\n  this.radialAxisAngle = null;\n  this.traceHash = {};\n  this.layers = {};\n  this.clipPaths = {};\n  this.clipIds = {};\n  this.viewInitial = {};\n  var fullLayout = gd._fullLayout;\n  var clipIdBase = 'clip' + fullLayout._uid + id;\n  this.clipIds.forTraces = clipIdBase + '-for-traces';\n  this.clipPaths.forTraces = fullLayout._clips.append('clipPath').attr('id', this.clipIds.forTraces);\n  this.clipPaths.forTraces.append('path');\n  this.framework = fullLayout._polarlayer.append('g').attr('class', id); // unfortunately, we have to keep track of some axis tick settings\n  // as polar subplots do not implement the 'ticks' editType\n\n  this.radialTickLayout = null;\n  this.angularTickLayout = null;\n}\n\nvar proto = Polar.prototype;\n\nmodule.exports = function createPolar(gd, id) {\n  return new Polar(gd, id);\n};\n\nproto.plot = function (polarCalcData, fullLayout) {\n  var _this = this;\n\n  var polarLayout = fullLayout[_this.id];\n  _this._hasClipOnAxisFalse = false;\n\n  for (var i = 0; i < polarCalcData.length; i++) {\n    var trace = polarCalcData[i][0].trace;\n\n    if (trace.cliponaxis === false) {\n      _this._hasClipOnAxisFalse = true;\n      break;\n    }\n  }\n\n  _this.updateLayers(fullLayout, polarLayout);\n\n  _this.updateLayout(fullLayout, polarLayout);\n\n  Plots.generalUpdatePerTraceModule(_this.gd, _this, polarCalcData, polarLayout);\n\n  _this.updateFx(fullLayout, polarLayout);\n};\n\nproto.updateLayers = function (fullLayout, polarLayout) {\n  var _this = this;\n\n  var layers = _this.layers;\n  var radialLayout = polarLayout.radialaxis;\n  var angularLayout = polarLayout.angularaxis;\n  var layerNames = constants.layerNames;\n  var frontPlotIndex = layerNames.indexOf('frontplot');\n  var layerData = layerNames.slice(0, frontPlotIndex);\n  var isAngularAxisBelowTraces = angularLayout.layer === 'below traces';\n  var isRadialAxisBelowTraces = radialLayout.layer === 'below traces';\n  if (isAngularAxisBelowTraces) layerData.push('angular-line');\n  if (isRadialAxisBelowTraces) layerData.push('radial-line');\n  if (isAngularAxisBelowTraces) layerData.push('angular-axis');\n  if (isRadialAxisBelowTraces) layerData.push('radial-axis');\n  layerData.push('frontplot');\n  if (!isAngularAxisBelowTraces) layerData.push('angular-line');\n  if (!isRadialAxisBelowTraces) layerData.push('radial-line');\n  if (!isAngularAxisBelowTraces) layerData.push('angular-axis');\n  if (!isRadialAxisBelowTraces) layerData.push('radial-axis');\n\n  var join = _this.framework.selectAll('.polarsublayer').data(layerData, String);\n\n  join.enter().append('g').attr('class', function (d) {\n    return 'polarsublayer ' + d;\n  }).each(function (d) {\n    var sel = layers[d] = d3.select(this);\n\n    switch (d) {\n      case 'frontplot':\n        // TODO add option to place in 'backplot' layer??\n        sel.append('g').classed('barlayer', true);\n        sel.append('g').classed('scatterlayer', true);\n        break;\n\n      case 'backplot':\n        sel.append('g').classed('maplayer', true);\n        break;\n\n      case 'plotbg':\n        layers.bg = sel.append('path');\n        break;\n\n      case 'radial-grid':\n        sel.style('fill', 'none');\n        break;\n\n      case 'angular-grid':\n        sel.style('fill', 'none');\n        break;\n\n      case 'radial-line':\n        sel.append('line').style('fill', 'none');\n        break;\n\n      case 'angular-line':\n        sel.append('path').style('fill', 'none');\n        break;\n    }\n  });\n  join.order();\n};\n/* Polar subplots juggle with 6 'axis objects' (!), these are:\n *\n * - polarLayout.radialaxis (aka radialLayout in this file):\n * - polarLayout.angularaxis (aka angularLayout in this file):\n *   used for data -> calcdata conversions (aka d2c) during the calc step\n *\n * - this.radialAxis\n *   extends polarLayout.radialaxis, adds mocked 'domain' and\n *   few other keys in order to reuse Cartesian doAutoRange and the Axes\n *   drawing routines.\n *   used for calcdata -> geometric conversions (aka c2g) during the plot step\n *   + setGeometry setups ax.c2g for given ax.range\n *   + setScale setups ax._m,ax._b for given ax.range\n *\n * - this.angularAxis\n *   extends polarLayout.angularaxis, adds mocked 'range' and 'domain' and\n *   a few other keys in order to reuse the Axes drawing routines.\n *   used for calcdata -> geometric conversions (aka c2g) during the plot step\n *   + setGeometry setups ax.c2g given ax.rotation, ax.direction & ax._categories,\n *                 and mocks ax.range\n *   + setScale setups ax._m,ax._b with that mocked ax.range\n *\n * - this.xaxis\n * - this.yaxis\n *   setup so that polar traces can reuse plot methods of Cartesian traces\n *   which mostly rely on 2pixel methods (e.g ax.c2p)\n */\n\n\nproto.updateLayout = function (fullLayout, polarLayout) {\n  var _this = this;\n\n  var layers = _this.layers;\n  var gs = fullLayout._size; // axis attributes\n\n  var radialLayout = polarLayout.radialaxis;\n  var angularLayout = polarLayout.angularaxis; // layout domains\n\n  var xDomain = polarLayout.domain.x;\n  var yDomain = polarLayout.domain.y; // offsets from paper edge to layout domain box\n\n  _this.xOffset = gs.l + gs.w * xDomain[0];\n  _this.yOffset = gs.t + gs.h * (1 - yDomain[1]); // lengths of the layout domain box\n\n  var xLength = _this.xLength = gs.w * (xDomain[1] - xDomain[0]);\n  var yLength = _this.yLength = gs.h * (yDomain[1] - yDomain[0]); // sector to plot\n\n  var sector = polarLayout.sector;\n  _this.sectorInRad = sector.map(deg2rad);\n  var sectorBBox = _this.sectorBBox = computeSectorBBox(sector);\n  var dxSectorBBox = sectorBBox[2] - sectorBBox[0];\n  var dySectorBBox = sectorBBox[3] - sectorBBox[1]; // aspect ratios\n\n  var arDomain = yLength / xLength;\n  var arSector = Math.abs(dySectorBBox / dxSectorBBox); // actual lengths and domains of subplot box\n\n  var xLength2, yLength2;\n  var xDomain2, yDomain2;\n  var gap;\n\n  if (arDomain > arSector) {\n    xLength2 = xLength;\n    yLength2 = xLength * arSector;\n    gap = (yLength - yLength2) / gs.h / 2;\n    xDomain2 = [xDomain[0], xDomain[1]];\n    yDomain2 = [yDomain[0] + gap, yDomain[1] - gap];\n  } else {\n    xLength2 = yLength / arSector;\n    yLength2 = yLength;\n    gap = (xLength - xLength2) / gs.w / 2;\n    xDomain2 = [xDomain[0] + gap, xDomain[1] - gap];\n    yDomain2 = [yDomain[0], yDomain[1]];\n  }\n\n  _this.xLength2 = xLength2;\n  _this.yLength2 = yLength2;\n  _this.xDomain2 = xDomain2;\n  _this.yDomain2 = yDomain2; // actual offsets from paper edge to the subplot box top-left corner\n\n  var xOffset2 = _this.xOffset2 = gs.l + gs.w * xDomain2[0];\n  var yOffset2 = _this.yOffset2 = gs.t + gs.h * (1 - yDomain2[1]); // circle radius in px\n\n  var radius = _this.radius = xLength2 / dxSectorBBox; // 'inner' radius in px (when polar.hole is set)\n\n  var innerRadius = _this.innerRadius = polarLayout.hole * radius; // circle center position in px\n\n  var cx = _this.cx = xOffset2 - radius * sectorBBox[0];\n  var cy = _this.cy = yOffset2 + radius * sectorBBox[3]; // circle center in the coordinate system of plot area\n\n  var cxx = _this.cxx = cx - xOffset2;\n  var cyy = _this.cyy = cy - yOffset2;\n  _this.radialAxis = _this.mockAxis(fullLayout, polarLayout, radialLayout, {\n    // make this an 'x' axis to make positioning (especially rotation) easier\n    _id: 'x',\n    // convert to 'x' axis equivalent\n    side: {\n      counterclockwise: 'top',\n      clockwise: 'bottom'\n    }[radialLayout.side],\n    // keep track of real side\n    _realSide: radialLayout.side,\n    // spans length 1 radius\n    domain: [innerRadius / gs.w, radius / gs.w]\n  });\n  _this.angularAxis = _this.mockAxis(fullLayout, polarLayout, angularLayout, {\n    side: 'right',\n    // to get auto nticks right\n    domain: [0, Math.PI],\n    // don't pass through autorange logic\n    autorange: false\n  });\n\n  _this.doAutoRange(fullLayout, polarLayout); // N.B. this sets _this.vangles\n\n\n  _this.updateAngularAxis(fullLayout, polarLayout); // N.B. this sets _this.radialAxisAngle\n\n\n  _this.updateRadialAxis(fullLayout, polarLayout);\n\n  _this.updateRadialAxisTitle(fullLayout, polarLayout);\n\n  _this.xaxis = _this.mockCartesianAxis(fullLayout, polarLayout, {\n    _id: 'x',\n    domain: xDomain2\n  });\n  _this.yaxis = _this.mockCartesianAxis(fullLayout, polarLayout, {\n    _id: 'y',\n    domain: yDomain2\n  });\n\n  var dPath = _this.pathSubplot();\n\n  _this.clipPaths.forTraces.select('path').attr('d', dPath).attr('transform', strTranslate(cxx, cyy));\n\n  layers.frontplot.attr('transform', strTranslate(xOffset2, yOffset2)).call(Drawing.setClipUrl, _this._hasClipOnAxisFalse ? null : _this.clipIds.forTraces, _this.gd);\n  layers.bg.attr('d', dPath).attr('transform', strTranslate(cx, cy)).call(Color.fill, polarLayout.bgcolor);\n};\n\nproto.mockAxis = function (fullLayout, polarLayout, axLayout, opts) {\n  var ax = Lib.extendFlat({}, axLayout, opts);\n  setConvertPolar(ax, polarLayout, fullLayout);\n  return ax;\n};\n\nproto.mockCartesianAxis = function (fullLayout, polarLayout, opts) {\n  var _this = this;\n\n  var axId = opts._id;\n  var ax = Lib.extendFlat({\n    type: 'linear'\n  }, opts);\n  setConvertCartesian(ax, fullLayout);\n  var bboxIndices = {\n    x: [0, 2],\n    y: [1, 3]\n  };\n\n  ax.setRange = function () {\n    var sectorBBox = _this.sectorBBox;\n    var ind = bboxIndices[axId];\n    var rl = _this.radialAxis._rl;\n    var drl = (rl[1] - rl[0]) / (1 - polarLayout.hole);\n    ax.range = [sectorBBox[ind[0]] * drl, sectorBBox[ind[1]] * drl];\n  };\n\n  ax.isPtWithinRange = axId === 'x' ? function (d) {\n    return _this.isPtInside(d);\n  } : function () {\n    return true;\n  };\n  ax.setRange();\n  ax.setScale();\n  return ax;\n};\n\nproto.doAutoRange = function (fullLayout, polarLayout) {\n  var gd = this.gd;\n  var radialAxis = this.radialAxis;\n  var radialLayout = polarLayout.radialaxis;\n  radialAxis.setScale();\n  doAutoRange(gd, radialAxis);\n  var rng = radialAxis.range;\n  radialLayout.range = rng.slice();\n  radialLayout._input.range = rng.slice();\n  radialAxis._rl = [radialAxis.r2l(rng[0], null, 'gregorian'), radialAxis.r2l(rng[1], null, 'gregorian')];\n};\n\nproto.updateRadialAxis = function (fullLayout, polarLayout) {\n  var _this = this;\n\n  var gd = _this.gd;\n  var layers = _this.layers;\n  var radius = _this.radius;\n  var innerRadius = _this.innerRadius;\n  var cx = _this.cx;\n  var cy = _this.cy;\n  var radialLayout = polarLayout.radialaxis;\n  var a0 = mod(polarLayout.sector[0], 360);\n  var ax = _this.radialAxis;\n  var hasRoomForIt = innerRadius < radius;\n\n  _this.fillViewInitialKey('radialaxis.angle', radialLayout.angle);\n\n  _this.fillViewInitialKey('radialaxis.range', ax.range.slice());\n\n  ax.setGeometry(); // rotate auto tick labels by 180 if in quadrant II and III to make them\n  // readable from left-to-right\n  //\n  // TODO try moving deeper in Axes.drawLabels for better results?\n\n  if (ax.tickangle === 'auto' && a0 > 90 && a0 <= 270) {\n    ax.tickangle = 180;\n  } // easier to set rotate angle with custom translate function\n\n\n  var transFn = function transFn(d) {\n    return strTranslate(ax.l2p(d.x) + innerRadius, 0);\n  }; // set special grid path function\n\n\n  var gridPathFn = function gridPathFn(d) {\n    return _this.pathArc(ax.r2p(d.x) + innerRadius);\n  };\n\n  var newTickLayout = strTickLayout(radialLayout);\n\n  if (_this.radialTickLayout !== newTickLayout) {\n    layers['radial-axis'].selectAll('.xtick').remove();\n    _this.radialTickLayout = newTickLayout;\n  }\n\n  if (hasRoomForIt) {\n    ax.setScale();\n    var vals = Axes.calcTicks(ax);\n    var valsClipped = Axes.clipEnds(ax, vals);\n    var tickSign = Axes.getTickSigns(ax)[2];\n    Axes.drawTicks(gd, ax, {\n      vals: vals,\n      layer: layers['radial-axis'],\n      path: Axes.makeTickPath(ax, 0, tickSign),\n      transFn: transFn,\n      crisp: false\n    });\n    Axes.drawGrid(gd, ax, {\n      vals: valsClipped,\n      layer: layers['radial-grid'],\n      path: gridPathFn,\n      transFn: Lib.noop,\n      crisp: false\n    });\n    Axes.drawLabels(gd, ax, {\n      vals: vals,\n      layer: layers['radial-axis'],\n      transFn: transFn,\n      labelFns: Axes.makeLabelFns(ax, 0)\n    });\n  } // stash 'actual' radial axis angle for drag handlers (in degrees)\n\n\n  var angle = _this.radialAxisAngle = _this.vangles ? rad2deg(snapToVertexAngle(deg2rad(radialLayout.angle), _this.vangles)) : radialLayout.angle;\n  var tLayer = strTranslate(cx, cy);\n  var tLayer2 = tLayer + strRotate(-angle);\n  updateElement(layers['radial-axis'], hasRoomForIt && (radialLayout.showticklabels || radialLayout.ticks), {\n    transform: tLayer2\n  });\n  updateElement(layers['radial-grid'], hasRoomForIt && radialLayout.showgrid, {\n    transform: tLayer\n  });\n  updateElement(layers['radial-line'].select('line'), hasRoomForIt && radialLayout.showline, {\n    x1: innerRadius,\n    y1: 0,\n    x2: radius,\n    y2: 0,\n    transform: tLayer2\n  }).attr('stroke-width', radialLayout.linewidth).call(Color.stroke, radialLayout.linecolor);\n};\n\nproto.updateRadialAxisTitle = function (fullLayout, polarLayout, _angle) {\n  var _this = this;\n\n  var gd = _this.gd;\n  var radius = _this.radius;\n  var cx = _this.cx;\n  var cy = _this.cy;\n  var radialLayout = polarLayout.radialaxis;\n  var titleClass = _this.id + 'title';\n  var angle = _angle !== undefined ? _angle : _this.radialAxisAngle;\n  var angleRad = deg2rad(angle);\n  var cosa = Math.cos(angleRad);\n  var sina = Math.sin(angleRad);\n  var pad = 0; // Hint: no need to check if there is in fact a title.text set\n  // because if plot is editable, pad needs to be calculated anyways\n  // to properly show placeholder text when title is empty.\n\n  if (radialLayout.title) {\n    var h = Drawing.bBox(_this.layers['radial-axis'].node()).height;\n    var ts = radialLayout.title.font.size;\n    pad = radialLayout.side === 'counterclockwise' ? -h - ts * 0.4 : h + ts * 0.8;\n  }\n\n  _this.layers['radial-axis-title'] = Titles.draw(gd, titleClass, {\n    propContainer: radialLayout,\n    propName: _this.id + '.radialaxis.title',\n    placeholder: _(gd, 'Click to enter radial axis title'),\n    attributes: {\n      x: cx + radius / 2 * cosa + pad * sina,\n      y: cy - radius / 2 * sina + pad * cosa,\n      'text-anchor': 'middle'\n    },\n    transform: {\n      rotate: -angle\n    }\n  });\n};\n\nproto.updateAngularAxis = function (fullLayout, polarLayout) {\n  var _this = this;\n\n  var gd = _this.gd;\n  var layers = _this.layers;\n  var radius = _this.radius;\n  var innerRadius = _this.innerRadius;\n  var cx = _this.cx;\n  var cy = _this.cy;\n  var angularLayout = polarLayout.angularaxis;\n  var ax = _this.angularAxis;\n\n  _this.fillViewInitialKey('angularaxis.rotation', angularLayout.rotation);\n\n  ax.setGeometry();\n  ax.setScale(); // 't'ick to 'g'eometric radians is used all over the place here\n\n  var t2g = function t2g(d) {\n    return ax.t2g(d.x);\n  }; // run rad2deg on tick0 and ditck for thetaunit: 'radians' axes\n\n\n  if (ax.type === 'linear' && ax.thetaunit === 'radians') {\n    ax.tick0 = rad2deg(ax.tick0);\n    ax.dtick = rad2deg(ax.dtick);\n  }\n\n  var _transFn = function _transFn(rad) {\n    return strTranslate(cx + radius * Math.cos(rad), cy - radius * Math.sin(rad));\n  };\n\n  var transFn = function transFn(d) {\n    return _transFn(t2g(d));\n  };\n\n  var transFn2 = function transFn2(d) {\n    var rad = t2g(d);\n    return _transFn(rad) + strRotate(-rad2deg(rad));\n  };\n\n  var gridPathFn = function gridPathFn(d) {\n    var rad = t2g(d);\n    var cosRad = Math.cos(rad);\n    var sinRad = Math.sin(rad);\n    return 'M' + [cx + innerRadius * cosRad, cy - innerRadius * sinRad] + 'L' + [cx + radius * cosRad, cy - radius * sinRad];\n  };\n\n  var out = Axes.makeLabelFns(ax, 0);\n  var labelStandoff = out.labelStandoff;\n  var labelFns = {};\n\n  labelFns.xFn = function (d) {\n    var rad = t2g(d);\n    return Math.cos(rad) * labelStandoff;\n  };\n\n  labelFns.yFn = function (d) {\n    var rad = t2g(d);\n    var ff = Math.sin(rad) > 0 ? 0.2 : 1;\n    return -Math.sin(rad) * (labelStandoff + d.fontSize * ff) + Math.abs(Math.cos(rad)) * (d.fontSize * MID_SHIFT);\n  };\n\n  labelFns.anchorFn = function (d) {\n    var rad = t2g(d);\n    var cos = Math.cos(rad);\n    return Math.abs(cos) < 0.1 ? 'middle' : cos > 0 ? 'start' : 'end';\n  };\n\n  labelFns.heightFn = function (d, a, h) {\n    var rad = t2g(d);\n    return -0.5 * (1 + Math.sin(rad)) * h;\n  };\n\n  var newTickLayout = strTickLayout(angularLayout);\n\n  if (_this.angularTickLayout !== newTickLayout) {\n    layers['angular-axis'].selectAll('.' + ax._id + 'tick').remove();\n    _this.angularTickLayout = newTickLayout;\n  }\n\n  var vals = Axes.calcTicks(ax); // angle of polygon vertices in geometric radians (null means circles)\n  // TODO what to do when ax.period > ax._categories ??\n\n  var vangles;\n\n  if (polarLayout.gridshape === 'linear') {\n    vangles = vals.map(t2g); // ax._vals should be always ordered, make them\n    // always turn counterclockwise for convenience here\n\n    if (Lib.angleDelta(vangles[0], vangles[1]) < 0) {\n      vangles = vangles.slice().reverse();\n    }\n  } else {\n    vangles = null;\n  }\n\n  _this.vangles = vangles; // Use tickval filter for category axes instead of tweaking\n  // the range w.r.t sector, so that sectors that cross 360 can\n  // show all their ticks.\n\n  if (ax.type === 'category') {\n    vals = vals.filter(function (d) {\n      return Lib.isAngleInsideSector(t2g(d), _this.sectorInRad);\n    });\n  }\n\n  if (ax.visible) {\n    var tickSign = ax.ticks === 'inside' ? -1 : 1;\n    var pad = (ax.linewidth || 1) / 2;\n    Axes.drawTicks(gd, ax, {\n      vals: vals,\n      layer: layers['angular-axis'],\n      path: 'M' + tickSign * pad + ',0h' + tickSign * ax.ticklen,\n      transFn: transFn2,\n      crisp: false\n    });\n    Axes.drawGrid(gd, ax, {\n      vals: vals,\n      layer: layers['angular-grid'],\n      path: gridPathFn,\n      transFn: Lib.noop,\n      crisp: false\n    });\n    Axes.drawLabels(gd, ax, {\n      vals: vals,\n      layer: layers['angular-axis'],\n      repositionOnUpdate: true,\n      transFn: transFn,\n      labelFns: labelFns\n    });\n  } // TODO maybe two arcs is better here?\n  // maybe split style attributes between inner and outer angular axes?\n\n\n  updateElement(layers['angular-line'].select('path'), angularLayout.showline, {\n    d: _this.pathSubplot(),\n    transform: strTranslate(cx, cy)\n  }).attr('stroke-width', angularLayout.linewidth).call(Color.stroke, angularLayout.linecolor);\n};\n\nproto.updateFx = function (fullLayout, polarLayout) {\n  if (!this.gd._context.staticPlot) {\n    this.updateAngularDrag(fullLayout);\n    this.updateRadialDrag(fullLayout, polarLayout, 0);\n    this.updateRadialDrag(fullLayout, polarLayout, 1);\n    this.updateMainDrag(fullLayout);\n  }\n};\n\nproto.updateMainDrag = function (fullLayout) {\n  var _this = this;\n\n  var gd = _this.gd;\n  var layers = _this.layers;\n  var zoomlayer = fullLayout._zoomlayer;\n  var MINZOOM = constants.MINZOOM;\n  var OFFEDGE = constants.OFFEDGE;\n  var radius = _this.radius;\n  var innerRadius = _this.innerRadius;\n  var cx = _this.cx;\n  var cy = _this.cy;\n  var cxx = _this.cxx;\n  var cyy = _this.cyy;\n  var sectorInRad = _this.sectorInRad;\n  var vangles = _this.vangles;\n  var radialAxis = _this.radialAxis;\n  var clampTiny = helpers.clampTiny;\n  var findXYatLength = helpers.findXYatLength;\n  var findEnclosingVertexAngles = helpers.findEnclosingVertexAngles;\n  var chw = constants.cornerHalfWidth;\n  var chl = constants.cornerLen / 2;\n  var scaleX;\n  var scaleY;\n  var mainDrag = dragBox.makeDragger(layers, 'path', 'maindrag', 'crosshair');\n  d3.select(mainDrag).attr('d', _this.pathSubplot()).attr('transform', strTranslate(cx, cy));\n  var dragOpts = {\n    element: mainDrag,\n    gd: gd,\n    subplot: _this.id,\n    plotinfo: {\n      id: _this.id,\n      xaxis: _this.xaxis,\n      yaxis: _this.yaxis\n    },\n    xaxes: [_this.xaxis],\n    yaxes: [_this.yaxis]\n  }; // mouse px position at drag start (0), move (1)\n\n  var x0, y0; // radial distance from circle center at drag start (0), move (1)\n\n  var r0, r1; // zoombox persistent quantities\n\n  var path0, dimmed, lum; // zoombox, corners elements\n\n  var zb, corners;\n\n  function norm(x, y) {\n    return Math.sqrt(x * x + y * y);\n  }\n\n  function xy2r(x, y) {\n    return norm(x - cxx, y - cyy);\n  }\n\n  function xy2a(x, y) {\n    return Math.atan2(cyy - y, x - cxx);\n  }\n\n  function ra2xy(r, a) {\n    return [r * Math.cos(a), r * Math.sin(-a)];\n  }\n\n  function pathCorner(r, a) {\n    if (r === 0) return _this.pathSector(2 * chw);\n    var da = chl / r;\n    var am = a - da;\n    var ap = a + da;\n    var rb = Math.max(0, Math.min(r, radius));\n    var rm = rb - chw;\n    var rp = rb + chw;\n    return 'M' + ra2xy(rm, am) + 'A' + [rm, rm] + ' 0,0,0 ' + ra2xy(rm, ap) + 'L' + ra2xy(rp, ap) + 'A' + [rp, rp] + ' 0,0,1 ' + ra2xy(rp, am) + 'Z';\n  } // (x,y) is the pt at middle of the va0 <-> va1 edge\n  //\n  // ... we could eventually add another mode for cursor\n  // angles 'close to' enough to a particular vertex.\n\n\n  function pathCornerForPolygons(r, va0, va1) {\n    if (r === 0) return _this.pathSector(2 * chw);\n    var xy0 = ra2xy(r, va0);\n    var xy1 = ra2xy(r, va1);\n    var x = clampTiny((xy0[0] + xy1[0]) / 2);\n    var y = clampTiny((xy0[1] + xy1[1]) / 2);\n    var innerPts, outerPts;\n\n    if (x && y) {\n      var m = y / x;\n      var mperp = -1 / m;\n      var midPts = findXYatLength(chw, m, x, y);\n      innerPts = findXYatLength(chl, mperp, midPts[0][0], midPts[0][1]);\n      outerPts = findXYatLength(chl, mperp, midPts[1][0], midPts[1][1]);\n    } else {\n      var dx, dy;\n\n      if (y) {\n        // horizontal handles\n        dx = chl;\n        dy = chw;\n      } else {\n        // vertical handles\n        dx = chw;\n        dy = chl;\n      }\n\n      innerPts = [[x - dx, y - dy], [x + dx, y - dy]];\n      outerPts = [[x - dx, y + dy], [x + dx, y + dy]];\n    }\n\n    return 'M' + innerPts.join('L') + 'L' + outerPts.reverse().join('L') + 'Z';\n  }\n\n  function zoomPrep() {\n    r0 = null;\n    r1 = null;\n    path0 = _this.pathSubplot();\n    dimmed = false;\n    var polarLayoutNow = gd._fullLayout[_this.id];\n    lum = tinycolor(polarLayoutNow.bgcolor).getLuminance();\n    zb = dragBox.makeZoombox(zoomlayer, lum, cx, cy, path0);\n    zb.attr('fill-rule', 'evenodd');\n    corners = dragBox.makeCorners(zoomlayer, cx, cy);\n    clearSelect(gd);\n  } // N.B. this sets scoped 'r0' and 'r1'\n  // return true if 'valid' zoom distance, false otherwise\n\n\n  function clampAndSetR0R1(rr0, rr1) {\n    rr1 = Math.max(Math.min(rr1, radius), innerRadius); // starting or ending drag near center (outer edge),\n    // clamps radial distance at origin (at r=radius)\n\n    if (rr0 < OFFEDGE) rr0 = 0;else if (radius - rr0 < OFFEDGE) rr0 = radius;else if (rr1 < OFFEDGE) rr1 = 0;else if (radius - rr1 < OFFEDGE) rr1 = radius; // make sure r0 < r1,\n    // to get correct fill pattern in path1 below\n\n    if (Math.abs(rr1 - rr0) > MINZOOM) {\n      if (rr0 < rr1) {\n        r0 = rr0;\n        r1 = rr1;\n      } else {\n        r0 = rr1;\n        r1 = rr0;\n      }\n\n      return true;\n    } else {\n      r0 = null;\n      r1 = null;\n      return false;\n    }\n  }\n\n  function applyZoomMove(path1, cpath) {\n    path1 = path1 || path0;\n    cpath = cpath || 'M0,0Z';\n    zb.attr('d', path1);\n    corners.attr('d', cpath);\n    dragBox.transitionZoombox(zb, corners, dimmed, lum);\n    dimmed = true;\n    var updateObj = {};\n    computeZoomUpdates(updateObj);\n    gd.emit('plotly_relayouting', updateObj);\n  }\n\n  function zoomMove(dx, dy) {\n    dx = dx * scaleX;\n    dy = dy * scaleY;\n    var x1 = x0 + dx;\n    var y1 = y0 + dy;\n    var rr0 = xy2r(x0, y0);\n    var rr1 = Math.min(xy2r(x1, y1), radius);\n    var a0 = xy2a(x0, y0);\n    var path1;\n    var cpath;\n\n    if (clampAndSetR0R1(rr0, rr1)) {\n      path1 = path0 + _this.pathSector(r1);\n      if (r0) path1 += _this.pathSector(r0); // keep 'starting' angle\n\n      cpath = pathCorner(r0, a0) + pathCorner(r1, a0);\n    }\n\n    applyZoomMove(path1, cpath);\n  }\n\n  function findPolygonRadius(x, y, va0, va1) {\n    var xy = helpers.findIntersectionXY(va0, va1, va0, [x - cxx, cyy - y]);\n    return norm(xy[0], xy[1]);\n  }\n\n  function zoomMoveForPolygons(dx, dy) {\n    var x1 = x0 + dx;\n    var y1 = y0 + dy;\n    var a0 = xy2a(x0, y0);\n    var a1 = xy2a(x1, y1);\n    var vangles0 = findEnclosingVertexAngles(a0, vangles);\n    var vangles1 = findEnclosingVertexAngles(a1, vangles);\n    var rr0 = findPolygonRadius(x0, y0, vangles0[0], vangles0[1]);\n    var rr1 = Math.min(findPolygonRadius(x1, y1, vangles1[0], vangles1[1]), radius);\n    var path1;\n    var cpath;\n\n    if (clampAndSetR0R1(rr0, rr1)) {\n      path1 = path0 + _this.pathSector(r1);\n      if (r0) path1 += _this.pathSector(r0); // keep 'starting' angle here too\n\n      cpath = [pathCornerForPolygons(r0, vangles0[0], vangles0[1]), pathCornerForPolygons(r1, vangles0[0], vangles0[1])].join(' ');\n    }\n\n    applyZoomMove(path1, cpath);\n  }\n\n  function zoomDone() {\n    dragBox.removeZoombox(gd);\n    if (r0 === null || r1 === null) return;\n    var updateObj = {};\n    computeZoomUpdates(updateObj);\n    dragBox.showDoubleClickNotifier(gd);\n    Registry.call('_guiRelayout', gd, updateObj);\n  }\n\n  function computeZoomUpdates(update) {\n    var rl = radialAxis._rl;\n    var m = (rl[1] - rl[0]) / (1 - innerRadius / radius) / radius;\n    var newRng = [rl[0] + (r0 - innerRadius) * m, rl[0] + (r1 - innerRadius) * m];\n    update[_this.id + '.radialaxis.range'] = newRng;\n  }\n\n  function zoomClick(numClicks, evt) {\n    var clickMode = gd._fullLayout.clickmode;\n    dragBox.removeZoombox(gd); // TODO double once vs twice logic (autorange vs fixed range)\n\n    if (numClicks === 2) {\n      var updateObj = {};\n\n      for (var k in _this.viewInitial) {\n        updateObj[_this.id + '.' + k] = _this.viewInitial[k];\n      }\n\n      gd.emit('plotly_doubleclick', null);\n      Registry.call('_guiRelayout', gd, updateObj);\n    }\n\n    if (clickMode.indexOf('select') > -1 && numClicks === 1) {\n      selectOnClick(evt, gd, [_this.xaxis], [_this.yaxis], _this.id, dragOpts);\n    }\n\n    if (clickMode.indexOf('event') > -1) {\n      Fx.click(gd, evt, _this.id);\n    }\n  }\n\n  dragOpts.prepFn = function (evt, startX, startY) {\n    var dragModeNow = gd._fullLayout.dragmode;\n    var bbox = mainDrag.getBoundingClientRect();\n\n    gd._fullLayout._calcInverseTransform(gd);\n\n    var inverse = gd._fullLayout._invTransform;\n    scaleX = gd._fullLayout._invScaleX;\n    scaleY = gd._fullLayout._invScaleY;\n    var transformedCoords = Lib.apply3DTransform(inverse)(startX - bbox.left, startY - bbox.top);\n    x0 = transformedCoords[0];\n    y0 = transformedCoords[1]; // need to offset x/y as bbox center does not\n    // match origin for asymmetric polygons\n\n    if (vangles) {\n      var offset = helpers.findPolygonOffset(radius, sectorInRad[0], sectorInRad[1], vangles);\n      x0 += cxx + offset[0];\n      y0 += cyy + offset[1];\n    }\n\n    switch (dragModeNow) {\n      case 'zoom':\n        if (vangles) {\n          dragOpts.moveFn = zoomMoveForPolygons;\n        } else {\n          dragOpts.moveFn = zoomMove;\n        }\n\n        dragOpts.clickFn = zoomClick;\n        dragOpts.doneFn = zoomDone;\n        zoomPrep(evt, startX, startY);\n        break;\n\n      case 'select':\n      case 'lasso':\n        prepSelect(evt, startX, startY, dragOpts, dragModeNow);\n        break;\n    }\n  };\n\n  mainDrag.onmousemove = function (evt) {\n    Fx.hover(gd, evt, _this.id);\n    gd._fullLayout._lasthover = mainDrag;\n    gd._fullLayout._hoversubplot = _this.id;\n  };\n\n  mainDrag.onmouseout = function (evt) {\n    if (gd._dragging) return;\n    dragElement.unhover(gd, evt);\n  };\n\n  dragElement.init(dragOpts);\n};\n\nproto.updateRadialDrag = function (fullLayout, polarLayout, rngIndex) {\n  var _this = this;\n\n  var gd = _this.gd;\n  var layers = _this.layers;\n  var radius = _this.radius;\n  var innerRadius = _this.innerRadius;\n  var cx = _this.cx;\n  var cy = _this.cy;\n  var radialAxis = _this.radialAxis;\n  var bl = constants.radialDragBoxSize;\n  var bl2 = bl / 2;\n  if (!radialAxis.visible) return;\n  var angle0 = deg2rad(_this.radialAxisAngle);\n  var rl = radialAxis._rl;\n  var rl0 = rl[0];\n  var rl1 = rl[1];\n  var rbase = rl[rngIndex];\n  var m = 0.75 * (rl[1] - rl[0]) / (1 - polarLayout.hole) / radius;\n  var tx, ty, className;\n\n  if (rngIndex) {\n    tx = cx + (radius + bl2) * Math.cos(angle0);\n    ty = cy - (radius + bl2) * Math.sin(angle0);\n    className = 'radialdrag';\n  } else {\n    // the 'inner' box can get called:\n    // - when polar.hole>0\n    // - when polar.sector isn't a full circle\n    // otherwise it is hidden behind the main drag.\n    tx = cx + (innerRadius - bl2) * Math.cos(angle0);\n    ty = cy - (innerRadius - bl2) * Math.sin(angle0);\n    className = 'radialdrag-inner';\n  }\n\n  var radialDrag = dragBox.makeRectDragger(layers, className, 'crosshair', -bl2, -bl2, bl, bl);\n  var dragOpts = {\n    element: radialDrag,\n    gd: gd\n  };\n  updateElement(d3.select(radialDrag), radialAxis.visible && innerRadius < radius, {\n    transform: strTranslate(tx, ty)\n  }); // move function (either rotate or re-range flavor)\n\n  var moveFn2; // rotate angle on done\n\n  var angle1; // re-range range[1] (or range[0]) on done\n\n  var rprime;\n\n  function moveFn(dx, dy) {\n    if (moveFn2) {\n      moveFn2(dx, dy);\n    } else {\n      var dvec = [dx, -dy];\n      var rvec = [Math.cos(angle0), Math.sin(angle0)];\n      var comp = Math.abs(Lib.dot(dvec, rvec) / Math.sqrt(Lib.dot(dvec, dvec))); // mostly perpendicular motions rotate,\n      // mostly parallel motions re-range\n\n      if (!isNaN(comp)) {\n        moveFn2 = comp < 0.5 ? rotateMove : rerangeMove;\n      }\n    }\n\n    var update = {};\n    computeRadialAxisUpdates(update);\n    gd.emit('plotly_relayouting', update);\n  }\n\n  function computeRadialAxisUpdates(update) {\n    if (angle1 !== null) {\n      update[_this.id + '.radialaxis.angle'] = angle1;\n    } else if (rprime !== null) {\n      update[_this.id + '.radialaxis.range[' + rngIndex + ']'] = rprime;\n    }\n  }\n\n  function doneFn() {\n    if (angle1 !== null) {\n      Registry.call('_guiRelayout', gd, _this.id + '.radialaxis.angle', angle1);\n    } else if (rprime !== null) {\n      Registry.call('_guiRelayout', gd, _this.id + '.radialaxis.range[' + rngIndex + ']', rprime);\n    }\n  }\n\n  function rotateMove(dx, dy) {\n    // disable for inner drag boxes\n    if (rngIndex === 0) return;\n    var x1 = tx + dx;\n    var y1 = ty + dy;\n    angle1 = Math.atan2(cy - y1, x1 - cx);\n    if (_this.vangles) angle1 = snapToVertexAngle(angle1, _this.vangles);\n    angle1 = rad2deg(angle1);\n    var transform = strTranslate(cx, cy) + strRotate(-angle1);\n    layers['radial-axis'].attr('transform', transform);\n    layers['radial-line'].select('line').attr('transform', transform);\n    var fullLayoutNow = _this.gd._fullLayout;\n    var polarLayoutNow = fullLayoutNow[_this.id];\n\n    _this.updateRadialAxisTitle(fullLayoutNow, polarLayoutNow, angle1);\n  }\n\n  function rerangeMove(dx, dy) {\n    // project (dx, dy) unto unit radial axis vector\n    var dr = Lib.dot([dx, -dy], [Math.cos(angle0), Math.sin(angle0)]);\n    rprime = rbase - m * dr; // make sure rprime does not change the range[0] -> range[1] sign\n\n    if (m > 0 !== (rngIndex ? rprime > rl0 : rprime < rl1)) {\n      rprime = null;\n      return;\n    }\n\n    var fullLayoutNow = gd._fullLayout;\n    var polarLayoutNow = fullLayoutNow[_this.id]; // update radial range -> update c2g -> update _m,_b\n\n    radialAxis.range[rngIndex] = rprime;\n    radialAxis._rl[rngIndex] = rprime;\n\n    _this.updateRadialAxis(fullLayoutNow, polarLayoutNow);\n\n    _this.xaxis.setRange();\n\n    _this.xaxis.setScale();\n\n    _this.yaxis.setRange();\n\n    _this.yaxis.setScale();\n\n    var hasRegl = false;\n\n    for (var traceType in _this.traceHash) {\n      var moduleCalcData = _this.traceHash[traceType];\n      var moduleCalcDataVisible = Lib.filterVisible(moduleCalcData);\n      var _module = moduleCalcData[0][0].trace._module;\n\n      _module.plot(gd, _this, moduleCalcDataVisible, polarLayoutNow);\n\n      if (Registry.traceIs(traceType, 'gl') && moduleCalcDataVisible.length) hasRegl = true;\n    }\n\n    if (hasRegl) {\n      clearGlCanvases(gd);\n      redrawReglTraces(gd);\n    }\n  }\n\n  dragOpts.prepFn = function () {\n    moveFn2 = null;\n    angle1 = null;\n    rprime = null;\n    dragOpts.moveFn = moveFn;\n    dragOpts.doneFn = doneFn;\n    clearSelect(gd);\n  };\n\n  dragOpts.clampFn = function (dx, dy) {\n    if (Math.sqrt(dx * dx + dy * dy) < constants.MINDRAG) {\n      dx = 0;\n      dy = 0;\n    }\n\n    return [dx, dy];\n  };\n\n  dragElement.init(dragOpts);\n};\n\nproto.updateAngularDrag = function (fullLayout) {\n  var _this = this;\n\n  var gd = _this.gd;\n  var layers = _this.layers;\n  var radius = _this.radius;\n  var angularAxis = _this.angularAxis;\n  var cx = _this.cx;\n  var cy = _this.cy;\n  var cxx = _this.cxx;\n  var cyy = _this.cyy;\n  var dbs = constants.angularDragBoxSize;\n  var angularDrag = dragBox.makeDragger(layers, 'path', 'angulardrag', 'move');\n  var dragOpts = {\n    element: angularDrag,\n    gd: gd\n  };\n  d3.select(angularDrag).attr('d', _this.pathAnnulus(radius, radius + dbs)).attr('transform', strTranslate(cx, cy)).call(setCursor, 'move');\n\n  function xy2a(x, y) {\n    return Math.atan2(cyy + dbs - y, x - cxx - dbs);\n  } // scatter trace, points and textpoints selections\n\n\n  var scatterTraces = layers.frontplot.select('.scatterlayer').selectAll('.trace');\n  var scatterPoints = scatterTraces.selectAll('.point');\n  var scatterTextPoints = scatterTraces.selectAll('.textpoint'); // mouse px position at drag start (0), move (1)\n\n  var x0, y0; // angular axis angle rotation at drag start (0), move (1)\n\n  var rot0, rot1; // induced radial axis rotation (only used on polygon grids)\n\n  var rrot1; // angle about circle center at drag start\n\n  var a0;\n\n  function moveFn(dx, dy) {\n    var fullLayoutNow = _this.gd._fullLayout;\n    var polarLayoutNow = fullLayoutNow[_this.id];\n    var x1 = x0 + dx * fullLayout._invScaleX;\n    var y1 = y0 + dy * fullLayout._invScaleY;\n    var a1 = xy2a(x1, y1);\n    var da = rad2deg(a1 - a0);\n    rot1 = rot0 + da;\n    layers.frontplot.attr('transform', strTranslate(_this.xOffset2, _this.yOffset2) + strRotate([-da, cxx, cyy]));\n\n    if (_this.vangles) {\n      rrot1 = _this.radialAxisAngle + da;\n      var trans = strTranslate(cx, cy) + strRotate(-da);\n      var trans2 = strTranslate(cx, cy) + strRotate(-rrot1);\n      layers.bg.attr('transform', trans);\n      layers['radial-grid'].attr('transform', trans);\n      layers['radial-axis'].attr('transform', trans2);\n      layers['radial-line'].select('line').attr('transform', trans2);\n\n      _this.updateRadialAxisTitle(fullLayoutNow, polarLayoutNow, rrot1);\n    } else {\n      _this.clipPaths.forTraces.select('path').attr('transform', strTranslate(cxx, cyy) + strRotate(da));\n    } // 'un-rotate' marker and text points\n\n\n    scatterPoints.each(function () {\n      var sel = d3.select(this);\n      var xy = Drawing.getTranslate(sel);\n      sel.attr('transform', strTranslate(xy.x, xy.y) + strRotate([da]));\n    });\n    scatterTextPoints.each(function () {\n      var sel = d3.select(this);\n      var tx = sel.select('text');\n      var xy = Drawing.getTranslate(sel); // N.B rotate -> translate ordering matters\n\n      sel.attr('transform', strRotate([da, tx.attr('x'), tx.attr('y')]) + strTranslate(xy.x, xy.y));\n    }); // update rotation -> range -> _m,_b\n\n    angularAxis.rotation = Lib.modHalf(rot1, 360);\n\n    _this.updateAngularAxis(fullLayoutNow, polarLayoutNow);\n\n    if (_this._hasClipOnAxisFalse && !Lib.isFullCircle(_this.sectorInRad)) {\n      scatterTraces.call(Drawing.hideOutsideRangePoints, _this);\n    }\n\n    var hasRegl = false;\n\n    for (var traceType in _this.traceHash) {\n      if (Registry.traceIs(traceType, 'gl')) {\n        var moduleCalcData = _this.traceHash[traceType];\n        var moduleCalcDataVisible = Lib.filterVisible(moduleCalcData);\n        var _module = moduleCalcData[0][0].trace._module;\n\n        _module.plot(gd, _this, moduleCalcDataVisible, polarLayoutNow);\n\n        if (moduleCalcDataVisible.length) hasRegl = true;\n      }\n    }\n\n    if (hasRegl) {\n      clearGlCanvases(gd);\n      redrawReglTraces(gd);\n    }\n\n    var update = {};\n    computeRotationUpdates(update);\n    gd.emit('plotly_relayouting', update);\n  }\n\n  function computeRotationUpdates(updateObj) {\n    updateObj[_this.id + '.angularaxis.rotation'] = rot1;\n\n    if (_this.vangles) {\n      updateObj[_this.id + '.radialaxis.angle'] = rrot1;\n    }\n  }\n\n  function doneFn() {\n    scatterTextPoints.select('text').attr('transform', null);\n    var updateObj = {};\n    computeRotationUpdates(updateObj);\n    Registry.call('_guiRelayout', gd, updateObj);\n  }\n\n  dragOpts.prepFn = function (evt, startX, startY) {\n    var polarLayoutNow = fullLayout[_this.id];\n    rot0 = polarLayoutNow.angularaxis.rotation;\n    var bbox = angularDrag.getBoundingClientRect();\n    x0 = startX - bbox.left;\n    y0 = startY - bbox.top;\n\n    gd._fullLayout._calcInverseTransform(gd);\n\n    var transformedCoords = Lib.apply3DTransform(fullLayout._invTransform)(x0, y0);\n    x0 = transformedCoords[0];\n    y0 = transformedCoords[1];\n    a0 = xy2a(x0, y0);\n    dragOpts.moveFn = moveFn;\n    dragOpts.doneFn = doneFn;\n    clearSelect(gd);\n  }; // I don't what we should do in this case, skip we now\n\n\n  if (_this.vangles && !Lib.isFullCircle(_this.sectorInRad)) {\n    dragOpts.prepFn = Lib.noop;\n    setCursor(d3.select(angularDrag), null);\n  }\n\n  dragElement.init(dragOpts);\n};\n\nproto.isPtInside = function (d) {\n  var sectorInRad = this.sectorInRad;\n  var vangles = this.vangles;\n  var thetag = this.angularAxis.c2g(d.theta);\n  var radialAxis = this.radialAxis;\n  var r = radialAxis.c2l(d.r);\n  var rl = radialAxis._rl;\n  var fn = vangles ? helpers.isPtInsidePolygon : Lib.isPtInsideSector;\n  return fn(r, thetag, rl, sectorInRad, vangles);\n};\n\nproto.pathArc = function (r) {\n  var sectorInRad = this.sectorInRad;\n  var vangles = this.vangles;\n  var fn = vangles ? helpers.pathPolygon : Lib.pathArc;\n  return fn(r, sectorInRad[0], sectorInRad[1], vangles);\n};\n\nproto.pathSector = function (r) {\n  var sectorInRad = this.sectorInRad;\n  var vangles = this.vangles;\n  var fn = vangles ? helpers.pathPolygon : Lib.pathSector;\n  return fn(r, sectorInRad[0], sectorInRad[1], vangles);\n};\n\nproto.pathAnnulus = function (r0, r1) {\n  var sectorInRad = this.sectorInRad;\n  var vangles = this.vangles;\n  var fn = vangles ? helpers.pathPolygonAnnulus : Lib.pathAnnulus;\n  return fn(r0, r1, sectorInRad[0], sectorInRad[1], vangles);\n};\n\nproto.pathSubplot = function () {\n  var r0 = this.innerRadius;\n  var r1 = this.radius;\n  return r0 ? this.pathAnnulus(r0, r1) : this.pathSector(r1);\n};\n\nproto.fillViewInitialKey = function (key, val) {\n  if (!(key in this.viewInitial)) {\n    this.viewInitial[key] = val;\n  }\n};\n\nfunction strTickLayout(axLayout) {\n  var out = axLayout.ticks + String(axLayout.ticklen) + String(axLayout.showticklabels);\n  if ('side' in axLayout) out += axLayout.side;\n  return out;\n} // Finds the bounding box of a given circle sector,\n// inspired by https://math.stackexchange.com/q/1852703\n//\n// assumes:\n// - sector[0] < sector[1]\n// - counterclockwise rotation\n\n\nfunction computeSectorBBox(sector) {\n  var s0 = sector[0];\n  var s1 = sector[1];\n  var arc = s1 - s0;\n  var a0 = mod(s0, 360);\n  var a1 = a0 + arc;\n  var ax0 = Math.cos(deg2rad(a0));\n  var ay0 = Math.sin(deg2rad(a0));\n  var ax1 = Math.cos(deg2rad(a1));\n  var ay1 = Math.sin(deg2rad(a1));\n  var x0, y0, x1, y1;\n\n  if (a0 <= 90 && a1 >= 90 || a0 > 90 && a1 >= 450) {\n    y1 = 1;\n  } else if (ay0 <= 0 && ay1 <= 0) {\n    y1 = 0;\n  } else {\n    y1 = Math.max(ay0, ay1);\n  }\n\n  if (a0 <= 180 && a1 >= 180 || a0 > 180 && a1 >= 540) {\n    x0 = -1;\n  } else if (ax0 >= 0 && ax1 >= 0) {\n    x0 = 0;\n  } else {\n    x0 = Math.min(ax0, ax1);\n  }\n\n  if (a0 <= 270 && a1 >= 270 || a0 > 270 && a1 >= 630) {\n    y0 = -1;\n  } else if (ay0 >= 0 && ay1 >= 0) {\n    y0 = 0;\n  } else {\n    y0 = Math.min(ay0, ay1);\n  }\n\n  if (a1 >= 360) {\n    x1 = 1;\n  } else if (ax0 <= 0 && ax1 <= 0) {\n    x1 = 0;\n  } else {\n    x1 = Math.max(ax0, ax1);\n  }\n\n  return [x0, y0, x1, y1];\n}\n\nfunction snapToVertexAngle(a, vangles) {\n  var fn = function fn(v) {\n    return Lib.angleDist(a, v);\n  };\n\n  var ind = Lib.findIndexOfMin(vangles, fn);\n  return vangles[ind];\n}\n\nfunction updateElement(sel, showAttr, attrs) {\n  if (showAttr) {\n    sel.attr('display', null);\n    sel.attr(attrs);\n  } else if (sel) {\n    sel.attr('display', 'none');\n  }\n\n  return sel;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/plots/polar/polar.js"],"names":["d3","require","tinycolor","Registry","Lib","strRotate","strTranslate","Color","Drawing","Plots","Axes","setConvertCartesian","setConvertPolar","doAutoRange","dragBox","dragElement","Fx","Titles","prepSelect","selectOnClick","clearSelect","setCursor","clearGlCanvases","redrawReglTraces","MID_SHIFT","constants","helpers","_","mod","deg2rad","rad2deg","Polar","gd","id","_hasClipOnAxisFalse","vangles","radialAxisAngle","traceHash","layers","clipPaths","clipIds","viewInitial","fullLayout","_fullLayout","clipIdBase","_uid","forTraces","_clips","append","attr","framework","_polarlayer","radialTickLayout","angularTickLayout","proto","prototype","module","exports","createPolar","plot","polarCalcData","_this","polarLayout","i","length","trace","cliponaxis","updateLayers","updateLayout","generalUpdatePerTraceModule","updateFx","radialLayout","radialaxis","angularLayout","angularaxis","layerNames","frontPlotIndex","indexOf","layerData","slice","isAngularAxisBelowTraces","layer","isRadialAxisBelowTraces","push","join","selectAll","data","String","enter","d","each","sel","select","classed","bg","style","order","gs","_size","xDomain","domain","x","yDomain","y","xOffset","l","w","yOffset","t","h","xLength","yLength","sector","sectorInRad","map","sectorBBox","computeSectorBBox","dxSectorBBox","dySectorBBox","arDomain","arSector","Math","abs","xLength2","yLength2","xDomain2","yDomain2","gap","xOffset2","yOffset2","radius","innerRadius","hole","cx","cy","cxx","cyy","radialAxis","mockAxis","_id","side","counterclockwise","clockwise","_realSide","angularAxis","PI","autorange","updateAngularAxis","updateRadialAxis","updateRadialAxisTitle","xaxis","mockCartesianAxis","yaxis","dPath","pathSubplot","frontplot","call","setClipUrl","fill","bgcolor","axLayout","opts","ax","extendFlat","axId","type","bboxIndices","setRange","ind","rl","_rl","drl","range","isPtWithinRange","isPtInside","setScale","rng","_input","r2l","a0","hasRoomForIt","fillViewInitialKey","angle","setGeometry","tickangle","transFn","l2p","gridPathFn","pathArc","r2p","newTickLayout","strTickLayout","remove","vals","calcTicks","valsClipped","clipEnds","tickSign","getTickSigns","drawTicks","path","makeTickPath","crisp","drawGrid","noop","drawLabels","labelFns","makeLabelFns","snapToVertexAngle","tLayer","tLayer2","updateElement","showticklabels","ticks","transform","showgrid","showline","x1","y1","x2","y2","linewidth","stroke","linecolor","_angle","titleClass","undefined","angleRad","cosa","cos","sina","sin","pad","title","bBox","node","height","ts","font","size","draw","propContainer","propName","placeholder","attributes","rotate","rotation","t2g","thetaunit","tick0","dtick","_transFn","rad","transFn2","cosRad","sinRad","out","labelStandoff","xFn","yFn","ff","fontSize","anchorFn","heightFn","a","gridshape","angleDelta","reverse","filter","isAngleInsideSector","visible","ticklen","repositionOnUpdate","_context","staticPlot","updateAngularDrag","updateRadialDrag","updateMainDrag","zoomlayer","_zoomlayer","MINZOOM","OFFEDGE","clampTiny","findXYatLength","findEnclosingVertexAngles","chw","cornerHalfWidth","chl","cornerLen","scaleX","scaleY","mainDrag","makeDragger","dragOpts","element","subplot","plotinfo","xaxes","yaxes","x0","y0","r0","r1","path0","dimmed","lum","zb","corners","norm","sqrt","xy2r","xy2a","atan2","ra2xy","r","pathCorner","pathSector","da","am","ap","rb","max","min","rm","rp","pathCornerForPolygons","va0","va1","xy0","xy1","innerPts","outerPts","m","mperp","midPts","dx","dy","zoomPrep","polarLayoutNow","getLuminance","makeZoombox","makeCorners","clampAndSetR0R1","rr0","rr1","applyZoomMove","path1","cpath","transitionZoombox","updateObj","computeZoomUpdates","emit","zoomMove","findPolygonRadius","xy","findIntersectionXY","zoomMoveForPolygons","a1","vangles0","vangles1","zoomDone","removeZoombox","showDoubleClickNotifier","update","newRng","zoomClick","numClicks","evt","clickMode","clickmode","k","click","prepFn","startX","startY","dragModeNow","dragmode","bbox","getBoundingClientRect","_calcInverseTransform","inverse","_invTransform","_invScaleX","_invScaleY","transformedCoords","apply3DTransform","left","top","offset","findPolygonOffset","moveFn","clickFn","doneFn","onmousemove","hover","_lasthover","_hoversubplot","onmouseout","_dragging","unhover","init","rngIndex","bl","radialDragBoxSize","bl2","angle0","rl0","rl1","rbase","tx","ty","className","radialDrag","makeRectDragger","moveFn2","angle1","rprime","dvec","rvec","comp","dot","isNaN","rotateMove","rerangeMove","computeRadialAxisUpdates","fullLayoutNow","dr","hasRegl","traceType","moduleCalcData","moduleCalcDataVisible","filterVisible","_module","traceIs","clampFn","MINDRAG","dbs","angularDragBoxSize","angularDrag","pathAnnulus","scatterTraces","scatterPoints","scatterTextPoints","rot0","rot1","rrot1","trans","trans2","getTranslate","modHalf","isFullCircle","hideOutsideRangePoints","computeRotationUpdates","thetag","c2g","theta","c2l","fn","isPtInsidePolygon","isPtInsideSector","pathPolygon","pathPolygonAnnulus","key","val","s0","s1","arc","ax0","ay0","ax1","ay1","v","angleDist","findIndexOfMin","showAttr","attrs"],"mappings":"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","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar tinycolor = require('tinycolor2');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar strRotate = Lib.strRotate;\nvar strTranslate = Lib.strTranslate;\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Plots = require('../plots');\nvar Axes = require('../../plots/cartesian/axes');\nvar setConvertCartesian = require('../cartesian/set_convert');\nvar setConvertPolar = require('./set_convert');\nvar doAutoRange = require('../cartesian/autorange').doAutoRange;\nvar dragBox = require('../cartesian/dragbox');\nvar dragElement = require('../../components/dragelement');\nvar Fx = require('../../components/fx');\nvar Titles = require('../../components/titles');\nvar prepSelect = require('../cartesian/select').prepSelect;\nvar selectOnClick = require('../cartesian/select').selectOnClick;\nvar clearSelect = require('../cartesian/select').clearSelect;\nvar setCursor = require('../../lib/setcursor');\nvar clearGlCanvases = require('../../lib/clear_gl_canvases');\nvar redrawReglTraces = require('../../plot_api/subroutines').redrawReglTraces;\n\nvar MID_SHIFT = require('../../constants/alignment').MID_SHIFT;\nvar constants = require('./constants');\nvar helpers = require('./helpers');\n\nvar _ = Lib._;\nvar mod = Lib.mod;\nvar deg2rad = Lib.deg2rad;\nvar rad2deg = Lib.rad2deg;\n\nfunction Polar(gd, id) {\n    this.id = id;\n    this.gd = gd;\n\n    this._hasClipOnAxisFalse = null;\n    this.vangles = null;\n    this.radialAxisAngle = null;\n    this.traceHash = {};\n    this.layers = {};\n    this.clipPaths = {};\n    this.clipIds = {};\n    this.viewInitial = {};\n\n    var fullLayout = gd._fullLayout;\n    var clipIdBase = 'clip' + fullLayout._uid + id;\n\n    this.clipIds.forTraces = clipIdBase + '-for-traces';\n    this.clipPaths.forTraces = fullLayout._clips.append('clipPath')\n        .attr('id', this.clipIds.forTraces);\n    this.clipPaths.forTraces.append('path');\n\n    this.framework = fullLayout._polarlayer.append('g')\n        .attr('class', id);\n\n    // unfortunately, we have to keep track of some axis tick settings\n    // as polar subplots do not implement the 'ticks' editType\n    this.radialTickLayout = null;\n    this.angularTickLayout = null;\n}\n\nvar proto = Polar.prototype;\n\nmodule.exports = function createPolar(gd, id) {\n    return new Polar(gd, id);\n};\n\nproto.plot = function(polarCalcData, fullLayout) {\n    var _this = this;\n    var polarLayout = fullLayout[_this.id];\n\n    _this._hasClipOnAxisFalse = false;\n    for(var i = 0; i < polarCalcData.length; i++) {\n        var trace = polarCalcData[i][0].trace;\n        if(trace.cliponaxis === false) {\n            _this._hasClipOnAxisFalse = true;\n            break;\n        }\n    }\n\n    _this.updateLayers(fullLayout, polarLayout);\n    _this.updateLayout(fullLayout, polarLayout);\n    Plots.generalUpdatePerTraceModule(_this.gd, _this, polarCalcData, polarLayout);\n    _this.updateFx(fullLayout, polarLayout);\n};\n\nproto.updateLayers = function(fullLayout, polarLayout) {\n    var _this = this;\n    var layers = _this.layers;\n    var radialLayout = polarLayout.radialaxis;\n    var angularLayout = polarLayout.angularaxis;\n    var layerNames = constants.layerNames;\n\n    var frontPlotIndex = layerNames.indexOf('frontplot');\n    var layerData = layerNames.slice(0, frontPlotIndex);\n    var isAngularAxisBelowTraces = angularLayout.layer === 'below traces';\n    var isRadialAxisBelowTraces = radialLayout.layer === 'below traces';\n\n    if(isAngularAxisBelowTraces) layerData.push('angular-line');\n    if(isRadialAxisBelowTraces) layerData.push('radial-line');\n    if(isAngularAxisBelowTraces) layerData.push('angular-axis');\n    if(isRadialAxisBelowTraces) layerData.push('radial-axis');\n\n    layerData.push('frontplot');\n\n    if(!isAngularAxisBelowTraces) layerData.push('angular-line');\n    if(!isRadialAxisBelowTraces) layerData.push('radial-line');\n    if(!isAngularAxisBelowTraces) layerData.push('angular-axis');\n    if(!isRadialAxisBelowTraces) layerData.push('radial-axis');\n\n    var join = _this.framework.selectAll('.polarsublayer')\n        .data(layerData, String);\n\n    join.enter().append('g')\n        .attr('class', function(d) { return 'polarsublayer ' + d;})\n        .each(function(d) {\n            var sel = layers[d] = d3.select(this);\n\n            switch(d) {\n                case 'frontplot':\n                    // TODO add option to place in 'backplot' layer??\n                    sel.append('g').classed('barlayer', true);\n                    sel.append('g').classed('scatterlayer', true);\n                    break;\n                case 'backplot':\n                    sel.append('g').classed('maplayer', true);\n                    break;\n                case 'plotbg':\n                    layers.bg = sel.append('path');\n                    break;\n                case 'radial-grid':\n                    sel.style('fill', 'none');\n                    break;\n                case 'angular-grid':\n                    sel.style('fill', 'none');\n                    break;\n                case 'radial-line':\n                    sel.append('line').style('fill', 'none');\n                    break;\n                case 'angular-line':\n                    sel.append('path').style('fill', 'none');\n                    break;\n            }\n        });\n\n    join.order();\n};\n\n/* Polar subplots juggle with 6 'axis objects' (!), these are:\n *\n * - polarLayout.radialaxis (aka radialLayout in this file):\n * - polarLayout.angularaxis (aka angularLayout in this file):\n *   used for data -> calcdata conversions (aka d2c) during the calc step\n *\n * - this.radialAxis\n *   extends polarLayout.radialaxis, adds mocked 'domain' and\n *   few other keys in order to reuse Cartesian doAutoRange and the Axes\n *   drawing routines.\n *   used for calcdata -> geometric conversions (aka c2g) during the plot step\n *   + setGeometry setups ax.c2g for given ax.range\n *   + setScale setups ax._m,ax._b for given ax.range\n *\n * - this.angularAxis\n *   extends polarLayout.angularaxis, adds mocked 'range' and 'domain' and\n *   a few other keys in order to reuse the Axes drawing routines.\n *   used for calcdata -> geometric conversions (aka c2g) during the plot step\n *   + setGeometry setups ax.c2g given ax.rotation, ax.direction & ax._categories,\n *                 and mocks ax.range\n *   + setScale setups ax._m,ax._b with that mocked ax.range\n *\n * - this.xaxis\n * - this.yaxis\n *   setup so that polar traces can reuse plot methods of Cartesian traces\n *   which mostly rely on 2pixel methods (e.g ax.c2p)\n */\nproto.updateLayout = function(fullLayout, polarLayout) {\n    var _this = this;\n    var layers = _this.layers;\n    var gs = fullLayout._size;\n\n    // axis attributes\n    var radialLayout = polarLayout.radialaxis;\n    var angularLayout = polarLayout.angularaxis;\n    // layout domains\n    var xDomain = polarLayout.domain.x;\n    var yDomain = polarLayout.domain.y;\n    // offsets from paper edge to layout domain box\n    _this.xOffset = gs.l + gs.w * xDomain[0];\n    _this.yOffset = gs.t + gs.h * (1 - yDomain[1]);\n    // lengths of the layout domain box\n    var xLength = _this.xLength = gs.w * (xDomain[1] - xDomain[0]);\n    var yLength = _this.yLength = gs.h * (yDomain[1] - yDomain[0]);\n    // sector to plot\n    var sector = polarLayout.sector;\n    _this.sectorInRad = sector.map(deg2rad);\n    var sectorBBox = _this.sectorBBox = computeSectorBBox(sector);\n    var dxSectorBBox = sectorBBox[2] - sectorBBox[0];\n    var dySectorBBox = sectorBBox[3] - sectorBBox[1];\n    // aspect ratios\n    var arDomain = yLength / xLength;\n    var arSector = Math.abs(dySectorBBox / dxSectorBBox);\n    // actual lengths and domains of subplot box\n    var xLength2, yLength2;\n    var xDomain2, yDomain2;\n    var gap;\n    if(arDomain > arSector) {\n        xLength2 = xLength;\n        yLength2 = xLength * arSector;\n        gap = (yLength - yLength2) / gs.h / 2;\n        xDomain2 = [xDomain[0], xDomain[1]];\n        yDomain2 = [yDomain[0] + gap, yDomain[1] - gap];\n    } else {\n        xLength2 = yLength / arSector;\n        yLength2 = yLength;\n        gap = (xLength - xLength2) / gs.w / 2;\n        xDomain2 = [xDomain[0] + gap, xDomain[1] - gap];\n        yDomain2 = [yDomain[0], yDomain[1]];\n    }\n    _this.xLength2 = xLength2;\n    _this.yLength2 = yLength2;\n    _this.xDomain2 = xDomain2;\n    _this.yDomain2 = yDomain2;\n    // actual offsets from paper edge to the subplot box top-left corner\n    var xOffset2 = _this.xOffset2 = gs.l + gs.w * xDomain2[0];\n    var yOffset2 = _this.yOffset2 = gs.t + gs.h * (1 - yDomain2[1]);\n    // circle radius in px\n    var radius = _this.radius = xLength2 / dxSectorBBox;\n    // 'inner' radius in px (when polar.hole is set)\n    var innerRadius = _this.innerRadius = polarLayout.hole * radius;\n    // circle center position in px\n    var cx = _this.cx = xOffset2 - radius * sectorBBox[0];\n    var cy = _this.cy = yOffset2 + radius * sectorBBox[3];\n    // circle center in the coordinate system of plot area\n    var cxx = _this.cxx = cx - xOffset2;\n    var cyy = _this.cyy = cy - yOffset2;\n\n    _this.radialAxis = _this.mockAxis(fullLayout, polarLayout, radialLayout, {\n        // make this an 'x' axis to make positioning (especially rotation) easier\n        _id: 'x',\n        // convert to 'x' axis equivalent\n        side: {\n            counterclockwise: 'top',\n            clockwise: 'bottom'\n        }[radialLayout.side],\n        // keep track of real side\n        _realSide: radialLayout.side,\n        // spans length 1 radius\n        domain: [innerRadius / gs.w, radius / gs.w]\n    });\n\n    _this.angularAxis = _this.mockAxis(fullLayout, polarLayout, angularLayout, {\n        side: 'right',\n        // to get auto nticks right\n        domain: [0, Math.PI],\n        // don't pass through autorange logic\n        autorange: false\n    });\n\n    _this.doAutoRange(fullLayout, polarLayout);\n    // N.B. this sets _this.vangles\n    _this.updateAngularAxis(fullLayout, polarLayout);\n    // N.B. this sets _this.radialAxisAngle\n    _this.updateRadialAxis(fullLayout, polarLayout);\n    _this.updateRadialAxisTitle(fullLayout, polarLayout);\n\n    _this.xaxis = _this.mockCartesianAxis(fullLayout, polarLayout, {\n        _id: 'x',\n        domain: xDomain2\n    });\n\n    _this.yaxis = _this.mockCartesianAxis(fullLayout, polarLayout, {\n        _id: 'y',\n        domain: yDomain2\n    });\n\n    var dPath = _this.pathSubplot();\n\n    _this.clipPaths.forTraces.select('path')\n        .attr('d', dPath)\n        .attr('transform', strTranslate(cxx, cyy));\n\n    layers.frontplot\n        .attr('transform', strTranslate(xOffset2, yOffset2))\n        .call(Drawing.setClipUrl, _this._hasClipOnAxisFalse ? null : _this.clipIds.forTraces, _this.gd);\n\n    layers.bg\n        .attr('d', dPath)\n        .attr('transform', strTranslate(cx, cy))\n        .call(Color.fill, polarLayout.bgcolor);\n};\n\nproto.mockAxis = function(fullLayout, polarLayout, axLayout, opts) {\n    var ax = Lib.extendFlat({}, axLayout, opts);\n    setConvertPolar(ax, polarLayout, fullLayout);\n    return ax;\n};\n\nproto.mockCartesianAxis = function(fullLayout, polarLayout, opts) {\n    var _this = this;\n    var axId = opts._id;\n\n    var ax = Lib.extendFlat({type: 'linear'}, opts);\n    setConvertCartesian(ax, fullLayout);\n\n    var bboxIndices = {\n        x: [0, 2],\n        y: [1, 3]\n    };\n\n    ax.setRange = function() {\n        var sectorBBox = _this.sectorBBox;\n        var ind = bboxIndices[axId];\n        var rl = _this.radialAxis._rl;\n        var drl = (rl[1] - rl[0]) / (1 - polarLayout.hole);\n        ax.range = [sectorBBox[ind[0]] * drl, sectorBBox[ind[1]] * drl];\n    };\n\n    ax.isPtWithinRange = axId === 'x' ?\n        function(d) { return _this.isPtInside(d); } :\n        function() { return true; };\n\n    ax.setRange();\n    ax.setScale();\n    return ax;\n};\n\nproto.doAutoRange = function(fullLayout, polarLayout) {\n    var gd = this.gd;\n    var radialAxis = this.radialAxis;\n    var radialLayout = polarLayout.radialaxis;\n\n    radialAxis.setScale();\n    doAutoRange(gd, radialAxis);\n\n    var rng = radialAxis.range;\n    radialLayout.range = rng.slice();\n    radialLayout._input.range = rng.slice();\n\n    radialAxis._rl = [\n        radialAxis.r2l(rng[0], null, 'gregorian'),\n        radialAxis.r2l(rng[1], null, 'gregorian')\n    ];\n};\n\nproto.updateRadialAxis = function(fullLayout, polarLayout) {\n    var _this = this;\n    var gd = _this.gd;\n    var layers = _this.layers;\n    var radius = _this.radius;\n    var innerRadius = _this.innerRadius;\n    var cx = _this.cx;\n    var cy = _this.cy;\n    var radialLayout = polarLayout.radialaxis;\n    var a0 = mod(polarLayout.sector[0], 360);\n    var ax = _this.radialAxis;\n    var hasRoomForIt = innerRadius < radius;\n\n    _this.fillViewInitialKey('radialaxis.angle', radialLayout.angle);\n    _this.fillViewInitialKey('radialaxis.range', ax.range.slice());\n\n    ax.setGeometry();\n\n    // rotate auto tick labels by 180 if in quadrant II and III to make them\n    // readable from left-to-right\n    //\n    // TODO try moving deeper in Axes.drawLabels for better results?\n    if(ax.tickangle === 'auto' && (a0 > 90 && a0 <= 270)) {\n        ax.tickangle = 180;\n    }\n\n    // easier to set rotate angle with custom translate function\n    var transFn = function(d) {\n        return strTranslate(ax.l2p(d.x) + innerRadius, 0);\n    };\n\n    // set special grid path function\n    var gridPathFn = function(d) {\n        return _this.pathArc(ax.r2p(d.x) + innerRadius);\n    };\n\n    var newTickLayout = strTickLayout(radialLayout);\n    if(_this.radialTickLayout !== newTickLayout) {\n        layers['radial-axis'].selectAll('.xtick').remove();\n        _this.radialTickLayout = newTickLayout;\n    }\n\n    if(hasRoomForIt) {\n        ax.setScale();\n\n        var vals = Axes.calcTicks(ax);\n        var valsClipped = Axes.clipEnds(ax, vals);\n        var tickSign = Axes.getTickSigns(ax)[2];\n\n        Axes.drawTicks(gd, ax, {\n            vals: vals,\n            layer: layers['radial-axis'],\n            path: Axes.makeTickPath(ax, 0, tickSign),\n            transFn: transFn,\n            crisp: false\n        });\n\n        Axes.drawGrid(gd, ax, {\n            vals: valsClipped,\n            layer: layers['radial-grid'],\n            path: gridPathFn,\n            transFn: Lib.noop,\n            crisp: false\n        });\n\n        Axes.drawLabels(gd, ax, {\n            vals: vals,\n            layer: layers['radial-axis'],\n            transFn: transFn,\n            labelFns: Axes.makeLabelFns(ax, 0)\n        });\n    }\n\n    // stash 'actual' radial axis angle for drag handlers (in degrees)\n    var angle = _this.radialAxisAngle = _this.vangles ?\n        rad2deg(snapToVertexAngle(deg2rad(radialLayout.angle), _this.vangles)) :\n        radialLayout.angle;\n\n    var tLayer = strTranslate(cx, cy);\n    var tLayer2 = tLayer + strRotate(-angle);\n\n    updateElement(\n        layers['radial-axis'],\n        hasRoomForIt && (radialLayout.showticklabels || radialLayout.ticks),\n        {transform: tLayer2}\n    );\n\n    updateElement(\n        layers['radial-grid'],\n        hasRoomForIt && radialLayout.showgrid,\n        {transform: tLayer}\n    );\n\n    updateElement(\n        layers['radial-line'].select('line'),\n        hasRoomForIt && radialLayout.showline,\n        {\n            x1: innerRadius,\n            y1: 0,\n            x2: radius,\n            y2: 0,\n            transform: tLayer2\n        }\n    )\n    .attr('stroke-width', radialLayout.linewidth)\n    .call(Color.stroke, radialLayout.linecolor);\n};\n\nproto.updateRadialAxisTitle = function(fullLayout, polarLayout, _angle) {\n    var _this = this;\n    var gd = _this.gd;\n    var radius = _this.radius;\n    var cx = _this.cx;\n    var cy = _this.cy;\n    var radialLayout = polarLayout.radialaxis;\n    var titleClass = _this.id + 'title';\n\n    var angle = _angle !== undefined ? _angle : _this.radialAxisAngle;\n    var angleRad = deg2rad(angle);\n    var cosa = Math.cos(angleRad);\n    var sina = Math.sin(angleRad);\n\n    var pad = 0;\n\n    // Hint: no need to check if there is in fact a title.text set\n    // because if plot is editable, pad needs to be calculated anyways\n    // to properly show placeholder text when title is empty.\n    if(radialLayout.title) {\n        var h = Drawing.bBox(_this.layers['radial-axis'].node()).height;\n        var ts = radialLayout.title.font.size;\n        pad = radialLayout.side === 'counterclockwise' ?\n            -h - ts * 0.4 :\n            h + ts * 0.8;\n    }\n\n    _this.layers['radial-axis-title'] = Titles.draw(gd, titleClass, {\n        propContainer: radialLayout,\n        propName: _this.id + '.radialaxis.title',\n        placeholder: _(gd, 'Click to enter radial axis title'),\n        attributes: {\n            x: cx + (radius / 2) * cosa + pad * sina,\n            y: cy - (radius / 2) * sina + pad * cosa,\n            'text-anchor': 'middle'\n        },\n        transform: {rotate: -angle}\n    });\n};\n\nproto.updateAngularAxis = function(fullLayout, polarLayout) {\n    var _this = this;\n    var gd = _this.gd;\n    var layers = _this.layers;\n    var radius = _this.radius;\n    var innerRadius = _this.innerRadius;\n    var cx = _this.cx;\n    var cy = _this.cy;\n    var angularLayout = polarLayout.angularaxis;\n    var ax = _this.angularAxis;\n\n    _this.fillViewInitialKey('angularaxis.rotation', angularLayout.rotation);\n\n    ax.setGeometry();\n    ax.setScale();\n\n    // 't'ick to 'g'eometric radians is used all over the place here\n    var t2g = function(d) { return ax.t2g(d.x); };\n\n    // run rad2deg on tick0 and ditck for thetaunit: 'radians' axes\n    if(ax.type === 'linear' && ax.thetaunit === 'radians') {\n        ax.tick0 = rad2deg(ax.tick0);\n        ax.dtick = rad2deg(ax.dtick);\n    }\n\n    var _transFn = function(rad) {\n        return strTranslate(cx + radius * Math.cos(rad), cy - radius * Math.sin(rad));\n    };\n\n    var transFn = function(d) {\n        return _transFn(t2g(d));\n    };\n\n    var transFn2 = function(d) {\n        var rad = t2g(d);\n        return _transFn(rad) + strRotate(-rad2deg(rad));\n    };\n\n    var gridPathFn = function(d) {\n        var rad = t2g(d);\n        var cosRad = Math.cos(rad);\n        var sinRad = Math.sin(rad);\n        return 'M' + [cx + innerRadius * cosRad, cy - innerRadius * sinRad] +\n            'L' + [cx + radius * cosRad, cy - radius * sinRad];\n    };\n\n    var out = Axes.makeLabelFns(ax, 0);\n    var labelStandoff = out.labelStandoff;\n    var labelFns = {};\n\n    labelFns.xFn = function(d) {\n        var rad = t2g(d);\n        return Math.cos(rad) * labelStandoff;\n    };\n\n    labelFns.yFn = function(d) {\n        var rad = t2g(d);\n        var ff = Math.sin(rad) > 0 ? 0.2 : 1;\n        return -Math.sin(rad) * (labelStandoff + d.fontSize * ff) +\n            Math.abs(Math.cos(rad)) * (d.fontSize * MID_SHIFT);\n    };\n\n    labelFns.anchorFn = function(d) {\n        var rad = t2g(d);\n        var cos = Math.cos(rad);\n        return Math.abs(cos) < 0.1 ?\n            'middle' :\n            (cos > 0 ? 'start' : 'end');\n    };\n\n    labelFns.heightFn = function(d, a, h) {\n        var rad = t2g(d);\n        return -0.5 * (1 + Math.sin(rad)) * h;\n    };\n\n    var newTickLayout = strTickLayout(angularLayout);\n    if(_this.angularTickLayout !== newTickLayout) {\n        layers['angular-axis'].selectAll('.' + ax._id + 'tick').remove();\n        _this.angularTickLayout = newTickLayout;\n    }\n\n    var vals = Axes.calcTicks(ax);\n\n    // angle of polygon vertices in geometric radians (null means circles)\n    // TODO what to do when ax.period > ax._categories ??\n    var vangles;\n    if(polarLayout.gridshape === 'linear') {\n        vangles = vals.map(t2g);\n\n        // ax._vals should be always ordered, make them\n        // always turn counterclockwise for convenience here\n        if(Lib.angleDelta(vangles[0], vangles[1]) < 0) {\n            vangles = vangles.slice().reverse();\n        }\n    } else {\n        vangles = null;\n    }\n    _this.vangles = vangles;\n\n    // Use tickval filter for category axes instead of tweaking\n    // the range w.r.t sector, so that sectors that cross 360 can\n    // show all their ticks.\n    if(ax.type === 'category') {\n        vals = vals.filter(function(d) {\n            return Lib.isAngleInsideSector(t2g(d), _this.sectorInRad);\n        });\n    }\n\n    if(ax.visible) {\n        var tickSign = ax.ticks === 'inside' ? -1 : 1;\n        var pad = (ax.linewidth || 1) / 2;\n\n        Axes.drawTicks(gd, ax, {\n            vals: vals,\n            layer: layers['angular-axis'],\n            path: 'M' + (tickSign * pad) + ',0h' + (tickSign * ax.ticklen),\n            transFn: transFn2,\n            crisp: false\n        });\n\n        Axes.drawGrid(gd, ax, {\n            vals: vals,\n            layer: layers['angular-grid'],\n            path: gridPathFn,\n            transFn: Lib.noop,\n            crisp: false\n        });\n\n        Axes.drawLabels(gd, ax, {\n            vals: vals,\n            layer: layers['angular-axis'],\n            repositionOnUpdate: true,\n            transFn: transFn,\n            labelFns: labelFns\n        });\n    }\n\n    // TODO maybe two arcs is better here?\n    // maybe split style attributes between inner and outer angular axes?\n\n    updateElement(layers['angular-line'].select('path'), angularLayout.showline, {\n        d: _this.pathSubplot(),\n        transform: strTranslate(cx, cy)\n    })\n    .attr('stroke-width', angularLayout.linewidth)\n    .call(Color.stroke, angularLayout.linecolor);\n};\n\nproto.updateFx = function(fullLayout, polarLayout) {\n    if(!this.gd._context.staticPlot) {\n        this.updateAngularDrag(fullLayout);\n        this.updateRadialDrag(fullLayout, polarLayout, 0);\n        this.updateRadialDrag(fullLayout, polarLayout, 1);\n        this.updateMainDrag(fullLayout);\n    }\n};\n\nproto.updateMainDrag = function(fullLayout) {\n    var _this = this;\n    var gd = _this.gd;\n    var layers = _this.layers;\n    var zoomlayer = fullLayout._zoomlayer;\n    var MINZOOM = constants.MINZOOM;\n    var OFFEDGE = constants.OFFEDGE;\n    var radius = _this.radius;\n    var innerRadius = _this.innerRadius;\n    var cx = _this.cx;\n    var cy = _this.cy;\n    var cxx = _this.cxx;\n    var cyy = _this.cyy;\n    var sectorInRad = _this.sectorInRad;\n    var vangles = _this.vangles;\n    var radialAxis = _this.radialAxis;\n    var clampTiny = helpers.clampTiny;\n    var findXYatLength = helpers.findXYatLength;\n    var findEnclosingVertexAngles = helpers.findEnclosingVertexAngles;\n    var chw = constants.cornerHalfWidth;\n    var chl = constants.cornerLen / 2;\n\n    var scaleX;\n    var scaleY;\n\n    var mainDrag = dragBox.makeDragger(layers, 'path', 'maindrag', 'crosshair');\n\n    d3.select(mainDrag)\n        .attr('d', _this.pathSubplot())\n        .attr('transform', strTranslate(cx, cy));\n\n    var dragOpts = {\n        element: mainDrag,\n        gd: gd,\n        subplot: _this.id,\n        plotinfo: {\n            id: _this.id,\n            xaxis: _this.xaxis,\n            yaxis: _this.yaxis\n        },\n        xaxes: [_this.xaxis],\n        yaxes: [_this.yaxis]\n    };\n\n    // mouse px position at drag start (0), move (1)\n    var x0, y0;\n    // radial distance from circle center at drag start (0), move (1)\n    var r0, r1;\n    // zoombox persistent quantities\n    var path0, dimmed, lum;\n    // zoombox, corners elements\n    var zb, corners;\n\n    function norm(x, y) {\n        return Math.sqrt(x * x + y * y);\n    }\n\n    function xy2r(x, y) {\n        return norm(x - cxx, y - cyy);\n    }\n\n    function xy2a(x, y) {\n        return Math.atan2(cyy - y, x - cxx);\n    }\n\n    function ra2xy(r, a) {\n        return [r * Math.cos(a), r * Math.sin(-a)];\n    }\n\n    function pathCorner(r, a) {\n        if(r === 0) return _this.pathSector(2 * chw);\n\n        var da = chl / r;\n        var am = a - da;\n        var ap = a + da;\n        var rb = Math.max(0, Math.min(r, radius));\n        var rm = rb - chw;\n        var rp = rb + chw;\n\n        return 'M' + ra2xy(rm, am) +\n            'A' + [rm, rm] + ' 0,0,0 ' + ra2xy(rm, ap) +\n            'L' + ra2xy(rp, ap) +\n            'A' + [rp, rp] + ' 0,0,1 ' + ra2xy(rp, am) +\n            'Z';\n    }\n\n    // (x,y) is the pt at middle of the va0 <-> va1 edge\n    //\n    // ... we could eventually add another mode for cursor\n    // angles 'close to' enough to a particular vertex.\n    function pathCornerForPolygons(r, va0, va1) {\n        if(r === 0) return _this.pathSector(2 * chw);\n\n        var xy0 = ra2xy(r, va0);\n        var xy1 = ra2xy(r, va1);\n        var x = clampTiny((xy0[0] + xy1[0]) / 2);\n        var y = clampTiny((xy0[1] + xy1[1]) / 2);\n        var innerPts, outerPts;\n\n        if(x && y) {\n            var m = y / x;\n            var mperp = -1 / m;\n            var midPts = findXYatLength(chw, m, x, y);\n            innerPts = findXYatLength(chl, mperp, midPts[0][0], midPts[0][1]);\n            outerPts = findXYatLength(chl, mperp, midPts[1][0], midPts[1][1]);\n        } else {\n            var dx, dy;\n            if(y) {\n                // horizontal handles\n                dx = chl;\n                dy = chw;\n            } else {\n                // vertical handles\n                dx = chw;\n                dy = chl;\n            }\n            innerPts = [[x - dx, y - dy], [x + dx, y - dy]];\n            outerPts = [[x - dx, y + dy], [x + dx, y + dy]];\n        }\n\n        return 'M' + innerPts.join('L') +\n            'L' + outerPts.reverse().join('L') + 'Z';\n    }\n\n    function zoomPrep() {\n        r0 = null;\n        r1 = null;\n        path0 = _this.pathSubplot();\n        dimmed = false;\n\n        var polarLayoutNow = gd._fullLayout[_this.id];\n        lum = tinycolor(polarLayoutNow.bgcolor).getLuminance();\n\n        zb = dragBox.makeZoombox(zoomlayer, lum, cx, cy, path0);\n        zb.attr('fill-rule', 'evenodd');\n        corners = dragBox.makeCorners(zoomlayer, cx, cy);\n        clearSelect(gd);\n    }\n\n    // N.B. this sets scoped 'r0' and 'r1'\n    // return true if 'valid' zoom distance, false otherwise\n    function clampAndSetR0R1(rr0, rr1) {\n        rr1 = Math.max(Math.min(rr1, radius), innerRadius);\n\n        // starting or ending drag near center (outer edge),\n        // clamps radial distance at origin (at r=radius)\n        if(rr0 < OFFEDGE) rr0 = 0;\n        else if((radius - rr0) < OFFEDGE) rr0 = radius;\n        else if(rr1 < OFFEDGE) rr1 = 0;\n        else if((radius - rr1) < OFFEDGE) rr1 = radius;\n\n        // make sure r0 < r1,\n        // to get correct fill pattern in path1 below\n        if(Math.abs(rr1 - rr0) > MINZOOM) {\n            if(rr0 < rr1) {\n                r0 = rr0;\n                r1 = rr1;\n            } else {\n                r0 = rr1;\n                r1 = rr0;\n            }\n            return true;\n        } else {\n            r0 = null;\n            r1 = null;\n            return false;\n        }\n    }\n\n    function applyZoomMove(path1, cpath) {\n        path1 = path1 || path0;\n        cpath = cpath || 'M0,0Z';\n\n        zb.attr('d', path1);\n        corners.attr('d', cpath);\n        dragBox.transitionZoombox(zb, corners, dimmed, lum);\n        dimmed = true;\n\n        var updateObj = {};\n        computeZoomUpdates(updateObj);\n        gd.emit('plotly_relayouting', updateObj);\n    }\n\n    function zoomMove(dx, dy) {\n        dx = dx * scaleX;\n        dy = dy * scaleY;\n\n        var x1 = x0 + dx;\n        var y1 = y0 + dy;\n\n        var rr0 = xy2r(x0, y0);\n        var rr1 = Math.min(xy2r(x1, y1), radius);\n        var a0 = xy2a(x0, y0);\n        var path1;\n        var cpath;\n\n        if(clampAndSetR0R1(rr0, rr1)) {\n            path1 = path0 + _this.pathSector(r1);\n            if(r0) path1 += _this.pathSector(r0);\n            // keep 'starting' angle\n            cpath = pathCorner(r0, a0) + pathCorner(r1, a0);\n        }\n        applyZoomMove(path1, cpath);\n    }\n\n    function findPolygonRadius(x, y, va0, va1) {\n        var xy = helpers.findIntersectionXY(va0, va1, va0, [x - cxx, cyy - y]);\n        return norm(xy[0], xy[1]);\n    }\n\n    function zoomMoveForPolygons(dx, dy) {\n        var x1 = x0 + dx;\n        var y1 = y0 + dy;\n        var a0 = xy2a(x0, y0);\n        var a1 = xy2a(x1, y1);\n        var vangles0 = findEnclosingVertexAngles(a0, vangles);\n        var vangles1 = findEnclosingVertexAngles(a1, vangles);\n        var rr0 = findPolygonRadius(x0, y0, vangles0[0], vangles0[1]);\n        var rr1 = Math.min(findPolygonRadius(x1, y1, vangles1[0], vangles1[1]), radius);\n        var path1;\n        var cpath;\n\n        if(clampAndSetR0R1(rr0, rr1)) {\n            path1 = path0 + _this.pathSector(r1);\n            if(r0) path1 += _this.pathSector(r0);\n            // keep 'starting' angle here too\n            cpath = [\n                pathCornerForPolygons(r0, vangles0[0], vangles0[1]),\n                pathCornerForPolygons(r1, vangles0[0], vangles0[1])\n            ].join(' ');\n        }\n        applyZoomMove(path1, cpath);\n    }\n\n    function zoomDone() {\n        dragBox.removeZoombox(gd);\n\n        if(r0 === null || r1 === null) return;\n        var updateObj = {};\n        computeZoomUpdates(updateObj);\n\n        dragBox.showDoubleClickNotifier(gd);\n\n        Registry.call('_guiRelayout', gd, updateObj);\n    }\n\n    function computeZoomUpdates(update) {\n        var rl = radialAxis._rl;\n        var m = (rl[1] - rl[0]) / (1 - innerRadius / radius) / radius;\n        var newRng = [\n            rl[0] + (r0 - innerRadius) * m,\n            rl[0] + (r1 - innerRadius) * m\n        ];\n        update[_this.id + '.radialaxis.range'] = newRng;\n    }\n\n    function zoomClick(numClicks, evt) {\n        var clickMode = gd._fullLayout.clickmode;\n\n        dragBox.removeZoombox(gd);\n\n        // TODO double once vs twice logic (autorange vs fixed range)\n        if(numClicks === 2) {\n            var updateObj = {};\n            for(var k in _this.viewInitial) {\n                updateObj[_this.id + '.' + k] = _this.viewInitial[k];\n            }\n\n            gd.emit('plotly_doubleclick', null);\n            Registry.call('_guiRelayout', gd, updateObj);\n        }\n\n        if(clickMode.indexOf('select') > -1 && numClicks === 1) {\n            selectOnClick(evt, gd, [_this.xaxis], [_this.yaxis], _this.id, dragOpts);\n        }\n\n        if(clickMode.indexOf('event') > -1) {\n            Fx.click(gd, evt, _this.id);\n        }\n    }\n\n    dragOpts.prepFn = function(evt, startX, startY) {\n        var dragModeNow = gd._fullLayout.dragmode;\n\n        var bbox = mainDrag.getBoundingClientRect();\n        gd._fullLayout._calcInverseTransform(gd);\n        var inverse = gd._fullLayout._invTransform;\n        scaleX = gd._fullLayout._invScaleX;\n        scaleY = gd._fullLayout._invScaleY;\n        var transformedCoords = Lib.apply3DTransform(inverse)(startX - bbox.left, startY - bbox.top);\n        x0 = transformedCoords[0];\n        y0 = transformedCoords[1];\n\n        // need to offset x/y as bbox center does not\n        // match origin for asymmetric polygons\n        if(vangles) {\n            var offset = helpers.findPolygonOffset(radius, sectorInRad[0], sectorInRad[1], vangles);\n            x0 += cxx + offset[0];\n            y0 += cyy + offset[1];\n        }\n\n        switch(dragModeNow) {\n            case 'zoom':\n                if(vangles) {\n                    dragOpts.moveFn = zoomMoveForPolygons;\n                } else {\n                    dragOpts.moveFn = zoomMove;\n                }\n                dragOpts.clickFn = zoomClick;\n                dragOpts.doneFn = zoomDone;\n                zoomPrep(evt, startX, startY);\n                break;\n            case 'select':\n            case 'lasso':\n                prepSelect(evt, startX, startY, dragOpts, dragModeNow);\n                break;\n        }\n    };\n\n    mainDrag.onmousemove = function(evt) {\n        Fx.hover(gd, evt, _this.id);\n        gd._fullLayout._lasthover = mainDrag;\n        gd._fullLayout._hoversubplot = _this.id;\n    };\n\n    mainDrag.onmouseout = function(evt) {\n        if(gd._dragging) return;\n        dragElement.unhover(gd, evt);\n    };\n\n    dragElement.init(dragOpts);\n};\n\nproto.updateRadialDrag = function(fullLayout, polarLayout, rngIndex) {\n    var _this = this;\n    var gd = _this.gd;\n    var layers = _this.layers;\n    var radius = _this.radius;\n    var innerRadius = _this.innerRadius;\n    var cx = _this.cx;\n    var cy = _this.cy;\n    var radialAxis = _this.radialAxis;\n    var bl = constants.radialDragBoxSize;\n    var bl2 = bl / 2;\n\n    if(!radialAxis.visible) return;\n\n    var angle0 = deg2rad(_this.radialAxisAngle);\n    var rl = radialAxis._rl;\n    var rl0 = rl[0];\n    var rl1 = rl[1];\n    var rbase = rl[rngIndex];\n    var m = 0.75 * (rl[1] - rl[0]) / (1 - polarLayout.hole) / radius;\n\n    var tx, ty, className;\n    if(rngIndex) {\n        tx = cx + (radius + bl2) * Math.cos(angle0);\n        ty = cy - (radius + bl2) * Math.sin(angle0);\n        className = 'radialdrag';\n    } else {\n        // the 'inner' box can get called:\n        // - when polar.hole>0\n        // - when polar.sector isn't a full circle\n        // otherwise it is hidden behind the main drag.\n        tx = cx + (innerRadius - bl2) * Math.cos(angle0);\n        ty = cy - (innerRadius - bl2) * Math.sin(angle0);\n        className = 'radialdrag-inner';\n    }\n\n    var radialDrag = dragBox.makeRectDragger(layers, className, 'crosshair', -bl2, -bl2, bl, bl);\n    var dragOpts = {element: radialDrag, gd: gd};\n\n    updateElement(d3.select(radialDrag), radialAxis.visible && innerRadius < radius, {\n        transform: strTranslate(tx, ty)\n    });\n\n    // move function (either rotate or re-range flavor)\n    var moveFn2;\n    // rotate angle on done\n    var angle1;\n    // re-range range[1] (or range[0]) on done\n    var rprime;\n\n    function moveFn(dx, dy) {\n        if(moveFn2) {\n            moveFn2(dx, dy);\n        } else {\n            var dvec = [dx, -dy];\n            var rvec = [Math.cos(angle0), Math.sin(angle0)];\n            var comp = Math.abs(Lib.dot(dvec, rvec) / Math.sqrt(Lib.dot(dvec, dvec)));\n\n            // mostly perpendicular motions rotate,\n            // mostly parallel motions re-range\n            if(!isNaN(comp)) {\n                moveFn2 = comp < 0.5 ? rotateMove : rerangeMove;\n            }\n        }\n\n        var update = {};\n        computeRadialAxisUpdates(update);\n        gd.emit('plotly_relayouting', update);\n    }\n\n    function computeRadialAxisUpdates(update) {\n        if(angle1 !== null) {\n            update[_this.id + '.radialaxis.angle'] = angle1;\n        } else if(rprime !== null) {\n            update[_this.id + '.radialaxis.range[' + rngIndex + ']'] = rprime;\n        }\n    }\n\n    function doneFn() {\n        if(angle1 !== null) {\n            Registry.call('_guiRelayout', gd, _this.id + '.radialaxis.angle', angle1);\n        } else if(rprime !== null) {\n            Registry.call('_guiRelayout', gd, _this.id + '.radialaxis.range[' + rngIndex + ']', rprime);\n        }\n    }\n\n    function rotateMove(dx, dy) {\n        // disable for inner drag boxes\n        if(rngIndex === 0) return;\n\n        var x1 = tx + dx;\n        var y1 = ty + dy;\n\n        angle1 = Math.atan2(cy - y1, x1 - cx);\n        if(_this.vangles) angle1 = snapToVertexAngle(angle1, _this.vangles);\n        angle1 = rad2deg(angle1);\n\n        var transform = strTranslate(cx, cy) + strRotate(-angle1);\n        layers['radial-axis'].attr('transform', transform);\n        layers['radial-line'].select('line').attr('transform', transform);\n\n        var fullLayoutNow = _this.gd._fullLayout;\n        var polarLayoutNow = fullLayoutNow[_this.id];\n        _this.updateRadialAxisTitle(fullLayoutNow, polarLayoutNow, angle1);\n    }\n\n    function rerangeMove(dx, dy) {\n        // project (dx, dy) unto unit radial axis vector\n        var dr = Lib.dot([dx, -dy], [Math.cos(angle0), Math.sin(angle0)]);\n        rprime = rbase - m * dr;\n\n        // make sure rprime does not change the range[0] -> range[1] sign\n        if((m > 0) !== (rngIndex ? rprime > rl0 : rprime < rl1)) {\n            rprime = null;\n            return;\n        }\n\n        var fullLayoutNow = gd._fullLayout;\n        var polarLayoutNow = fullLayoutNow[_this.id];\n\n        // update radial range -> update c2g -> update _m,_b\n        radialAxis.range[rngIndex] = rprime;\n        radialAxis._rl[rngIndex] = rprime;\n        _this.updateRadialAxis(fullLayoutNow, polarLayoutNow);\n\n        _this.xaxis.setRange();\n        _this.xaxis.setScale();\n        _this.yaxis.setRange();\n        _this.yaxis.setScale();\n\n        var hasRegl = false;\n\n        for(var traceType in _this.traceHash) {\n            var moduleCalcData = _this.traceHash[traceType];\n            var moduleCalcDataVisible = Lib.filterVisible(moduleCalcData);\n            var _module = moduleCalcData[0][0].trace._module;\n            _module.plot(gd, _this, moduleCalcDataVisible, polarLayoutNow);\n            if(Registry.traceIs(traceType, 'gl') && moduleCalcDataVisible.length) hasRegl = true;\n        }\n\n        if(hasRegl) {\n            clearGlCanvases(gd);\n            redrawReglTraces(gd);\n        }\n    }\n\n    dragOpts.prepFn = function() {\n        moveFn2 = null;\n        angle1 = null;\n        rprime = null;\n\n        dragOpts.moveFn = moveFn;\n        dragOpts.doneFn = doneFn;\n\n        clearSelect(gd);\n    };\n\n    dragOpts.clampFn = function(dx, dy) {\n        if(Math.sqrt(dx * dx + dy * dy) < constants.MINDRAG) {\n            dx = 0;\n            dy = 0;\n        }\n        return [dx, dy];\n    };\n\n    dragElement.init(dragOpts);\n};\n\nproto.updateAngularDrag = function(fullLayout) {\n    var _this = this;\n    var gd = _this.gd;\n    var layers = _this.layers;\n    var radius = _this.radius;\n    var angularAxis = _this.angularAxis;\n    var cx = _this.cx;\n    var cy = _this.cy;\n    var cxx = _this.cxx;\n    var cyy = _this.cyy;\n    var dbs = constants.angularDragBoxSize;\n\n    var angularDrag = dragBox.makeDragger(layers, 'path', 'angulardrag', 'move');\n    var dragOpts = {element: angularDrag, gd: gd};\n\n    d3.select(angularDrag)\n        .attr('d', _this.pathAnnulus(radius, radius + dbs))\n        .attr('transform', strTranslate(cx, cy))\n        .call(setCursor, 'move');\n\n    function xy2a(x, y) {\n        return Math.atan2(cyy + dbs - y, x - cxx - dbs);\n    }\n\n    // scatter trace, points and textpoints selections\n    var scatterTraces = layers.frontplot.select('.scatterlayer').selectAll('.trace');\n    var scatterPoints = scatterTraces.selectAll('.point');\n    var scatterTextPoints = scatterTraces.selectAll('.textpoint');\n\n    // mouse px position at drag start (0), move (1)\n    var x0, y0;\n    // angular axis angle rotation at drag start (0), move (1)\n    var rot0, rot1;\n    // induced radial axis rotation (only used on polygon grids)\n    var rrot1;\n    // angle about circle center at drag start\n    var a0;\n\n    function moveFn(dx, dy) {\n        var fullLayoutNow = _this.gd._fullLayout;\n        var polarLayoutNow = fullLayoutNow[_this.id];\n\n        var x1 = x0 + dx * fullLayout._invScaleX;\n        var y1 = y0 + dy * fullLayout._invScaleY;\n        var a1 = xy2a(x1, y1);\n        var da = rad2deg(a1 - a0);\n        rot1 = rot0 + da;\n\n        layers.frontplot.attr('transform',\n            strTranslate(_this.xOffset2, _this.yOffset2) + strRotate([-da, cxx, cyy])\n        );\n\n        if(_this.vangles) {\n            rrot1 = _this.radialAxisAngle + da;\n\n            var trans = strTranslate(cx, cy) + strRotate(-da);\n            var trans2 = strTranslate(cx, cy) + strRotate(-rrot1);\n\n            layers.bg.attr('transform', trans);\n            layers['radial-grid'].attr('transform', trans);\n            layers['radial-axis'].attr('transform', trans2);\n            layers['radial-line'].select('line').attr('transform', trans2);\n            _this.updateRadialAxisTitle(fullLayoutNow, polarLayoutNow, rrot1);\n        } else {\n            _this.clipPaths.forTraces.select('path').attr('transform',\n                strTranslate(cxx, cyy) + strRotate(da)\n            );\n        }\n\n        // 'un-rotate' marker and text points\n        scatterPoints.each(function() {\n            var sel = d3.select(this);\n            var xy = Drawing.getTranslate(sel);\n            sel.attr('transform', strTranslate(xy.x, xy.y) + strRotate([da]));\n        });\n        scatterTextPoints.each(function() {\n            var sel = d3.select(this);\n            var tx = sel.select('text');\n            var xy = Drawing.getTranslate(sel);\n            // N.B rotate -> translate ordering matters\n            sel.attr('transform', strRotate([da, tx.attr('x'), tx.attr('y')]) + strTranslate(xy.x, xy.y));\n        });\n\n        // update rotation -> range -> _m,_b\n        angularAxis.rotation = Lib.modHalf(rot1, 360);\n        _this.updateAngularAxis(fullLayoutNow, polarLayoutNow);\n\n        if(_this._hasClipOnAxisFalse && !Lib.isFullCircle(_this.sectorInRad)) {\n            scatterTraces.call(Drawing.hideOutsideRangePoints, _this);\n        }\n\n        var hasRegl = false;\n\n        for(var traceType in _this.traceHash) {\n            if(Registry.traceIs(traceType, 'gl')) {\n                var moduleCalcData = _this.traceHash[traceType];\n                var moduleCalcDataVisible = Lib.filterVisible(moduleCalcData);\n                var _module = moduleCalcData[0][0].trace._module;\n                _module.plot(gd, _this, moduleCalcDataVisible, polarLayoutNow);\n                if(moduleCalcDataVisible.length) hasRegl = true;\n            }\n        }\n\n        if(hasRegl) {\n            clearGlCanvases(gd);\n            redrawReglTraces(gd);\n        }\n\n        var update = {};\n        computeRotationUpdates(update);\n        gd.emit('plotly_relayouting', update);\n    }\n\n    function computeRotationUpdates(updateObj) {\n        updateObj[_this.id + '.angularaxis.rotation'] = rot1;\n\n        if(_this.vangles) {\n            updateObj[_this.id + '.radialaxis.angle'] = rrot1;\n        }\n    }\n\n    function doneFn() {\n        scatterTextPoints.select('text').attr('transform', null);\n\n        var updateObj = {};\n        computeRotationUpdates(updateObj);\n        Registry.call('_guiRelayout', gd, updateObj);\n    }\n\n    dragOpts.prepFn = function(evt, startX, startY) {\n        var polarLayoutNow = fullLayout[_this.id];\n        rot0 = polarLayoutNow.angularaxis.rotation;\n\n        var bbox = angularDrag.getBoundingClientRect();\n        x0 = startX - bbox.left;\n        y0 = startY - bbox.top;\n\n        gd._fullLayout._calcInverseTransform(gd);\n        var transformedCoords = Lib.apply3DTransform(fullLayout._invTransform)(x0, y0);\n        x0 = transformedCoords[0];\n        y0 = transformedCoords[1];\n\n        a0 = xy2a(x0, y0);\n\n        dragOpts.moveFn = moveFn;\n        dragOpts.doneFn = doneFn;\n\n        clearSelect(gd);\n    };\n\n    // I don't what we should do in this case, skip we now\n    if(_this.vangles && !Lib.isFullCircle(_this.sectorInRad)) {\n        dragOpts.prepFn = Lib.noop;\n        setCursor(d3.select(angularDrag), null);\n    }\n\n    dragElement.init(dragOpts);\n};\n\nproto.isPtInside = function(d) {\n    var sectorInRad = this.sectorInRad;\n    var vangles = this.vangles;\n    var thetag = this.angularAxis.c2g(d.theta);\n    var radialAxis = this.radialAxis;\n    var r = radialAxis.c2l(d.r);\n    var rl = radialAxis._rl;\n\n    var fn = vangles ? helpers.isPtInsidePolygon : Lib.isPtInsideSector;\n    return fn(r, thetag, rl, sectorInRad, vangles);\n};\n\nproto.pathArc = function(r) {\n    var sectorInRad = this.sectorInRad;\n    var vangles = this.vangles;\n    var fn = vangles ? helpers.pathPolygon : Lib.pathArc;\n    return fn(r, sectorInRad[0], sectorInRad[1], vangles);\n};\n\nproto.pathSector = function(r) {\n    var sectorInRad = this.sectorInRad;\n    var vangles = this.vangles;\n    var fn = vangles ? helpers.pathPolygon : Lib.pathSector;\n    return fn(r, sectorInRad[0], sectorInRad[1], vangles);\n};\n\nproto.pathAnnulus = function(r0, r1) {\n    var sectorInRad = this.sectorInRad;\n    var vangles = this.vangles;\n    var fn = vangles ? helpers.pathPolygonAnnulus : Lib.pathAnnulus;\n    return fn(r0, r1, sectorInRad[0], sectorInRad[1], vangles);\n};\n\nproto.pathSubplot = function() {\n    var r0 = this.innerRadius;\n    var r1 = this.radius;\n    return r0 ? this.pathAnnulus(r0, r1) : this.pathSector(r1);\n};\n\nproto.fillViewInitialKey = function(key, val) {\n    if(!(key in this.viewInitial)) {\n        this.viewInitial[key] = val;\n    }\n};\n\nfunction strTickLayout(axLayout) {\n    var out = axLayout.ticks + String(axLayout.ticklen) + String(axLayout.showticklabels);\n    if('side' in axLayout) out += axLayout.side;\n    return out;\n}\n\n// Finds the bounding box of a given circle sector,\n// inspired by https://math.stackexchange.com/q/1852703\n//\n// assumes:\n// - sector[0] < sector[1]\n// - counterclockwise rotation\nfunction computeSectorBBox(sector) {\n    var s0 = sector[0];\n    var s1 = sector[1];\n    var arc = s1 - s0;\n    var a0 = mod(s0, 360);\n    var a1 = a0 + arc;\n\n    var ax0 = Math.cos(deg2rad(a0));\n    var ay0 = Math.sin(deg2rad(a0));\n    var ax1 = Math.cos(deg2rad(a1));\n    var ay1 = Math.sin(deg2rad(a1));\n\n    var x0, y0, x1, y1;\n\n    if((a0 <= 90 && a1 >= 90) || (a0 > 90 && a1 >= 450)) {\n        y1 = 1;\n    } else if(ay0 <= 0 && ay1 <= 0) {\n        y1 = 0;\n    } else {\n        y1 = Math.max(ay0, ay1);\n    }\n\n    if((a0 <= 180 && a1 >= 180) || (a0 > 180 && a1 >= 540)) {\n        x0 = -1;\n    } else if(ax0 >= 0 && ax1 >= 0) {\n        x0 = 0;\n    } else {\n        x0 = Math.min(ax0, ax1);\n    }\n\n    if((a0 <= 270 && a1 >= 270) || (a0 > 270 && a1 >= 630)) {\n        y0 = -1;\n    } else if(ay0 >= 0 && ay1 >= 0) {\n        y0 = 0;\n    } else {\n        y0 = Math.min(ay0, ay1);\n    }\n\n    if(a1 >= 360) {\n        x1 = 1;\n    } else if(ax0 <= 0 && ax1 <= 0) {\n        x1 = 0;\n    } else {\n        x1 = Math.max(ax0, ax1);\n    }\n\n    return [x0, y0, x1, y1];\n}\n\nfunction snapToVertexAngle(a, vangles) {\n    var fn = function(v) { return Lib.angleDist(a, v); };\n    var ind = Lib.findIndexOfMin(vangles, fn);\n    return vangles[ind];\n}\n\nfunction updateElement(sel, showAttr, attrs) {\n    if(showAttr) {\n        sel.attr('display', null);\n        sel.attr(attrs);\n    } else if(sel) {\n        sel.attr('display', 'none');\n    }\n    return sel;\n}\n"]},"metadata":{},"sourceType":"script"}