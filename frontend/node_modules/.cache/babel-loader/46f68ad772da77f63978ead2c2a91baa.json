{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar Drawing = require('../../components/drawing');\n\nvar Axes = require('./axes');\n/**\n * transitionAxes\n *\n * transition axes from one set of ranges to another, using a svg\n * transformations, similar to during panning.\n *\n * @param {DOM element | object} gd\n * @param {array} edits : array of 'edits', each item with\n * - plotinfo {object} subplot object\n * - xr0 {array} initial x-range\n * - xr1 {array} end x-range\n * - yr0 {array} initial y-range\n * - yr1 {array} end y-range\n * @param {object} transitionOpts\n * @param {function} makeOnCompleteCallback\n */\n\n\nmodule.exports = function transitionAxes(gd, edits, transitionOpts, makeOnCompleteCallback) {\n  var fullLayout = gd._fullLayout; // special case for redraw:false Plotly.animate that relies on this\n  // to update axis-referenced layout components\n\n  if (edits.length === 0) {\n    Axes.redrawComponents(gd);\n    return;\n  }\n\n  function unsetSubplotTransform(subplot) {\n    var xa = subplot.xaxis;\n    var ya = subplot.yaxis;\n\n    fullLayout._defs.select('#' + subplot.clipId + '> rect').call(Drawing.setTranslate, 0, 0).call(Drawing.setScale, 1, 1);\n\n    subplot.plot.call(Drawing.setTranslate, xa._offset, ya._offset).call(Drawing.setScale, 1, 1);\n    var traceGroups = subplot.plot.selectAll('.scatterlayer .trace'); // This is specifically directed at scatter traces, applying an inverse\n    // scale to individual points to counteract the scale of the trace\n    // as a whole:\n\n    traceGroups.selectAll('.point').call(Drawing.setPointGroupScale, 1, 1);\n    traceGroups.selectAll('.textpoint').call(Drawing.setTextPointsScale, 1, 1);\n    traceGroups.call(Drawing.hideOutsideRangePoints, subplot);\n  }\n\n  function updateSubplot(edit, progress) {\n    var plotinfo = edit.plotinfo;\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n    var xlen = xa._length;\n    var ylen = ya._length;\n    var editX = !!edit.xr1;\n    var editY = !!edit.yr1;\n    var viewBox = [];\n\n    if (editX) {\n      var xr0 = Lib.simpleMap(edit.xr0, xa.r2l);\n      var xr1 = Lib.simpleMap(edit.xr1, xa.r2l);\n      var dx0 = xr0[1] - xr0[0];\n      var dx1 = xr1[1] - xr1[0];\n      viewBox[0] = (xr0[0] * (1 - progress) + progress * xr1[0] - xr0[0]) / (xr0[1] - xr0[0]) * xlen;\n      viewBox[2] = xlen * (1 - progress + progress * dx1 / dx0);\n      xa.range[0] = xa.l2r(xr0[0] * (1 - progress) + progress * xr1[0]);\n      xa.range[1] = xa.l2r(xr0[1] * (1 - progress) + progress * xr1[1]);\n    } else {\n      viewBox[0] = 0;\n      viewBox[2] = xlen;\n    }\n\n    if (editY) {\n      var yr0 = Lib.simpleMap(edit.yr0, ya.r2l);\n      var yr1 = Lib.simpleMap(edit.yr1, ya.r2l);\n      var dy0 = yr0[1] - yr0[0];\n      var dy1 = yr1[1] - yr1[0];\n      viewBox[1] = (yr0[1] * (1 - progress) + progress * yr1[1] - yr0[1]) / (yr0[0] - yr0[1]) * ylen;\n      viewBox[3] = ylen * (1 - progress + progress * dy1 / dy0);\n      ya.range[0] = xa.l2r(yr0[0] * (1 - progress) + progress * yr1[0]);\n      ya.range[1] = ya.l2r(yr0[1] * (1 - progress) + progress * yr1[1]);\n    } else {\n      viewBox[1] = 0;\n      viewBox[3] = ylen;\n    }\n\n    Axes.drawOne(gd, xa, {\n      skipTitle: true\n    });\n    Axes.drawOne(gd, ya, {\n      skipTitle: true\n    });\n    Axes.redrawComponents(gd, [xa._id, ya._id]);\n    var xScaleFactor = editX ? xlen / viewBox[2] : 1;\n    var yScaleFactor = editY ? ylen / viewBox[3] : 1;\n    var clipDx = editX ? viewBox[0] : 0;\n    var clipDy = editY ? viewBox[1] : 0;\n    var fracDx = editX ? viewBox[0] / viewBox[2] * xlen : 0;\n    var fracDy = editY ? viewBox[1] / viewBox[3] * ylen : 0;\n    var plotDx = xa._offset - fracDx;\n    var plotDy = ya._offset - fracDy;\n    plotinfo.clipRect.call(Drawing.setTranslate, clipDx, clipDy).call(Drawing.setScale, 1 / xScaleFactor, 1 / yScaleFactor);\n    plotinfo.plot.call(Drawing.setTranslate, plotDx, plotDy).call(Drawing.setScale, xScaleFactor, yScaleFactor); // apply an inverse scale to individual points to counteract\n    // the scale of the trace group.\n\n    Drawing.setPointGroupScale(plotinfo.zoomScalePts, 1 / xScaleFactor, 1 / yScaleFactor);\n    Drawing.setTextPointsScale(plotinfo.zoomScaleTxt, 1 / xScaleFactor, 1 / yScaleFactor);\n  }\n\n  var onComplete;\n\n  if (makeOnCompleteCallback) {\n    // This module makes the choice whether or not it notifies Plotly.transition\n    // about completion:\n    onComplete = makeOnCompleteCallback();\n  }\n\n  function transitionComplete() {\n    var aobj = {};\n\n    for (var i = 0; i < edits.length; i++) {\n      var edit = edits[i];\n      var xa = edit.plotinfo.xaxis;\n      var ya = edit.plotinfo.yaxis;\n      if (edit.xr1) aobj[xa._name + '.range'] = edit.xr1.slice();\n      if (edit.yr1) aobj[ya._name + '.range'] = edit.yr1.slice();\n    } // Signal that this transition has completed:\n\n\n    onComplete && onComplete();\n    return Registry.call('relayout', gd, aobj).then(function () {\n      for (var i = 0; i < edits.length; i++) {\n        unsetSubplotTransform(edits[i].plotinfo);\n      }\n    });\n  }\n\n  function transitionInterrupt() {\n    var aobj = {};\n\n    for (var i = 0; i < edits.length; i++) {\n      var edit = edits[i];\n      var xa = edit.plotinfo.xaxis;\n      var ya = edit.plotinfo.yaxis;\n      if (edit.xr0) aobj[xa._name + '.range'] = edit.xr0.slice();\n      if (edit.yr0) aobj[ya._name + '.range'] = edit.yr0.slice();\n    }\n\n    return Registry.call('relayout', gd, aobj).then(function () {\n      for (var i = 0; i < edits.length; i++) {\n        unsetSubplotTransform(edits[i].plotinfo);\n      }\n    });\n  }\n\n  var t1, t2, raf;\n  var easeFn = d3.ease(transitionOpts.easing);\n\n  gd._transitionData._interruptCallbacks.push(function () {\n    window.cancelAnimationFrame(raf);\n    raf = null;\n    return transitionInterrupt();\n  });\n\n  function doFrame() {\n    t2 = Date.now();\n    var tInterp = Math.min(1, (t2 - t1) / transitionOpts.duration);\n    var progress = easeFn(tInterp);\n\n    for (var i = 0; i < edits.length; i++) {\n      updateSubplot(edits[i], progress);\n    }\n\n    if (t2 - t1 > transitionOpts.duration) {\n      transitionComplete();\n      raf = window.cancelAnimationFrame(doFrame);\n    } else {\n      raf = window.requestAnimationFrame(doFrame);\n    }\n  }\n\n  t1 = Date.now();\n  raf = window.requestAnimationFrame(doFrame);\n  return Promise.resolve();\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/plots/cartesian/transition_axes.js"],"names":["d3","require","Registry","Lib","Drawing","Axes","module","exports","transitionAxes","gd","edits","transitionOpts","makeOnCompleteCallback","fullLayout","_fullLayout","length","redrawComponents","unsetSubplotTransform","subplot","xa","xaxis","ya","yaxis","_defs","select","clipId","call","setTranslate","setScale","plot","_offset","traceGroups","selectAll","setPointGroupScale","setTextPointsScale","hideOutsideRangePoints","updateSubplot","edit","progress","plotinfo","xlen","_length","ylen","editX","xr1","editY","yr1","viewBox","xr0","simpleMap","r2l","dx0","dx1","range","l2r","yr0","dy0","dy1","drawOne","skipTitle","_id","xScaleFactor","yScaleFactor","clipDx","clipDy","fracDx","fracDy","plotDx","plotDy","clipRect","zoomScalePts","zoomScaleTxt","onComplete","transitionComplete","aobj","i","_name","slice","then","transitionInterrupt","t1","t2","raf","easeFn","ease","easing","_transitionData","_interruptCallbacks","push","window","cancelAnimationFrame","doFrame","Date","now","tInterp","Math","min","duration","requestAnimationFrame","Promise","resolve"],"mappings":"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","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Drawing = require('../../components/drawing');\nvar Axes = require('./axes');\n\n/**\n * transitionAxes\n *\n * transition axes from one set of ranges to another, using a svg\n * transformations, similar to during panning.\n *\n * @param {DOM element | object} gd\n * @param {array} edits : array of 'edits', each item with\n * - plotinfo {object} subplot object\n * - xr0 {array} initial x-range\n * - xr1 {array} end x-range\n * - yr0 {array} initial y-range\n * - yr1 {array} end y-range\n * @param {object} transitionOpts\n * @param {function} makeOnCompleteCallback\n */\nmodule.exports = function transitionAxes(gd, edits, transitionOpts, makeOnCompleteCallback) {\n    var fullLayout = gd._fullLayout;\n\n    // special case for redraw:false Plotly.animate that relies on this\n    // to update axis-referenced layout components\n    if(edits.length === 0) {\n        Axes.redrawComponents(gd);\n        return;\n    }\n\n    function unsetSubplotTransform(subplot) {\n        var xa = subplot.xaxis;\n        var ya = subplot.yaxis;\n\n        fullLayout._defs.select('#' + subplot.clipId + '> rect')\n            .call(Drawing.setTranslate, 0, 0)\n            .call(Drawing.setScale, 1, 1);\n\n        subplot.plot\n            .call(Drawing.setTranslate, xa._offset, ya._offset)\n            .call(Drawing.setScale, 1, 1);\n\n        var traceGroups = subplot.plot.selectAll('.scatterlayer .trace');\n\n        // This is specifically directed at scatter traces, applying an inverse\n        // scale to individual points to counteract the scale of the trace\n        // as a whole:\n        traceGroups.selectAll('.point')\n            .call(Drawing.setPointGroupScale, 1, 1);\n        traceGroups.selectAll('.textpoint')\n            .call(Drawing.setTextPointsScale, 1, 1);\n        traceGroups\n            .call(Drawing.hideOutsideRangePoints, subplot);\n    }\n\n    function updateSubplot(edit, progress) {\n        var plotinfo = edit.plotinfo;\n        var xa = plotinfo.xaxis;\n        var ya = plotinfo.yaxis;\n        var xlen = xa._length;\n        var ylen = ya._length;\n        var editX = !!edit.xr1;\n        var editY = !!edit.yr1;\n        var viewBox = [];\n\n        if(editX) {\n            var xr0 = Lib.simpleMap(edit.xr0, xa.r2l);\n            var xr1 = Lib.simpleMap(edit.xr1, xa.r2l);\n            var dx0 = xr0[1] - xr0[0];\n            var dx1 = xr1[1] - xr1[0];\n            viewBox[0] = (xr0[0] * (1 - progress) + progress * xr1[0] - xr0[0]) / (xr0[1] - xr0[0]) * xlen;\n            viewBox[2] = xlen * ((1 - progress) + progress * dx1 / dx0);\n            xa.range[0] = xa.l2r(xr0[0] * (1 - progress) + progress * xr1[0]);\n            xa.range[1] = xa.l2r(xr0[1] * (1 - progress) + progress * xr1[1]);\n        } else {\n            viewBox[0] = 0;\n            viewBox[2] = xlen;\n        }\n\n        if(editY) {\n            var yr0 = Lib.simpleMap(edit.yr0, ya.r2l);\n            var yr1 = Lib.simpleMap(edit.yr1, ya.r2l);\n            var dy0 = yr0[1] - yr0[0];\n            var dy1 = yr1[1] - yr1[0];\n            viewBox[1] = (yr0[1] * (1 - progress) + progress * yr1[1] - yr0[1]) / (yr0[0] - yr0[1]) * ylen;\n            viewBox[3] = ylen * ((1 - progress) + progress * dy1 / dy0);\n            ya.range[0] = xa.l2r(yr0[0] * (1 - progress) + progress * yr1[0]);\n            ya.range[1] = ya.l2r(yr0[1] * (1 - progress) + progress * yr1[1]);\n        } else {\n            viewBox[1] = 0;\n            viewBox[3] = ylen;\n        }\n\n        Axes.drawOne(gd, xa, {skipTitle: true});\n        Axes.drawOne(gd, ya, {skipTitle: true});\n        Axes.redrawComponents(gd, [xa._id, ya._id]);\n\n        var xScaleFactor = editX ? xlen / viewBox[2] : 1;\n        var yScaleFactor = editY ? ylen / viewBox[3] : 1;\n        var clipDx = editX ? viewBox[0] : 0;\n        var clipDy = editY ? viewBox[1] : 0;\n        var fracDx = editX ? (viewBox[0] / viewBox[2] * xlen) : 0;\n        var fracDy = editY ? (viewBox[1] / viewBox[3] * ylen) : 0;\n        var plotDx = xa._offset - fracDx;\n        var plotDy = ya._offset - fracDy;\n\n        plotinfo.clipRect\n            .call(Drawing.setTranslate, clipDx, clipDy)\n            .call(Drawing.setScale, 1 / xScaleFactor, 1 / yScaleFactor);\n\n        plotinfo.plot\n            .call(Drawing.setTranslate, plotDx, plotDy)\n            .call(Drawing.setScale, xScaleFactor, yScaleFactor);\n\n        // apply an inverse scale to individual points to counteract\n        // the scale of the trace group.\n        Drawing.setPointGroupScale(plotinfo.zoomScalePts, 1 / xScaleFactor, 1 / yScaleFactor);\n        Drawing.setTextPointsScale(plotinfo.zoomScaleTxt, 1 / xScaleFactor, 1 / yScaleFactor);\n    }\n\n    var onComplete;\n    if(makeOnCompleteCallback) {\n        // This module makes the choice whether or not it notifies Plotly.transition\n        // about completion:\n        onComplete = makeOnCompleteCallback();\n    }\n\n    function transitionComplete() {\n        var aobj = {};\n\n        for(var i = 0; i < edits.length; i++) {\n            var edit = edits[i];\n            var xa = edit.plotinfo.xaxis;\n            var ya = edit.plotinfo.yaxis;\n            if(edit.xr1) aobj[xa._name + '.range'] = edit.xr1.slice();\n            if(edit.yr1) aobj[ya._name + '.range'] = edit.yr1.slice();\n        }\n\n        // Signal that this transition has completed:\n        onComplete && onComplete();\n\n        return Registry.call('relayout', gd, aobj).then(function() {\n            for(var i = 0; i < edits.length; i++) {\n                unsetSubplotTransform(edits[i].plotinfo);\n            }\n        });\n    }\n\n    function transitionInterrupt() {\n        var aobj = {};\n\n        for(var i = 0; i < edits.length; i++) {\n            var edit = edits[i];\n            var xa = edit.plotinfo.xaxis;\n            var ya = edit.plotinfo.yaxis;\n            if(edit.xr0) aobj[xa._name + '.range'] = edit.xr0.slice();\n            if(edit.yr0) aobj[ya._name + '.range'] = edit.yr0.slice();\n        }\n\n        return Registry.call('relayout', gd, aobj).then(function() {\n            for(var i = 0; i < edits.length; i++) {\n                unsetSubplotTransform(edits[i].plotinfo);\n            }\n        });\n    }\n\n    var t1, t2, raf;\n    var easeFn = d3.ease(transitionOpts.easing);\n\n    gd._transitionData._interruptCallbacks.push(function() {\n        window.cancelAnimationFrame(raf);\n        raf = null;\n        return transitionInterrupt();\n    });\n\n    function doFrame() {\n        t2 = Date.now();\n\n        var tInterp = Math.min(1, (t2 - t1) / transitionOpts.duration);\n        var progress = easeFn(tInterp);\n\n        for(var i = 0; i < edits.length; i++) {\n            updateSubplot(edits[i], progress);\n        }\n\n        if(t2 - t1 > transitionOpts.duration) {\n            transitionComplete();\n            raf = window.cancelAnimationFrame(doFrame);\n        } else {\n            raf = window.requestAnimationFrame(doFrame);\n        }\n    }\n\n    t1 = Date.now();\n    raf = window.requestAnimationFrame(doFrame);\n\n    return Promise.resolve();\n};\n"]},"metadata":{},"sourceType":"script"}