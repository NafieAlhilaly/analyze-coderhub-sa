{"ast":null,"code":"'use strict';\n\nvar setGroupPositions = require('../bar/cross_trace_calc').setGroupPositions;\n\nmodule.exports = function crossTraceCalc(gd, plotinfo) {\n  var fullLayout = gd._fullLayout;\n  var fullData = gd._fullData;\n  var calcdata = gd.calcdata;\n  var xa = plotinfo.xaxis;\n  var ya = plotinfo.yaxis;\n  var funnels = [];\n  var funnelsVert = [];\n  var funnelsHorz = [];\n  var cd, i;\n\n  for (i = 0; i < fullData.length; i++) {\n    var fullTrace = fullData[i];\n    var isHorizontal = fullTrace.orientation === 'h';\n\n    if (fullTrace.visible === true && fullTrace.xaxis === xa._id && fullTrace.yaxis === ya._id && fullTrace.type === 'funnel') {\n      cd = calcdata[i];\n\n      if (isHorizontal) {\n        funnelsHorz.push(cd);\n      } else {\n        funnelsVert.push(cd);\n      }\n\n      funnels.push(cd);\n    }\n  }\n\n  var opts = {\n    mode: fullLayout.funnelmode,\n    norm: fullLayout.funnelnorm,\n    gap: fullLayout.funnelgap,\n    groupgap: fullLayout.funnelgroupgap\n  };\n  setGroupPositions(gd, xa, ya, funnelsVert, opts);\n  setGroupPositions(gd, ya, xa, funnelsHorz, opts);\n\n  for (i = 0; i < funnels.length; i++) {\n    cd = funnels[i];\n\n    for (var j = 0; j < cd.length; j++) {\n      if (j + 1 < cd.length) {\n        cd[j].nextP0 = cd[j + 1].p0;\n        cd[j].nextS0 = cd[j + 1].s0;\n        cd[j].nextP1 = cd[j + 1].p1;\n        cd[j].nextS1 = cd[j + 1].s1;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/funnel/cross_trace_calc.js"],"names":["setGroupPositions","require","module","exports","crossTraceCalc","gd","plotinfo","fullLayout","_fullLayout","fullData","_fullData","calcdata","xa","xaxis","ya","yaxis","funnels","funnelsVert","funnelsHorz","cd","i","length","fullTrace","isHorizontal","orientation","visible","_id","type","push","opts","mode","funnelmode","norm","funnelnorm","gap","funnelgap","groupgap","funnelgroupgap","j","nextP0","p0","nextS0","s0","nextP1","p1","nextS1","s1"],"mappings":"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","sourcesContent":["'use strict';\n\nvar setGroupPositions = require('../bar/cross_trace_calc').setGroupPositions;\n\nmodule.exports = function crossTraceCalc(gd, plotinfo) {\n    var fullLayout = gd._fullLayout;\n    var fullData = gd._fullData;\n    var calcdata = gd.calcdata;\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n    var funnels = [];\n    var funnelsVert = [];\n    var funnelsHorz = [];\n    var cd, i;\n\n    for(i = 0; i < fullData.length; i++) {\n        var fullTrace = fullData[i];\n        var isHorizontal = (fullTrace.orientation === 'h');\n\n        if(\n            fullTrace.visible === true &&\n            fullTrace.xaxis === xa._id &&\n            fullTrace.yaxis === ya._id &&\n            fullTrace.type === 'funnel'\n        ) {\n            cd = calcdata[i];\n\n            if(isHorizontal) {\n                funnelsHorz.push(cd);\n            } else {\n                funnelsVert.push(cd);\n            }\n\n            funnels.push(cd);\n        }\n    }\n\n    var opts = {\n        mode: fullLayout.funnelmode,\n        norm: fullLayout.funnelnorm,\n        gap: fullLayout.funnelgap,\n        groupgap: fullLayout.funnelgroupgap\n    };\n\n    setGroupPositions(gd, xa, ya, funnelsVert, opts);\n    setGroupPositions(gd, ya, xa, funnelsHorz, opts);\n\n    for(i = 0; i < funnels.length; i++) {\n        cd = funnels[i];\n\n        for(var j = 0; j < cd.length; j++) {\n            if(j + 1 < cd.length) {\n                cd[j].nextP0 = cd[j + 1].p0;\n                cd[j].nextS0 = cd[j + 1].s0;\n\n                cd[j].nextP1 = cd[j + 1].p1;\n                cd[j].nextS1 = cd[j + 1].s1;\n            }\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}