{"ast":null,"code":"'use strict';\n\nvar createShader = require('gl-shader');\n\nvar createBuffer = require('gl-buffer');\n\nvar SHADERS = require('./lib/shaders');\n\nmodule.exports = createSelectBox;\n\nfunction SelectBox(plot, boxBuffer, boxShader) {\n  this.plot = plot;\n  this.boxBuffer = boxBuffer;\n  this.boxShader = boxShader;\n  this.enabled = true;\n  this.selectBox = [Infinity, Infinity, -Infinity, -Infinity];\n  this.borderColor = [0, 0, 0, 1];\n  this.innerFill = false;\n  this.innerColor = [0, 0, 0, 0.25];\n  this.outerFill = true;\n  this.outerColor = [0, 0, 0, 0.5];\n  this.borderWidth = 10;\n}\n\nvar proto = SelectBox.prototype;\n\nproto.draw = function () {\n  if (!this.enabled) {\n    return;\n  }\n\n  var plot = this.plot;\n  var selectBox = this.selectBox;\n  var lineWidth = this.borderWidth;\n  var innerFill = this.innerFill;\n  var innerColor = this.innerColor;\n  var outerFill = this.outerFill;\n  var outerColor = this.outerColor;\n  var borderColor = this.borderColor;\n  var boxes = plot.box;\n  var screenBox = plot.screenBox;\n  var dataBox = plot.dataBox;\n  var viewBox = plot.viewBox;\n  var pixelRatio = plot.pixelRatio; //Map select box into pixel coordinates\n\n  var loX = (selectBox[0] - dataBox[0]) * (viewBox[2] - viewBox[0]) / (dataBox[2] - dataBox[0]) + viewBox[0];\n  var loY = (selectBox[1] - dataBox[1]) * (viewBox[3] - viewBox[1]) / (dataBox[3] - dataBox[1]) + viewBox[1];\n  var hiX = (selectBox[2] - dataBox[0]) * (viewBox[2] - viewBox[0]) / (dataBox[2] - dataBox[0]) + viewBox[0];\n  var hiY = (selectBox[3] - dataBox[1]) * (viewBox[3] - viewBox[1]) / (dataBox[3] - dataBox[1]) + viewBox[1];\n  loX = Math.max(loX, viewBox[0]);\n  loY = Math.max(loY, viewBox[1]);\n  hiX = Math.min(hiX, viewBox[2]);\n  hiY = Math.min(hiY, viewBox[3]);\n\n  if (hiX < loX || hiY < loY) {\n    return;\n  }\n\n  boxes.bind(); //Draw box\n\n  var screenWidth = screenBox[2] - screenBox[0];\n  var screenHeight = screenBox[3] - screenBox[1];\n\n  if (this.outerFill) {\n    boxes.drawBox(0, 0, screenWidth, loY, outerColor);\n    boxes.drawBox(0, loY, loX, hiY, outerColor);\n    boxes.drawBox(0, hiY, screenWidth, screenHeight, outerColor);\n    boxes.drawBox(hiX, loY, screenWidth, hiY, outerColor);\n  }\n\n  if (this.innerFill) {\n    boxes.drawBox(loX, loY, hiX, hiY, innerColor);\n  } //Draw border\n\n\n  if (lineWidth > 0) {\n    //Draw border\n    var w = lineWidth * pixelRatio;\n    boxes.drawBox(loX - w, loY - w, hiX + w, loY + w, borderColor);\n    boxes.drawBox(loX - w, hiY - w, hiX + w, hiY + w, borderColor);\n    boxes.drawBox(loX - w, loY - w, loX + w, hiY + w, borderColor);\n    boxes.drawBox(hiX - w, loY - w, hiX + w, hiY + w, borderColor);\n  }\n};\n\nproto.update = function (options) {\n  options = options || {};\n  this.innerFill = !!options.innerFill;\n  this.outerFill = !!options.outerFill;\n  this.innerColor = (options.innerColor || [0, 0, 0, 0.5]).slice();\n  this.outerColor = (options.outerColor || [0, 0, 0, 0.5]).slice();\n  this.borderColor = (options.borderColor || [0, 0, 0, 1]).slice();\n  this.borderWidth = options.borderWidth || 0;\n  this.selectBox = (options.selectBox || this.selectBox).slice();\n};\n\nproto.dispose = function () {\n  this.boxBuffer.dispose();\n  this.boxShader.dispose();\n  this.plot.removeOverlay(this);\n};\n\nfunction createSelectBox(plot, options) {\n  var gl = plot.gl;\n  var buffer = createBuffer(gl, [0, 0, 0, 1, 1, 0, 1, 1]);\n  var shader = createShader(gl, SHADERS.boxVertex, SHADERS.boxFragment);\n  var selectBox = new SelectBox(plot, buffer, shader);\n  selectBox.update(options);\n  plot.addOverlay(selectBox);\n  return selectBox;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/gl-select-box/selectbox.js"],"names":["createShader","require","createBuffer","SHADERS","module","exports","createSelectBox","SelectBox","plot","boxBuffer","boxShader","enabled","selectBox","Infinity","borderColor","innerFill","innerColor","outerFill","outerColor","borderWidth","proto","prototype","draw","lineWidth","boxes","box","screenBox","dataBox","viewBox","pixelRatio","loX","loY","hiX","hiY","Math","max","min","bind","screenWidth","screenHeight","drawBox","w","update","options","slice","dispose","removeOverlay","gl","buffer","shader","boxVertex","boxFragment","addOverlay"],"mappings":"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","sourcesContent":["'use strict'\n\nvar createShader = require('gl-shader')\nvar createBuffer = require('gl-buffer')\n\nvar SHADERS = require('./lib/shaders')\n\nmodule.exports = createSelectBox\n\nfunction SelectBox(plot, boxBuffer, boxShader) {\n  this.plot = plot\n  this.boxBuffer = boxBuffer\n  this.boxShader = boxShader\n\n  this.enabled = true\n\n  this.selectBox = [Infinity,Infinity,-Infinity,-Infinity]\n\n  this.borderColor = [0,0,0,1]\n  this.innerFill   = false\n  this.innerColor  = [0,0,0,0.25]\n  this.outerFill   = true\n  this.outerColor  = [0,0,0,0.5]\n  this.borderWidth = 10\n}\n\nvar proto = SelectBox.prototype\n\nproto.draw = function() {\n  if(!this.enabled) {\n    return\n  }\n\n  var plot         = this.plot\n  var selectBox    = this.selectBox\n  var lineWidth    = this.borderWidth\n\n  var innerFill    = this.innerFill\n  var innerColor   = this.innerColor\n  var outerFill    = this.outerFill\n  var outerColor   = this.outerColor\n  var borderColor  = this.borderColor\n\n  var boxes        = plot.box\n  var screenBox    = plot.screenBox\n  var dataBox      = plot.dataBox\n  var viewBox      = plot.viewBox\n  var pixelRatio   = plot.pixelRatio\n\n  //Map select box into pixel coordinates\n  var loX = (selectBox[0]-dataBox[0])*(viewBox[2]-viewBox[0])/(dataBox[2]-dataBox[0])+viewBox[0]\n  var loY = (selectBox[1]-dataBox[1])*(viewBox[3]-viewBox[1])/(dataBox[3]-dataBox[1])+viewBox[1]\n  var hiX = (selectBox[2]-dataBox[0])*(viewBox[2]-viewBox[0])/(dataBox[2]-dataBox[0])+viewBox[0]\n  var hiY = (selectBox[3]-dataBox[1])*(viewBox[3]-viewBox[1])/(dataBox[3]-dataBox[1])+viewBox[1]\n\n  loX = Math.max(loX, viewBox[0])\n  loY = Math.max(loY, viewBox[1])\n  hiX = Math.min(hiX, viewBox[2])\n  hiY = Math.min(hiY, viewBox[3])\n\n  if(hiX < loX || hiY < loY) {\n    return\n  }\n\n  boxes.bind()\n\n  //Draw box\n  var screenWidth  = screenBox[2] - screenBox[0]\n  var screenHeight = screenBox[3] - screenBox[1]\n\n  if(this.outerFill) {\n    boxes.drawBox(0, 0, screenWidth, loY, outerColor)\n    boxes.drawBox(0, loY, loX, hiY, outerColor)\n    boxes.drawBox(0, hiY, screenWidth, screenHeight, outerColor)\n    boxes.drawBox(hiX, loY, screenWidth, hiY, outerColor)\n  }\n\n  if(this.innerFill) {\n    boxes.drawBox(loX, loY, hiX, hiY, innerColor)\n  }\n\n  //Draw border\n  if(lineWidth > 0) {\n\n    //Draw border\n    var w = lineWidth * pixelRatio\n    boxes.drawBox(loX-w, loY-w, hiX+w, loY+w, borderColor)\n    boxes.drawBox(loX-w, hiY-w, hiX+w, hiY+w, borderColor)\n    boxes.drawBox(loX-w, loY-w, loX+w, hiY+w, borderColor)\n    boxes.drawBox(hiX-w, loY-w, hiX+w, hiY+w, borderColor)\n  }\n}\n\nproto.update = function(options) {\n  options = options || {}\n\n  this.innerFill    = !!options.innerFill\n  this.outerFill    = !!options.outerFill\n  this.innerColor   = (options.innerColor   || [0,0,0,0.5]).slice()\n  this.outerColor   = (options.outerColor   || [0,0,0,0.5]).slice()\n  this.borderColor  = (options.borderColor || [0,0,0,1]).slice()\n  this.borderWidth  = options.borderWidth || 0\n  this.selectBox    = (options.selectBox || this.selectBox).slice()\n}\n\nproto.dispose = function() {\n  this.boxBuffer.dispose()\n  this.boxShader.dispose()\n  this.plot.removeOverlay(this)\n}\n\nfunction createSelectBox(plot, options) {\n  var gl = plot.gl\n  var buffer = createBuffer(gl, [\n    0, 0,\n    0, 1,\n    1, 0,\n    1, 1 ])\n  var shader = createShader(gl, SHADERS.boxVertex, SHADERS.boxFragment)\n  var selectBox = new SelectBox(plot, buffer, shader)\n  selectBox.update(options)\n  plot.addOverlay(selectBox)\n  return selectBox\n}\n"]},"metadata":{},"sourceType":"script"}