{"ast":null,"code":"'use strict';\n\nvar axisIDs = require('../../plots/cartesian/axis_ids');\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar constants = require('./constants');\n\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\n\nvar name = constants.name;\n\nfunction isVisible(ax) {\n  var rangeSlider = ax && ax[name];\n  return rangeSlider && rangeSlider.visible;\n}\n\nexports.isVisible = isVisible;\n\nexports.makeData = function (fullLayout) {\n  var axes = axisIDs.list({\n    _fullLayout: fullLayout\n  }, 'x', true);\n  var margin = fullLayout.margin;\n  var rangeSliderData = [];\n\n  if (!fullLayout._has('gl2d')) {\n    for (var i = 0; i < axes.length; i++) {\n      var ax = axes[i];\n\n      if (isVisible(ax)) {\n        rangeSliderData.push(ax);\n        var opts = ax[name];\n        opts._id = name + ax._id;\n        opts._height = (fullLayout.height - margin.b - margin.t) * opts.thickness;\n        opts._offsetShift = Math.floor(opts.borderwidth / 2);\n      }\n    }\n  }\n\n  fullLayout._rangeSliderData = rangeSliderData;\n};\n\nexports.autoMarginOpts = function (gd, ax) {\n  var fullLayout = gd._fullLayout;\n  var opts = ax[name];\n\n  var axLetter = ax._id.charAt(0);\n\n  var bottomDepth = 0;\n  var titleHeight = 0;\n\n  if (ax.side === 'bottom') {\n    bottomDepth = ax._depth;\n\n    if (ax.title.text !== fullLayout._dfltTitle[axLetter]) {\n      // as in rangeslider/draw.js\n      titleHeight = 1.5 * ax.title.font.size + 10 + opts._offsetShift; // multi-line extra bump\n\n      var extraLines = (ax.title.text.match(svgTextUtils.BR_TAG_ALL) || []).length;\n      titleHeight += extraLines * ax.title.font.size * LINE_SPACING;\n    }\n  }\n\n  return {\n    x: 0,\n    y: ax._counterDomainMin,\n    l: 0,\n    r: 0,\n    t: 0,\n    b: opts._height + bottomDepth + Math.max(fullLayout.margin.b, titleHeight),\n    pad: constants.extraPad + opts._offsetShift * 2\n  };\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/rangeslider/helpers.js"],"names":["axisIDs","require","svgTextUtils","constants","LINE_SPACING","name","isVisible","ax","rangeSlider","visible","exports","makeData","fullLayout","axes","list","_fullLayout","margin","rangeSliderData","_has","i","length","push","opts","_id","_height","height","b","t","thickness","_offsetShift","Math","floor","borderwidth","_rangeSliderData","autoMarginOpts","gd","axLetter","charAt","bottomDepth","titleHeight","side","_depth","title","text","_dfltTitle","font","size","extraLines","match","BR_TAG_ALL","x","y","_counterDomainMin","l","r","max","pad","extraPad"],"mappings":"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","sourcesContent":["'use strict';\n\nvar axisIDs = require('../../plots/cartesian/axis_ids');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar constants = require('./constants');\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\nvar name = constants.name;\n\nfunction isVisible(ax) {\n    var rangeSlider = ax && ax[name];\n    return rangeSlider && rangeSlider.visible;\n}\nexports.isVisible = isVisible;\n\nexports.makeData = function(fullLayout) {\n    var axes = axisIDs.list({ _fullLayout: fullLayout }, 'x', true);\n    var margin = fullLayout.margin;\n    var rangeSliderData = [];\n\n    if(!fullLayout._has('gl2d')) {\n        for(var i = 0; i < axes.length; i++) {\n            var ax = axes[i];\n\n            if(isVisible(ax)) {\n                rangeSliderData.push(ax);\n\n                var opts = ax[name];\n                opts._id = name + ax._id;\n                opts._height = (fullLayout.height - margin.b - margin.t) * opts.thickness;\n                opts._offsetShift = Math.floor(opts.borderwidth / 2);\n            }\n        }\n    }\n\n    fullLayout._rangeSliderData = rangeSliderData;\n};\n\nexports.autoMarginOpts = function(gd, ax) {\n    var fullLayout = gd._fullLayout;\n    var opts = ax[name];\n    var axLetter = ax._id.charAt(0);\n\n    var bottomDepth = 0;\n    var titleHeight = 0;\n    if(ax.side === 'bottom') {\n        bottomDepth = ax._depth;\n        if(ax.title.text !== fullLayout._dfltTitle[axLetter]) {\n            // as in rangeslider/draw.js\n            titleHeight = 1.5 * ax.title.font.size + 10 + opts._offsetShift;\n            // multi-line extra bump\n            var extraLines = (ax.title.text.match(svgTextUtils.BR_TAG_ALL) || []).length;\n            titleHeight += extraLines * ax.title.font.size * LINE_SPACING;\n        }\n    }\n\n    return {\n        x: 0,\n        y: ax._counterDomainMin,\n        l: 0,\n        r: 0,\n        t: 0,\n        b: opts._height + bottomDepth + Math.max(fullLayout.margin.b, titleHeight),\n        pad: constants.extraPad + opts._offsetShift * 2\n    };\n};\n"]},"metadata":{},"sourceType":"script"}