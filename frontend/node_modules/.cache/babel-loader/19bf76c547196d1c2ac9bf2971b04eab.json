{"ast":null,"code":"module.exports = transpose;\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a12 = a[6],\n        a13 = a[7],\n        a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n;","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/gl-mat4/transpose.js"],"names":["module","exports","transpose","out","a","a01","a02","a03","a12","a13","a23"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,CAAxB,EAA2B;AACvB;AACA,MAAID,GAAG,KAAKC,CAAZ,EAAe;AACX,QAAIC,GAAG,GAAGD,CAAC,CAAC,CAAD,CAAX;AAAA,QAAgBE,GAAG,GAAGF,CAAC,CAAC,CAAD,CAAvB;AAAA,QAA4BG,GAAG,GAAGH,CAAC,CAAC,CAAD,CAAnC;AAAA,QACII,GAAG,GAAGJ,CAAC,CAAC,CAAD,CADX;AAAA,QACgBK,GAAG,GAAGL,CAAC,CAAC,CAAD,CADvB;AAAA,QAEIM,GAAG,GAAGN,CAAC,CAAC,EAAD,CAFX;AAIAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,EAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASE,GAAT;AACAF,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,EAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASG,GAAT;AACAH,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASK,GAAT;AACAL,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUC,CAAC,CAAC,EAAD,CAAX;AACAD,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUI,GAAV;AACAJ,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUM,GAAV;AACAN,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUO,GAAV;AACH,GAjBD,MAiBO;AACHP,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,EAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,EAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,CAAC,CAAC,CAAD,CAAV;AACAD,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUC,CAAC,CAAC,EAAD,CAAX;AACAD,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUC,CAAC,CAAC,EAAD,CAAX;AACAD,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUC,CAAC,CAAC,CAAD,CAAX;AACAD,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUC,CAAC,CAAC,CAAD,CAAX;AACAD,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUC,CAAC,CAAC,EAAD,CAAX;AACAD,IAAAA,GAAG,CAAC,EAAD,CAAH,GAAUC,CAAC,CAAC,EAAD,CAAX;AACH;;AAED,SAAOD,GAAP;AACH;;AAAA","sourcesContent":["module.exports = transpose;\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};"]},"metadata":{},"sourceType":"script"}