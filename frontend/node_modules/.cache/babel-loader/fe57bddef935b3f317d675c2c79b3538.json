{"ast":null,"code":"'use strict';\n\nvar drawRaw = require('../annotations/draw').drawRaw;\n\nvar project = require('../../plots/gl3d/project');\n\nvar axLetters = ['x', 'y', 'z'];\n\nmodule.exports = function draw(scene) {\n  var fullSceneLayout = scene.fullSceneLayout;\n  var dataScale = scene.dataScale;\n  var anns = fullSceneLayout.annotations;\n\n  for (var i = 0; i < anns.length; i++) {\n    var ann = anns[i];\n    var annotationIsOffscreen = false;\n\n    for (var j = 0; j < 3; j++) {\n      var axLetter = axLetters[j];\n      var pos = ann[axLetter];\n      var ax = fullSceneLayout[axLetter + 'axis'];\n      var posFraction = ax.r2fraction(pos);\n\n      if (posFraction < 0 || posFraction > 1) {\n        annotationIsOffscreen = true;\n        break;\n      }\n    }\n\n    if (annotationIsOffscreen) {\n      scene.fullLayout._infolayer.select('.annotation-' + scene.id + '[data-index=\"' + i + '\"]').remove();\n    } else {\n      ann._pdata = project(scene.glplot.cameraParams, [fullSceneLayout.xaxis.r2l(ann.x) * dataScale[0], fullSceneLayout.yaxis.r2l(ann.y) * dataScale[1], fullSceneLayout.zaxis.r2l(ann.z) * dataScale[2]]);\n      drawRaw(scene.graphDiv, ann, i, scene.id, ann._xa, ann._ya);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/annotations3d/draw.js"],"names":["drawRaw","require","project","axLetters","module","exports","draw","scene","fullSceneLayout","dataScale","anns","annotations","i","length","ann","annotationIsOffscreen","j","axLetter","pos","ax","posFraction","r2fraction","fullLayout","_infolayer","select","id","remove","_pdata","glplot","cameraParams","xaxis","r2l","x","yaxis","y","zaxis","z","graphDiv","_xa","_ya"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BD,OAA7C;;AACA,IAAIE,OAAO,GAAGD,OAAO,CAAC,0BAAD,CAArB;;AACA,IAAIE,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAhB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,MAAIC,eAAe,GAAGD,KAAK,CAACC,eAA5B;AACA,MAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;AACA,MAAIC,IAAI,GAAGF,eAAe,CAACG,WAA3B;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,IAAI,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,QAAIE,GAAG,GAAGJ,IAAI,CAACE,CAAD,CAAd;AACA,QAAIG,qBAAqB,GAAG,KAA5B;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACvB,UAAIC,QAAQ,GAAGd,SAAS,CAACa,CAAD,CAAxB;AACA,UAAIE,GAAG,GAAGJ,GAAG,CAACG,QAAD,CAAb;AACA,UAAIE,EAAE,GAAGX,eAAe,CAACS,QAAQ,GAAG,MAAZ,CAAxB;AACA,UAAIG,WAAW,GAAGD,EAAE,CAACE,UAAH,CAAcH,GAAd,CAAlB;;AAEA,UAAGE,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAG,CAApC,EAAuC;AACnCL,QAAAA,qBAAqB,GAAG,IAAxB;AACA;AACH;AACJ;;AAED,QAAGA,qBAAH,EAA0B;AACtBR,MAAAA,KAAK,CAACe,UAAN,CAAiBC,UAAjB,CACKC,MADL,CACY,iBAAiBjB,KAAK,CAACkB,EAAvB,GAA4B,eAA5B,GAA8Cb,CAA9C,GAAkD,IAD9D,EAEKc,MAFL;AAGH,KAJD,MAIO;AACHZ,MAAAA,GAAG,CAACa,MAAJ,GAAazB,OAAO,CAACK,KAAK,CAACqB,MAAN,CAAaC,YAAd,EAA4B,CAC5CrB,eAAe,CAACsB,KAAhB,CAAsBC,GAAtB,CAA0BjB,GAAG,CAACkB,CAA9B,IAAmCvB,SAAS,CAAC,CAAD,CADA,EAE5CD,eAAe,CAACyB,KAAhB,CAAsBF,GAAtB,CAA0BjB,GAAG,CAACoB,CAA9B,IAAmCzB,SAAS,CAAC,CAAD,CAFA,EAG5CD,eAAe,CAAC2B,KAAhB,CAAsBJ,GAAtB,CAA0BjB,GAAG,CAACsB,CAA9B,IAAmC3B,SAAS,CAAC,CAAD,CAHA,CAA5B,CAApB;AAMAT,MAAAA,OAAO,CAACO,KAAK,CAAC8B,QAAP,EAAiBvB,GAAjB,EAAsBF,CAAtB,EAAyBL,KAAK,CAACkB,EAA/B,EAAmCX,GAAG,CAACwB,GAAvC,EAA4CxB,GAAG,CAACyB,GAAhD,CAAP;AACH;AACJ;AACJ,CAnCD","sourcesContent":["'use strict';\n\nvar drawRaw = require('../annotations/draw').drawRaw;\nvar project = require('../../plots/gl3d/project');\nvar axLetters = ['x', 'y', 'z'];\n\nmodule.exports = function draw(scene) {\n    var fullSceneLayout = scene.fullSceneLayout;\n    var dataScale = scene.dataScale;\n    var anns = fullSceneLayout.annotations;\n\n    for(var i = 0; i < anns.length; i++) {\n        var ann = anns[i];\n        var annotationIsOffscreen = false;\n\n        for(var j = 0; j < 3; j++) {\n            var axLetter = axLetters[j];\n            var pos = ann[axLetter];\n            var ax = fullSceneLayout[axLetter + 'axis'];\n            var posFraction = ax.r2fraction(pos);\n\n            if(posFraction < 0 || posFraction > 1) {\n                annotationIsOffscreen = true;\n                break;\n            }\n        }\n\n        if(annotationIsOffscreen) {\n            scene.fullLayout._infolayer\n                .select('.annotation-' + scene.id + '[data-index=\"' + i + '\"]')\n                .remove();\n        } else {\n            ann._pdata = project(scene.glplot.cameraParams, [\n                fullSceneLayout.xaxis.r2l(ann.x) * dataScale[0],\n                fullSceneLayout.yaxis.r2l(ann.y) * dataScale[1],\n                fullSceneLayout.zaxis.r2l(ann.z) * dataScale[2]\n            ]);\n\n            drawRaw(scene.graphDiv, ann, i, scene.id, ann._xa, ann._ya);\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}