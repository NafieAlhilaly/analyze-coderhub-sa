{"ast":null,"code":"import { coordEach } from \"@turf/meta\";\nimport { point } from \"@turf/helpers\";\n/**\n * Takes one or more features and calculates the centroid using the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.\n *\n * @name centroid\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\n\nfunction centroid(geojson, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var xSum = 0;\n  var ySum = 0;\n  var len = 0;\n  coordEach(geojson, function (coord) {\n    xSum += coord[0];\n    ySum += coord[1];\n    len++;\n  }, true);\n  return point([xSum / len, ySum / len], options.properties);\n}\n\nexport default centroid;","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/@turf/centroid/dist/es/index.js"],"names":["coordEach","point","centroid","geojson","options","xSum","ySum","len","coord","properties"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,OAA3B,EAAoC;AAChC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,GAAG,GAAG,CAAV;AACAP,EAAAA,SAAS,CAACG,OAAD,EAAU,UAAUK,KAAV,EAAiB;AAChCH,IAAAA,IAAI,IAAIG,KAAK,CAAC,CAAD,CAAb;AACAF,IAAAA,IAAI,IAAIE,KAAK,CAAC,CAAD,CAAb;AACAD,IAAAA,GAAG;AACN,GAJQ,EAIN,IAJM,CAAT;AAKA,SAAON,KAAK,CAAC,CAACI,IAAI,GAAGE,GAAR,EAAaD,IAAI,GAAGC,GAApB,CAAD,EAA2BH,OAAO,CAACK,UAAnC,CAAZ;AACH;;AACD,eAAeP,QAAf","sourcesContent":["import { coordEach } from \"@turf/meta\";\nimport { point } from \"@turf/helpers\";\n/**\n * Takes one or more features and calculates the centroid using the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.\n *\n * @name centroid\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\nfunction centroid(geojson, options) {\n    if (options === void 0) { options = {}; }\n    var xSum = 0;\n    var ySum = 0;\n    var len = 0;\n    coordEach(geojson, function (coord) {\n        xSum += coord[0];\n        ySum += coord[1];\n        len++;\n    }, true);\n    return point([xSum / len, ySum / len], options.properties);\n}\nexport default centroid;\n"]},"metadata":{},"sourceType":"module"}