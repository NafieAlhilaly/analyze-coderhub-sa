{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Color = require('../../components/color');\n\nvar setCursor = require('../../lib/setcursor');\n\nvar pieHelpers = require('../pie/helpers');\n\nexports.findEntryWithLevel = function (hierarchy, level) {\n  var out;\n\n  if (level) {\n    hierarchy.eachAfter(function (pt) {\n      if (exports.getPtId(pt) === level) {\n        return out = pt.copy();\n      }\n    });\n  }\n\n  return out || hierarchy;\n};\n\nexports.findEntryWithChild = function (hierarchy, childId) {\n  var out;\n  hierarchy.eachAfter(function (pt) {\n    var children = pt.children || [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (exports.getPtId(child) === childId) {\n        return out = pt.copy();\n      }\n    }\n  });\n  return out || hierarchy;\n};\n\nexports.isEntry = function (pt) {\n  return !pt.parent;\n};\n\nexports.isLeaf = function (pt) {\n  return !pt.children;\n};\n\nexports.getPtId = function (pt) {\n  return pt.data.data.id;\n};\n\nexports.getPtLabel = function (pt) {\n  return pt.data.data.label;\n};\n\nexports.getValue = function (d) {\n  return d.value;\n};\n\nexports.isHierarchyRoot = function (pt) {\n  return getParentId(pt) === '';\n};\n\nexports.setSliceCursor = function (sliceTop, gd, opts) {\n  var hide = opts.isTransitioning;\n\n  if (!hide) {\n    var pt = sliceTop.datum();\n    hide = opts.hideOnRoot && exports.isHierarchyRoot(pt) || opts.hideOnLeaves && exports.isLeaf(pt);\n  }\n\n  setCursor(sliceTop, hide ? null : 'pointer');\n};\n\nfunction determineOutsideTextFont(trace, pt, layoutFont) {\n  return {\n    color: exports.getOutsideTextFontKey('color', trace, pt, layoutFont),\n    family: exports.getOutsideTextFontKey('family', trace, pt, layoutFont),\n    size: exports.getOutsideTextFontKey('size', trace, pt, layoutFont)\n  };\n}\n\nfunction determineInsideTextFont(trace, pt, layoutFont, opts) {\n  var onPathbar = (opts || {}).onPathbar;\n  var cdi = pt.data.data;\n  var ptNumber = cdi.i;\n  var customColor = Lib.castOption(trace, ptNumber, (onPathbar ? 'pathbar.textfont' : 'insidetextfont') + '.color');\n\n  if (!customColor && trace._input.textfont) {\n    // Why not simply using trace.textfont? Because if not set, it\n    // defaults to layout.font which has a default color. But if\n    // textfont.color and insidetextfont.color don't supply a value,\n    // a contrasting color shall be used.\n    customColor = Lib.castOption(trace._input, ptNumber, 'textfont.color');\n  }\n\n  return {\n    color: customColor || Color.contrast(cdi.color),\n    family: exports.getInsideTextFontKey('family', trace, pt, layoutFont, opts),\n    size: exports.getInsideTextFontKey('size', trace, pt, layoutFont, opts)\n  };\n}\n\nexports.getInsideTextFontKey = function (keyStr, trace, pt, layoutFont, opts) {\n  var onPathbar = (opts || {}).onPathbar;\n  var cont = onPathbar ? 'pathbar.textfont' : 'insidetextfont';\n  var ptNumber = pt.data.data.i;\n  return Lib.castOption(trace, ptNumber, cont + '.' + keyStr) || Lib.castOption(trace, ptNumber, 'textfont.' + keyStr) || layoutFont.size;\n};\n\nexports.getOutsideTextFontKey = function (keyStr, trace, pt, layoutFont) {\n  var ptNumber = pt.data.data.i;\n  return Lib.castOption(trace, ptNumber, 'outsidetextfont.' + keyStr) || Lib.castOption(trace, ptNumber, 'textfont.' + keyStr) || layoutFont.size;\n};\n\nexports.isOutsideText = function (trace, pt) {\n  return !trace._hasColorscale && exports.isHierarchyRoot(pt);\n};\n\nexports.determineTextFont = function (trace, pt, layoutFont, opts) {\n  return exports.isOutsideText(trace, pt) ? determineOutsideTextFont(trace, pt, layoutFont) : determineInsideTextFont(trace, pt, layoutFont, opts);\n};\n\nexports.hasTransition = function (transitionOpts) {\n  // We could optimize hasTransition per trace,\n  // as sunburst, treemap & icicle have no cross-trace logic!\n  return !!(transitionOpts && transitionOpts.duration > 0);\n};\n\nexports.getMaxDepth = function (trace) {\n  return trace.maxdepth >= 0 ? trace.maxdepth : Infinity;\n};\n\nexports.isHeader = function (pt, trace) {\n  // it is only used in treemap.\n  return !(exports.isLeaf(pt) || pt.depth === trace._maxDepth - 1);\n};\n\nfunction getParentId(pt) {\n  return pt.data.data.pid;\n}\n\nexports.getParent = function (hierarchy, pt) {\n  return exports.findEntryWithLevel(hierarchy, getParentId(pt));\n};\n\nexports.listPath = function (d, keyStr) {\n  var parent = d.parent;\n  if (!parent) return [];\n  var list = keyStr ? [parent.data[keyStr]] : [parent];\n  return exports.listPath(parent, keyStr).concat(list);\n};\n\nexports.getPath = function (d) {\n  return exports.listPath(d, 'label').join('/') + '/';\n};\n\nexports.formatValue = pieHelpers.formatPieValue; // TODO: should combine the two in a separate PR - Also please note Lib.formatPercent should support separators.\n\nexports.formatPercent = function (v, separators) {\n  var tx = Lib.formatPercent(v, 0); // use funnel(area) version\n\n  if (tx === '0%') tx = pieHelpers.formatPiePercent(v, separators); // use pie version\n\n  return tx;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/sunburst/helpers.js"],"names":["Lib","require","Color","setCursor","pieHelpers","exports","findEntryWithLevel","hierarchy","level","out","eachAfter","pt","getPtId","copy","findEntryWithChild","childId","children","i","length","child","isEntry","parent","isLeaf","data","id","getPtLabel","label","getValue","d","value","isHierarchyRoot","getParentId","setSliceCursor","sliceTop","gd","opts","hide","isTransitioning","datum","hideOnRoot","hideOnLeaves","determineOutsideTextFont","trace","layoutFont","color","getOutsideTextFontKey","family","size","determineInsideTextFont","onPathbar","cdi","ptNumber","customColor","castOption","_input","textfont","contrast","getInsideTextFontKey","keyStr","cont","isOutsideText","_hasColorscale","determineTextFont","hasTransition","transitionOpts","duration","getMaxDepth","maxdepth","Infinity","isHeader","depth","_maxDepth","pid","getParent","listPath","list","concat","getPath","join","formatValue","formatPieValue","formatPercent","v","separators","tx","formatPiePercent"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar setCursor = require('../../lib/setcursor');\nvar pieHelpers = require('../pie/helpers');\n\nexports.findEntryWithLevel = function(hierarchy, level) {\n    var out;\n    if(level) {\n        hierarchy.eachAfter(function(pt) {\n            if(exports.getPtId(pt) === level) {\n                return out = pt.copy();\n            }\n        });\n    }\n    return out || hierarchy;\n};\n\nexports.findEntryWithChild = function(hierarchy, childId) {\n    var out;\n    hierarchy.eachAfter(function(pt) {\n        var children = pt.children || [];\n        for(var i = 0; i < children.length; i++) {\n            var child = children[i];\n            if(exports.getPtId(child) === childId) {\n                return out = pt.copy();\n            }\n        }\n    });\n    return out || hierarchy;\n};\n\nexports.isEntry = function(pt) {\n    return !pt.parent;\n};\n\nexports.isLeaf = function(pt) {\n    return !pt.children;\n};\n\nexports.getPtId = function(pt) {\n    return pt.data.data.id;\n};\n\nexports.getPtLabel = function(pt) {\n    return pt.data.data.label;\n};\n\nexports.getValue = function(d) {\n    return d.value;\n};\n\nexports.isHierarchyRoot = function(pt) {\n    return getParentId(pt) === '';\n};\n\nexports.setSliceCursor = function(sliceTop, gd, opts) {\n    var hide = opts.isTransitioning;\n    if(!hide) {\n        var pt = sliceTop.datum();\n        hide = (\n            (opts.hideOnRoot && exports.isHierarchyRoot(pt)) ||\n            (opts.hideOnLeaves && exports.isLeaf(pt))\n        );\n    }\n    setCursor(sliceTop, hide ? null : 'pointer');\n};\n\nfunction determineOutsideTextFont(trace, pt, layoutFont) {\n    return {\n        color: exports.getOutsideTextFontKey('color', trace, pt, layoutFont),\n        family: exports.getOutsideTextFontKey('family', trace, pt, layoutFont),\n        size: exports.getOutsideTextFontKey('size', trace, pt, layoutFont)\n    };\n}\n\nfunction determineInsideTextFont(trace, pt, layoutFont, opts) {\n    var onPathbar = (opts || {}).onPathbar;\n\n    var cdi = pt.data.data;\n    var ptNumber = cdi.i;\n\n    var customColor = Lib.castOption(trace, ptNumber,\n        (onPathbar ? 'pathbar.textfont' : 'insidetextfont') + '.color'\n    );\n\n    if(!customColor && trace._input.textfont) {\n        // Why not simply using trace.textfont? Because if not set, it\n        // defaults to layout.font which has a default color. But if\n        // textfont.color and insidetextfont.color don't supply a value,\n        // a contrasting color shall be used.\n        customColor = Lib.castOption(trace._input, ptNumber, 'textfont.color');\n    }\n\n    return {\n        color: customColor || Color.contrast(cdi.color),\n        family: exports.getInsideTextFontKey('family', trace, pt, layoutFont, opts),\n        size: exports.getInsideTextFontKey('size', trace, pt, layoutFont, opts)\n    };\n}\n\nexports.getInsideTextFontKey = function(keyStr, trace, pt, layoutFont, opts) {\n    var onPathbar = (opts || {}).onPathbar;\n    var cont = onPathbar ? 'pathbar.textfont' : 'insidetextfont';\n    var ptNumber = pt.data.data.i;\n\n    return (\n        Lib.castOption(trace, ptNumber, cont + '.' + keyStr) ||\n        Lib.castOption(trace, ptNumber, 'textfont.' + keyStr) ||\n        layoutFont.size\n    );\n};\n\nexports.getOutsideTextFontKey = function(keyStr, trace, pt, layoutFont) {\n    var ptNumber = pt.data.data.i;\n\n    return (\n        Lib.castOption(trace, ptNumber, 'outsidetextfont.' + keyStr) ||\n        Lib.castOption(trace, ptNumber, 'textfont.' + keyStr) ||\n        layoutFont.size\n    );\n};\n\nexports.isOutsideText = function(trace, pt) {\n    return !trace._hasColorscale && exports.isHierarchyRoot(pt);\n};\n\nexports.determineTextFont = function(trace, pt, layoutFont, opts) {\n    return exports.isOutsideText(trace, pt) ?\n        determineOutsideTextFont(trace, pt, layoutFont) :\n        determineInsideTextFont(trace, pt, layoutFont, opts);\n};\n\nexports.hasTransition = function(transitionOpts) {\n    // We could optimize hasTransition per trace,\n    // as sunburst, treemap & icicle have no cross-trace logic!\n    return !!(transitionOpts && transitionOpts.duration > 0);\n};\n\nexports.getMaxDepth = function(trace) {\n    return trace.maxdepth >= 0 ? trace.maxdepth : Infinity;\n};\n\nexports.isHeader = function(pt, trace) { // it is only used in treemap.\n    return !(exports.isLeaf(pt) || pt.depth === trace._maxDepth - 1);\n};\n\nfunction getParentId(pt) {\n    return pt.data.data.pid;\n}\n\nexports.getParent = function(hierarchy, pt) {\n    return exports.findEntryWithLevel(hierarchy, getParentId(pt));\n};\n\nexports.listPath = function(d, keyStr) {\n    var parent = d.parent;\n    if(!parent) return [];\n    var list = keyStr ? [parent.data[keyStr]] : [parent];\n    return exports.listPath(parent, keyStr).concat(list);\n};\n\nexports.getPath = function(d) {\n    return exports.listPath(d, 'label').join('/') + '/';\n};\n\nexports.formatValue = pieHelpers.formatPieValue;\n\n// TODO: should combine the two in a separate PR - Also please note Lib.formatPercent should support separators.\nexports.formatPercent = function(v, separators) {\n    var tx = Lib.formatPercent(v, 0); // use funnel(area) version\n    if(tx === '0%') tx = pieHelpers.formatPiePercent(v, separators); // use pie version\n    return tx;\n};\n"]},"metadata":{},"sourceType":"script"}