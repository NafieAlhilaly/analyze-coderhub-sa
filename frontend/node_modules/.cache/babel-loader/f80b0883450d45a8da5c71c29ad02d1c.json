{"ast":null,"code":"'use strict';\n\nvar tinycolor = require('tinycolor2');\n\nvar isNumeric = require('fast-isnumeric');\n\nvar isTypedArray = require('../../lib/array').isTypedArray;\n\nvar color = module.exports = {};\n\nvar colorAttrs = require('./attributes');\n\ncolor.defaults = colorAttrs.defaults;\nvar defaultLine = color.defaultLine = colorAttrs.defaultLine;\ncolor.lightLine = colorAttrs.lightLine;\nvar background = color.background = colorAttrs.background;\n/*\n * tinyRGB: turn a tinycolor into an rgb string, but\n * unlike the built-in tinycolor.toRgbString this never includes alpha\n */\n\ncolor.tinyRGB = function (tc) {\n  var c = tc.toRgb();\n  return 'rgb(' + Math.round(c.r) + ', ' + Math.round(c.g) + ', ' + Math.round(c.b) + ')';\n};\n\ncolor.rgb = function (cstr) {\n  return color.tinyRGB(tinycolor(cstr));\n};\n\ncolor.opacity = function (cstr) {\n  return cstr ? tinycolor(cstr).getAlpha() : 0;\n};\n\ncolor.addOpacity = function (cstr, op) {\n  var c = tinycolor(cstr).toRgb();\n  return 'rgba(' + Math.round(c.r) + ', ' + Math.round(c.g) + ', ' + Math.round(c.b) + ', ' + op + ')';\n}; // combine two colors into one apparent color\n// if back has transparency or is missing,\n// color.background is assumed behind it\n\n\ncolor.combine = function (front, back) {\n  var fc = tinycolor(front).toRgb();\n  if (fc.a === 1) return tinycolor(front).toRgbString();\n  var bc = tinycolor(back || background).toRgb();\n  var bcflat = bc.a === 1 ? bc : {\n    r: 255 * (1 - bc.a) + bc.r * bc.a,\n    g: 255 * (1 - bc.a) + bc.g * bc.a,\n    b: 255 * (1 - bc.a) + bc.b * bc.a\n  };\n  var fcflat = {\n    r: bcflat.r * (1 - fc.a) + fc.r * fc.a,\n    g: bcflat.g * (1 - fc.a) + fc.g * fc.a,\n    b: bcflat.b * (1 - fc.a) + fc.b * fc.a\n  };\n  return tinycolor(fcflat).toRgbString();\n};\n/*\n * Create a color that contrasts with cstr.\n *\n * If cstr is a dark color, we lighten it; if it's light, we darken.\n *\n * If lightAmount / darkAmount are used, we adjust by these percentages,\n * otherwise we go all the way to white or black.\n */\n\n\ncolor.contrast = function (cstr, lightAmount, darkAmount) {\n  var tc = tinycolor(cstr);\n  if (tc.getAlpha() !== 1) tc = tinycolor(color.combine(cstr, background));\n  var newColor = tc.isDark() ? lightAmount ? tc.lighten(lightAmount) : background : darkAmount ? tc.darken(darkAmount) : defaultLine;\n  return newColor.toString();\n};\n\ncolor.stroke = function (s, c) {\n  var tc = tinycolor(c);\n  s.style({\n    'stroke': color.tinyRGB(tc),\n    'stroke-opacity': tc.getAlpha()\n  });\n};\n\ncolor.fill = function (s, c) {\n  var tc = tinycolor(c);\n  s.style({\n    'fill': color.tinyRGB(tc),\n    'fill-opacity': tc.getAlpha()\n  });\n}; // search container for colors with the deprecated rgb(fractions) format\n// and convert them to rgb(0-255 values)\n\n\ncolor.clean = function (container) {\n  if (!container || typeof container !== 'object') return;\n  var keys = Object.keys(container);\n  var i, j, key, val;\n\n  for (i = 0; i < keys.length; i++) {\n    key = keys[i];\n    val = container[key];\n\n    if (key.substr(key.length - 5) === 'color') {\n      // only sanitize keys that end in \"color\" or \"colorscale\"\n      if (Array.isArray(val)) {\n        for (j = 0; j < val.length; j++) val[j] = cleanOne(val[j]);\n      } else container[key] = cleanOne(val);\n    } else if (key.substr(key.length - 10) === 'colorscale' && Array.isArray(val)) {\n      // colorscales have the format [[0, color1], [frac, color2], ... [1, colorN]]\n      for (j = 0; j < val.length; j++) {\n        if (Array.isArray(val[j])) val[j][1] = cleanOne(val[j][1]);\n      }\n    } else if (Array.isArray(val)) {\n      // recurse into arrays of objects, and plain objects\n      var el0 = val[0];\n\n      if (!Array.isArray(el0) && el0 && typeof el0 === 'object') {\n        for (j = 0; j < val.length; j++) color.clean(val[j]);\n      }\n    } else if (val && typeof val === 'object' && !isTypedArray(val)) color.clean(val);\n  }\n};\n\nfunction cleanOne(val) {\n  if (isNumeric(val) || typeof val !== 'string') return val;\n  var valTrim = val.trim();\n  if (valTrim.substr(0, 3) !== 'rgb') return val;\n  var match = valTrim.match(/^rgba?\\s*\\(([^()]*)\\)$/);\n  if (!match) return val;\n  var parts = match[1].trim().split(/\\s*[\\s,]\\s*/);\n  var rgba = valTrim.charAt(3) === 'a' && parts.length === 4;\n  if (!rgba && parts.length !== 3) return val;\n\n  for (var i = 0; i < parts.length; i++) {\n    if (!parts[i].length) return val;\n    parts[i] = Number(parts[i]);\n\n    if (!(parts[i] >= 0)) {\n      // all parts must be non-negative numbers\n      return val;\n    }\n\n    if (i === 3) {\n      // alpha>1 gets clipped to 1\n      if (parts[i] > 1) parts[i] = 1;\n    } else if (parts[i] >= 1) {\n      // r, g, b must be < 1 (ie 1 itself is not allowed)\n      return val;\n    }\n  }\n\n  var rgbStr = Math.round(parts[0] * 255) + ', ' + Math.round(parts[1] * 255) + ', ' + Math.round(parts[2] * 255);\n  if (rgba) return 'rgba(' + rgbStr + ', ' + parts[3] + ')';\n  return 'rgb(' + rgbStr + ')';\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/color/index.js"],"names":["tinycolor","require","isNumeric","isTypedArray","color","module","exports","colorAttrs","defaults","defaultLine","lightLine","background","tinyRGB","tc","c","toRgb","Math","round","r","g","b","rgb","cstr","opacity","getAlpha","addOpacity","op","combine","front","back","fc","a","toRgbString","bc","bcflat","fcflat","contrast","lightAmount","darkAmount","newColor","isDark","lighten","darken","toString","stroke","s","style","fill","clean","container","keys","Object","i","j","key","val","length","substr","Array","isArray","cleanOne","el0","valTrim","trim","match","parts","split","rgba","charAt","Number","rgbStr"],"mappings":"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","sourcesContent":["'use strict';\n\nvar tinycolor = require('tinycolor2');\nvar isNumeric = require('fast-isnumeric');\nvar isTypedArray = require('../../lib/array').isTypedArray;\n\nvar color = module.exports = {};\n\nvar colorAttrs = require('./attributes');\ncolor.defaults = colorAttrs.defaults;\nvar defaultLine = color.defaultLine = colorAttrs.defaultLine;\ncolor.lightLine = colorAttrs.lightLine;\nvar background = color.background = colorAttrs.background;\n\n/*\n * tinyRGB: turn a tinycolor into an rgb string, but\n * unlike the built-in tinycolor.toRgbString this never includes alpha\n */\ncolor.tinyRGB = function(tc) {\n    var c = tc.toRgb();\n    return 'rgb(' + Math.round(c.r) + ', ' +\n        Math.round(c.g) + ', ' + Math.round(c.b) + ')';\n};\n\ncolor.rgb = function(cstr) { return color.tinyRGB(tinycolor(cstr)); };\n\ncolor.opacity = function(cstr) { return cstr ? tinycolor(cstr).getAlpha() : 0; };\n\ncolor.addOpacity = function(cstr, op) {\n    var c = tinycolor(cstr).toRgb();\n    return 'rgba(' + Math.round(c.r) + ', ' +\n        Math.round(c.g) + ', ' + Math.round(c.b) + ', ' + op + ')';\n};\n\n// combine two colors into one apparent color\n// if back has transparency or is missing,\n// color.background is assumed behind it\ncolor.combine = function(front, back) {\n    var fc = tinycolor(front).toRgb();\n    if(fc.a === 1) return tinycolor(front).toRgbString();\n\n    var bc = tinycolor(back || background).toRgb();\n    var bcflat = bc.a === 1 ? bc : {\n        r: 255 * (1 - bc.a) + bc.r * bc.a,\n        g: 255 * (1 - bc.a) + bc.g * bc.a,\n        b: 255 * (1 - bc.a) + bc.b * bc.a\n    };\n    var fcflat = {\n        r: bcflat.r * (1 - fc.a) + fc.r * fc.a,\n        g: bcflat.g * (1 - fc.a) + fc.g * fc.a,\n        b: bcflat.b * (1 - fc.a) + fc.b * fc.a\n    };\n    return tinycolor(fcflat).toRgbString();\n};\n\n/*\n * Create a color that contrasts with cstr.\n *\n * If cstr is a dark color, we lighten it; if it's light, we darken.\n *\n * If lightAmount / darkAmount are used, we adjust by these percentages,\n * otherwise we go all the way to white or black.\n */\ncolor.contrast = function(cstr, lightAmount, darkAmount) {\n    var tc = tinycolor(cstr);\n\n    if(tc.getAlpha() !== 1) tc = tinycolor(color.combine(cstr, background));\n\n    var newColor = tc.isDark() ?\n        (lightAmount ? tc.lighten(lightAmount) : background) :\n        (darkAmount ? tc.darken(darkAmount) : defaultLine);\n\n    return newColor.toString();\n};\n\ncolor.stroke = function(s, c) {\n    var tc = tinycolor(c);\n    s.style({'stroke': color.tinyRGB(tc), 'stroke-opacity': tc.getAlpha()});\n};\n\ncolor.fill = function(s, c) {\n    var tc = tinycolor(c);\n    s.style({\n        'fill': color.tinyRGB(tc),\n        'fill-opacity': tc.getAlpha()\n    });\n};\n\n// search container for colors with the deprecated rgb(fractions) format\n// and convert them to rgb(0-255 values)\ncolor.clean = function(container) {\n    if(!container || typeof container !== 'object') return;\n\n    var keys = Object.keys(container);\n    var i, j, key, val;\n\n    for(i = 0; i < keys.length; i++) {\n        key = keys[i];\n        val = container[key];\n\n        if(key.substr(key.length - 5) === 'color') {\n            // only sanitize keys that end in \"color\" or \"colorscale\"\n\n            if(Array.isArray(val)) {\n                for(j = 0; j < val.length; j++) val[j] = cleanOne(val[j]);\n            } else container[key] = cleanOne(val);\n        } else if(key.substr(key.length - 10) === 'colorscale' && Array.isArray(val)) {\n            // colorscales have the format [[0, color1], [frac, color2], ... [1, colorN]]\n\n            for(j = 0; j < val.length; j++) {\n                if(Array.isArray(val[j])) val[j][1] = cleanOne(val[j][1]);\n            }\n        } else if(Array.isArray(val)) {\n            // recurse into arrays of objects, and plain objects\n\n            var el0 = val[0];\n            if(!Array.isArray(el0) && el0 && typeof el0 === 'object') {\n                for(j = 0; j < val.length; j++) color.clean(val[j]);\n            }\n        } else if(val && typeof val === 'object' && !isTypedArray(val)) color.clean(val);\n    }\n};\n\nfunction cleanOne(val) {\n    if(isNumeric(val) || typeof val !== 'string') return val;\n\n    var valTrim = val.trim();\n    if(valTrim.substr(0, 3) !== 'rgb') return val;\n\n    var match = valTrim.match(/^rgba?\\s*\\(([^()]*)\\)$/);\n    if(!match) return val;\n\n    var parts = match[1].trim().split(/\\s*[\\s,]\\s*/);\n    var rgba = valTrim.charAt(3) === 'a' && parts.length === 4;\n    if(!rgba && parts.length !== 3) return val;\n\n    for(var i = 0; i < parts.length; i++) {\n        if(!parts[i].length) return val;\n        parts[i] = Number(parts[i]);\n\n        if(!(parts[i] >= 0)) {\n            // all parts must be non-negative numbers\n\n            return val;\n        }\n\n        if(i === 3) {\n            // alpha>1 gets clipped to 1\n\n            if(parts[i] > 1) parts[i] = 1;\n        } else if(parts[i] >= 1) {\n            // r, g, b must be < 1 (ie 1 itself is not allowed)\n\n            return val;\n        }\n    }\n\n    var rgbStr = Math.round(parts[0] * 255) + ', ' +\n        Math.round(parts[1] * 255) + ', ' +\n        Math.round(parts[2] * 255);\n\n    if(rgba) return 'rgba(' + rgbStr + ', ' + parts[3] + ')';\n    return 'rgb(' + rgbStr + ')';\n}\n"]},"metadata":{},"sourceType":"script"}