{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\reactApp\\\\analyse_coderhub\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { Col, Container, Row, Button, Dropdown, DropdownButton, Card, Table, Select } from \"react-bootstrap\";\nimport \"../styles/home.css\";\nimport DataPlot from \"./plots/plot\";\nimport { useState } from 'react';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport Plot from \"react-plotly.js\";\nimport Top10Table from './tables/Top10Table';\nimport Top1Table from './tables/Top1Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const data1 = null;\n  const langs = [...new Set(Object.values(data1.language))];\n  const [selected, setSelected] = useState(langs[0]);\n  const [plot, setPlot] = useState(0);\n  const qryUsersPerLang = [Object.values(data1.users), Object.values(data1.language)];\n  const qryAllPoints = [Object.values(data1.total_points_all_challenges), Object.values(data1.language)];\n  const qryPoints = [Object.values(data1.points), Object.values(data1.language)];\n  const qryEasySolved = [Object.values(data1.total_easy_solved), Object.values(data1.language)];\n  const qryMedSolved = [Object.values(data1.total_medium_solved), Object.values(data1.language)];\n  const qryHardSolved = [Object.values(data1.total_hard_solved), Object.values(data1.language)];\n  const user_lang = [];\n  const rank1PerLang = [];\n  const user_language_points = [];\n  const user_total_points = [];\n  const user_easy_solved_points = [];\n  const user_easy_solved_count = [];\n  const user_med_solved_points = [];\n  const user_med_solved_count = [];\n  const user_hard_solved_points = [];\n  const user_hard_solved_count = [];\n  const rank1Users = [];\n\n  for (let i = 0; i < langs.length; i++) {\n    let counter = 0;\n    qryUsersPerLang[1].forEach((itm, inx) => {\n      if (itm === langs[i] && counter < 1) {\n        rank1PerLang.push(qryUsersPerLang[0][inx]);\n        counter += 1;\n      }\n    });\n  }\n\n  qryUsersPerLang[1].forEach((itm, inx) => {\n    if (itm === selected) {\n      user_lang.push(qryUsersPerLang[0][inx]);\n    }\n  });\n  qryAllPoints[1].forEach((itm, inx) => {\n    if (itm === selected) {\n      if (qryAllPoints[0][inx] != \"private\") {\n        user_total_points.push(qryAllPoints[0][inx]);\n      } else {\n        user_total_points.push(0);\n      }\n    }\n  });\n  qryPoints[1].forEach((itm, inx) => {\n    if (itm === selected) {\n      user_language_points.push(qryPoints[0][inx]);\n    }\n  });\n  qryEasySolved[1].forEach((itm, inx) => {\n    if (itm === selected) {\n      if (qryEasySolved[0][inx] != \"private\") {\n        user_easy_solved_points.push(qryEasySolved[0][inx] * 5);\n        user_easy_solved_count.push(qryEasySolved[0][inx]);\n      } else {\n        user_easy_solved_points.push(0);\n        user_easy_solved_count.push(0);\n      }\n    }\n  });\n  qryMedSolved[1].forEach((itm, inx) => {\n    if (itm === selected) {\n      if (qryMedSolved[0][inx] != \"private\") {\n        user_med_solved_points.push(qryMedSolved[0][inx] * 10);\n        user_med_solved_count.push(qryMedSolved[0][inx]);\n      } else {\n        user_med_solved_points.push(0);\n        user_med_solved_count.push(0);\n      }\n    }\n  });\n  qryHardSolved[1].forEach((itm, inx) => {\n    if (itm === selected) {\n      if (qryHardSolved[0][inx] != \"private\") {\n        user_hard_solved_points.push(qryHardSolved[0][inx] * 20);\n        user_hard_solved_count.push(qryHardSolved[0][inx]);\n      } else {\n        user_hard_solved_points.push(0);\n        user_hard_solved_count.push(0);\n      }\n    }\n  });\n\n  const genPointsData = () => {\n    return {\n      labels: user_lang,\n      datasets: [{\n        label: 'Totel points for all challenges',\n        backgroundColor: \"#abb8c3\",\n        data: user_total_points\n      }, {\n        label: 'Totel points for easy challenges',\n        backgroundColor: \"#008b02\",\n        data: user_easy_solved_points\n      }, {\n        label: 'Totel points for medium challenges',\n        backgroundColor: \"#fcb900\",\n        data: user_med_solved_points\n      }, {\n        label: 'Totel points for hard challenges',\n        backgroundColor: \"#b80000\",\n        data: user_hard_solved_points\n      }]\n    };\n  };\n\n  const genChallengesData = () => {\n    return {\n      labels: user_lang,\n      datasets: [{\n        label: 'Totel solved easy challenges',\n        backgroundColor: \"#008b02\",\n        data: user_easy_solved_count\n      }, {\n        label: 'Totel solved medium challenges',\n        backgroundColor: \"#fcb900\",\n        data: user_med_solved_count\n      }, {\n        label: 'Totel solved hard challenges',\n        backgroundColor: \"#b80000\",\n        data: user_hard_solved_count\n      }]\n    };\n  };\n\n  const genPieData = () => {\n    return {\n      datasets: [{\n        data: [56, 31, 11],\n        backgroundColor: ['#33bb35', '#fcb900', '#b80000'],\n        label: 'Challenges'\n      }],\n      labels: ['Easy', 'Medium', 'Hard']\n    };\n  };\n\n  const handleLangChange = e => {\n    setSelected(e.target.value);\n  };\n\n  const bar_points = /*#__PURE__*/_jsxDEV(Bar, {\n    data: genPointsData()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 24\n  }, this);\n\n  const bar_challenges = /*#__PURE__*/_jsxDEV(Bar, {\n    data: genChallengesData()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 28\n  }, this);\n\n  const plots = [bar_points, bar_challenges];\n\n  const handlePlotChange = e => {\n    setPlot(e.target.value);\n  };\n\n  const tables = [/*#__PURE__*/_jsxDEV(Top10Table, {\n    langs: langs,\n    user_lang: user_lang,\n    user_language_points: user_language_points,\n    handleLangChange: handleLangChange,\n    handlePlotChange: handlePlotChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 21\n  }, this), /*#__PURE__*/_jsxDEV(Top1Table, {\n    langs: langs,\n    user_lang: rank1Users,\n    user_language_points: user_language_points,\n    rank1PerLang: rank1PerLang,\n    total_points: user_total_points\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 21\n  }, this)];\n  const graphs = [/*#__PURE__*/_jsxDEV(Card, {\n    className: \"shadow p-2 shadow-lg rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-select\",\n      onClick: handlePlotChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 0,\n        children: \"Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 1,\n        children: \"Challenges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }, this), plots[plot]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 21\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: \"shadow p-2 shadow-lg rounded\",\n    children: plots[plot]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 21\n  }, this)];\n  const [talbeView, setTableView] = useState(0);\n  const [graphView, setGraphView] = useState(0);\n\n  const handleViewChange = (e, table, graph) => {\n    setTableView(table);\n    setGraphView(graph);\n    {\n      /* e.target.className = \"btn btn-dark p-2 m-1\" */\n    }\n  };\n\n  const changeBtnColor = e => {\n    e.target.className = \"btn btn-dark p-2 m-1\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-75 shadow p-2 bg-success rounded  text-light d-none d-md-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: 56\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Easy challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-75 shadow p-2 bg-warning rounded  text-light d-none d-md-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: 31\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Medium challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-75 shadow p-2 pb-3 bg-danger rounded  text-light d-none d-md-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: 11\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hard challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-75 shadow p-2 rounded d-none d-md-block \",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: 98\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"All challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"d-block d-md-none d-flex \",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"align-self-center\",\n          children: \"All challenges 98\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: genPieData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 3,\n        ml: 1,\n        children: tables[talbeView]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 9,\n        children: graphs[graphView]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"QnNGicniBmvQ7dALfC5zpr2Ef1M=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/src/components/Home.js"],"names":["Col","Container","Row","Button","Dropdown","DropdownButton","Card","Table","Select","DataPlot","useState","Bar","Line","Doughnut","Plot","Top10Table","Top1Table","Home","data1","langs","Set","Object","values","language","selected","setSelected","plot","setPlot","qryUsersPerLang","users","qryAllPoints","total_points_all_challenges","qryPoints","points","qryEasySolved","total_easy_solved","qryMedSolved","total_medium_solved","qryHardSolved","total_hard_solved","user_lang","rank1PerLang","user_language_points","user_total_points","user_easy_solved_points","user_easy_solved_count","user_med_solved_points","user_med_solved_count","user_hard_solved_points","user_hard_solved_count","rank1Users","i","length","counter","forEach","itm","inx","push","genPointsData","labels","datasets","label","backgroundColor","data","genChallengesData","genPieData","handleLangChange","e","target","value","bar_points","bar_challenges","plots","handlePlotChange","tables","graphs","talbeView","setTableView","graphView","setGraphView","handleViewChange","table","graph","changeBtnColor","className"],"mappings":"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","sourcesContent":["import { Col, Container, Row , Button, Dropdown, DropdownButton, Card, Table, Select} from \"react-bootstrap\";\r\nimport \"../styles/home.css\"\r\nimport DataPlot from \"./plots/plot\"\r\nimport { useState } from 'react'\r\nimport { Bar, Line, Doughnut} from 'react-chartjs-2';\r\nimport Plot from \"react-plotly.js\";\r\nimport Top10Table from './tables/Top10Table'\r\nimport Top1Table from './tables/Top1Table'\r\n\r\n\r\nconst Home = () => {\r\n    const data1 = null\r\n    const langs = [...new Set(Object.values(data1.language))]\r\n\r\n    const [selected, setSelected] = useState(langs[0])\r\n    const [plot, setPlot] = useState(0)\r\n    \r\n    \r\n    const qryUsersPerLang = [Object.values(data1.users), Object.values(data1.language)]\r\n    const qryAllPoints = [Object.values(data1.total_points_all_challenges), Object.values(data1.language)]\r\n    const qryPoints = [Object.values(data1.points), Object.values(data1.language)]\r\n    const qryEasySolved = [Object.values(data1.total_easy_solved), Object.values(data1.language)]\r\n    const qryMedSolved = [Object.values(data1.total_medium_solved), Object.values(data1.language)]\r\n    const qryHardSolved = [Object.values(data1.total_hard_solved), Object.values(data1.language)]\r\n    \r\n    \r\n    const user_lang = []\r\n    const rank1PerLang = []\r\n    const user_language_points = []\r\n    const user_total_points = []\r\n\r\n    const user_easy_solved_points = []\r\n    const user_easy_solved_count = []\r\n\r\n    const user_med_solved_points = []\r\n    const user_med_solved_count = []\r\n\r\n    const user_hard_solved_points = []\r\n    const user_hard_solved_count = []\r\n\r\n    const rank1Users = []\r\n\r\n    for(let i = 0; i < langs.length; i++){\r\n        let counter = 0\r\n        qryUsersPerLang[1].forEach((itm, inx)=> {\r\n            if(itm === langs[i] && counter < 1){\r\n                rank1PerLang.push(qryUsersPerLang[0][inx])\r\n                counter += 1\r\n            }\r\n        })\r\n    }\r\n\r\n    qryUsersPerLang[1].forEach((itm, inx)=> {\r\n        if(itm === selected){\r\n            user_lang.push(qryUsersPerLang[0][inx])\r\n        }\r\n    })\r\n\r\n    qryAllPoints[1].forEach((itm, inx)=> {\r\n        if(itm === selected){\r\n            if(qryAllPoints[0][inx] != \"private\"){\r\n                user_total_points.push(qryAllPoints[0][inx])\r\n            }else{\r\n                user_total_points.push(0)\r\n            }\r\n        }\r\n    })\r\n\r\n    qryPoints[1].forEach((itm, inx)=> {\r\n        if(itm === selected){\r\n            user_language_points.push(qryPoints[0][inx])\r\n        }\r\n    })\r\n\r\n    qryEasySolved[1].forEach((itm, inx)=> {\r\n        if(itm === selected){\r\n            if(qryEasySolved[0][inx] != \"private\"){\r\n                user_easy_solved_points.push((qryEasySolved[0][inx])*5)\r\n                user_easy_solved_count.push(qryEasySolved[0][inx])\r\n            }else{\r\n                user_easy_solved_points.push(0)\r\n                user_easy_solved_count.push(0)\r\n            }\r\n        }\r\n    })\r\n\r\n    qryMedSolved[1].forEach((itm, inx)=> {\r\n        if(itm === selected){\r\n            if(qryMedSolved[0][inx] != \"private\"){\r\n                user_med_solved_points.push((qryMedSolved[0][inx])*10)\r\n                user_med_solved_count.push(qryMedSolved[0][inx])\r\n            }else{\r\n                user_med_solved_points.push(0)\r\n                user_med_solved_count.push(0)\r\n            }\r\n        }\r\n    })\r\n\r\n    qryHardSolved[1].forEach((itm, inx)=> {\r\n        if(itm === selected){\r\n            if(qryHardSolved[0][inx] != \"private\"){\r\n                user_hard_solved_points.push((qryHardSolved[0][inx])*20)\r\n                user_hard_solved_count.push(qryHardSolved[0][inx])\r\n            }else{\r\n                user_hard_solved_points.push(0)\r\n                user_hard_solved_count.push(0)\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    const genPointsData = () => {\r\n        return {\r\n        labels: user_lang,\r\n        datasets: [\r\n            {\r\n            label: 'Totel points for all challenges',\r\n            backgroundColor: \"#abb8c3\",\r\n            data: user_total_points,\r\n            },\r\n            {\r\n            label: 'Totel points for easy challenges',\r\n            backgroundColor: \"#008b02\",\r\n            data: user_easy_solved_points,\r\n            },\r\n            {\r\n            label: 'Totel points for medium challenges',\r\n            backgroundColor: \"#fcb900\",\r\n            data: user_med_solved_points,\r\n            },\r\n            {\r\n            label: 'Totel points for hard challenges',\r\n            backgroundColor: \"#b80000\",\r\n            data: user_hard_solved_points,\r\n            }\r\n        ],\r\n        };\r\n    };\r\n\r\n    const genChallengesData = () => {\r\n        return {\r\n        labels: user_lang,\r\n        datasets: [\r\n            {\r\n            label: 'Totel solved easy challenges',\r\n            backgroundColor: \"#008b02\",\r\n            data: user_easy_solved_count,\r\n            },\r\n            {\r\n            label: 'Totel solved medium challenges',\r\n            backgroundColor: \"#fcb900\",\r\n            data: user_med_solved_count,\r\n            },\r\n            {\r\n            label: 'Totel solved hard challenges',\r\n            backgroundColor: \"#b80000\",\r\n            data: user_hard_solved_count,\r\n            }\r\n        ],\r\n        };\r\n    };\r\n\r\n    const genPieData = () => {\r\n        return {\r\n        datasets: [\r\n            {\r\n            data: [56, 31, 11],\r\n            backgroundColor: ['#33bb35', '#fcb900', '#b80000'],\r\n            label: 'Challenges',\r\n            },\r\n        ],\r\n        labels: ['Easy', 'Medium', 'Hard'],\r\n        };\r\n    };\r\n\r\n    const handleLangChange = (e)=> {\r\n        setSelected(e.target.value);\r\n    }\r\n\r\n    \r\n    const bar_points = <Bar data={genPointsData()} />\r\n    const bar_challenges = <Bar data={genChallengesData()} />\r\n\r\n    const plots = [bar_points, bar_challenges]\r\n\r\n    const handlePlotChange = (e) => {\r\n        setPlot(e.target.value)\r\n    }\r\n    const tables = [<Top10Table langs={langs} user_lang={user_lang} \r\n                                user_language_points={user_language_points}\r\n                                handleLangChange={handleLangChange}\r\n                                handlePlotChange={handlePlotChange} />,\r\n                    <Top1Table langs={langs} user_lang={rank1Users} \r\n                                            user_language_points={user_language_points}\r\n                                            rank1PerLang ={rank1PerLang}\r\n                                            total_points = {user_total_points} />]\r\n                        \r\n    const graphs = [<Card  className=\"shadow p-2 shadow-lg rounded\">\r\n                        <select className=\"form-select\" onClick={handlePlotChange}>\r\n                            <option value={0}>Points</option>\r\n                            <option value={1}>Challenges</option>  \r\n                        </select>\r\n                        {plots[plot]}\r\n                    </Card>,\r\n                    <Card  className=\"shadow p-2 shadow-lg rounded\">\r\n                        {plots[plot]}\r\n                    </Card>]\r\n\r\n    const [talbeView, setTableView] = useState(0)\r\n    const [graphView, setGraphView] = useState(0)\r\n\r\n    const handleViewChange = (e,table, graph)=>{\r\n        setTableView(table)\r\n        setGraphView(graph)\r\n\r\n        {/* e.target.className = \"btn btn-dark p-2 m-1\" */}\r\n    }\r\n\r\n    const changeBtnColor = (e)=>{\r\n        e.target.className = \"btn btn-dark p-2 m-1\"\r\n    }\r\n    \r\n    return (\r\n        <Container fluid>\r\n            <Row >\r\n                <Col xs={12} md={3}>\r\n                    <Card className=\"h-75 shadow p-2 bg-success rounded  text-light d-none d-md-block\">\r\n                        <h2>{56}</h2>\r\n                        <p>Easy challenges</p>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} md={3}>\r\n                    <Card className=\"h-75 shadow p-2 bg-warning rounded  text-light d-none d-md-block\">\r\n                        <h2>{31}</h2>\r\n                        <p>Medium challenges</p>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={12} md={3}>\r\n                    <Card className=\"h-75 shadow p-2 pb-3 bg-danger rounded  text-light d-none d-md-block\">\r\n                        <h2>{11}</h2>\r\n                        <p>Hard challenges</p>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={12} md={3}>\r\n                    <Card className=\"h-75 shadow p-2 rounded d-none d-md-block \">\r\n                        <h2>{98}</h2>\r\n                        <p>All challenges</p>\r\n                    </Card>\r\n                </Col>\r\n                <Card className=\"d-block d-md-none d-flex \">\r\n                    <h3 className=\"align-self-center\">All challenges 98</h3>\r\n                    <Doughnut data={genPieData()} />\r\n                </Card>\r\n                {/* \r\n                <Container>\r\n                    <div className=\"border border-dark d-flex justify-content-center p-1 my-2\">\r\n                        <Button variant=\"btn btn-outline-secondary p-2 m-1\" onClick={(e)=>handleViewChange(e,1, 1)}>Rank 1 view</Button>\r\n                        <Button variant=\"btn btn-outline-secondary p-2 m-1\" onClick={(e)=>handleViewChange(e,0, 0)}>Top 10 view</Button>\r\n                    </div>\r\n                </Container>\r\n                 */}\r\n                <Col lg={3} ml={1}>\r\n                    {tables[talbeView]}\r\n                </Col>\r\n                <Col lg={9}>\r\n                    {graphs[graphView]}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}