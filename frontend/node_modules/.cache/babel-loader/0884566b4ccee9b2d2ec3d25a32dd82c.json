{"ast":null,"code":"var π = Math.PI;\n\nvar _120 = radians(120);\n\nmodule.exports = normalize;\n/**\n * describe `path` in terms of cubic bézier \n * curves and move commands\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction normalize(path) {\n  // init state\n  var prev;\n  var result = [];\n  var bezierX = 0;\n  var bezierY = 0;\n  var startX = 0;\n  var startY = 0;\n  var quadX = null;\n  var quadY = null;\n  var x = 0;\n  var y = 0;\n\n  for (var i = 0, len = path.length; i < len; i++) {\n    var seg = path[i];\n    var command = seg[0];\n\n    switch (command) {\n      case 'M':\n        startX = seg[1];\n        startY = seg[2];\n        break;\n\n      case 'A':\n        seg = arc(x, y, seg[1], seg[2], radians(seg[3]), seg[4], seg[5], seg[6], seg[7]); // split multi part\n\n        seg.unshift('C');\n\n        if (seg.length > 7) {\n          result.push(seg.splice(0, 7));\n          seg.unshift('C');\n        }\n\n        break;\n\n      case 'S':\n        // default control point\n        var cx = x;\n        var cy = y;\n\n        if (prev == 'C' || prev == 'S') {\n          cx += cx - bezierX; // reflect the previous command's control\n\n          cy += cy - bezierY; // point relative to the current point\n        }\n\n        seg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]];\n        break;\n\n      case 'T':\n        if (prev == 'Q' || prev == 'T') {\n          quadX = x * 2 - quadX; // as with 'S' reflect previous control point\n\n          quadY = y * 2 - quadY;\n        } else {\n          quadX = x;\n          quadY = y;\n        }\n\n        seg = quadratic(x, y, quadX, quadY, seg[1], seg[2]);\n        break;\n\n      case 'Q':\n        quadX = seg[1];\n        quadY = seg[2];\n        seg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4]);\n        break;\n\n      case 'L':\n        seg = line(x, y, seg[1], seg[2]);\n        break;\n\n      case 'H':\n        seg = line(x, y, seg[1], y);\n        break;\n\n      case 'V':\n        seg = line(x, y, x, seg[1]);\n        break;\n\n      case 'Z':\n        seg = line(x, y, startX, startY);\n        break;\n    } // update state\n\n\n    prev = command;\n    x = seg[seg.length - 2];\n    y = seg[seg.length - 1];\n\n    if (seg.length > 4) {\n      bezierX = seg[seg.length - 4];\n      bezierY = seg[seg.length - 3];\n    } else {\n      bezierX = x;\n      bezierY = y;\n    }\n\n    result.push(seg);\n  }\n\n  return result;\n}\n\nfunction line(x1, y1, x2, y2) {\n  return ['C', x1, y1, x2, y2, x2, y2];\n}\n\nfunction quadratic(x1, y1, cx, cy, x2, y2) {\n  return ['C', x1 / 3 + 2 / 3 * cx, y1 / 3 + 2 / 3 * cy, x2 / 3 + 2 / 3 * cx, y2 / 3 + 2 / 3 * cy, x2, y2];\n} // This function is ripped from \n// github.com/DmitryBaranovskiy/raphael/blob/4d97d4/raphael.js#L2216-L2304 \n// which references w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n// TODO: make it human readable\n\n\nfunction arc(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  if (!recursive) {\n    var xy = rotate(x1, y1, -angle);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -angle);\n    x2 = xy.x;\n    y2 = xy.y;\n    var x = (x1 - x2) / 2;\n    var y = (y1 - y2) / 2;\n    var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n\n    var rx2 = rx * rx;\n    var ry2 = ry * ry;\n    var k = (large_arc_flag == sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\n    if (k == Infinity) k = 1; // neutralize\n\n    var cx = k * rx * y / ry + (x1 + x2) / 2;\n    var cy = k * -ry * x / rx + (y1 + y2) / 2;\n    var f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\n    var f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n    f1 = x1 < cx ? π - f1 : f1;\n    f2 = x2 < cx ? π - f2 : f2;\n    if (f1 < 0) f1 = π * 2 + f1;\n    if (f2 < 0) f2 = π * 2 + f2;\n    if (sweep_flag && f1 > f2) f1 = f1 - π * 2;\n    if (!sweep_flag && f2 > f1) f2 = f2 - π * 2;\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  } // greater than 120 degrees requires multiple segments\n\n\n  if (Math.abs(f2 - f1) > _120) {\n    var f2old = f2;\n    var x2old = x2;\n    var y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    var res = arc(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n\n  var t = Math.tan((f2 - f1) / 4);\n  var hx = 4 / 3 * rx * t;\n  var hy = 4 / 3 * ry * t;\n  var curve = [2 * x1 - (x1 + hx * Math.sin(f1)), 2 * y1 - (y1 - hy * Math.cos(f1)), x2 + hx * Math.sin(f2), y2 - hy * Math.cos(f2), x2, y2];\n  if (recursive) return curve;\n  if (res) curve = curve.concat(res);\n\n  for (var i = 0; i < curve.length;) {\n    var rot = rotate(curve[i], curve[i + 1], angle);\n    curve[i++] = rot.x;\n    curve[i++] = rot.y;\n  }\n\n  return curve;\n}\n\nfunction rotate(x, y, rad) {\n  return {\n    x: x * Math.cos(rad) - y * Math.sin(rad),\n    y: x * Math.sin(rad) + y * Math.cos(rad)\n  };\n}\n\nfunction radians(degress) {\n  return degress * (π / 180);\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/normalize-svg-path/index.js"],"names":["π","Math","PI","_120","radians","module","exports","normalize","path","prev","result","bezierX","bezierY","startX","startY","quadX","quadY","x","y","i","len","length","seg","command","arc","unshift","push","splice","cx","cy","quadratic","line","x1","y1","x2","y2","rx","ry","angle","large_arc_flag","sweep_flag","recursive","xy","rotate","h","sqrt","rx2","ry2","k","abs","Infinity","f1","asin","toFixed","f2","f2old","x2old","y2old","cos","sin","res","t","tan","hx","hy","curve","concat","rot","rad","degress"],"mappings":"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","sourcesContent":["\nvar π = Math.PI\nvar _120 = radians(120)\n\nmodule.exports = normalize\n\n/**\n * describe `path` in terms of cubic bézier \n * curves and move commands\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction normalize(path){\n\t// init state\n\tvar prev\n\tvar result = []\n\tvar bezierX = 0\n\tvar bezierY = 0\n\tvar startX = 0\n\tvar startY = 0\n\tvar quadX = null\n\tvar quadY = null\n\tvar x = 0\n\tvar y = 0\n\n\tfor (var i = 0, len = path.length; i < len; i++) {\n\t\tvar seg = path[i]\n\t\tvar command = seg[0]\n\t\tswitch (command) {\n\t\t\tcase 'M':\n\t\t\t\tstartX = seg[1]\n\t\t\t\tstartY = seg[2]\n\t\t\t\tbreak\n\t\t\tcase 'A':\n\t\t\t\tseg = arc(x, y,seg[1],seg[2],radians(seg[3]),seg[4],seg[5],seg[6],seg[7])\n\t\t\t\t// split multi part\n\t\t\t\tseg.unshift('C')\n\t\t\t\tif (seg.length > 7) {\n\t\t\t\t\tresult.push(seg.splice(0, 7))\n\t\t\t\t\tseg.unshift('C')\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'S':\n\t\t\t\t// default control point\n\t\t\t\tvar cx = x\n\t\t\t\tvar cy = y\n\t\t\t\tif (prev == 'C' || prev == 'S') {\n\t\t\t\t\tcx += cx - bezierX // reflect the previous command's control\n\t\t\t\t\tcy += cy - bezierY // point relative to the current point\n\t\t\t\t}\n\t\t\t\tseg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]]\n\t\t\t\tbreak\n\t\t\tcase 'T':\n\t\t\t\tif (prev == 'Q' || prev == 'T') {\n\t\t\t\t\tquadX = x * 2 - quadX // as with 'S' reflect previous control point\n\t\t\t\t\tquadY = y * 2 - quadY\n\t\t\t\t} else {\n\t\t\t\t\tquadX = x\n\t\t\t\t\tquadY = y\n\t\t\t\t}\n\t\t\t\tseg = quadratic(x, y, quadX, quadY, seg[1], seg[2])\n\t\t\t\tbreak\n\t\t\tcase 'Q':\n\t\t\t\tquadX = seg[1]\n\t\t\t\tquadY = seg[2]\n\t\t\t\tseg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4])\n\t\t\t\tbreak\n\t\t\tcase 'L':\n\t\t\t\tseg = line(x, y, seg[1], seg[2])\n\t\t\t\tbreak\n\t\t\tcase 'H':\n\t\t\t\tseg = line(x, y, seg[1], y)\n\t\t\t\tbreak\n\t\t\tcase 'V':\n\t\t\t\tseg = line(x, y, x, seg[1])\n\t\t\t\tbreak\n\t\t\tcase 'Z':\n\t\t\t\tseg = line(x, y, startX, startY)\n\t\t\t\tbreak\n\t\t}\n\n\t\t// update state\n\t\tprev = command\n\t\tx = seg[seg.length - 2]\n\t\ty = seg[seg.length - 1]\n\t\tif (seg.length > 4) {\n\t\t\tbezierX = seg[seg.length - 4]\n\t\t\tbezierY = seg[seg.length - 3]\n\t\t} else {\n\t\t\tbezierX = x\n\t\t\tbezierY = y\n\t\t}\n\t\tresult.push(seg)\n\t}\n\n\treturn result\n}\n\nfunction line(x1, y1, x2, y2){\n\treturn ['C', x1, y1, x2, y2, x2, y2]\n}\n\nfunction quadratic(x1, y1, cx, cy, x2, y2){\n\treturn [\n\t\t'C',\n\t\tx1/3 + (2/3) * cx,\n\t\ty1/3 + (2/3) * cy,\n\t\tx2/3 + (2/3) * cx,\n\t\ty2/3 + (2/3) * cy,\n\t\tx2,\n\t\ty2\n\t]\n}\n\n// This function is ripped from \n// github.com/DmitryBaranovskiy/raphael/blob/4d97d4/raphael.js#L2216-L2304 \n// which references w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n// TODO: make it human readable\n\nfunction arc(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\tif (!recursive) {\n\t\tvar xy = rotate(x1, y1, -angle)\n\t\tx1 = xy.x\n\t\ty1 = xy.y\n\t\txy = rotate(x2, y2, -angle)\n\t\tx2 = xy.x\n\t\ty2 = xy.y\n\t\tvar x = (x1 - x2) / 2\n\t\tvar y = (y1 - y2) / 2\n\t\tvar h = (x * x) / (rx * rx) + (y * y) / (ry * ry)\n\t\tif (h > 1) {\n\t\t\th = Math.sqrt(h)\n\t\t\trx = h * rx\n\t\t\try = h * ry\n\t\t}\n\t\tvar rx2 = rx * rx\n\t\tvar ry2 = ry * ry\n\t\tvar k = (large_arc_flag == sweep_flag ? -1 : 1)\n\t\t\t* Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)))\n\t\tif (k == Infinity) k = 1 // neutralize\n\t\tvar cx = k * rx * y / ry + (x1 + x2) / 2\n\t\tvar cy = k * -ry * x / rx + (y1 + y2) / 2\n\t\tvar f1 = Math.asin(((y1 - cy) / ry).toFixed(9))\n\t\tvar f2 = Math.asin(((y2 - cy) / ry).toFixed(9))\n\n\t\tf1 = x1 < cx ? π - f1 : f1\n\t\tf2 = x2 < cx ? π - f2 : f2\n\t\tif (f1 < 0) f1 = π * 2 + f1\n\t\tif (f2 < 0) f2 = π * 2 + f2\n\t\tif (sweep_flag && f1 > f2) f1 = f1 - π * 2\n\t\tif (!sweep_flag && f2 > f1) f2 = f2 - π * 2\n\t} else {\n\t\tf1 = recursive[0]\n\t\tf2 = recursive[1]\n\t\tcx = recursive[2]\n\t\tcy = recursive[3]\n\t}\n\t// greater than 120 degrees requires multiple segments\n\tif (Math.abs(f2 - f1) > _120) {\n\t\tvar f2old = f2\n\t\tvar x2old = x2\n\t\tvar y2old = y2\n\t\tf2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1)\n\t\tx2 = cx + rx * Math.cos(f2)\n\t\ty2 = cy + ry * Math.sin(f2)\n\t\tvar res = arc(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy])\n\t}\n\tvar t = Math.tan((f2 - f1) / 4)\n\tvar hx = 4 / 3 * rx * t\n\tvar hy = 4 / 3 * ry * t\n\tvar curve = [\n\t\t2 * x1 - (x1 + hx * Math.sin(f1)),\n\t\t2 * y1 - (y1 - hy * Math.cos(f1)),\n\t\tx2 + hx * Math.sin(f2),\n\t\ty2 - hy * Math.cos(f2),\n\t\tx2,\n\t\ty2\n\t]\n\tif (recursive) return curve\n\tif (res) curve = curve.concat(res)\n\tfor (var i = 0; i < curve.length;) {\n\t\tvar rot = rotate(curve[i], curve[i+1], angle)\n\t\tcurve[i++] = rot.x\n\t\tcurve[i++] = rot.y\n\t}\n\treturn curve\n}\n\nfunction rotate(x, y, rad){\n\treturn {\n\t\tx: x * Math.cos(rad) - y * Math.sin(rad),\n\t\ty: x * Math.sin(rad) + y * Math.cos(rad)\n\t}\n}\n\nfunction radians(degress){\n\treturn degress * (π / 180)\n}\n"]},"metadata":{},"sourceType":"script"}