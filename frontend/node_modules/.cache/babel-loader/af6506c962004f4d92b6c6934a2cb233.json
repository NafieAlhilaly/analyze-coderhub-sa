{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar calcColorscale = require('../scatter/colorscale_calc');\n\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\n\nvar calcSelection = require('../scatter/calc_selection');\n\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\n\nmodule.exports = function calc(gd, trace) {\n  var fullLayout = gd._fullLayout;\n  var subplotId = trace.subplot;\n  var radialAxis = fullLayout[subplotId].radialaxis;\n  var angularAxis = fullLayout[subplotId].angularaxis;\n  var rArray = radialAxis.makeCalcdata(trace, 'r');\n  var thetaArray = angularAxis.makeCalcdata(trace, 'theta');\n  var len = trace._length;\n  var cd = new Array(len);\n\n  for (var i = 0; i < len; i++) {\n    var r = rArray[i];\n    var theta = thetaArray[i];\n    var cdi = cd[i] = {};\n\n    if (isNumeric(r) && isNumeric(theta)) {\n      cdi.r = r;\n      cdi.theta = theta;\n    } else {\n      cdi.r = BADNUM;\n    }\n  }\n\n  var ppad = calcMarkerSize(trace, len);\n  trace._extremes.x = Axes.findExtremes(radialAxis, rArray, {\n    ppad: ppad\n  });\n  calcColorscale(gd, trace);\n  arraysToCalcdata(cd, trace);\n  calcSelection(cd, trace);\n  return cd;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/scatterpolar/calc.js"],"names":["isNumeric","require","BADNUM","Axes","calcColorscale","arraysToCalcdata","calcSelection","calcMarkerSize","module","exports","calc","gd","trace","fullLayout","_fullLayout","subplotId","subplot","radialAxis","radialaxis","angularAxis","angularaxis","rArray","makeCalcdata","thetaArray","len","_length","cd","Array","i","r","theta","cdi","ppad","_extremes","x","findExtremes"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,2BAAD,CAAP,CAAqCC,MAAlD;;AAEA,IAAIC,IAAI,GAAGF,OAAO,CAAC,4BAAD,CAAlB;;AAEA,IAAIG,cAAc,GAAGH,OAAO,CAAC,4BAAD,CAA5B;;AACA,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,+BAAD,CAA9B;;AACA,IAAIK,aAAa,GAAGL,OAAO,CAAC,2BAAD,CAA3B;;AACA,IAAIM,cAAc,GAAGN,OAAO,CAAC,iBAAD,CAAP,CAA2BM,cAAhD;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,EAAd,EAAkBC,KAAlB,EAAyB;AACtC,MAAIC,UAAU,GAAGF,EAAE,CAACG,WAApB;AACA,MAAIC,SAAS,GAAGH,KAAK,CAACI,OAAtB;AACA,MAAIC,UAAU,GAAGJ,UAAU,CAACE,SAAD,CAAV,CAAsBG,UAAvC;AACA,MAAIC,WAAW,GAAGN,UAAU,CAACE,SAAD,CAAV,CAAsBK,WAAxC;AACA,MAAIC,MAAM,GAAGJ,UAAU,CAACK,YAAX,CAAwBV,KAAxB,EAA+B,GAA/B,CAAb;AACA,MAAIW,UAAU,GAAGJ,WAAW,CAACG,YAAZ,CAAyBV,KAAzB,EAAgC,OAAhC,CAAjB;AACA,MAAIY,GAAG,GAAGZ,KAAK,CAACa,OAAhB;AACA,MAAIC,EAAE,GAAG,IAAIC,KAAJ,CAAUH,GAAV,CAAT;;AAEA,OAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,GAAnB,EAAwBI,CAAC,EAAzB,EAA6B;AACzB,QAAIC,CAAC,GAAGR,MAAM,CAACO,CAAD,CAAd;AACA,QAAIE,KAAK,GAAGP,UAAU,CAACK,CAAD,CAAtB;AACA,QAAIG,GAAG,GAAGL,EAAE,CAACE,CAAD,CAAF,GAAQ,EAAlB;;AAEA,QAAG5B,SAAS,CAAC6B,CAAD,CAAT,IAAgB7B,SAAS,CAAC8B,KAAD,CAA5B,EAAqC;AACjCC,MAAAA,GAAG,CAACF,CAAJ,GAAQA,CAAR;AACAE,MAAAA,GAAG,CAACD,KAAJ,GAAYA,KAAZ;AACH,KAHD,MAGO;AACHC,MAAAA,GAAG,CAACF,CAAJ,GAAQ3B,MAAR;AACH;AACJ;;AAED,MAAI8B,IAAI,GAAGzB,cAAc,CAACK,KAAD,EAAQY,GAAR,CAAzB;AACAZ,EAAAA,KAAK,CAACqB,SAAN,CAAgBC,CAAhB,GAAoB/B,IAAI,CAACgC,YAAL,CAAkBlB,UAAlB,EAA8BI,MAA9B,EAAsC;AAACW,IAAAA,IAAI,EAAEA;AAAP,GAAtC,CAApB;AAEA5B,EAAAA,cAAc,CAACO,EAAD,EAAKC,KAAL,CAAd;AACAP,EAAAA,gBAAgB,CAACqB,EAAD,EAAKd,KAAL,CAAhB;AACAN,EAAAA,aAAa,CAACoB,EAAD,EAAKd,KAAL,CAAb;AAEA,SAAOc,EAAP;AACH,CA/BD","sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\n\nmodule.exports = function calc(gd, trace) {\n    var fullLayout = gd._fullLayout;\n    var subplotId = trace.subplot;\n    var radialAxis = fullLayout[subplotId].radialaxis;\n    var angularAxis = fullLayout[subplotId].angularaxis;\n    var rArray = radialAxis.makeCalcdata(trace, 'r');\n    var thetaArray = angularAxis.makeCalcdata(trace, 'theta');\n    var len = trace._length;\n    var cd = new Array(len);\n\n    for(var i = 0; i < len; i++) {\n        var r = rArray[i];\n        var theta = thetaArray[i];\n        var cdi = cd[i] = {};\n\n        if(isNumeric(r) && isNumeric(theta)) {\n            cdi.r = r;\n            cdi.theta = theta;\n        } else {\n            cdi.r = BADNUM;\n        }\n    }\n\n    var ppad = calcMarkerSize(trace, len);\n    trace._extremes.x = Axes.findExtremes(radialAxis, rArray, {ppad: ppad});\n\n    calcColorscale(gd, trace);\n    arraysToCalcdata(cd, trace);\n    calcSelection(cd, trace);\n\n    return cd;\n};\n"]},"metadata":{},"sourceType":"script"}