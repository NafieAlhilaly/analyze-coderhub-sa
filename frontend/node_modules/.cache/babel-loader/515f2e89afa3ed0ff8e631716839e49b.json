{"ast":null,"code":"'use strict';\n\nvar docs = require('../../constants/docs');\n\nvar FORMAT_LINK = docs.FORMAT_LINK;\nvar DATE_FORMAT_LINK = docs.DATE_FORMAT_LINK;\n\nfunction axisHoverFormat(x, noDates) {\n  return {\n    valType: 'string',\n    dflt: '',\n    editType: 'none',\n    description: (noDates ? descriptionOnlyNumbers : descriptionWithDates)('hover text', x) + ['By default the values are formatted using ' + (noDates ? 'generic number format' : '`' + x + 'axis.hoverformat`') + '.'].join(' ')\n  };\n}\n\nfunction descriptionOnlyNumbers(label, x) {\n  return ['Sets the ' + label + ' formatting rule' + (x ? 'for `' + x + '` ' : ''), 'using d3 formatting mini-languages', 'which are very similar to those in Python. For numbers, see: ' + FORMAT_LINK + '.'].join(' ');\n}\n\nfunction descriptionWithDates(label, x) {\n  return descriptionOnlyNumbers(label, x) + [' And for dates see: ' + DATE_FORMAT_LINK + '.', 'We add two items to d3\\'s date formatter:', '*%h* for half of the year as a decimal number as well as', '*%{n}f* for fractional seconds', 'with n digits. For example, *2016-10-13 09:15:23.456* with tickformat', '*%H~%M~%S.%2f* would display *09~15~23.46*'].join(' ');\n}\n\nmodule.exports = {\n  axisHoverFormat: axisHoverFormat,\n  descriptionOnlyNumbers: descriptionOnlyNumbers,\n  descriptionWithDates: descriptionWithDates\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/plots/cartesian/axis_format_attributes.js"],"names":["docs","require","FORMAT_LINK","DATE_FORMAT_LINK","axisHoverFormat","x","noDates","valType","dflt","editType","description","descriptionOnlyNumbers","descriptionWithDates","join","label","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,sBAAD,CAAlB;;AACA,IAAIC,WAAW,GAAGF,IAAI,CAACE,WAAvB;AACA,IAAIC,gBAAgB,GAAGH,IAAI,CAACG,gBAA5B;;AAEA,SAASC,eAAT,CAAyBC,CAAzB,EAA4BC,OAA5B,EAAqC;AACjC,SAAO;AACHC,IAAAA,OAAO,EAAE,QADN;AAEHC,IAAAA,IAAI,EAAE,EAFH;AAGHC,IAAAA,QAAQ,EAAE,MAHP;AAIHC,IAAAA,WAAW,EAAE,CACTJ,OAAO,GAAGK,sBAAH,GAA4BC,oBAD1B,EAEX,YAFW,EAEGP,CAFH,IAEQ,CACjB,gDACIC,OAAO,GACH,uBADG,GAEF,MAAMD,CAAN,GAAU,mBAHnB,IAII,GALa,EAMnBQ,IANmB,CAMd,GANc;AANlB,GAAP;AAcH;;AAED,SAASF,sBAAT,CAAgCG,KAAhC,EAAuCT,CAAvC,EAA0C;AACtC,SAAO,CACH,cAAcS,KAAd,GAAsB,kBAAtB,IAA4CT,CAAC,GAAG,UAAUA,CAAV,GAAc,IAAjB,GAAwB,EAArE,CADG,EAEH,oCAFG,EAGH,kEAAkEH,WAAlE,GAAgF,GAH7E,EAILW,IAJK,CAIA,GAJA,CAAP;AAKH;;AAED,SAASD,oBAAT,CAA8BE,KAA9B,EAAqCT,CAArC,EAAwC;AACpC,SAAOM,sBAAsB,CAACG,KAAD,EAAQT,CAAR,CAAtB,GAAmC,CACtC,yBAAyBF,gBAAzB,GAA4C,GADN,EAEtC,2CAFsC,EAGtC,0DAHsC,EAItC,gCAJsC,EAKtC,uEALsC,EAMtC,4CANsC,EAOxCU,IAPwC,CAOnC,GAPmC,CAA1C;AAQH;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACbZ,EAAAA,eAAe,EAAEA,eADJ;AAEbO,EAAAA,sBAAsB,EAAEA,sBAFX;AAGbC,EAAAA,oBAAoB,EAAEA;AAHT,CAAjB","sourcesContent":["'use strict';\n\nvar docs = require('../../constants/docs');\nvar FORMAT_LINK = docs.FORMAT_LINK;\nvar DATE_FORMAT_LINK = docs.DATE_FORMAT_LINK;\n\nfunction axisHoverFormat(x, noDates) {\n    return {\n        valType: 'string',\n        dflt: '',\n        editType: 'none',\n        description: (\n            noDates ? descriptionOnlyNumbers : descriptionWithDates\n        )('hover text', x) + [\n            'By default the values are formatted using ' + (\n                noDates ?\n                    'generic number format' :\n                    ('`' + x + 'axis.hoverformat`')\n            ) + '.',\n        ].join(' ')\n    };\n}\n\nfunction descriptionOnlyNumbers(label, x) {\n    return [\n        'Sets the ' + label + ' formatting rule' + (x ? 'for `' + x + '` ' : ''),\n        'using d3 formatting mini-languages',\n        'which are very similar to those in Python. For numbers, see: ' + FORMAT_LINK + '.'\n    ].join(' ');\n}\n\nfunction descriptionWithDates(label, x) {\n    return descriptionOnlyNumbers(label, x) + [\n        ' And for dates see: ' + DATE_FORMAT_LINK + '.',\n        'We add two items to d3\\'s date formatter:',\n        '*%h* for half of the year as a decimal number as well as',\n        '*%{n}f* for fractional seconds',\n        'with n digits. For example, *2016-10-13 09:15:23.456* with tickformat',\n        '*%H~%M~%S.%2f* would display *09~15~23.46*'\n    ].join(' ');\n}\n\nmodule.exports = {\n    axisHoverFormat: axisHoverFormat,\n    descriptionOnlyNumbers: descriptionOnlyNumbers,\n    descriptionWithDates: descriptionWithDates\n};\n"]},"metadata":{},"sourceType":"script"}