{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Plots = require('../../plots/plots');\n\nvar Color = require('../color');\n\nvar Drawing = require('../drawing');\n\nvar Lib = require('../../lib');\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar arrayEditor = require('../../plot_api/plot_template').arrayEditor;\n\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\n\nvar constants = require('./constants');\n\nvar ScrollBox = require('./scrollbox');\n\nmodule.exports = function draw(gd) {\n  var fullLayout = gd._fullLayout;\n  var menuData = Lib.filterVisible(fullLayout[constants.name]);\n  /* Update menu data is bound to the header-group.\n   * The items in the header group are always present.\n   *\n   * Upon clicking on a header its corresponding button\n   * data is bound to the button-group.\n   *\n   * We draw all headers in one group before all buttons\n   * so that the buttons *always* appear above the headers.\n   *\n   * Note that only one set of buttons are visible at once.\n   *\n   * <g container />\n   *\n   *     <g header-group />\n   *         <g item header />\n   *         <text item header-arrow />\n   *     <g header-group />\n   *         <g item header />\n   *         <text item header-arrow />\n   *     ...\n   *\n   *     <g button-group />\n   *         <g item button />\n   *         <g item button />\n   *         ...\n   */\n\n  function clearAutoMargin(menuOpts) {\n    Plots.autoMargin(gd, autoMarginId(menuOpts));\n  } // draw update menu container\n\n\n  var menus = fullLayout._menulayer.selectAll('g.' + constants.containerClassName).data(menuData.length > 0 ? [0] : []);\n\n  menus.enter().append('g').classed(constants.containerClassName, true).style('cursor', 'pointer');\n  menus.exit().each(function () {\n    // Most components don't need to explicitly remove autoMargin, because\n    // marginPushers does this - but updatemenu updates don't go through\n    // a full replot so we need to explicitly remove it.\n    // This is for removing *all* updatemenus, removing individuals is\n    // handled below, in headerGroups.exit\n    d3.select(this).selectAll('g.' + constants.headerGroupClassName).each(clearAutoMargin);\n  }).remove(); // return early if no update menus are visible\n\n  if (menuData.length === 0) return; // join header group\n\n  var headerGroups = menus.selectAll('g.' + constants.headerGroupClassName).data(menuData, keyFunction);\n  headerGroups.enter().append('g').classed(constants.headerGroupClassName, true); // draw dropdown button container\n\n  var gButton = Lib.ensureSingle(menus, 'g', constants.dropdownButtonGroupClassName, function (s) {\n    s.style('pointer-events', 'all');\n  }); // find dimensions before plotting anything (this mutates menuOpts)\n\n  for (var i = 0; i < menuData.length; i++) {\n    var menuOpts = menuData[i];\n    findDimensions(gd, menuOpts);\n  } // setup scrollbox\n\n\n  var scrollBoxId = 'updatemenus' + fullLayout._uid;\n  var scrollBox = new ScrollBox(gd, gButton, scrollBoxId); // remove exiting header, remove dropped buttons and reset margins\n\n  if (headerGroups.enter().size()) {\n    // make sure gButton is on top of all headers\n    gButton.node().parentNode.appendChild(gButton.node());\n    gButton.call(removeAllButtons);\n  }\n\n  headerGroups.exit().each(function (menuOpts) {\n    gButton.call(removeAllButtons);\n    clearAutoMargin(menuOpts);\n  }).remove(); // draw headers!\n\n  headerGroups.each(function (menuOpts) {\n    var gHeader = d3.select(this);\n\n    var _gButton = menuOpts.type === 'dropdown' ? gButton : null;\n\n    Plots.manageCommandObserver(gd, menuOpts, menuOpts.buttons, function (data) {\n      setActive(gd, menuOpts, menuOpts.buttons[data.index], gHeader, _gButton, scrollBox, data.index, true);\n    });\n\n    if (menuOpts.type === 'dropdown') {\n      drawHeader(gd, gHeader, gButton, scrollBox, menuOpts); // if this menu is active, update the dropdown container\n\n      if (isActive(gButton, menuOpts)) {\n        drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n      }\n    } else {\n      drawButtons(gd, gHeader, null, null, menuOpts);\n    }\n  });\n}; // Note that '_index' is set at the default step,\n// it corresponds to the menu index in the user layout update menu container.\n// Because a menu can be set invisible,\n// this is a more 'consistent' field than the index in the menuData.\n\n\nfunction keyFunction(menuOpts) {\n  return menuOpts._index;\n}\n\nfunction isFolded(gButton) {\n  return +gButton.attr(constants.menuIndexAttrName) === -1;\n}\n\nfunction isActive(gButton, menuOpts) {\n  return +gButton.attr(constants.menuIndexAttrName) === menuOpts._index;\n}\n\nfunction setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, buttonIndex, isSilentUpdate) {\n  // update 'active' attribute in menuOpts\n  menuOpts.active = buttonIndex; // due to templating, it's possible this slider doesn't even exist yet\n\n  arrayEditor(gd.layout, constants.name, menuOpts).applyUpdate('active', buttonIndex);\n\n  if (menuOpts.type === 'buttons') {\n    drawButtons(gd, gHeader, null, null, menuOpts);\n  } else if (menuOpts.type === 'dropdown') {\n    // fold up buttons and redraw header\n    gButton.attr(constants.menuIndexAttrName, '-1');\n    drawHeader(gd, gHeader, gButton, scrollBox, menuOpts);\n\n    if (!isSilentUpdate) {\n      drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n    }\n  }\n}\n\nfunction drawHeader(gd, gHeader, gButton, scrollBox, menuOpts) {\n  var header = Lib.ensureSingle(gHeader, 'g', constants.headerClassName, function (s) {\n    s.style('pointer-events', 'all');\n  });\n  var dims = menuOpts._dims;\n  var active = menuOpts.active;\n  var headerOpts = menuOpts.buttons[active] || constants.blankHeaderOpts;\n  var posOpts = {\n    y: menuOpts.pad.t,\n    yPad: 0,\n    x: menuOpts.pad.l,\n    xPad: 0,\n    index: 0\n  };\n  var positionOverrides = {\n    width: dims.headerWidth,\n    height: dims.headerHeight\n  };\n  header.call(drawItem, menuOpts, headerOpts, gd).call(setItemPosition, menuOpts, posOpts, positionOverrides); // draw drop arrow at the right edge\n\n  var arrow = Lib.ensureSingle(gHeader, 'text', constants.headerArrowClassName, function (s) {\n    s.attr('text-anchor', 'end').call(Drawing.font, menuOpts.font).text(constants.arrowSymbol[menuOpts.direction]);\n  });\n  arrow.attr({\n    x: dims.headerWidth - constants.arrowOffsetX + menuOpts.pad.l,\n    y: dims.headerHeight / 2 + constants.textOffsetY + menuOpts.pad.t\n  });\n  header.on('click', function () {\n    gButton.call(removeAllButtons, String(isActive(gButton, menuOpts) ? -1 : menuOpts._index));\n    drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n  });\n  header.on('mouseover', function () {\n    header.call(styleOnMouseOver);\n  });\n  header.on('mouseout', function () {\n    header.call(styleOnMouseOut, menuOpts);\n  }); // translate header group\n\n  Drawing.setTranslate(gHeader, dims.lx, dims.ly);\n}\n\nfunction drawButtons(gd, gHeader, gButton, scrollBox, menuOpts) {\n  // If this is a set of buttons, set pointer events = all since we play\n  // some minor games with which container is which in order to simplify\n  // the drawing of *either* buttons or menus\n  if (!gButton) {\n    gButton = gHeader;\n    gButton.attr('pointer-events', 'all');\n  }\n\n  var buttonData = !isFolded(gButton) || menuOpts.type === 'buttons' ? menuOpts.buttons : [];\n  var klass = menuOpts.type === 'dropdown' ? constants.dropdownButtonClassName : constants.buttonClassName;\n  var buttons = gButton.selectAll('g.' + klass).data(Lib.filterVisible(buttonData));\n  var enter = buttons.enter().append('g').classed(klass, true);\n  var exit = buttons.exit();\n\n  if (menuOpts.type === 'dropdown') {\n    enter.attr('opacity', '0').transition().attr('opacity', '1');\n    exit.transition().attr('opacity', '0').remove();\n  } else {\n    exit.remove();\n  }\n\n  var x0 = 0;\n  var y0 = 0;\n  var dims = menuOpts._dims;\n  var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n\n  if (menuOpts.type === 'dropdown') {\n    if (isVertical) {\n      y0 = dims.headerHeight + constants.gapButtonHeader;\n    } else {\n      x0 = dims.headerWidth + constants.gapButtonHeader;\n    }\n  }\n\n  if (menuOpts.type === 'dropdown' && menuOpts.direction === 'up') {\n    y0 = -constants.gapButtonHeader + constants.gapButton - dims.openHeight;\n  }\n\n  if (menuOpts.type === 'dropdown' && menuOpts.direction === 'left') {\n    x0 = -constants.gapButtonHeader + constants.gapButton - dims.openWidth;\n  }\n\n  var posOpts = {\n    x: dims.lx + x0 + menuOpts.pad.l,\n    y: dims.ly + y0 + menuOpts.pad.t,\n    yPad: constants.gapButton,\n    xPad: constants.gapButton,\n    index: 0\n  };\n  var scrollBoxPosition = {\n    l: posOpts.x + menuOpts.borderwidth,\n    t: posOpts.y + menuOpts.borderwidth\n  };\n  buttons.each(function (buttonOpts, buttonIndex) {\n    var button = d3.select(this);\n    button.call(drawItem, menuOpts, buttonOpts, gd).call(setItemPosition, menuOpts, posOpts);\n    button.on('click', function () {\n      // skip `dragend` events\n      if (d3.event.defaultPrevented) return;\n\n      if (buttonOpts.execute) {\n        if (buttonOpts.args2 && menuOpts.active === buttonIndex) {\n          setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, -1);\n          Plots.executeAPICommand(gd, buttonOpts.method, buttonOpts.args2);\n        } else {\n          setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, buttonIndex);\n          Plots.executeAPICommand(gd, buttonOpts.method, buttonOpts.args);\n        }\n      }\n\n      gd.emit('plotly_buttonclicked', {\n        menu: menuOpts,\n        button: buttonOpts,\n        active: menuOpts.active\n      });\n    });\n    button.on('mouseover', function () {\n      button.call(styleOnMouseOver);\n    });\n    button.on('mouseout', function () {\n      button.call(styleOnMouseOut, menuOpts);\n      buttons.call(styleButtons, menuOpts);\n    });\n  });\n  buttons.call(styleButtons, menuOpts);\n\n  if (isVertical) {\n    scrollBoxPosition.w = Math.max(dims.openWidth, dims.headerWidth);\n    scrollBoxPosition.h = posOpts.y - scrollBoxPosition.t;\n  } else {\n    scrollBoxPosition.w = posOpts.x - scrollBoxPosition.l;\n    scrollBoxPosition.h = Math.max(dims.openHeight, dims.headerHeight);\n  }\n\n  scrollBoxPosition.direction = menuOpts.direction;\n\n  if (scrollBox) {\n    if (buttons.size()) {\n      drawScrollBox(gd, gHeader, gButton, scrollBox, menuOpts, scrollBoxPosition);\n    } else {\n      hideScrollBox(scrollBox);\n    }\n  }\n}\n\nfunction drawScrollBox(gd, gHeader, gButton, scrollBox, menuOpts, position) {\n  // enable the scrollbox\n  var direction = menuOpts.direction;\n  var isVertical = direction === 'up' || direction === 'down';\n  var dims = menuOpts._dims;\n  var active = menuOpts.active;\n  var translateX, translateY;\n  var i;\n\n  if (isVertical) {\n    translateY = 0;\n\n    for (i = 0; i < active; i++) {\n      translateY += dims.heights[i] + constants.gapButton;\n    }\n  } else {\n    translateX = 0;\n\n    for (i = 0; i < active; i++) {\n      translateX += dims.widths[i] + constants.gapButton;\n    }\n  }\n\n  scrollBox.enable(position, translateX, translateY);\n\n  if (scrollBox.hbar) {\n    scrollBox.hbar.attr('opacity', '0').transition().attr('opacity', '1');\n  }\n\n  if (scrollBox.vbar) {\n    scrollBox.vbar.attr('opacity', '0').transition().attr('opacity', '1');\n  }\n}\n\nfunction hideScrollBox(scrollBox) {\n  var hasHBar = !!scrollBox.hbar;\n  var hasVBar = !!scrollBox.vbar;\n\n  if (hasHBar) {\n    scrollBox.hbar.transition().attr('opacity', '0').each('end', function () {\n      hasHBar = false;\n      if (!hasVBar) scrollBox.disable();\n    });\n  }\n\n  if (hasVBar) {\n    scrollBox.vbar.transition().attr('opacity', '0').each('end', function () {\n      hasVBar = false;\n      if (!hasHBar) scrollBox.disable();\n    });\n  }\n}\n\nfunction drawItem(item, menuOpts, itemOpts, gd) {\n  item.call(drawItemRect, menuOpts).call(drawItemText, menuOpts, itemOpts, gd);\n}\n\nfunction drawItemRect(item, menuOpts) {\n  var rect = Lib.ensureSingle(item, 'rect', constants.itemRectClassName, function (s) {\n    s.attr({\n      rx: constants.rx,\n      ry: constants.ry,\n      'shape-rendering': 'crispEdges'\n    });\n  });\n  rect.call(Color.stroke, menuOpts.bordercolor).call(Color.fill, menuOpts.bgcolor).style('stroke-width', menuOpts.borderwidth + 'px');\n}\n\nfunction drawItemText(item, menuOpts, itemOpts, gd) {\n  var text = Lib.ensureSingle(item, 'text', constants.itemTextClassName, function (s) {\n    s.attr({\n      'text-anchor': 'start',\n      'data-notex': 1\n    });\n  });\n  var tx = itemOpts.label;\n  var _meta = gd._fullLayout._meta;\n  if (_meta) tx = Lib.templateString(tx, _meta);\n  text.call(Drawing.font, menuOpts.font).text(tx).call(svgTextUtils.convertToTspans, gd);\n}\n\nfunction styleButtons(buttons, menuOpts) {\n  var active = menuOpts.active;\n  buttons.each(function (buttonOpts, i) {\n    var button = d3.select(this);\n\n    if (i === active && menuOpts.showactive) {\n      button.select('rect.' + constants.itemRectClassName).call(Color.fill, constants.activeColor);\n    }\n  });\n}\n\nfunction styleOnMouseOver(item) {\n  item.select('rect.' + constants.itemRectClassName).call(Color.fill, constants.hoverColor);\n}\n\nfunction styleOnMouseOut(item, menuOpts) {\n  item.select('rect.' + constants.itemRectClassName).call(Color.fill, menuOpts.bgcolor);\n} // find item dimensions (this mutates menuOpts)\n\n\nfunction findDimensions(gd, menuOpts) {\n  var dims = menuOpts._dims = {\n    width1: 0,\n    height1: 0,\n    heights: [],\n    widths: [],\n    totalWidth: 0,\n    totalHeight: 0,\n    openWidth: 0,\n    openHeight: 0,\n    lx: 0,\n    ly: 0\n  };\n  var fakeButtons = Drawing.tester.selectAll('g.' + constants.dropdownButtonClassName).data(Lib.filterVisible(menuOpts.buttons));\n  fakeButtons.enter().append('g').classed(constants.dropdownButtonClassName, true);\n  var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1; // loop over fake buttons to find width / height\n\n  fakeButtons.each(function (buttonOpts, i) {\n    var button = d3.select(this);\n    button.call(drawItem, menuOpts, buttonOpts, gd);\n    var text = button.select('.' + constants.itemTextClassName); // width is given by max width of all buttons\n\n    var tWidth = text.node() && Drawing.bBox(text.node()).width;\n    var wEff = Math.max(tWidth + constants.textPadX, constants.minWidth); // height is determined by item text\n\n    var tHeight = menuOpts.font.size * LINE_SPACING;\n    var tLines = svgTextUtils.lineCount(text);\n    var hEff = Math.max(tHeight * tLines, constants.minHeight) + constants.textOffsetY;\n    hEff = Math.ceil(hEff);\n    wEff = Math.ceil(wEff); // Store per-item sizes since a row of horizontal buttons, for example,\n    // don't all need to be the same width:\n\n    dims.widths[i] = wEff;\n    dims.heights[i] = hEff; // Height and width of individual element:\n\n    dims.height1 = Math.max(dims.height1, hEff);\n    dims.width1 = Math.max(dims.width1, wEff);\n\n    if (isVertical) {\n      dims.totalWidth = Math.max(dims.totalWidth, wEff);\n      dims.openWidth = dims.totalWidth;\n      dims.totalHeight += hEff + constants.gapButton;\n      dims.openHeight += hEff + constants.gapButton;\n    } else {\n      dims.totalWidth += wEff + constants.gapButton;\n      dims.openWidth += wEff + constants.gapButton;\n      dims.totalHeight = Math.max(dims.totalHeight, hEff);\n      dims.openHeight = dims.totalHeight;\n    }\n  });\n\n  if (isVertical) {\n    dims.totalHeight -= constants.gapButton;\n  } else {\n    dims.totalWidth -= constants.gapButton;\n  }\n\n  dims.headerWidth = dims.width1 + constants.arrowPadX;\n  dims.headerHeight = dims.height1;\n\n  if (menuOpts.type === 'dropdown') {\n    if (isVertical) {\n      dims.width1 += constants.arrowPadX;\n      dims.totalHeight = dims.height1;\n    } else {\n      dims.totalWidth = dims.width1;\n    }\n\n    dims.totalWidth += constants.arrowPadX;\n  }\n\n  fakeButtons.remove();\n  var paddedWidth = dims.totalWidth + menuOpts.pad.l + menuOpts.pad.r;\n  var paddedHeight = dims.totalHeight + menuOpts.pad.t + menuOpts.pad.b;\n  var graphSize = gd._fullLayout._size;\n  dims.lx = graphSize.l + graphSize.w * menuOpts.x;\n  dims.ly = graphSize.t + graphSize.h * (1 - menuOpts.y);\n  var xanchor = 'left';\n\n  if (Lib.isRightAnchor(menuOpts)) {\n    dims.lx -= paddedWidth;\n    xanchor = 'right';\n  }\n\n  if (Lib.isCenterAnchor(menuOpts)) {\n    dims.lx -= paddedWidth / 2;\n    xanchor = 'center';\n  }\n\n  var yanchor = 'top';\n\n  if (Lib.isBottomAnchor(menuOpts)) {\n    dims.ly -= paddedHeight;\n    yanchor = 'bottom';\n  }\n\n  if (Lib.isMiddleAnchor(menuOpts)) {\n    dims.ly -= paddedHeight / 2;\n    yanchor = 'middle';\n  }\n\n  dims.totalWidth = Math.ceil(dims.totalWidth);\n  dims.totalHeight = Math.ceil(dims.totalHeight);\n  dims.lx = Math.round(dims.lx);\n  dims.ly = Math.round(dims.ly);\n  Plots.autoMargin(gd, autoMarginId(menuOpts), {\n    x: menuOpts.x,\n    y: menuOpts.y,\n    l: paddedWidth * ({\n      right: 1,\n      center: 0.5\n    }[xanchor] || 0),\n    r: paddedWidth * ({\n      left: 1,\n      center: 0.5\n    }[xanchor] || 0),\n    b: paddedHeight * ({\n      top: 1,\n      middle: 0.5\n    }[yanchor] || 0),\n    t: paddedHeight * ({\n      bottom: 1,\n      middle: 0.5\n    }[yanchor] || 0)\n  });\n}\n\nfunction autoMarginId(menuOpts) {\n  return constants.autoMarginIdRoot + menuOpts._index;\n} // set item positions (mutates posOpts)\n\n\nfunction setItemPosition(item, menuOpts, posOpts, overrideOpts) {\n  overrideOpts = overrideOpts || {};\n  var rect = item.select('.' + constants.itemRectClassName);\n  var text = item.select('.' + constants.itemTextClassName);\n  var borderWidth = menuOpts.borderwidth;\n  var index = posOpts.index;\n  var dims = menuOpts._dims;\n  Drawing.setTranslate(item, borderWidth + posOpts.x, borderWidth + posOpts.y);\n  var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n  var finalHeight = overrideOpts.height || (isVertical ? dims.heights[index] : dims.height1);\n  rect.attr({\n    x: 0,\n    y: 0,\n    width: overrideOpts.width || (isVertical ? dims.width1 : dims.widths[index]),\n    height: finalHeight\n  });\n  var tHeight = menuOpts.font.size * LINE_SPACING;\n  var tLines = svgTextUtils.lineCount(text);\n  var spanOffset = (tLines - 1) * tHeight / 2;\n  svgTextUtils.positionText(text, constants.textOffsetX, finalHeight / 2 - spanOffset + constants.textOffsetY);\n\n  if (isVertical) {\n    posOpts.y += dims.heights[index] + posOpts.yPad;\n  } else {\n    posOpts.x += dims.widths[index] + posOpts.xPad;\n  }\n\n  posOpts.index++;\n}\n\nfunction removeAllButtons(gButton, newMenuIndexAttr) {\n  gButton.attr(constants.menuIndexAttrName, newMenuIndexAttr || '-1').selectAll('g.' + constants.dropdownButtonClassName).remove();\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/updatemenus/draw.js"],"names":["d3","require","Plots","Color","Drawing","Lib","svgTextUtils","arrayEditor","LINE_SPACING","constants","ScrollBox","module","exports","draw","gd","fullLayout","_fullLayout","menuData","filterVisible","name","clearAutoMargin","menuOpts","autoMargin","autoMarginId","menus","_menulayer","selectAll","containerClassName","data","length","enter","append","classed","style","exit","each","select","headerGroupClassName","remove","headerGroups","keyFunction","gButton","ensureSingle","dropdownButtonGroupClassName","s","i","findDimensions","scrollBoxId","_uid","scrollBox","size","node","parentNode","appendChild","call","removeAllButtons","gHeader","_gButton","type","manageCommandObserver","buttons","setActive","index","drawHeader","isActive","drawButtons","_index","isFolded","attr","menuIndexAttrName","buttonOpts","buttonIndex","isSilentUpdate","active","layout","applyUpdate","header","headerClassName","dims","_dims","headerOpts","blankHeaderOpts","posOpts","y","pad","t","yPad","x","l","xPad","positionOverrides","width","headerWidth","height","headerHeight","drawItem","setItemPosition","arrow","headerArrowClassName","font","text","arrowSymbol","direction","arrowOffsetX","textOffsetY","on","String","styleOnMouseOver","styleOnMouseOut","setTranslate","lx","ly","buttonData","klass","dropdownButtonClassName","buttonClassName","transition","x0","y0","isVertical","indexOf","gapButtonHeader","gapButton","openHeight","openWidth","scrollBoxPosition","borderwidth","button","event","defaultPrevented","execute","args2","executeAPICommand","method","args","emit","menu","styleButtons","w","Math","max","h","drawScrollBox","hideScrollBox","position","translateX","translateY","heights","widths","enable","hbar","vbar","hasHBar","hasVBar","disable","item","itemOpts","drawItemRect","drawItemText","rect","itemRectClassName","rx","ry","stroke","bordercolor","fill","bgcolor","itemTextClassName","tx","label","_meta","templateString","convertToTspans","showactive","activeColor","hoverColor","width1","height1","totalWidth","totalHeight","fakeButtons","tester","tWidth","bBox","wEff","textPadX","minWidth","tHeight","tLines","lineCount","hEff","minHeight","ceil","arrowPadX","paddedWidth","r","paddedHeight","b","graphSize","_size","xanchor","isRightAnchor","isCenterAnchor","yanchor","isBottomAnchor","isMiddleAnchor","round","right","center","left","top","middle","bottom","autoMarginIdRoot","overrideOpts","borderWidth","finalHeight","spanOffset","positionText","textOffsetX","newMenuIndexAttr"],"mappings":"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","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Plots = require('../../plots/plots');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\nvar Lib = require('../../lib');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar arrayEditor = require('../../plot_api/plot_template').arrayEditor;\n\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\n\nvar constants = require('./constants');\nvar ScrollBox = require('./scrollbox');\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout;\n    var menuData = Lib.filterVisible(fullLayout[constants.name]);\n\n    /* Update menu data is bound to the header-group.\n     * The items in the header group are always present.\n     *\n     * Upon clicking on a header its corresponding button\n     * data is bound to the button-group.\n     *\n     * We draw all headers in one group before all buttons\n     * so that the buttons *always* appear above the headers.\n     *\n     * Note that only one set of buttons are visible at once.\n     *\n     * <g container />\n     *\n     *     <g header-group />\n     *         <g item header />\n     *         <text item header-arrow />\n     *     <g header-group />\n     *         <g item header />\n     *         <text item header-arrow />\n     *     ...\n     *\n     *     <g button-group />\n     *         <g item button />\n     *         <g item button />\n     *         ...\n     */\n\n    function clearAutoMargin(menuOpts) {\n        Plots.autoMargin(gd, autoMarginId(menuOpts));\n    }\n\n    // draw update menu container\n    var menus = fullLayout._menulayer\n        .selectAll('g.' + constants.containerClassName)\n        .data(menuData.length > 0 ? [0] : []);\n\n    menus.enter().append('g')\n        .classed(constants.containerClassName, true)\n        .style('cursor', 'pointer');\n\n    menus.exit().each(function() {\n        // Most components don't need to explicitly remove autoMargin, because\n        // marginPushers does this - but updatemenu updates don't go through\n        // a full replot so we need to explicitly remove it.\n        // This is for removing *all* updatemenus, removing individuals is\n        // handled below, in headerGroups.exit\n        d3.select(this).selectAll('g.' + constants.headerGroupClassName)\n            .each(clearAutoMargin);\n    }).remove();\n\n    // return early if no update menus are visible\n    if(menuData.length === 0) return;\n\n    // join header group\n    var headerGroups = menus.selectAll('g.' + constants.headerGroupClassName)\n        .data(menuData, keyFunction);\n\n    headerGroups.enter().append('g')\n        .classed(constants.headerGroupClassName, true);\n\n    // draw dropdown button container\n    var gButton = Lib.ensureSingle(menus, 'g', constants.dropdownButtonGroupClassName, function(s) {\n        s.style('pointer-events', 'all');\n    });\n\n    // find dimensions before plotting anything (this mutates menuOpts)\n    for(var i = 0; i < menuData.length; i++) {\n        var menuOpts = menuData[i];\n        findDimensions(gd, menuOpts);\n    }\n\n    // setup scrollbox\n    var scrollBoxId = 'updatemenus' + fullLayout._uid;\n    var scrollBox = new ScrollBox(gd, gButton, scrollBoxId);\n\n    // remove exiting header, remove dropped buttons and reset margins\n    if(headerGroups.enter().size()) {\n        // make sure gButton is on top of all headers\n        gButton.node().parentNode.appendChild(gButton.node());\n        gButton.call(removeAllButtons);\n    }\n\n    headerGroups.exit().each(function(menuOpts) {\n        gButton.call(removeAllButtons);\n        clearAutoMargin(menuOpts);\n    }).remove();\n\n    // draw headers!\n    headerGroups.each(function(menuOpts) {\n        var gHeader = d3.select(this);\n\n        var _gButton = menuOpts.type === 'dropdown' ? gButton : null;\n\n        Plots.manageCommandObserver(gd, menuOpts, menuOpts.buttons, function(data) {\n            setActive(gd, menuOpts, menuOpts.buttons[data.index], gHeader, _gButton, scrollBox, data.index, true);\n        });\n\n        if(menuOpts.type === 'dropdown') {\n            drawHeader(gd, gHeader, gButton, scrollBox, menuOpts);\n\n            // if this menu is active, update the dropdown container\n            if(isActive(gButton, menuOpts)) {\n                drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n            }\n        } else {\n            drawButtons(gd, gHeader, null, null, menuOpts);\n        }\n    });\n};\n\n// Note that '_index' is set at the default step,\n// it corresponds to the menu index in the user layout update menu container.\n// Because a menu can be set invisible,\n// this is a more 'consistent' field than the index in the menuData.\nfunction keyFunction(menuOpts) {\n    return menuOpts._index;\n}\n\nfunction isFolded(gButton) {\n    return +gButton.attr(constants.menuIndexAttrName) === -1;\n}\n\nfunction isActive(gButton, menuOpts) {\n    return +gButton.attr(constants.menuIndexAttrName) === menuOpts._index;\n}\n\nfunction setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, buttonIndex, isSilentUpdate) {\n    // update 'active' attribute in menuOpts\n    menuOpts.active = buttonIndex;\n\n    // due to templating, it's possible this slider doesn't even exist yet\n    arrayEditor(gd.layout, constants.name, menuOpts)\n        .applyUpdate('active', buttonIndex);\n\n    if(menuOpts.type === 'buttons') {\n        drawButtons(gd, gHeader, null, null, menuOpts);\n    } else if(menuOpts.type === 'dropdown') {\n        // fold up buttons and redraw header\n        gButton.attr(constants.menuIndexAttrName, '-1');\n\n        drawHeader(gd, gHeader, gButton, scrollBox, menuOpts);\n\n        if(!isSilentUpdate) {\n            drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n        }\n    }\n}\n\nfunction drawHeader(gd, gHeader, gButton, scrollBox, menuOpts) {\n    var header = Lib.ensureSingle(gHeader, 'g', constants.headerClassName, function(s) {\n        s.style('pointer-events', 'all');\n    });\n\n    var dims = menuOpts._dims;\n    var active = menuOpts.active;\n    var headerOpts = menuOpts.buttons[active] || constants.blankHeaderOpts;\n    var posOpts = { y: menuOpts.pad.t, yPad: 0, x: menuOpts.pad.l, xPad: 0, index: 0 };\n    var positionOverrides = {\n        width: dims.headerWidth,\n        height: dims.headerHeight\n    };\n\n    header\n        .call(drawItem, menuOpts, headerOpts, gd)\n        .call(setItemPosition, menuOpts, posOpts, positionOverrides);\n\n    // draw drop arrow at the right edge\n    var arrow = Lib.ensureSingle(gHeader, 'text', constants.headerArrowClassName, function(s) {\n        s.attr('text-anchor', 'end')\n            .call(Drawing.font, menuOpts.font)\n            .text(constants.arrowSymbol[menuOpts.direction]);\n    });\n\n    arrow.attr({\n        x: dims.headerWidth - constants.arrowOffsetX + menuOpts.pad.l,\n        y: dims.headerHeight / 2 + constants.textOffsetY + menuOpts.pad.t\n    });\n\n    header.on('click', function() {\n        gButton.call(removeAllButtons,\n            String(isActive(gButton, menuOpts) ? -1 : menuOpts._index)\n        );\n\n        drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n    });\n\n    header.on('mouseover', function() {\n        header.call(styleOnMouseOver);\n    });\n\n    header.on('mouseout', function() {\n        header.call(styleOnMouseOut, menuOpts);\n    });\n\n    // translate header group\n    Drawing.setTranslate(gHeader, dims.lx, dims.ly);\n}\n\nfunction drawButtons(gd, gHeader, gButton, scrollBox, menuOpts) {\n    // If this is a set of buttons, set pointer events = all since we play\n    // some minor games with which container is which in order to simplify\n    // the drawing of *either* buttons or menus\n    if(!gButton) {\n        gButton = gHeader;\n        gButton.attr('pointer-events', 'all');\n    }\n\n    var buttonData = (!isFolded(gButton) || menuOpts.type === 'buttons') ?\n        menuOpts.buttons :\n        [];\n\n    var klass = menuOpts.type === 'dropdown' ? constants.dropdownButtonClassName : constants.buttonClassName;\n\n    var buttons = gButton.selectAll('g.' + klass)\n        .data(Lib.filterVisible(buttonData));\n\n    var enter = buttons.enter().append('g')\n        .classed(klass, true);\n\n    var exit = buttons.exit();\n\n    if(menuOpts.type === 'dropdown') {\n        enter.attr('opacity', '0')\n            .transition()\n            .attr('opacity', '1');\n\n        exit.transition()\n            .attr('opacity', '0')\n            .remove();\n    } else {\n        exit.remove();\n    }\n\n    var x0 = 0;\n    var y0 = 0;\n    var dims = menuOpts._dims;\n\n    var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n\n    if(menuOpts.type === 'dropdown') {\n        if(isVertical) {\n            y0 = dims.headerHeight + constants.gapButtonHeader;\n        } else {\n            x0 = dims.headerWidth + constants.gapButtonHeader;\n        }\n    }\n\n    if(menuOpts.type === 'dropdown' && menuOpts.direction === 'up') {\n        y0 = -constants.gapButtonHeader + constants.gapButton - dims.openHeight;\n    }\n\n    if(menuOpts.type === 'dropdown' && menuOpts.direction === 'left') {\n        x0 = -constants.gapButtonHeader + constants.gapButton - dims.openWidth;\n    }\n\n    var posOpts = {\n        x: dims.lx + x0 + menuOpts.pad.l,\n        y: dims.ly + y0 + menuOpts.pad.t,\n        yPad: constants.gapButton,\n        xPad: constants.gapButton,\n        index: 0,\n    };\n\n    var scrollBoxPosition = {\n        l: posOpts.x + menuOpts.borderwidth,\n        t: posOpts.y + menuOpts.borderwidth\n    };\n\n    buttons.each(function(buttonOpts, buttonIndex) {\n        var button = d3.select(this);\n\n        button\n            .call(drawItem, menuOpts, buttonOpts, gd)\n            .call(setItemPosition, menuOpts, posOpts);\n\n        button.on('click', function() {\n            // skip `dragend` events\n            if(d3.event.defaultPrevented) return;\n\n            if(buttonOpts.execute) {\n                if(buttonOpts.args2 && menuOpts.active === buttonIndex) {\n                    setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, -1);\n                    Plots.executeAPICommand(gd, buttonOpts.method, buttonOpts.args2);\n                } else {\n                    setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, buttonIndex);\n                    Plots.executeAPICommand(gd, buttonOpts.method, buttonOpts.args);\n                }\n            }\n\n            gd.emit('plotly_buttonclicked', {menu: menuOpts, button: buttonOpts, active: menuOpts.active});\n        });\n\n        button.on('mouseover', function() {\n            button.call(styleOnMouseOver);\n        });\n\n        button.on('mouseout', function() {\n            button.call(styleOnMouseOut, menuOpts);\n            buttons.call(styleButtons, menuOpts);\n        });\n    });\n\n    buttons.call(styleButtons, menuOpts);\n\n    if(isVertical) {\n        scrollBoxPosition.w = Math.max(dims.openWidth, dims.headerWidth);\n        scrollBoxPosition.h = posOpts.y - scrollBoxPosition.t;\n    } else {\n        scrollBoxPosition.w = posOpts.x - scrollBoxPosition.l;\n        scrollBoxPosition.h = Math.max(dims.openHeight, dims.headerHeight);\n    }\n\n    scrollBoxPosition.direction = menuOpts.direction;\n\n    if(scrollBox) {\n        if(buttons.size()) {\n            drawScrollBox(gd, gHeader, gButton, scrollBox, menuOpts, scrollBoxPosition);\n        } else {\n            hideScrollBox(scrollBox);\n        }\n    }\n}\n\nfunction drawScrollBox(gd, gHeader, gButton, scrollBox, menuOpts, position) {\n    // enable the scrollbox\n    var direction = menuOpts.direction;\n    var isVertical = (direction === 'up' || direction === 'down');\n    var dims = menuOpts._dims;\n\n    var active = menuOpts.active;\n    var translateX, translateY;\n    var i;\n    if(isVertical) {\n        translateY = 0;\n        for(i = 0; i < active; i++) {\n            translateY += dims.heights[i] + constants.gapButton;\n        }\n    } else {\n        translateX = 0;\n        for(i = 0; i < active; i++) {\n            translateX += dims.widths[i] + constants.gapButton;\n        }\n    }\n\n    scrollBox.enable(position, translateX, translateY);\n\n    if(scrollBox.hbar) {\n        scrollBox.hbar\n            .attr('opacity', '0')\n            .transition()\n            .attr('opacity', '1');\n    }\n\n    if(scrollBox.vbar) {\n        scrollBox.vbar\n            .attr('opacity', '0')\n            .transition()\n            .attr('opacity', '1');\n    }\n}\n\nfunction hideScrollBox(scrollBox) {\n    var hasHBar = !!scrollBox.hbar;\n    var hasVBar = !!scrollBox.vbar;\n\n    if(hasHBar) {\n        scrollBox.hbar\n            .transition()\n            .attr('opacity', '0')\n            .each('end', function() {\n                hasHBar = false;\n                if(!hasVBar) scrollBox.disable();\n            });\n    }\n\n    if(hasVBar) {\n        scrollBox.vbar\n            .transition()\n            .attr('opacity', '0')\n            .each('end', function() {\n                hasVBar = false;\n                if(!hasHBar) scrollBox.disable();\n            });\n    }\n}\n\nfunction drawItem(item, menuOpts, itemOpts, gd) {\n    item.call(drawItemRect, menuOpts)\n        .call(drawItemText, menuOpts, itemOpts, gd);\n}\n\nfunction drawItemRect(item, menuOpts) {\n    var rect = Lib.ensureSingle(item, 'rect', constants.itemRectClassName, function(s) {\n        s.attr({\n            rx: constants.rx,\n            ry: constants.ry,\n            'shape-rendering': 'crispEdges'\n        });\n    });\n\n    rect.call(Color.stroke, menuOpts.bordercolor)\n        .call(Color.fill, menuOpts.bgcolor)\n        .style('stroke-width', menuOpts.borderwidth + 'px');\n}\n\nfunction drawItemText(item, menuOpts, itemOpts, gd) {\n    var text = Lib.ensureSingle(item, 'text', constants.itemTextClassName, function(s) {\n        s.attr({\n            'text-anchor': 'start',\n            'data-notex': 1\n        });\n    });\n\n    var tx = itemOpts.label;\n    var _meta = gd._fullLayout._meta;\n    if(_meta) tx = Lib.templateString(tx, _meta);\n\n    text.call(Drawing.font, menuOpts.font)\n        .text(tx)\n        .call(svgTextUtils.convertToTspans, gd);\n}\n\nfunction styleButtons(buttons, menuOpts) {\n    var active = menuOpts.active;\n\n    buttons.each(function(buttonOpts, i) {\n        var button = d3.select(this);\n\n        if(i === active && menuOpts.showactive) {\n            button.select('rect.' + constants.itemRectClassName)\n                .call(Color.fill, constants.activeColor);\n        }\n    });\n}\n\nfunction styleOnMouseOver(item) {\n    item.select('rect.' + constants.itemRectClassName)\n        .call(Color.fill, constants.hoverColor);\n}\n\nfunction styleOnMouseOut(item, menuOpts) {\n    item.select('rect.' + constants.itemRectClassName)\n        .call(Color.fill, menuOpts.bgcolor);\n}\n\n// find item dimensions (this mutates menuOpts)\nfunction findDimensions(gd, menuOpts) {\n    var dims = menuOpts._dims = {\n        width1: 0,\n        height1: 0,\n        heights: [],\n        widths: [],\n        totalWidth: 0,\n        totalHeight: 0,\n        openWidth: 0,\n        openHeight: 0,\n        lx: 0,\n        ly: 0\n    };\n\n    var fakeButtons = Drawing.tester.selectAll('g.' + constants.dropdownButtonClassName)\n        .data(Lib.filterVisible(menuOpts.buttons));\n\n    fakeButtons.enter().append('g')\n        .classed(constants.dropdownButtonClassName, true);\n\n    var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n\n    // loop over fake buttons to find width / height\n    fakeButtons.each(function(buttonOpts, i) {\n        var button = d3.select(this);\n\n        button.call(drawItem, menuOpts, buttonOpts, gd);\n\n        var text = button.select('.' + constants.itemTextClassName);\n\n        // width is given by max width of all buttons\n        var tWidth = text.node() && Drawing.bBox(text.node()).width;\n        var wEff = Math.max(tWidth + constants.textPadX, constants.minWidth);\n\n        // height is determined by item text\n        var tHeight = menuOpts.font.size * LINE_SPACING;\n        var tLines = svgTextUtils.lineCount(text);\n        var hEff = Math.max(tHeight * tLines, constants.minHeight) + constants.textOffsetY;\n\n        hEff = Math.ceil(hEff);\n        wEff = Math.ceil(wEff);\n\n        // Store per-item sizes since a row of horizontal buttons, for example,\n        // don't all need to be the same width:\n        dims.widths[i] = wEff;\n        dims.heights[i] = hEff;\n\n        // Height and width of individual element:\n        dims.height1 = Math.max(dims.height1, hEff);\n        dims.width1 = Math.max(dims.width1, wEff);\n\n        if(isVertical) {\n            dims.totalWidth = Math.max(dims.totalWidth, wEff);\n            dims.openWidth = dims.totalWidth;\n            dims.totalHeight += hEff + constants.gapButton;\n            dims.openHeight += hEff + constants.gapButton;\n        } else {\n            dims.totalWidth += wEff + constants.gapButton;\n            dims.openWidth += wEff + constants.gapButton;\n            dims.totalHeight = Math.max(dims.totalHeight, hEff);\n            dims.openHeight = dims.totalHeight;\n        }\n    });\n\n    if(isVertical) {\n        dims.totalHeight -= constants.gapButton;\n    } else {\n        dims.totalWidth -= constants.gapButton;\n    }\n\n\n    dims.headerWidth = dims.width1 + constants.arrowPadX;\n    dims.headerHeight = dims.height1;\n\n    if(menuOpts.type === 'dropdown') {\n        if(isVertical) {\n            dims.width1 += constants.arrowPadX;\n            dims.totalHeight = dims.height1;\n        } else {\n            dims.totalWidth = dims.width1;\n        }\n        dims.totalWidth += constants.arrowPadX;\n    }\n\n    fakeButtons.remove();\n\n    var paddedWidth = dims.totalWidth + menuOpts.pad.l + menuOpts.pad.r;\n    var paddedHeight = dims.totalHeight + menuOpts.pad.t + menuOpts.pad.b;\n\n    var graphSize = gd._fullLayout._size;\n    dims.lx = graphSize.l + graphSize.w * menuOpts.x;\n    dims.ly = graphSize.t + graphSize.h * (1 - menuOpts.y);\n\n    var xanchor = 'left';\n    if(Lib.isRightAnchor(menuOpts)) {\n        dims.lx -= paddedWidth;\n        xanchor = 'right';\n    }\n    if(Lib.isCenterAnchor(menuOpts)) {\n        dims.lx -= paddedWidth / 2;\n        xanchor = 'center';\n    }\n\n    var yanchor = 'top';\n    if(Lib.isBottomAnchor(menuOpts)) {\n        dims.ly -= paddedHeight;\n        yanchor = 'bottom';\n    }\n    if(Lib.isMiddleAnchor(menuOpts)) {\n        dims.ly -= paddedHeight / 2;\n        yanchor = 'middle';\n    }\n\n    dims.totalWidth = Math.ceil(dims.totalWidth);\n    dims.totalHeight = Math.ceil(dims.totalHeight);\n    dims.lx = Math.round(dims.lx);\n    dims.ly = Math.round(dims.ly);\n\n    Plots.autoMargin(gd, autoMarginId(menuOpts), {\n        x: menuOpts.x,\n        y: menuOpts.y,\n        l: paddedWidth * ({right: 1, center: 0.5}[xanchor] || 0),\n        r: paddedWidth * ({left: 1, center: 0.5}[xanchor] || 0),\n        b: paddedHeight * ({top: 1, middle: 0.5}[yanchor] || 0),\n        t: paddedHeight * ({bottom: 1, middle: 0.5}[yanchor] || 0)\n    });\n}\n\nfunction autoMarginId(menuOpts) {\n    return constants.autoMarginIdRoot + menuOpts._index;\n}\n\n// set item positions (mutates posOpts)\nfunction setItemPosition(item, menuOpts, posOpts, overrideOpts) {\n    overrideOpts = overrideOpts || {};\n    var rect = item.select('.' + constants.itemRectClassName);\n    var text = item.select('.' + constants.itemTextClassName);\n    var borderWidth = menuOpts.borderwidth;\n    var index = posOpts.index;\n    var dims = menuOpts._dims;\n\n    Drawing.setTranslate(item, borderWidth + posOpts.x, borderWidth + posOpts.y);\n\n    var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n    var finalHeight = overrideOpts.height || (isVertical ? dims.heights[index] : dims.height1);\n\n    rect.attr({\n        x: 0,\n        y: 0,\n        width: overrideOpts.width || (isVertical ? dims.width1 : dims.widths[index]),\n        height: finalHeight\n    });\n\n    var tHeight = menuOpts.font.size * LINE_SPACING;\n    var tLines = svgTextUtils.lineCount(text);\n    var spanOffset = ((tLines - 1) * tHeight / 2);\n\n    svgTextUtils.positionText(text, constants.textOffsetX,\n        finalHeight / 2 - spanOffset + constants.textOffsetY);\n\n    if(isVertical) {\n        posOpts.y += dims.heights[index] + posOpts.yPad;\n    } else {\n        posOpts.x += dims.widths[index] + posOpts.xPad;\n    }\n\n    posOpts.index++;\n}\n\nfunction removeAllButtons(gButton, newMenuIndexAttr) {\n    gButton\n        .attr(constants.menuIndexAttrName, newMenuIndexAttr || '-1')\n        .selectAll('g.' + constants.dropdownButtonClassName).remove();\n}\n"]},"metadata":{},"sourceType":"script"}