{"ast":null,"code":"'use strict'; // for automatic alignment on dragging, <1/3 means left align,\n// >2/3 means right, and between is center. Pick the right fraction\n// based on where you are, and return the fraction corresponding to\n// that position on the object\n\nmodule.exports = function align(v, dv, v0, v1, anchor) {\n  var vmin = (v - v0) / (v1 - v0);\n  var vmax = vmin + dv / (v1 - v0);\n  var vc = (vmin + vmax) / 2; // explicitly specified anchor\n\n  if (anchor === 'left' || anchor === 'bottom') return vmin;\n  if (anchor === 'center' || anchor === 'middle') return vc;\n  if (anchor === 'right' || anchor === 'top') return vmax; // automatic based on position\n\n  if (vmin < 2 / 3 - vc) return vmin;\n  if (vmax > 4 / 3 - vc) return vmax;\n  return vc;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/dragelement/align.js"],"names":["module","exports","align","v","dv","v0","v1","anchor","vmin","vmax","vc"],"mappings":"AAAA,a,CAGA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,CAAf,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,MAA9B,EAAsC;AACnD,MAAIC,IAAI,GAAG,CAACL,CAAC,GAAGE,EAAL,KAAYC,EAAE,GAAGD,EAAjB,CAAX;AACA,MAAII,IAAI,GAAGD,IAAI,GAAGJ,EAAE,IAAIE,EAAE,GAAGD,EAAT,CAApB;AACA,MAAIK,EAAE,GAAG,CAACF,IAAI,GAAGC,IAAR,IAAgB,CAAzB,CAHmD,CAKnD;;AACA,MAAGF,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,QAAnC,EAA6C,OAAOC,IAAP;AAC7C,MAAGD,MAAM,KAAK,QAAX,IAAuBA,MAAM,KAAK,QAArC,EAA+C,OAAOG,EAAP;AAC/C,MAAGH,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,KAApC,EAA2C,OAAOE,IAAP,CARQ,CAUnD;;AACA,MAAGD,IAAI,GAAI,IAAI,CAAL,GAAUE,EAApB,EAAwB,OAAOF,IAAP;AACxB,MAAGC,IAAI,GAAI,IAAI,CAAL,GAAUC,EAApB,EAAwB,OAAOD,IAAP;AACxB,SAAOC,EAAP;AACH,CAdD","sourcesContent":["'use strict';\n\n\n// for automatic alignment on dragging, <1/3 means left align,\n// >2/3 means right, and between is center. Pick the right fraction\n// based on where you are, and return the fraction corresponding to\n// that position on the object\nmodule.exports = function align(v, dv, v0, v1, anchor) {\n    var vmin = (v - v0) / (v1 - v0);\n    var vmax = vmin + dv / (v1 - v0);\n    var vc = (vmin + vmax) / 2;\n\n    // explicitly specified anchor\n    if(anchor === 'left' || anchor === 'bottom') return vmin;\n    if(anchor === 'center' || anchor === 'middle') return vc;\n    if(anchor === 'right' || anchor === 'top') return vmax;\n\n    // automatic based on position\n    if(vmin < (2 / 3) - vc) return vmin;\n    if(vmax > (4 / 3) - vc) return vmax;\n    return vc;\n};\n"]},"metadata":{},"sourceType":"script"}