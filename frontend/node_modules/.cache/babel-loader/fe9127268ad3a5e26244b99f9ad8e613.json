{"ast":null,"code":"'use strict';\n\nvar Registry = require('../registry');\n\nvar Lib = require('../lib');\n\nvar extendFlat = Lib.extendFlat;\nvar extendDeep = Lib.extendDeep; // Put default plotTile layouts here\n\nfunction cloneLayoutOverride(tileClass) {\n  var override;\n\n  switch (tileClass) {\n    case 'themes__thumb':\n      override = {\n        autosize: true,\n        width: 150,\n        height: 150,\n        title: {\n          text: ''\n        },\n        showlegend: false,\n        margin: {\n          l: 5,\n          r: 5,\n          t: 5,\n          b: 5,\n          pad: 0\n        },\n        annotations: []\n      };\n      break;\n\n    case 'thumbnail':\n      override = {\n        title: {\n          text: ''\n        },\n        hidesources: true,\n        showlegend: false,\n        borderwidth: 0,\n        bordercolor: '',\n        margin: {\n          l: 1,\n          r: 1,\n          t: 1,\n          b: 1,\n          pad: 0\n        },\n        annotations: []\n      };\n      break;\n\n    default:\n      override = {};\n  }\n\n  return override;\n}\n\nfunction keyIsAxis(keyName) {\n  var types = ['xaxis', 'yaxis', 'zaxis'];\n  return types.indexOf(keyName.slice(0, 5)) > -1;\n}\n\nmodule.exports = function clonePlot(graphObj, options) {\n  var i;\n  var oldData = graphObj.data;\n  var oldLayout = graphObj.layout;\n  var newData = extendDeep([], oldData);\n  var newLayout = extendDeep({}, oldLayout, cloneLayoutOverride(options.tileClass));\n  var context = graphObj._context || {};\n  if (options.width) newLayout.width = options.width;\n  if (options.height) newLayout.height = options.height;\n\n  if (options.tileClass === 'thumbnail' || options.tileClass === 'themes__thumb') {\n    // kill annotations\n    newLayout.annotations = [];\n    var keys = Object.keys(newLayout);\n\n    for (i = 0; i < keys.length; i++) {\n      if (keyIsAxis(keys[i])) {\n        newLayout[keys[i]].title = {\n          text: ''\n        };\n      }\n    } // kill colorbar and pie labels\n\n\n    for (i = 0; i < newData.length; i++) {\n      var trace = newData[i];\n      trace.showscale = false;\n      if (trace.marker) trace.marker.showscale = false;\n      if (Registry.traceIs(trace, 'pie-like')) trace.textposition = 'none';\n    }\n  }\n\n  if (Array.isArray(options.annotations)) {\n    for (i = 0; i < options.annotations.length; i++) {\n      newLayout.annotations.push(options.annotations[i]);\n    }\n  } // TODO: does this scene modification really belong here?\n  // If we still need it, can it move into the gl3d module?\n\n\n  var sceneIds = Object.keys(newLayout).filter(function (key) {\n    return key.match(/^scene\\d*$/);\n  });\n\n  if (sceneIds.length) {\n    var axesImageOverride = {};\n\n    if (options.tileClass === 'thumbnail') {\n      axesImageOverride = {\n        title: {\n          text: ''\n        },\n        showaxeslabels: false,\n        showticklabels: false,\n        linetickenable: false\n      };\n    }\n\n    for (i = 0; i < sceneIds.length; i++) {\n      var scene = newLayout[sceneIds[i]];\n\n      if (!scene.xaxis) {\n        scene.xaxis = {};\n      }\n\n      if (!scene.yaxis) {\n        scene.yaxis = {};\n      }\n\n      if (!scene.zaxis) {\n        scene.zaxis = {};\n      }\n\n      extendFlat(scene.xaxis, axesImageOverride);\n      extendFlat(scene.yaxis, axesImageOverride);\n      extendFlat(scene.zaxis, axesImageOverride); // TODO what does this do?\n\n      scene._scene = null;\n    }\n  }\n\n  var gd = document.createElement('div');\n  if (options.tileClass) gd.className = options.tileClass;\n  var plotTile = {\n    gd: gd,\n    td: gd,\n    // for external (image server) compatibility\n    layout: newLayout,\n    data: newData,\n    config: {\n      staticPlot: options.staticPlot === undefined ? true : options.staticPlot,\n      plotGlPixelRatio: options.plotGlPixelRatio === undefined ? 2 : options.plotGlPixelRatio,\n      displaylogo: options.displaylogo || false,\n      showLink: options.showLink || false,\n      showTips: options.showTips || false,\n      mapboxAccessToken: context.mapboxAccessToken\n    }\n  };\n\n  if (options.setBackground !== 'transparent') {\n    plotTile.config.setBackground = options.setBackground || 'opaque';\n  } // attaching the default Layout the gd, so you can grab it later\n\n\n  plotTile.gd.defaultLayout = cloneLayoutOverride(options.tileClass);\n  return plotTile;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/snapshot/cloneplot.js"],"names":["Registry","require","Lib","extendFlat","extendDeep","cloneLayoutOverride","tileClass","override","autosize","width","height","title","text","showlegend","margin","l","r","t","b","pad","annotations","hidesources","borderwidth","bordercolor","keyIsAxis","keyName","types","indexOf","slice","module","exports","clonePlot","graphObj","options","i","oldData","data","oldLayout","layout","newData","newLayout","context","_context","keys","Object","length","trace","showscale","marker","traceIs","textposition","Array","isArray","push","sceneIds","filter","key","match","axesImageOverride","showaxeslabels","showticklabels","linetickenable","scene","xaxis","yaxis","zaxis","_scene","gd","document","createElement","className","plotTile","td","config","staticPlot","undefined","plotGlPixelRatio","displaylogo","showLink","showTips","mapboxAccessToken","setBackground","defaultLayout"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Registry = require('../registry');\nvar Lib = require('../lib');\n\nvar extendFlat = Lib.extendFlat;\nvar extendDeep = Lib.extendDeep;\n\n// Put default plotTile layouts here\nfunction cloneLayoutOverride(tileClass) {\n    var override;\n\n    switch(tileClass) {\n        case 'themes__thumb':\n            override = {\n                autosize: true,\n                width: 150,\n                height: 150,\n                title: {text: ''},\n                showlegend: false,\n                margin: {l: 5, r: 5, t: 5, b: 5, pad: 0},\n                annotations: []\n            };\n            break;\n\n        case 'thumbnail':\n            override = {\n                title: {text: ''},\n                hidesources: true,\n                showlegend: false,\n                borderwidth: 0,\n                bordercolor: '',\n                margin: {l: 1, r: 1, t: 1, b: 1, pad: 0},\n                annotations: []\n            };\n            break;\n\n        default:\n            override = {};\n    }\n\n\n    return override;\n}\n\nfunction keyIsAxis(keyName) {\n    var types = ['xaxis', 'yaxis', 'zaxis'];\n    return (types.indexOf(keyName.slice(0, 5)) > -1);\n}\n\n\nmodule.exports = function clonePlot(graphObj, options) {\n    var i;\n    var oldData = graphObj.data;\n    var oldLayout = graphObj.layout;\n    var newData = extendDeep([], oldData);\n    var newLayout = extendDeep({}, oldLayout, cloneLayoutOverride(options.tileClass));\n    var context = graphObj._context || {};\n\n    if(options.width) newLayout.width = options.width;\n    if(options.height) newLayout.height = options.height;\n\n    if(options.tileClass === 'thumbnail' || options.tileClass === 'themes__thumb') {\n        // kill annotations\n        newLayout.annotations = [];\n        var keys = Object.keys(newLayout);\n\n        for(i = 0; i < keys.length; i++) {\n            if(keyIsAxis(keys[i])) {\n                newLayout[keys[i]].title = {text: ''};\n            }\n        }\n\n        // kill colorbar and pie labels\n        for(i = 0; i < newData.length; i++) {\n            var trace = newData[i];\n            trace.showscale = false;\n            if(trace.marker) trace.marker.showscale = false;\n            if(Registry.traceIs(trace, 'pie-like')) trace.textposition = 'none';\n        }\n    }\n\n    if(Array.isArray(options.annotations)) {\n        for(i = 0; i < options.annotations.length; i++) {\n            newLayout.annotations.push(options.annotations[i]);\n        }\n    }\n\n    // TODO: does this scene modification really belong here?\n    // If we still need it, can it move into the gl3d module?\n    var sceneIds = Object.keys(newLayout).filter(function(key) {\n        return key.match(/^scene\\d*$/);\n    });\n    if(sceneIds.length) {\n        var axesImageOverride = {};\n        if(options.tileClass === 'thumbnail') {\n            axesImageOverride = {\n                title: {text: ''},\n                showaxeslabels: false,\n                showticklabels: false,\n                linetickenable: false\n            };\n        }\n        for(i = 0; i < sceneIds.length; i++) {\n            var scene = newLayout[sceneIds[i]];\n\n            if(!scene.xaxis) {\n                scene.xaxis = {};\n            }\n\n            if(!scene.yaxis) {\n                scene.yaxis = {};\n            }\n\n            if(!scene.zaxis) {\n                scene.zaxis = {};\n            }\n\n            extendFlat(scene.xaxis, axesImageOverride);\n            extendFlat(scene.yaxis, axesImageOverride);\n            extendFlat(scene.zaxis, axesImageOverride);\n\n            // TODO what does this do?\n            scene._scene = null;\n        }\n    }\n\n    var gd = document.createElement('div');\n    if(options.tileClass) gd.className = options.tileClass;\n\n    var plotTile = {\n        gd: gd,\n        td: gd, // for external (image server) compatibility\n        layout: newLayout,\n        data: newData,\n        config: {\n            staticPlot: (options.staticPlot === undefined) ?\n                true :\n                options.staticPlot,\n            plotGlPixelRatio: (options.plotGlPixelRatio === undefined) ?\n                2 :\n                options.plotGlPixelRatio,\n            displaylogo: options.displaylogo || false,\n            showLink: options.showLink || false,\n            showTips: options.showTips || false,\n            mapboxAccessToken: context.mapboxAccessToken\n        }\n    };\n\n    if(options.setBackground !== 'transparent') {\n        plotTile.config.setBackground = options.setBackground || 'opaque';\n    }\n\n    // attaching the default Layout the gd, so you can grab it later\n    plotTile.gd.defaultLayout = cloneLayoutOverride(options.tileClass);\n\n    return plotTile;\n};\n"]},"metadata":{},"sourceType":"script"}