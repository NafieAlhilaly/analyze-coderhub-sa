{"ast":null,"code":"module.exports = fromRotationTranslation;\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3],\n      x2 = x + x,\n      y2 = y + y,\n      z2 = z + z,\n      xx = x * x2,\n      xy = x * y2,\n      xz = x * z2,\n      yy = y * y2,\n      yz = y * z2,\n      zz = z * z2,\n      wx = w * x2,\n      wy = w * y2,\n      wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n;","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/gl-mat4/fromRotationTranslation.js"],"names":["module","exports","fromRotationTranslation","out","q","v","x","y","z","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,uBAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,uBAAT,CAAiCC,GAAjC,EAAsCC,CAAtC,EAAyCC,CAAzC,EAA4C;AACxC;AACA,MAAIC,CAAC,GAAGF,CAAC,CAAC,CAAD,CAAT;AAAA,MAAcG,CAAC,GAAGH,CAAC,CAAC,CAAD,CAAnB;AAAA,MAAwBI,CAAC,GAAGJ,CAAC,CAAC,CAAD,CAA7B;AAAA,MAAkCK,CAAC,GAAGL,CAAC,CAAC,CAAD,CAAvC;AAAA,MACIM,EAAE,GAAGJ,CAAC,GAAGA,CADb;AAAA,MAEIK,EAAE,GAAGJ,CAAC,GAAGA,CAFb;AAAA,MAGIK,EAAE,GAAGJ,CAAC,GAAGA,CAHb;AAAA,MAKIK,EAAE,GAAGP,CAAC,GAAGI,EALb;AAAA,MAMII,EAAE,GAAGR,CAAC,GAAGK,EANb;AAAA,MAOII,EAAE,GAAGT,CAAC,GAAGM,EAPb;AAAA,MAQII,EAAE,GAAGT,CAAC,GAAGI,EARb;AAAA,MASIM,EAAE,GAAGV,CAAC,GAAGK,EATb;AAAA,MAUIM,EAAE,GAAGV,CAAC,GAAGI,EAVb;AAAA,MAWIO,EAAE,GAAGV,CAAC,GAAGC,EAXb;AAAA,MAYIU,EAAE,GAAGX,CAAC,GAAGE,EAZb;AAAA,MAaIU,EAAE,GAAGZ,CAAC,GAAGG,EAbb;AAeAT,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAKa,EAAE,GAAGE,EAAV,CAAT;AACAf,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASW,EAAE,GAAGO,EAAd;AACAlB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGK,EAAd;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASW,EAAE,GAAGO,EAAd;AACAlB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAKU,EAAE,GAAGK,EAAV,CAAT;AACAf,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGE,EAAd;AACAhB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASY,EAAE,GAAGK,EAAd;AACAjB,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASc,EAAE,GAAGE,EAAd;AACAhB,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,KAAKU,EAAE,GAAGG,EAAV,CAAV;AACAb,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AACAA,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUE,CAAC,CAAC,CAAD,CAAX;AACAF,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUE,CAAC,CAAC,CAAD,CAAX;AACAF,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAUE,CAAC,CAAC,CAAD,CAAX;AACAF,EAAAA,GAAG,CAAC,EAAD,CAAH,GAAU,CAAV;AAEA,SAAOA,GAAP;AACH;;AAAA","sourcesContent":["module.exports = fromRotationTranslation;\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslation(out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};"]},"metadata":{},"sourceType":"script"}