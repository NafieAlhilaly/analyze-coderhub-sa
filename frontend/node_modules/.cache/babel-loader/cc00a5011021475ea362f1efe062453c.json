{"ast":null,"code":"'use strict';\n/* global PlotlyGeoAssets:false */\n\nvar d3 = require('@plotly/d3');\n\nvar geo = require('d3-geo');\n\nvar geoPath = geo.geoPath;\nvar geoDistance = geo.geoDistance;\n\nvar geoProjection = require('d3-geo-projection');\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar strTranslate = Lib.strTranslate;\n\nvar Color = require('../../components/color');\n\nvar Drawing = require('../../components/drawing');\n\nvar Fx = require('../../components/fx');\n\nvar Plots = require('../plots');\n\nvar Axes = require('../cartesian/axes');\n\nvar getAutoRange = require('../cartesian/autorange').getAutoRange;\n\nvar dragElement = require('../../components/dragelement');\n\nvar prepSelect = require('../cartesian/select').prepSelect;\n\nvar clearSelect = require('../cartesian/select').clearSelect;\n\nvar selectOnClick = require('../cartesian/select').selectOnClick;\n\nvar createGeoZoom = require('./zoom');\n\nvar constants = require('./constants');\n\nvar geoUtils = require('../../lib/geo_location_utils');\n\nvar topojsonUtils = require('../../lib/topojson_utils');\n\nvar topojsonFeature = require('topojson-client').feature;\n\nfunction Geo(opts) {\n  this.id = opts.id;\n  this.graphDiv = opts.graphDiv;\n  this.container = opts.container;\n  this.topojsonURL = opts.topojsonURL;\n  this.isStatic = opts.staticPlot;\n  this.topojsonName = null;\n  this.topojson = null;\n  this.projection = null;\n  this.scope = null;\n  this.viewInitial = null;\n  this.fitScale = null;\n  this.bounds = null;\n  this.midPt = null;\n  this.hasChoropleth = false;\n  this.traceHash = {};\n  this.layers = {};\n  this.basePaths = {};\n  this.dataPaths = {};\n  this.dataPoints = {};\n  this.clipDef = null;\n  this.clipRect = null;\n  this.bgRect = null;\n  this.makeFramework();\n}\n\nvar proto = Geo.prototype;\n\nmodule.exports = function createGeo(opts) {\n  return new Geo(opts);\n};\n\nproto.plot = function (geoCalcData, fullLayout, promises) {\n  var _this = this;\n\n  var geoLayout = fullLayout[this.id];\n  var geoPromises = [];\n  var needsTopojson = false;\n\n  for (var k in constants.layerNameToAdjective) {\n    if (k !== 'frame' && geoLayout['show' + k]) {\n      needsTopojson = true;\n      break;\n    }\n  }\n\n  for (var i = 0; i < geoCalcData.length; i++) {\n    if (geoCalcData[0][0].trace.locationmode) {\n      needsTopojson = true;\n      break;\n    }\n  }\n\n  if (needsTopojson) {\n    var topojsonNameNew = topojsonUtils.getTopojsonName(geoLayout);\n\n    if (_this.topojson === null || topojsonNameNew !== _this.topojsonName) {\n      _this.topojsonName = topojsonNameNew;\n\n      if (PlotlyGeoAssets.topojson[_this.topojsonName] === undefined) {\n        geoPromises.push(_this.fetchTopojson());\n      }\n    }\n  }\n\n  geoPromises = geoPromises.concat(geoUtils.fetchTraceGeoData(geoCalcData));\n  promises.push(new Promise(function (resolve, reject) {\n    Promise.all(geoPromises).then(function () {\n      _this.topojson = PlotlyGeoAssets.topojson[_this.topojsonName];\n\n      _this.update(geoCalcData, fullLayout);\n\n      resolve();\n    }).catch(reject);\n  }));\n};\n\nproto.fetchTopojson = function () {\n  var _this = this;\n\n  var topojsonPath = topojsonUtils.getTopojsonPath(_this.topojsonURL, _this.topojsonName);\n  return new Promise(function (resolve, reject) {\n    d3.json(topojsonPath, function (err, topojson) {\n      if (err) {\n        if (err.status === 404) {\n          return reject(new Error(['plotly.js could not find topojson file at', topojsonPath, '.', 'Make sure the *topojsonURL* plot config option', 'is set properly.'].join(' ')));\n        } else {\n          return reject(new Error(['unexpected error while fetching topojson file at', topojsonPath].join(' ')));\n        }\n      }\n\n      PlotlyGeoAssets.topojson[_this.topojsonName] = topojson;\n      resolve();\n    });\n  });\n};\n\nproto.update = function (geoCalcData, fullLayout) {\n  var geoLayout = fullLayout[this.id]; // important: maps with choropleth traces have a different layer order\n\n  this.hasChoropleth = false;\n\n  for (var i = 0; i < geoCalcData.length; i++) {\n    var calcTrace = geoCalcData[i];\n    var trace = calcTrace[0].trace;\n\n    if (trace.type === 'choropleth') {\n      this.hasChoropleth = true;\n    }\n\n    if (trace.visible === true && trace._length > 0) {\n      trace._module.calcGeoJSON(calcTrace, fullLayout);\n    }\n  }\n\n  var hasInvalidBounds = this.updateProjection(geoCalcData, fullLayout);\n  if (hasInvalidBounds) return;\n\n  if (!this.viewInitial || this.scope !== geoLayout.scope) {\n    this.saveViewInitial(geoLayout);\n  }\n\n  this.scope = geoLayout.scope;\n  this.updateBaseLayers(fullLayout, geoLayout);\n  this.updateDims(fullLayout, geoLayout);\n  this.updateFx(fullLayout, geoLayout);\n  Plots.generalUpdatePerTraceModule(this.graphDiv, this, geoCalcData, geoLayout);\n  var scatterLayer = this.layers.frontplot.select('.scatterlayer');\n  this.dataPoints.point = scatterLayer.selectAll('.point');\n  this.dataPoints.text = scatterLayer.selectAll('text');\n  this.dataPaths.line = scatterLayer.selectAll('.js-line');\n  var choroplethLayer = this.layers.backplot.select('.choroplethlayer');\n  this.dataPaths.choropleth = choroplethLayer.selectAll('path');\n  this.render();\n};\n\nproto.updateProjection = function (geoCalcData, fullLayout) {\n  var gd = this.graphDiv;\n  var geoLayout = fullLayout[this.id];\n  var gs = fullLayout._size;\n  var domain = geoLayout.domain;\n  var projLayout = geoLayout.projection;\n  var lonaxis = geoLayout.lonaxis;\n  var lataxis = geoLayout.lataxis;\n  var axLon = lonaxis._ax;\n  var axLat = lataxis._ax;\n  var projection = this.projection = getProjection(geoLayout); // setup subplot extent [[x0,y0], [x1,y1]]\n\n  var extent = [[gs.l + gs.w * domain.x[0], gs.t + gs.h * (1 - domain.y[1])], [gs.l + gs.w * domain.x[1], gs.t + gs.h * (1 - domain.y[0])]];\n  var center = geoLayout.center || {};\n  var rotation = projLayout.rotation || {};\n  var lonaxisRange = lonaxis.range || [];\n  var lataxisRange = lataxis.range || [];\n\n  if (geoLayout.fitbounds) {\n    axLon._length = extent[1][0] - extent[0][0];\n    axLat._length = extent[1][1] - extent[0][1];\n    axLon.range = getAutoRange(gd, axLon);\n    axLat.range = getAutoRange(gd, axLat);\n    var midLon = (axLon.range[0] + axLon.range[1]) / 2;\n    var midLat = (axLat.range[0] + axLat.range[1]) / 2;\n\n    if (geoLayout._isScoped) {\n      center = {\n        lon: midLon,\n        lat: midLat\n      };\n    } else if (geoLayout._isClipped) {\n      center = {\n        lon: midLon,\n        lat: midLat\n      };\n      rotation = {\n        lon: midLon,\n        lat: midLat,\n        roll: rotation.roll\n      };\n      var projType = projLayout.type;\n      var lonHalfSpan = constants.lonaxisSpan[projType] / 2 || 180;\n      var latHalfSpan = constants.lataxisSpan[projType] / 2 || 90;\n      lonaxisRange = [midLon - lonHalfSpan, midLon + lonHalfSpan];\n      lataxisRange = [midLat - latHalfSpan, midLat + latHalfSpan];\n    } else {\n      center = {\n        lon: midLon,\n        lat: midLat\n      };\n      rotation = {\n        lon: midLon,\n        lat: rotation.lat,\n        roll: rotation.roll\n      };\n    }\n  } // set 'pre-fit' projection\n\n\n  projection.center([center.lon - rotation.lon, center.lat - rotation.lat]).rotate([-rotation.lon, -rotation.lat, rotation.roll]).parallels(projLayout.parallels); // fit projection 'scale' and 'translate' to set lon/lat ranges\n\n  var rangeBox = makeRangeBox(lonaxisRange, lataxisRange);\n  projection.fitExtent(extent, rangeBox);\n  var b = this.bounds = projection.getBounds(rangeBox);\n  var s = this.fitScale = projection.scale();\n  var t = projection.translate();\n\n  if (geoLayout.fitbounds) {\n    var b2 = projection.getBounds(makeRangeBox(axLon.range, axLat.range));\n    var k2 = Math.min((b[1][0] - b[0][0]) / (b2[1][0] - b2[0][0]), (b[1][1] - b[0][1]) / (b2[1][1] - b2[0][1]));\n\n    if (isFinite(k2)) {\n      projection.scale(k2 * s);\n    } else {\n      Lib.warn('Something went wrong during' + this.id + 'fitbounds computations.');\n    }\n  } else {\n    // adjust projection to user setting\n    projection.scale(projLayout.scale * s);\n  } // px coordinates of view mid-point,\n  // useful to update `geo.center` after interactions\n\n\n  var midPt = this.midPt = [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2];\n  projection.translate([t[0] + (midPt[0] - t[0]), t[1] + (midPt[1] - t[1])]).clipExtent(b); // the 'albers usa' projection does not expose a 'center' method\n  // so here's this hack to make it respond to 'geoLayout.center'\n\n  if (geoLayout._isAlbersUsa) {\n    var centerPx = projection([center.lon, center.lat]);\n    var tt = projection.translate();\n    projection.translate([tt[0] - (centerPx[0] - tt[0]), tt[1] - (centerPx[1] - tt[1])]);\n  }\n};\n\nproto.updateBaseLayers = function (fullLayout, geoLayout) {\n  var _this = this;\n\n  var topojson = _this.topojson;\n  var layers = _this.layers;\n  var basePaths = _this.basePaths;\n\n  function isAxisLayer(d) {\n    return d === 'lonaxis' || d === 'lataxis';\n  }\n\n  function isLineLayer(d) {\n    return Boolean(constants.lineLayers[d]);\n  }\n\n  function isFillLayer(d) {\n    return Boolean(constants.fillLayers[d]);\n  }\n\n  var allLayers = this.hasChoropleth ? constants.layersForChoropleth : constants.layers;\n  var layerData = allLayers.filter(function (d) {\n    return isLineLayer(d) || isFillLayer(d) ? geoLayout['show' + d] : isAxisLayer(d) ? geoLayout[d].showgrid : true;\n  });\n\n  var join = _this.framework.selectAll('.layer').data(layerData, String);\n\n  join.exit().each(function (d) {\n    delete layers[d];\n    delete basePaths[d];\n    d3.select(this).remove();\n  });\n  join.enter().append('g').attr('class', function (d) {\n    return 'layer ' + d;\n  }).each(function (d) {\n    var layer = layers[d] = d3.select(this);\n\n    if (d === 'bg') {\n      _this.bgRect = layer.append('rect').style('pointer-events', 'all');\n    } else if (isAxisLayer(d)) {\n      basePaths[d] = layer.append('path').style('fill', 'none');\n    } else if (d === 'backplot') {\n      layer.append('g').classed('choroplethlayer', true);\n    } else if (d === 'frontplot') {\n      layer.append('g').classed('scatterlayer', true);\n    } else if (isLineLayer(d)) {\n      basePaths[d] = layer.append('path').style('fill', 'none').style('stroke-miterlimit', 2);\n    } else if (isFillLayer(d)) {\n      basePaths[d] = layer.append('path').style('stroke', 'none');\n    }\n  });\n  join.order();\n  join.each(function (d) {\n    var path = basePaths[d];\n    var adj = constants.layerNameToAdjective[d];\n\n    if (d === 'frame') {\n      path.datum(constants.sphereSVG);\n    } else if (isLineLayer(d) || isFillLayer(d)) {\n      path.datum(topojsonFeature(topojson, topojson.objects[d]));\n    } else if (isAxisLayer(d)) {\n      path.datum(makeGraticule(d, geoLayout, fullLayout)).call(Color.stroke, geoLayout[d].gridcolor).call(Drawing.dashLine, '', geoLayout[d].gridwidth);\n    }\n\n    if (isLineLayer(d)) {\n      path.call(Color.stroke, geoLayout[adj + 'color']).call(Drawing.dashLine, '', geoLayout[adj + 'width']);\n    } else if (isFillLayer(d)) {\n      path.call(Color.fill, geoLayout[adj + 'color']);\n    }\n  });\n};\n\nproto.updateDims = function (fullLayout, geoLayout) {\n  var b = this.bounds;\n  var hFrameWidth = (geoLayout.framewidth || 0) / 2;\n  var l = b[0][0] - hFrameWidth;\n  var t = b[0][1] - hFrameWidth;\n  var w = b[1][0] - l + hFrameWidth;\n  var h = b[1][1] - t + hFrameWidth;\n  Drawing.setRect(this.clipRect, l, t, w, h);\n  this.bgRect.call(Drawing.setRect, l, t, w, h).call(Color.fill, geoLayout.bgcolor);\n  this.xaxis._offset = l;\n  this.xaxis._length = w;\n  this.yaxis._offset = t;\n  this.yaxis._length = h;\n};\n\nproto.updateFx = function (fullLayout, geoLayout) {\n  var _this = this;\n\n  var gd = _this.graphDiv;\n  var bgRect = _this.bgRect;\n  var dragMode = fullLayout.dragmode;\n  var clickMode = fullLayout.clickmode;\n  if (_this.isStatic) return;\n\n  function zoomReset() {\n    var viewInitial = _this.viewInitial;\n    var updateObj = {};\n\n    for (var k in viewInitial) {\n      updateObj[_this.id + '.' + k] = viewInitial[k];\n    }\n\n    Registry.call('_guiRelayout', gd, updateObj);\n    gd.emit('plotly_doubleclick', null);\n  }\n\n  function invert(lonlat) {\n    return _this.projection.invert([lonlat[0] + _this.xaxis._offset, lonlat[1] + _this.yaxis._offset]);\n  }\n\n  var fillRangeItems;\n\n  if (dragMode === 'select') {\n    fillRangeItems = function fillRangeItems(eventData, poly) {\n      var ranges = eventData.range = {};\n      ranges[_this.id] = [invert([poly.xmin, poly.ymin]), invert([poly.xmax, poly.ymax])];\n    };\n  } else if (dragMode === 'lasso') {\n    fillRangeItems = function fillRangeItems(eventData, poly, pts) {\n      var dataPts = eventData.lassoPoints = {};\n      dataPts[_this.id] = pts.filtered.map(invert);\n    };\n  } // Note: dragOptions is needed to be declared for all dragmodes because\n  // it's the object that holds persistent selection state.\n\n\n  var dragOptions = {\n    element: _this.bgRect.node(),\n    gd: gd,\n    plotinfo: {\n      id: _this.id,\n      xaxis: _this.xaxis,\n      yaxis: _this.yaxis,\n      fillRangeItems: fillRangeItems\n    },\n    xaxes: [_this.xaxis],\n    yaxes: [_this.yaxis],\n    subplot: _this.id,\n    clickFn: function clickFn(numClicks) {\n      if (numClicks === 2) {\n        clearSelect(gd);\n      }\n    }\n  };\n\n  if (dragMode === 'pan') {\n    bgRect.node().onmousedown = null;\n    bgRect.call(createGeoZoom(_this, geoLayout));\n    bgRect.on('dblclick.zoom', zoomReset);\n\n    if (!gd._context._scrollZoom.geo) {\n      bgRect.on('wheel.zoom', null);\n    }\n  } else if (dragMode === 'select' || dragMode === 'lasso') {\n    bgRect.on('.zoom', null);\n\n    dragOptions.prepFn = function (e, startX, startY) {\n      prepSelect(e, startX, startY, dragOptions, dragMode);\n    };\n\n    dragElement.init(dragOptions);\n  }\n\n  bgRect.on('mousemove', function () {\n    var lonlat = _this.projection.invert(Lib.getPositionFromD3Event());\n\n    if (!lonlat) {\n      return dragElement.unhover(gd, d3.event);\n    }\n\n    _this.xaxis.p2c = function () {\n      return lonlat[0];\n    };\n\n    _this.yaxis.p2c = function () {\n      return lonlat[1];\n    };\n\n    Fx.hover(gd, d3.event, _this.id);\n  });\n  bgRect.on('mouseout', function () {\n    if (gd._dragging) return;\n    dragElement.unhover(gd, d3.event);\n  });\n  bgRect.on('click', function () {\n    // For select and lasso the dragElement is handling clicks\n    if (dragMode !== 'select' && dragMode !== 'lasso') {\n      if (clickMode.indexOf('select') > -1) {\n        selectOnClick(d3.event, gd, [_this.xaxis], [_this.yaxis], _this.id, dragOptions);\n      }\n\n      if (clickMode.indexOf('event') > -1) {\n        // TODO: like pie and mapbox, this doesn't support right-click\n        // actually this one is worse, as right-click starts a pan, or leaves\n        // select in a weird state.\n        // Also, only tangentially related, we should cancel hover during pan\n        Fx.click(gd, d3.event);\n      }\n    }\n  });\n};\n\nproto.makeFramework = function () {\n  var _this = this;\n\n  var gd = _this.graphDiv;\n  var fullLayout = gd._fullLayout;\n  var clipId = 'clip' + fullLayout._uid + _this.id;\n  _this.clipDef = fullLayout._clips.append('clipPath').attr('id', clipId);\n  _this.clipRect = _this.clipDef.append('rect');\n  _this.framework = d3.select(_this.container).append('g').attr('class', 'geo ' + _this.id).call(Drawing.setClipUrl, clipId, gd); // sane lonlat to px\n\n  _this.project = function (v) {\n    var px = _this.projection(v);\n\n    return px ? [px[0] - _this.xaxis._offset, px[1] - _this.yaxis._offset] : [null, null];\n  };\n\n  _this.xaxis = {\n    _id: 'x',\n    c2p: function c2p(v) {\n      return _this.project(v)[0];\n    }\n  };\n  _this.yaxis = {\n    _id: 'y',\n    c2p: function c2p(v) {\n      return _this.project(v)[1];\n    }\n  }; // mock axis for hover formatting\n\n  _this.mockAxis = {\n    type: 'linear',\n    showexponent: 'all',\n    exponentformat: 'B'\n  };\n  Axes.setConvert(_this.mockAxis, fullLayout);\n};\n\nproto.saveViewInitial = function (geoLayout) {\n  var center = geoLayout.center || {};\n  var projLayout = geoLayout.projection;\n  var rotation = projLayout.rotation || {};\n  this.viewInitial = {\n    'fitbounds': geoLayout.fitbounds,\n    'projection.scale': projLayout.scale\n  };\n  var extra;\n\n  if (geoLayout._isScoped) {\n    extra = {\n      'center.lon': center.lon,\n      'center.lat': center.lat\n    };\n  } else if (geoLayout._isClipped) {\n    extra = {\n      'projection.rotation.lon': rotation.lon,\n      'projection.rotation.lat': rotation.lat\n    };\n  } else {\n    extra = {\n      'center.lon': center.lon,\n      'center.lat': center.lat,\n      'projection.rotation.lon': rotation.lon\n    };\n  }\n\n  Lib.extendFlat(this.viewInitial, extra);\n}; // [hot code path] (re)draw all paths which depend on the projection\n\n\nproto.render = function () {\n  var projection = this.projection;\n  var pathFn = projection.getPath();\n  var k;\n\n  function translatePoints(d) {\n    var lonlatPx = projection(d.lonlat);\n    return lonlatPx ? strTranslate(lonlatPx[0], lonlatPx[1]) : null;\n  }\n\n  function hideShowPoints(d) {\n    return projection.isLonLatOverEdges(d.lonlat) ? 'none' : null;\n  }\n\n  for (k in this.basePaths) {\n    this.basePaths[k].attr('d', pathFn);\n  }\n\n  for (k in this.dataPaths) {\n    this.dataPaths[k].attr('d', function (d) {\n      return pathFn(d.geojson);\n    });\n  }\n\n  for (k in this.dataPoints) {\n    this.dataPoints[k].attr('display', hideShowPoints).attr('transform', translatePoints);\n  }\n}; // Helper that wraps d3[geo + /* Projection name /*]() which:\n//\n// - adds 'getPath', 'getBounds' convenience methods\n// - scopes logic related to 'clipAngle'\n// - adds 'isLonLatOverEdges' method\n// - sets projection precision\n// - sets methods that aren't always defined depending\n//   on the projection type to a dummy 'd3-esque' function,\n//\n// This wrapper alleviates subsequent code of (many) annoying if-statements.\n\n\nfunction getProjection(geoLayout) {\n  var projLayout = geoLayout.projection;\n  var projType = projLayout.type;\n  var projName = constants.projNames[projType]; // uppercase the first letter and add geo to the start of method name\n\n  projName = 'geo' + Lib.titleCase(projName);\n  var projFn = geo[projName] || geoProjection[projName];\n  var projection = projFn();\n  var clipAngle = geoLayout._isSatellite ? Math.acos(1 / projLayout.distance) * 180 / Math.PI : geoLayout._isClipped ? constants.lonaxisSpan[projType] / 2 : null;\n  var methods = ['center', 'rotate', 'parallels', 'clipExtent'];\n\n  var dummyFn = function dummyFn(_) {\n    return _ ? projection : [];\n  };\n\n  for (var i = 0; i < methods.length; i++) {\n    var m = methods[i];\n\n    if (typeof projection[m] !== 'function') {\n      projection[m] = dummyFn;\n    }\n  }\n\n  projection.isLonLatOverEdges = function (lonlat) {\n    if (projection(lonlat) === null) {\n      return true;\n    }\n\n    if (clipAngle) {\n      var r = projection.rotate();\n      var angle = geoDistance(lonlat, [-r[0], -r[1]]);\n      var maxAngle = clipAngle * Math.PI / 180;\n      return angle > maxAngle;\n    } else {\n      return false;\n    }\n  };\n\n  projection.getPath = function () {\n    return geoPath().projection(projection);\n  };\n\n  projection.getBounds = function (object) {\n    return projection.getPath().bounds(object);\n  };\n\n  projection.precision(constants.precision);\n\n  if (geoLayout._isSatellite) {\n    projection.tilt(projLayout.tilt).distance(projLayout.distance);\n  }\n\n  if (clipAngle) {\n    projection.clipAngle(clipAngle - constants.clipPad);\n  }\n\n  return projection;\n}\n\nfunction makeGraticule(axisName, geoLayout, fullLayout) {\n  // equivalent to the d3 \"ε\"\n  var epsilon = 1e-6; // same as the geoGraticule default\n\n  var precision = 2.5;\n  var axLayout = geoLayout[axisName];\n  var scopeDefaults = constants.scopeDefaults[geoLayout.scope];\n  var rng;\n  var oppRng;\n  var coordFn;\n\n  if (axisName === 'lonaxis') {\n    rng = scopeDefaults.lonaxisRange;\n    oppRng = scopeDefaults.lataxisRange;\n\n    coordFn = function coordFn(v, l) {\n      return [v, l];\n    };\n  } else if (axisName === 'lataxis') {\n    rng = scopeDefaults.lataxisRange;\n    oppRng = scopeDefaults.lonaxisRange;\n\n    coordFn = function coordFn(v, l) {\n      return [l, v];\n    };\n  }\n\n  var dummyAx = {\n    type: 'linear',\n    range: [rng[0], rng[1] - epsilon],\n    tick0: axLayout.tick0,\n    dtick: axLayout.dtick\n  };\n  Axes.setConvert(dummyAx, fullLayout);\n  var vals = Axes.calcTicks(dummyAx); // remove duplicate on antimeridian\n\n  if (!geoLayout.isScoped && axisName === 'lonaxis') {\n    vals.pop();\n  }\n\n  var len = vals.length;\n  var coords = new Array(len);\n\n  for (var i = 0; i < len; i++) {\n    var v = vals[i].x;\n    var line = coords[i] = [];\n\n    for (var l = oppRng[0]; l < oppRng[1] + precision; l += precision) {\n      line.push(coordFn(v, l));\n    }\n  }\n\n  return {\n    type: 'MultiLineString',\n    coordinates: coords\n  };\n} // Returns polygon GeoJSON corresponding to lon/lat range box\n// with well-defined direction\n//\n// Note that clipPad padding is added around range to avoid aliasing.\n\n\nfunction makeRangeBox(lon, lat) {\n  var clipPad = constants.clipPad;\n  var lon0 = lon[0] + clipPad;\n  var lon1 = lon[1] - clipPad;\n  var lat0 = lat[0] + clipPad;\n  var lat1 = lat[1] - clipPad; // to cross antimeridian w/o ambiguity\n\n  if (lon0 > 0 && lon1 < 0) lon1 += 360;\n  var dlon4 = (lon1 - lon0) / 4;\n  return {\n    type: 'Polygon',\n    coordinates: [[[lon0, lat0], [lon0, lat1], [lon0 + dlon4, lat1], [lon0 + 2 * dlon4, lat1], [lon0 + 3 * dlon4, lat1], [lon1, lat1], [lon1, lat0], [lon1 - dlon4, lat0], [lon1 - 2 * dlon4, lat0], [lon1 - 3 * dlon4, lat0], [lon0, lat0]]]\n  };\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/plots/geo/geo.js"],"names":["d3","require","geo","geoPath","geoDistance","geoProjection","Registry","Lib","strTranslate","Color","Drawing","Fx","Plots","Axes","getAutoRange","dragElement","prepSelect","clearSelect","selectOnClick","createGeoZoom","constants","geoUtils","topojsonUtils","topojsonFeature","feature","Geo","opts","id","graphDiv","container","topojsonURL","isStatic","staticPlot","topojsonName","topojson","projection","scope","viewInitial","fitScale","bounds","midPt","hasChoropleth","traceHash","layers","basePaths","dataPaths","dataPoints","clipDef","clipRect","bgRect","makeFramework","proto","prototype","module","exports","createGeo","plot","geoCalcData","fullLayout","promises","_this","geoLayout","geoPromises","needsTopojson","k","layerNameToAdjective","i","length","trace","locationmode","topojsonNameNew","getTopojsonName","PlotlyGeoAssets","undefined","push","fetchTopojson","concat","fetchTraceGeoData","Promise","resolve","reject","all","then","update","catch","topojsonPath","getTopojsonPath","json","err","status","Error","join","calcTrace","type","visible","_length","_module","calcGeoJSON","hasInvalidBounds","updateProjection","saveViewInitial","updateBaseLayers","updateDims","updateFx","generalUpdatePerTraceModule","scatterLayer","frontplot","select","point","selectAll","text","line","choroplethLayer","backplot","choropleth","render","gd","gs","_size","domain","projLayout","lonaxis","lataxis","axLon","_ax","axLat","getProjection","extent","l","w","x","t","h","y","center","rotation","lonaxisRange","range","lataxisRange","fitbounds","midLon","midLat","_isScoped","lon","lat","_isClipped","roll","projType","lonHalfSpan","lonaxisSpan","latHalfSpan","lataxisSpan","rotate","parallels","rangeBox","makeRangeBox","fitExtent","b","getBounds","s","scale","translate","b2","k2","Math","min","isFinite","warn","clipExtent","_isAlbersUsa","centerPx","tt","isAxisLayer","d","isLineLayer","Boolean","lineLayers","isFillLayer","fillLayers","allLayers","layersForChoropleth","layerData","filter","showgrid","framework","data","String","exit","each","remove","enter","append","attr","layer","style","classed","order","path","adj","datum","sphereSVG","objects","makeGraticule","call","stroke","gridcolor","dashLine","gridwidth","fill","hFrameWidth","framewidth","setRect","bgcolor","xaxis","_offset","yaxis","dragMode","dragmode","clickMode","clickmode","zoomReset","updateObj","emit","invert","lonlat","fillRangeItems","eventData","poly","ranges","xmin","ymin","xmax","ymax","pts","dataPts","lassoPoints","filtered","map","dragOptions","element","node","plotinfo","xaxes","yaxes","subplot","clickFn","numClicks","onmousedown","on","_context","_scrollZoom","prepFn","e","startX","startY","init","getPositionFromD3Event","unhover","event","p2c","hover","_dragging","indexOf","click","_fullLayout","clipId","_uid","_clips","setClipUrl","project","v","px","_id","c2p","mockAxis","showexponent","exponentformat","setConvert","extra","extendFlat","pathFn","getPath","translatePoints","lonlatPx","hideShowPoints","isLonLatOverEdges","geojson","projName","projNames","titleCase","projFn","clipAngle","_isSatellite","acos","distance","PI","methods","dummyFn","_","m","r","angle","maxAngle","object","precision","tilt","clipPad","axisName","epsilon","axLayout","scopeDefaults","rng","oppRng","coordFn","dummyAx","tick0","dtick","vals","calcTicks","isScoped","pop","len","coords","Array","coordinates","lon0","lon1","lat0","lat1","dlon4"],"mappings":"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","sourcesContent":["'use strict';\n\n/* global PlotlyGeoAssets:false */\n\nvar d3 = require('@plotly/d3');\nvar geo = require('d3-geo');\nvar geoPath = geo.geoPath;\nvar geoDistance = geo.geoDistance;\nvar geoProjection = require('d3-geo-projection');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Fx = require('../../components/fx');\nvar Plots = require('../plots');\nvar Axes = require('../cartesian/axes');\nvar getAutoRange = require('../cartesian/autorange').getAutoRange;\nvar dragElement = require('../../components/dragelement');\nvar prepSelect = require('../cartesian/select').prepSelect;\nvar clearSelect = require('../cartesian/select').clearSelect;\nvar selectOnClick = require('../cartesian/select').selectOnClick;\n\nvar createGeoZoom = require('./zoom');\nvar constants = require('./constants');\n\nvar geoUtils = require('../../lib/geo_location_utils');\nvar topojsonUtils = require('../../lib/topojson_utils');\nvar topojsonFeature = require('topojson-client').feature;\n\nfunction Geo(opts) {\n    this.id = opts.id;\n    this.graphDiv = opts.graphDiv;\n    this.container = opts.container;\n    this.topojsonURL = opts.topojsonURL;\n    this.isStatic = opts.staticPlot;\n\n    this.topojsonName = null;\n    this.topojson = null;\n\n    this.projection = null;\n    this.scope = null;\n    this.viewInitial = null;\n    this.fitScale = null;\n    this.bounds = null;\n    this.midPt = null;\n\n    this.hasChoropleth = false;\n    this.traceHash = {};\n\n    this.layers = {};\n    this.basePaths = {};\n    this.dataPaths = {};\n    this.dataPoints = {};\n\n    this.clipDef = null;\n    this.clipRect = null;\n    this.bgRect = null;\n\n    this.makeFramework();\n}\n\nvar proto = Geo.prototype;\n\nmodule.exports = function createGeo(opts) {\n    return new Geo(opts);\n};\n\nproto.plot = function(geoCalcData, fullLayout, promises) {\n    var _this = this;\n    var geoLayout = fullLayout[this.id];\n    var geoPromises = [];\n\n    var needsTopojson = false;\n    for(var k in constants.layerNameToAdjective) {\n        if(k !== 'frame' && geoLayout['show' + k]) {\n            needsTopojson = true;\n            break;\n        }\n    }\n    for(var i = 0; i < geoCalcData.length; i++) {\n        if(geoCalcData[0][0].trace.locationmode) {\n            needsTopojson = true;\n            break;\n        }\n    }\n\n    if(needsTopojson) {\n        var topojsonNameNew = topojsonUtils.getTopojsonName(geoLayout);\n        if(_this.topojson === null || topojsonNameNew !== _this.topojsonName) {\n            _this.topojsonName = topojsonNameNew;\n\n            if(PlotlyGeoAssets.topojson[_this.topojsonName] === undefined) {\n                geoPromises.push(_this.fetchTopojson());\n            }\n        }\n    }\n\n    geoPromises = geoPromises.concat(geoUtils.fetchTraceGeoData(geoCalcData));\n\n    promises.push(new Promise(function(resolve, reject) {\n        Promise.all(geoPromises).then(function() {\n            _this.topojson = PlotlyGeoAssets.topojson[_this.topojsonName];\n            _this.update(geoCalcData, fullLayout);\n            resolve();\n        })\n        .catch(reject);\n    }));\n};\n\nproto.fetchTopojson = function() {\n    var _this = this;\n    var topojsonPath = topojsonUtils.getTopojsonPath(_this.topojsonURL, _this.topojsonName);\n\n    return new Promise(function(resolve, reject) {\n        d3.json(topojsonPath, function(err, topojson) {\n            if(err) {\n                if(err.status === 404) {\n                    return reject(new Error([\n                        'plotly.js could not find topojson file at',\n                        topojsonPath, '.',\n                        'Make sure the *topojsonURL* plot config option',\n                        'is set properly.'\n                    ].join(' ')));\n                } else {\n                    return reject(new Error([\n                        'unexpected error while fetching topojson file at',\n                        topojsonPath\n                    ].join(' ')));\n                }\n            }\n\n            PlotlyGeoAssets.topojson[_this.topojsonName] = topojson;\n            resolve();\n        });\n    });\n};\n\nproto.update = function(geoCalcData, fullLayout) {\n    var geoLayout = fullLayout[this.id];\n\n    // important: maps with choropleth traces have a different layer order\n    this.hasChoropleth = false;\n\n    for(var i = 0; i < geoCalcData.length; i++) {\n        var calcTrace = geoCalcData[i];\n        var trace = calcTrace[0].trace;\n\n        if(trace.type === 'choropleth') {\n            this.hasChoropleth = true;\n        }\n        if(trace.visible === true && trace._length > 0) {\n            trace._module.calcGeoJSON(calcTrace, fullLayout);\n        }\n    }\n\n    var hasInvalidBounds = this.updateProjection(geoCalcData, fullLayout);\n    if(hasInvalidBounds) return;\n\n    if(!this.viewInitial || this.scope !== geoLayout.scope) {\n        this.saveViewInitial(geoLayout);\n    }\n    this.scope = geoLayout.scope;\n\n    this.updateBaseLayers(fullLayout, geoLayout);\n    this.updateDims(fullLayout, geoLayout);\n    this.updateFx(fullLayout, geoLayout);\n\n    Plots.generalUpdatePerTraceModule(this.graphDiv, this, geoCalcData, geoLayout);\n\n    var scatterLayer = this.layers.frontplot.select('.scatterlayer');\n    this.dataPoints.point = scatterLayer.selectAll('.point');\n    this.dataPoints.text = scatterLayer.selectAll('text');\n    this.dataPaths.line = scatterLayer.selectAll('.js-line');\n\n    var choroplethLayer = this.layers.backplot.select('.choroplethlayer');\n    this.dataPaths.choropleth = choroplethLayer.selectAll('path');\n\n    this.render();\n};\n\nproto.updateProjection = function(geoCalcData, fullLayout) {\n    var gd = this.graphDiv;\n    var geoLayout = fullLayout[this.id];\n    var gs = fullLayout._size;\n    var domain = geoLayout.domain;\n    var projLayout = geoLayout.projection;\n\n    var lonaxis = geoLayout.lonaxis;\n    var lataxis = geoLayout.lataxis;\n    var axLon = lonaxis._ax;\n    var axLat = lataxis._ax;\n\n    var projection = this.projection = getProjection(geoLayout);\n\n    // setup subplot extent [[x0,y0], [x1,y1]]\n    var extent = [[\n        gs.l + gs.w * domain.x[0],\n        gs.t + gs.h * (1 - domain.y[1])\n    ], [\n        gs.l + gs.w * domain.x[1],\n        gs.t + gs.h * (1 - domain.y[0])\n    ]];\n\n    var center = geoLayout.center || {};\n    var rotation = projLayout.rotation || {};\n    var lonaxisRange = lonaxis.range || [];\n    var lataxisRange = lataxis.range || [];\n\n    if(geoLayout.fitbounds) {\n        axLon._length = extent[1][0] - extent[0][0];\n        axLat._length = extent[1][1] - extent[0][1];\n        axLon.range = getAutoRange(gd, axLon);\n        axLat.range = getAutoRange(gd, axLat);\n\n        var midLon = (axLon.range[0] + axLon.range[1]) / 2;\n        var midLat = (axLat.range[0] + axLat.range[1]) / 2;\n\n        if(geoLayout._isScoped) {\n            center = {lon: midLon, lat: midLat};\n        } else if(geoLayout._isClipped) {\n            center = {lon: midLon, lat: midLat};\n            rotation = {lon: midLon, lat: midLat, roll: rotation.roll};\n\n            var projType = projLayout.type;\n            var lonHalfSpan = (constants.lonaxisSpan[projType] / 2) || 180;\n            var latHalfSpan = (constants.lataxisSpan[projType] / 2) || 90;\n\n            lonaxisRange = [midLon - lonHalfSpan, midLon + lonHalfSpan];\n            lataxisRange = [midLat - latHalfSpan, midLat + latHalfSpan];\n        } else {\n            center = {lon: midLon, lat: midLat};\n            rotation = {lon: midLon, lat: rotation.lat, roll: rotation.roll};\n        }\n    }\n\n    // set 'pre-fit' projection\n    projection\n        .center([center.lon - rotation.lon, center.lat - rotation.lat])\n        .rotate([-rotation.lon, -rotation.lat, rotation.roll])\n        .parallels(projLayout.parallels);\n\n    // fit projection 'scale' and 'translate' to set lon/lat ranges\n    var rangeBox = makeRangeBox(lonaxisRange, lataxisRange);\n    projection.fitExtent(extent, rangeBox);\n\n    var b = this.bounds = projection.getBounds(rangeBox);\n    var s = this.fitScale = projection.scale();\n    var t = projection.translate();\n\n    if(geoLayout.fitbounds) {\n        var b2 = projection.getBounds(makeRangeBox(axLon.range, axLat.range));\n        var k2 = Math.min(\n            (b[1][0] - b[0][0]) / (b2[1][0] - b2[0][0]),\n            (b[1][1] - b[0][1]) / (b2[1][1] - b2[0][1])\n        );\n\n        if(isFinite(k2)) {\n            projection.scale(k2 * s);\n        } else {\n            Lib.warn('Something went wrong during' + this.id + 'fitbounds computations.');\n        }\n    } else {\n        // adjust projection to user setting\n        projection.scale(projLayout.scale * s);\n    }\n\n    // px coordinates of view mid-point,\n    // useful to update `geo.center` after interactions\n    var midPt = this.midPt = [\n        (b[0][0] + b[1][0]) / 2,\n        (b[0][1] + b[1][1]) / 2\n    ];\n\n    projection\n        .translate([t[0] + (midPt[0] - t[0]), t[1] + (midPt[1] - t[1])])\n        .clipExtent(b);\n\n    // the 'albers usa' projection does not expose a 'center' method\n    // so here's this hack to make it respond to 'geoLayout.center'\n    if(geoLayout._isAlbersUsa) {\n        var centerPx = projection([center.lon, center.lat]);\n        var tt = projection.translate();\n\n        projection.translate([\n            tt[0] - (centerPx[0] - tt[0]),\n            tt[1] - (centerPx[1] - tt[1])\n        ]);\n    }\n};\n\nproto.updateBaseLayers = function(fullLayout, geoLayout) {\n    var _this = this;\n    var topojson = _this.topojson;\n    var layers = _this.layers;\n    var basePaths = _this.basePaths;\n\n    function isAxisLayer(d) {\n        return (d === 'lonaxis' || d === 'lataxis');\n    }\n\n    function isLineLayer(d) {\n        return Boolean(constants.lineLayers[d]);\n    }\n\n    function isFillLayer(d) {\n        return Boolean(constants.fillLayers[d]);\n    }\n\n    var allLayers = this.hasChoropleth ?\n        constants.layersForChoropleth :\n        constants.layers;\n\n    var layerData = allLayers.filter(function(d) {\n        return (isLineLayer(d) || isFillLayer(d)) ? geoLayout['show' + d] :\n            isAxisLayer(d) ? geoLayout[d].showgrid :\n            true;\n    });\n\n    var join = _this.framework.selectAll('.layer')\n        .data(layerData, String);\n\n    join.exit().each(function(d) {\n        delete layers[d];\n        delete basePaths[d];\n        d3.select(this).remove();\n    });\n\n    join.enter().append('g')\n        .attr('class', function(d) { return 'layer ' + d; })\n        .each(function(d) {\n            var layer = layers[d] = d3.select(this);\n\n            if(d === 'bg') {\n                _this.bgRect = layer.append('rect')\n                    .style('pointer-events', 'all');\n            } else if(isAxisLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('fill', 'none');\n            } else if(d === 'backplot') {\n                layer.append('g')\n                    .classed('choroplethlayer', true);\n            } else if(d === 'frontplot') {\n                layer.append('g')\n                    .classed('scatterlayer', true);\n            } else if(isLineLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('fill', 'none')\n                    .style('stroke-miterlimit', 2);\n            } else if(isFillLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('stroke', 'none');\n            }\n        });\n\n    join.order();\n\n    join.each(function(d) {\n        var path = basePaths[d];\n        var adj = constants.layerNameToAdjective[d];\n\n        if(d === 'frame') {\n            path.datum(constants.sphereSVG);\n        } else if(isLineLayer(d) || isFillLayer(d)) {\n            path.datum(topojsonFeature(topojson, topojson.objects[d]));\n        } else if(isAxisLayer(d)) {\n            path.datum(makeGraticule(d, geoLayout, fullLayout))\n                .call(Color.stroke, geoLayout[d].gridcolor)\n                .call(Drawing.dashLine, '', geoLayout[d].gridwidth);\n        }\n\n        if(isLineLayer(d)) {\n            path.call(Color.stroke, geoLayout[adj + 'color'])\n                .call(Drawing.dashLine, '', geoLayout[adj + 'width']);\n        } else if(isFillLayer(d)) {\n            path.call(Color.fill, geoLayout[adj + 'color']);\n        }\n    });\n};\n\nproto.updateDims = function(fullLayout, geoLayout) {\n    var b = this.bounds;\n    var hFrameWidth = (geoLayout.framewidth || 0) / 2;\n\n    var l = b[0][0] - hFrameWidth;\n    var t = b[0][1] - hFrameWidth;\n    var w = b[1][0] - l + hFrameWidth;\n    var h = b[1][1] - t + hFrameWidth;\n\n    Drawing.setRect(this.clipRect, l, t, w, h);\n\n    this.bgRect\n        .call(Drawing.setRect, l, t, w, h)\n        .call(Color.fill, geoLayout.bgcolor);\n\n    this.xaxis._offset = l;\n    this.xaxis._length = w;\n\n    this.yaxis._offset = t;\n    this.yaxis._length = h;\n};\n\nproto.updateFx = function(fullLayout, geoLayout) {\n    var _this = this;\n    var gd = _this.graphDiv;\n    var bgRect = _this.bgRect;\n    var dragMode = fullLayout.dragmode;\n    var clickMode = fullLayout.clickmode;\n\n    if(_this.isStatic) return;\n\n    function zoomReset() {\n        var viewInitial = _this.viewInitial;\n        var updateObj = {};\n\n        for(var k in viewInitial) {\n            updateObj[_this.id + '.' + k] = viewInitial[k];\n        }\n\n        Registry.call('_guiRelayout', gd, updateObj);\n        gd.emit('plotly_doubleclick', null);\n    }\n\n    function invert(lonlat) {\n        return _this.projection.invert([\n            lonlat[0] + _this.xaxis._offset,\n            lonlat[1] + _this.yaxis._offset\n        ]);\n    }\n\n    var fillRangeItems;\n\n    if(dragMode === 'select') {\n        fillRangeItems = function(eventData, poly) {\n            var ranges = eventData.range = {};\n            ranges[_this.id] = [\n                invert([poly.xmin, poly.ymin]),\n                invert([poly.xmax, poly.ymax])\n            ];\n        };\n    } else if(dragMode === 'lasso') {\n        fillRangeItems = function(eventData, poly, pts) {\n            var dataPts = eventData.lassoPoints = {};\n            dataPts[_this.id] = pts.filtered.map(invert);\n        };\n    }\n\n    // Note: dragOptions is needed to be declared for all dragmodes because\n    // it's the object that holds persistent selection state.\n    var dragOptions = {\n        element: _this.bgRect.node(),\n        gd: gd,\n        plotinfo: {\n            id: _this.id,\n            xaxis: _this.xaxis,\n            yaxis: _this.yaxis,\n            fillRangeItems: fillRangeItems\n        },\n        xaxes: [_this.xaxis],\n        yaxes: [_this.yaxis],\n        subplot: _this.id,\n        clickFn: function(numClicks) {\n            if(numClicks === 2) {\n                clearSelect(gd);\n            }\n        }\n    };\n\n    if(dragMode === 'pan') {\n        bgRect.node().onmousedown = null;\n        bgRect.call(createGeoZoom(_this, geoLayout));\n        bgRect.on('dblclick.zoom', zoomReset);\n        if(!gd._context._scrollZoom.geo) {\n            bgRect.on('wheel.zoom', null);\n        }\n    } else if(dragMode === 'select' || dragMode === 'lasso') {\n        bgRect.on('.zoom', null);\n\n        dragOptions.prepFn = function(e, startX, startY) {\n            prepSelect(e, startX, startY, dragOptions, dragMode);\n        };\n\n        dragElement.init(dragOptions);\n    }\n\n    bgRect.on('mousemove', function() {\n        var lonlat = _this.projection.invert(Lib.getPositionFromD3Event());\n\n        if(!lonlat) {\n            return dragElement.unhover(gd, d3.event);\n        }\n\n        _this.xaxis.p2c = function() { return lonlat[0]; };\n        _this.yaxis.p2c = function() { return lonlat[1]; };\n\n        Fx.hover(gd, d3.event, _this.id);\n    });\n\n    bgRect.on('mouseout', function() {\n        if(gd._dragging) return;\n        dragElement.unhover(gd, d3.event);\n    });\n\n    bgRect.on('click', function() {\n        // For select and lasso the dragElement is handling clicks\n        if(dragMode !== 'select' && dragMode !== 'lasso') {\n            if(clickMode.indexOf('select') > -1) {\n                selectOnClick(d3.event, gd, [_this.xaxis], [_this.yaxis],\n                  _this.id, dragOptions);\n            }\n\n            if(clickMode.indexOf('event') > -1) {\n                // TODO: like pie and mapbox, this doesn't support right-click\n                // actually this one is worse, as right-click starts a pan, or leaves\n                // select in a weird state.\n                // Also, only tangentially related, we should cancel hover during pan\n                Fx.click(gd, d3.event);\n            }\n        }\n    });\n};\n\nproto.makeFramework = function() {\n    var _this = this;\n    var gd = _this.graphDiv;\n    var fullLayout = gd._fullLayout;\n    var clipId = 'clip' + fullLayout._uid + _this.id;\n\n    _this.clipDef = fullLayout._clips.append('clipPath')\n        .attr('id', clipId);\n\n    _this.clipRect = _this.clipDef.append('rect');\n\n    _this.framework = d3.select(_this.container).append('g')\n        .attr('class', 'geo ' + _this.id)\n        .call(Drawing.setClipUrl, clipId, gd);\n\n    // sane lonlat to px\n    _this.project = function(v) {\n        var px = _this.projection(v);\n        return px ?\n            [px[0] - _this.xaxis._offset, px[1] - _this.yaxis._offset] :\n            [null, null];\n    };\n\n    _this.xaxis = {\n        _id: 'x',\n        c2p: function(v) { return _this.project(v)[0]; }\n    };\n\n    _this.yaxis = {\n        _id: 'y',\n        c2p: function(v) { return _this.project(v)[1]; }\n    };\n\n    // mock axis for hover formatting\n    _this.mockAxis = {\n        type: 'linear',\n        showexponent: 'all',\n        exponentformat: 'B'\n    };\n    Axes.setConvert(_this.mockAxis, fullLayout);\n};\n\nproto.saveViewInitial = function(geoLayout) {\n    var center = geoLayout.center || {};\n    var projLayout = geoLayout.projection;\n    var rotation = projLayout.rotation || {};\n\n    this.viewInitial = {\n        'fitbounds': geoLayout.fitbounds,\n        'projection.scale': projLayout.scale\n    };\n\n    var extra;\n    if(geoLayout._isScoped) {\n        extra = {\n            'center.lon': center.lon,\n            'center.lat': center.lat,\n        };\n    } else if(geoLayout._isClipped) {\n        extra = {\n            'projection.rotation.lon': rotation.lon,\n            'projection.rotation.lat': rotation.lat\n        };\n    } else {\n        extra = {\n            'center.lon': center.lon,\n            'center.lat': center.lat,\n            'projection.rotation.lon': rotation.lon\n        };\n    }\n\n    Lib.extendFlat(this.viewInitial, extra);\n};\n\n// [hot code path] (re)draw all paths which depend on the projection\nproto.render = function() {\n    var projection = this.projection;\n    var pathFn = projection.getPath();\n    var k;\n\n    function translatePoints(d) {\n        var lonlatPx = projection(d.lonlat);\n        return lonlatPx ?\n            strTranslate(lonlatPx[0], lonlatPx[1]) :\n             null;\n    }\n\n    function hideShowPoints(d) {\n        return projection.isLonLatOverEdges(d.lonlat) ? 'none' : null;\n    }\n\n    for(k in this.basePaths) {\n        this.basePaths[k].attr('d', pathFn);\n    }\n\n    for(k in this.dataPaths) {\n        this.dataPaths[k].attr('d', function(d) { return pathFn(d.geojson); });\n    }\n\n    for(k in this.dataPoints) {\n        this.dataPoints[k]\n            .attr('display', hideShowPoints)\n            .attr('transform', translatePoints);\n    }\n};\n\n// Helper that wraps d3[geo + /* Projection name /*]() which:\n//\n// - adds 'getPath', 'getBounds' convenience methods\n// - scopes logic related to 'clipAngle'\n// - adds 'isLonLatOverEdges' method\n// - sets projection precision\n// - sets methods that aren't always defined depending\n//   on the projection type to a dummy 'd3-esque' function,\n//\n// This wrapper alleviates subsequent code of (many) annoying if-statements.\nfunction getProjection(geoLayout) {\n    var projLayout = geoLayout.projection;\n    var projType = projLayout.type;\n\n    var projName = constants.projNames[projType];\n    // uppercase the first letter and add geo to the start of method name\n    projName = 'geo' + Lib.titleCase(projName);\n    var projFn = geo[projName] || geoProjection[projName];\n    var projection = projFn();\n\n    var clipAngle =\n        geoLayout._isSatellite ? Math.acos(1 / projLayout.distance) * 180 / Math.PI :\n        geoLayout._isClipped ? constants.lonaxisSpan[projType] / 2 : null;\n\n    var methods = ['center', 'rotate', 'parallels', 'clipExtent'];\n    var dummyFn = function(_) { return _ ? projection : []; };\n\n    for(var i = 0; i < methods.length; i++) {\n        var m = methods[i];\n        if(typeof projection[m] !== 'function') {\n            projection[m] = dummyFn;\n        }\n    }\n\n    projection.isLonLatOverEdges = function(lonlat) {\n        if(projection(lonlat) === null) {\n            return true;\n        }\n\n        if(clipAngle) {\n            var r = projection.rotate();\n            var angle = geoDistance(lonlat, [-r[0], -r[1]]);\n            var maxAngle = clipAngle * Math.PI / 180;\n            return angle > maxAngle;\n        } else {\n            return false;\n        }\n    };\n\n    projection.getPath = function() {\n        return geoPath().projection(projection);\n    };\n\n    projection.getBounds = function(object) {\n        return projection.getPath().bounds(object);\n    };\n\n    projection.precision(constants.precision);\n\n    if(geoLayout._isSatellite) {\n        projection.tilt(projLayout.tilt).distance(projLayout.distance);\n    }\n\n    if(clipAngle) {\n        projection.clipAngle(clipAngle - constants.clipPad);\n    }\n\n    return projection;\n}\n\nfunction makeGraticule(axisName, geoLayout, fullLayout) {\n    // equivalent to the d3 \"ε\"\n    var epsilon = 1e-6;\n    // same as the geoGraticule default\n    var precision = 2.5;\n\n    var axLayout = geoLayout[axisName];\n    var scopeDefaults = constants.scopeDefaults[geoLayout.scope];\n    var rng;\n    var oppRng;\n    var coordFn;\n\n    if(axisName === 'lonaxis') {\n        rng = scopeDefaults.lonaxisRange;\n        oppRng = scopeDefaults.lataxisRange;\n        coordFn = function(v, l) { return [v, l]; };\n    } else if(axisName === 'lataxis') {\n        rng = scopeDefaults.lataxisRange;\n        oppRng = scopeDefaults.lonaxisRange;\n        coordFn = function(v, l) { return [l, v]; };\n    }\n\n    var dummyAx = {\n        type: 'linear',\n        range: [rng[0], rng[1] - epsilon],\n        tick0: axLayout.tick0,\n        dtick: axLayout.dtick\n    };\n\n    Axes.setConvert(dummyAx, fullLayout);\n    var vals = Axes.calcTicks(dummyAx);\n\n    // remove duplicate on antimeridian\n    if(!geoLayout.isScoped && axisName === 'lonaxis') {\n        vals.pop();\n    }\n\n    var len = vals.length;\n    var coords = new Array(len);\n\n    for(var i = 0; i < len; i++) {\n        var v = vals[i].x;\n        var line = coords[i] = [];\n        for(var l = oppRng[0]; l < oppRng[1] + precision; l += precision) {\n            line.push(coordFn(v, l));\n        }\n    }\n\n    return {\n        type: 'MultiLineString',\n        coordinates: coords\n    };\n}\n\n// Returns polygon GeoJSON corresponding to lon/lat range box\n// with well-defined direction\n//\n// Note that clipPad padding is added around range to avoid aliasing.\nfunction makeRangeBox(lon, lat) {\n    var clipPad = constants.clipPad;\n    var lon0 = lon[0] + clipPad;\n    var lon1 = lon[1] - clipPad;\n    var lat0 = lat[0] + clipPad;\n    var lat1 = lat[1] - clipPad;\n\n    // to cross antimeridian w/o ambiguity\n    if(lon0 > 0 && lon1 < 0) lon1 += 360;\n\n    var dlon4 = (lon1 - lon0) / 4;\n\n    return {\n        type: 'Polygon',\n        coordinates: [[\n            [lon0, lat0],\n            [lon0, lat1],\n            [lon0 + dlon4, lat1],\n            [lon0 + 2 * dlon4, lat1],\n            [lon0 + 3 * dlon4, lat1],\n            [lon1, lat1],\n            [lon1, lat0],\n            [lon1 - dlon4, lat0],\n            [lon1 - 2 * dlon4, lat0],\n            [lon1 - 3 * dlon4, lat0],\n            [lon0, lat0]\n        ]]\n    };\n}\n"]},"metadata":{},"sourceType":"script"}