{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar Template = require('../../plot_api/plot_template');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function (traceIn, traceOut, defaultColor, opts) {\n  var objName = 'error_' + opts.axis;\n  var containerOut = Template.newContainer(traceOut, objName);\n  var containerIn = traceIn[objName] || {};\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n  }\n\n  var hasErrorBars = containerIn.array !== undefined || containerIn.value !== undefined || containerIn.type === 'sqrt';\n  var visible = coerce('visible', hasErrorBars);\n  if (visible === false) return;\n  var type = coerce('type', 'array' in containerIn ? 'data' : 'percent');\n  var symmetric = true;\n\n  if (type !== 'sqrt') {\n    symmetric = coerce('symmetric', !((type === 'data' ? 'arrayminus' : 'valueminus') in containerIn));\n  }\n\n  if (type === 'data') {\n    coerce('array');\n    coerce('traceref');\n\n    if (!symmetric) {\n      coerce('arrayminus');\n      coerce('tracerefminus');\n    }\n  } else if (type === 'percent' || type === 'constant') {\n    coerce('value');\n    if (!symmetric) coerce('valueminus');\n  }\n\n  var copyAttr = 'copy_' + opts.inherit + 'style';\n\n  if (opts.inherit) {\n    var inheritObj = traceOut['error_' + opts.inherit];\n\n    if ((inheritObj || {}).visible) {\n      coerce(copyAttr, !(containerIn.color || isNumeric(containerIn.thickness) || isNumeric(containerIn.width)));\n    }\n  }\n\n  if (!opts.inherit || !containerOut[copyAttr]) {\n    coerce('color', defaultColor);\n    coerce('thickness');\n    coerce('width', Registry.traceIs(traceOut, 'gl3d') ? 0 : 4);\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/components/errorbars/defaults.js"],"names":["isNumeric","require","Registry","Lib","Template","attributes","module","exports","traceIn","traceOut","defaultColor","opts","objName","axis","containerOut","newContainer","containerIn","coerce","attr","dflt","hasErrorBars","array","undefined","value","type","visible","symmetric","copyAttr","inherit","inheritObj","color","thickness","width","traceIs"],"mappings":"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","sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Template = require('../../plot_api/plot_template');\n\nvar attributes = require('./attributes');\n\n\nmodule.exports = function(traceIn, traceOut, defaultColor, opts) {\n    var objName = 'error_' + opts.axis;\n    var containerOut = Template.newContainer(traceOut, objName);\n    var containerIn = traceIn[objName] || {};\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n    }\n\n    var hasErrorBars = (\n        containerIn.array !== undefined ||\n        containerIn.value !== undefined ||\n        containerIn.type === 'sqrt'\n    );\n\n    var visible = coerce('visible', hasErrorBars);\n\n    if(visible === false) return;\n\n    var type = coerce('type', 'array' in containerIn ? 'data' : 'percent');\n    var symmetric = true;\n\n    if(type !== 'sqrt') {\n        symmetric = coerce('symmetric',\n            !((type === 'data' ? 'arrayminus' : 'valueminus') in containerIn));\n    }\n\n    if(type === 'data') {\n        coerce('array');\n        coerce('traceref');\n        if(!symmetric) {\n            coerce('arrayminus');\n            coerce('tracerefminus');\n        }\n    } else if(type === 'percent' || type === 'constant') {\n        coerce('value');\n        if(!symmetric) coerce('valueminus');\n    }\n\n    var copyAttr = 'copy_' + opts.inherit + 'style';\n    if(opts.inherit) {\n        var inheritObj = traceOut['error_' + opts.inherit];\n        if((inheritObj || {}).visible) {\n            coerce(copyAttr, !(containerIn.color ||\n                               isNumeric(containerIn.thickness) ||\n                               isNumeric(containerIn.width)));\n        }\n    }\n    if(!opts.inherit || !containerOut[copyAttr]) {\n        coerce('color', defaultColor);\n        coerce('thickness');\n        coerce('width', Registry.traceIs(traceOut, 'gl3d') ? 0 : 4);\n    }\n};\n"]},"metadata":{},"sourceType":"script"}