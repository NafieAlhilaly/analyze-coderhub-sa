{"ast":null,"code":"'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\n\nvar axisAttrs = require('./axis_attributes');\n\nvar colorAttrs = require('../../components/color/attributes');\n\nvar carpetFont = fontAttrs({\n  editType: 'calc',\n  description: 'The default font used for axis & tick labels on this carpet'\n}); // TODO: inherit from global font\n\ncarpetFont.family.dflt = '\"Open Sans\", verdana, arial, sans-serif';\ncarpetFont.size.dflt = 12;\ncarpetFont.color.dflt = colorAttrs.defaultLine;\nmodule.exports = {\n  carpet: {\n    valType: 'string',\n    editType: 'calc',\n    description: ['An identifier for this carpet, so that `scattercarpet` and', '`contourcarpet` traces can specify a carpet plot on which', 'they lie'].join(' ')\n  },\n  x: {\n    valType: 'data_array',\n    editType: 'calc+clearAxisTypes',\n    description: ['A two dimensional array of x coordinates at each carpet point.', 'If omitted, the plot is a cheater plot and the xaxis is hidden', 'by default.'].join(' ')\n  },\n  y: {\n    valType: 'data_array',\n    editType: 'calc+clearAxisTypes',\n    description: 'A two dimensional array of y coordinates at each carpet point.'\n  },\n  a: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['An array containing values of the first parameter value'].join(' ')\n  },\n  a0: {\n    valType: 'number',\n    dflt: 0,\n    editType: 'calc',\n    description: ['Alternate to `a`.', 'Builds a linear space of a coordinates.', 'Use with `da`', 'where `a0` is the starting coordinate and `da` the step.'].join(' ')\n  },\n  da: {\n    valType: 'number',\n    dflt: 1,\n    editType: 'calc',\n    description: ['Sets the a coordinate step.', 'See `a0` for more info.'].join(' ')\n  },\n  b: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: 'A two dimensional array of y coordinates at each carpet point.'\n  },\n  b0: {\n    valType: 'number',\n    dflt: 0,\n    editType: 'calc',\n    description: ['Alternate to `b`.', 'Builds a linear space of a coordinates.', 'Use with `db`', 'where `b0` is the starting coordinate and `db` the step.'].join(' ')\n  },\n  db: {\n    valType: 'number',\n    dflt: 1,\n    editType: 'calc',\n    description: ['Sets the b coordinate step.', 'See `b0` for more info.'].join(' ')\n  },\n  cheaterslope: {\n    valType: 'number',\n    dflt: 1,\n    editType: 'calc',\n    description: ['The shift applied to each successive row of data in creating a cheater plot.', 'Only used if `x` is been omitted.'].join(' ')\n  },\n  aaxis: axisAttrs,\n  baxis: axisAttrs,\n  font: carpetFont,\n  color: {\n    valType: 'color',\n    dflt: colorAttrs.defaultLine,\n    editType: 'plot',\n    description: ['Sets default for all colors associated with this axis', 'all at once: line, font, tick, and grid colors.', 'Grid color is lightened by blending this with the plot background', 'Individual pieces can override this.'].join(' ')\n  },\n  transforms: undefined\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/carpet/attributes.js"],"names":["fontAttrs","require","axisAttrs","colorAttrs","carpetFont","editType","description","family","dflt","size","color","defaultLine","module","exports","carpet","valType","join","x","y","a","a0","da","b","b0","db","cheaterslope","aaxis","baxis","font","transforms","undefined"],"mappings":"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","sourcesContent":["'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar axisAttrs = require('./axis_attributes');\nvar colorAttrs = require('../../components/color/attributes');\n\nvar carpetFont = fontAttrs({\n    editType: 'calc',\n    description: 'The default font used for axis & tick labels on this carpet'\n});\n// TODO: inherit from global font\ncarpetFont.family.dflt = '\"Open Sans\", verdana, arial, sans-serif';\ncarpetFont.size.dflt = 12;\ncarpetFont.color.dflt = colorAttrs.defaultLine;\n\nmodule.exports = {\n    carpet: {\n        valType: 'string',\n        editType: 'calc',\n        description: [\n            'An identifier for this carpet, so that `scattercarpet` and',\n            '`contourcarpet` traces can specify a carpet plot on which',\n            'they lie'\n        ].join(' ')\n    },\n    x: {\n        valType: 'data_array',\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'A two dimensional array of x coordinates at each carpet point.',\n            'If omitted, the plot is a cheater plot and the xaxis is hidden',\n            'by default.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'data_array',\n        editType: 'calc+clearAxisTypes',\n        description: 'A two dimensional array of y coordinates at each carpet point.'\n    },\n    a: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'An array containing values of the first parameter value'\n        ].join(' ')\n    },\n    a0: {\n        valType: 'number',\n        dflt: 0,\n        editType: 'calc',\n        description: [\n            'Alternate to `a`.',\n            'Builds a linear space of a coordinates.',\n            'Use with `da`',\n            'where `a0` is the starting coordinate and `da` the step.'\n        ].join(' ')\n    },\n    da: {\n        valType: 'number',\n        dflt: 1,\n        editType: 'calc',\n        description: [\n            'Sets the a coordinate step.',\n            'See `a0` for more info.'\n        ].join(' ')\n    },\n    b: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: 'A two dimensional array of y coordinates at each carpet point.'\n    },\n    b0: {\n        valType: 'number',\n        dflt: 0,\n        editType: 'calc',\n        description: [\n            'Alternate to `b`.',\n            'Builds a linear space of a coordinates.',\n            'Use with `db`',\n            'where `b0` is the starting coordinate and `db` the step.'\n        ].join(' ')\n    },\n    db: {\n        valType: 'number',\n        dflt: 1,\n        editType: 'calc',\n        description: [\n            'Sets the b coordinate step.',\n            'See `b0` for more info.'\n        ].join(' ')\n    },\n    cheaterslope: {\n        valType: 'number',\n        dflt: 1,\n        editType: 'calc',\n        description: [\n            'The shift applied to each successive row of data in creating a cheater plot.',\n            'Only used if `x` is been omitted.'\n        ].join(' ')\n    },\n    aaxis: axisAttrs,\n    baxis: axisAttrs,\n    font: carpetFont,\n    color: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        editType: 'plot',\n        description: [\n            'Sets default for all colors associated with this axis',\n            'all at once: line, font, tick, and grid colors.',\n            'Grid color is lightened by blending this with the plot background',\n            'Individual pieces can override this.'\n        ].join(' ')\n    },\n    transforms: undefined\n};\n"]},"metadata":{},"sourceType":"script"}