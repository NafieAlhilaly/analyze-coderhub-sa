{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Color = require('../../components/color');\n\nvar boxDefaults = require('../box/defaults');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  function coerce2(attr, dflt) {\n    return Lib.coerce2(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  boxDefaults.handleSampleDefaults(traceIn, traceOut, coerce, layout);\n  if (traceOut.visible === false) return;\n  coerce('bandwidth');\n  coerce('side');\n  var width = coerce('width');\n\n  if (!width) {\n    coerce('scalegroup', traceOut.name);\n    coerce('scalemode');\n  }\n\n  var span = coerce('span');\n  var spanmodeDflt;\n  if (Array.isArray(span)) spanmodeDflt = 'manual';\n  coerce('spanmode', spanmodeDflt);\n  var lineColor = coerce('line.color', (traceIn.marker || {}).color || defaultColor);\n  var lineWidth = coerce('line.width');\n  var fillColor = coerce('fillcolor', Color.addOpacity(traceOut.line.color, 0.5));\n  boxDefaults.handlePointsDefaults(traceIn, traceOut, coerce, {\n    prefix: ''\n  });\n  var boxWidth = coerce2('box.width');\n  var boxFillColor = coerce2('box.fillcolor', fillColor);\n  var boxLineColor = coerce2('box.line.color', lineColor);\n  var boxLineWidth = coerce2('box.line.width', lineWidth);\n  var boxVisible = coerce('box.visible', Boolean(boxWidth || boxFillColor || boxLineColor || boxLineWidth));\n  if (!boxVisible) traceOut.box = {\n    visible: false\n  };\n  var meanLineColor = coerce2('meanline.color', lineColor);\n  var meanLineWidth = coerce2('meanline.width', lineWidth);\n  var meanLineVisible = coerce('meanline.visible', Boolean(meanLineColor || meanLineWidth));\n  if (!meanLineVisible) traceOut.meanline = {\n    visible: false\n  };\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/violin/defaults.js"],"names":["Lib","require","Color","boxDefaults","attributes","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","layout","coerce","attr","dflt","coerce2","handleSampleDefaults","visible","width","name","span","spanmodeDflt","Array","isArray","lineColor","marker","color","lineWidth","fillColor","addOpacity","line","handlePointsDefaults","prefix","boxWidth","boxFillColor","boxLineColor","boxLineWidth","boxVisible","Boolean","box","meanLineColor","meanLineWidth","meanLineVisible","meanline"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\n\nvar boxDefaults = require('../box/defaults');\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n    function coerce2(attr, dflt) {\n        return Lib.coerce2(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    boxDefaults.handleSampleDefaults(traceIn, traceOut, coerce, layout);\n    if(traceOut.visible === false) return;\n\n    coerce('bandwidth');\n    coerce('side');\n\n    var width = coerce('width');\n    if(!width) {\n        coerce('scalegroup', traceOut.name);\n        coerce('scalemode');\n    }\n\n    var span = coerce('span');\n    var spanmodeDflt;\n    if(Array.isArray(span)) spanmodeDflt = 'manual';\n    coerce('spanmode', spanmodeDflt);\n\n    var lineColor = coerce('line.color', (traceIn.marker || {}).color || defaultColor);\n    var lineWidth = coerce('line.width');\n    var fillColor = coerce('fillcolor', Color.addOpacity(traceOut.line.color, 0.5));\n\n    boxDefaults.handlePointsDefaults(traceIn, traceOut, coerce, {prefix: ''});\n\n    var boxWidth = coerce2('box.width');\n    var boxFillColor = coerce2('box.fillcolor', fillColor);\n    var boxLineColor = coerce2('box.line.color', lineColor);\n    var boxLineWidth = coerce2('box.line.width', lineWidth);\n    var boxVisible = coerce('box.visible', Boolean(boxWidth || boxFillColor || boxLineColor || boxLineWidth));\n    if(!boxVisible) traceOut.box = {visible: false};\n\n    var meanLineColor = coerce2('meanline.color', lineColor);\n    var meanLineWidth = coerce2('meanline.width', lineWidth);\n    var meanLineVisible = coerce('meanline.visible', Boolean(meanLineColor || meanLineWidth));\n    if(!meanLineVisible) traceOut.meanline = {visible: false};\n};\n"]},"metadata":{},"sourceType":"script"}