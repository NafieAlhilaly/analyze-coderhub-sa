{"ast":null,"code":"'use strict';\n\nmodule.exports = createLines;\n\nvar createBuffer = require('gl-buffer');\n\nvar createVAO = require('gl-vao');\n\nvar createShader = require('./shaders').line;\n\nvar MAJOR_AXIS = [0, 0, 0];\nvar MINOR_AXIS = [0, 0, 0];\nvar SCREEN_AXIS = [0, 0, 0];\nvar OFFSET_VEC = [0, 0, 0];\nvar SHAPE = [1, 1];\n\nfunction zeroVec(a) {\n  a[0] = a[1] = a[2] = 0;\n  return a;\n}\n\nfunction copyVec(a, b) {\n  a[0] = b[0];\n  a[1] = b[1];\n  a[2] = b[2];\n  return a;\n}\n\nfunction Lines(gl, vertBuffer, vao, shader, tickCount, tickOffset, gridCount, gridOffset) {\n  this.gl = gl;\n  this.vertBuffer = vertBuffer;\n  this.vao = vao;\n  this.shader = shader;\n  this.tickCount = tickCount;\n  this.tickOffset = tickOffset;\n  this.gridCount = gridCount;\n  this.gridOffset = gridOffset;\n}\n\nvar proto = Lines.prototype;\n\nproto.bind = function (model, view, projection) {\n  this.shader.bind();\n  this.shader.uniforms.model = model;\n  this.shader.uniforms.view = view;\n  this.shader.uniforms.projection = projection;\n  SHAPE[0] = this.gl.drawingBufferWidth;\n  SHAPE[1] = this.gl.drawingBufferHeight;\n  this.shader.uniforms.screenShape = SHAPE;\n  this.vao.bind();\n};\n\nproto.unbind = function () {\n  this.vao.unbind();\n};\n\nproto.drawAxisLine = function (j, bounds, offset, color, lineWidth) {\n  var minorAxis = zeroVec(MINOR_AXIS);\n  this.shader.uniforms.majorAxis = MINOR_AXIS;\n  minorAxis[j] = bounds[1][j] - bounds[0][j];\n  this.shader.uniforms.minorAxis = minorAxis;\n  var noffset = copyVec(OFFSET_VEC, offset);\n  noffset[j] += bounds[0][j];\n  this.shader.uniforms.offset = noffset;\n  this.shader.uniforms.lineWidth = lineWidth;\n  this.shader.uniforms.color = color;\n  var screenAxis = zeroVec(SCREEN_AXIS);\n  screenAxis[(j + 2) % 3] = 1;\n  this.shader.uniforms.screenAxis = screenAxis;\n  this.vao.draw(this.gl.TRIANGLES, 6);\n  var screenAxis = zeroVec(SCREEN_AXIS);\n  screenAxis[(j + 1) % 3] = 1;\n  this.shader.uniforms.screenAxis = screenAxis;\n  this.vao.draw(this.gl.TRIANGLES, 6);\n};\n\nproto.drawAxisTicks = function (j, offset, minorAxis, color, lineWidth) {\n  if (!this.tickCount[j]) {\n    return;\n  }\n\n  var majorAxis = zeroVec(MAJOR_AXIS);\n  majorAxis[j] = 1;\n  this.shader.uniforms.majorAxis = majorAxis;\n  this.shader.uniforms.offset = offset;\n  this.shader.uniforms.minorAxis = minorAxis;\n  this.shader.uniforms.color = color;\n  this.shader.uniforms.lineWidth = lineWidth;\n  var screenAxis = zeroVec(SCREEN_AXIS);\n  screenAxis[j] = 1;\n  this.shader.uniforms.screenAxis = screenAxis;\n  this.vao.draw(this.gl.TRIANGLES, this.tickCount[j], this.tickOffset[j]);\n};\n\nproto.drawGrid = function (i, j, bounds, offset, color, lineWidth) {\n  if (!this.gridCount[i]) {\n    return;\n  }\n\n  var minorAxis = zeroVec(MINOR_AXIS);\n  minorAxis[j] = bounds[1][j] - bounds[0][j];\n  this.shader.uniforms.minorAxis = minorAxis;\n  var noffset = copyVec(OFFSET_VEC, offset);\n  noffset[j] += bounds[0][j];\n  this.shader.uniforms.offset = noffset;\n  var majorAxis = zeroVec(MAJOR_AXIS);\n  majorAxis[i] = 1;\n  this.shader.uniforms.majorAxis = majorAxis;\n  var screenAxis = zeroVec(SCREEN_AXIS);\n  screenAxis[i] = 1;\n  this.shader.uniforms.screenAxis = screenAxis;\n  this.shader.uniforms.lineWidth = lineWidth;\n  this.shader.uniforms.color = color;\n  this.vao.draw(this.gl.TRIANGLES, this.gridCount[i], this.gridOffset[i]);\n};\n\nproto.drawZero = function (j, i, bounds, offset, color, lineWidth) {\n  var minorAxis = zeroVec(MINOR_AXIS);\n  this.shader.uniforms.majorAxis = minorAxis;\n  minorAxis[j] = bounds[1][j] - bounds[0][j];\n  this.shader.uniforms.minorAxis = minorAxis;\n  var noffset = copyVec(OFFSET_VEC, offset);\n  noffset[j] += bounds[0][j];\n  this.shader.uniforms.offset = noffset;\n  var screenAxis = zeroVec(SCREEN_AXIS);\n  screenAxis[i] = 1;\n  this.shader.uniforms.screenAxis = screenAxis;\n  this.shader.uniforms.lineWidth = lineWidth;\n  this.shader.uniforms.color = color;\n  this.vao.draw(this.gl.TRIANGLES, 6);\n};\n\nproto.dispose = function () {\n  this.vao.dispose();\n  this.vertBuffer.dispose();\n  this.shader.dispose();\n};\n\nfunction createLines(gl, bounds, ticks) {\n  var vertices = [];\n  var tickOffset = [0, 0, 0];\n  var tickCount = [0, 0, 0]; //Create grid lines for each axis/direction\n\n  var gridOffset = [0, 0, 0];\n  var gridCount = [0, 0, 0]; //Add zero line\n\n  vertices.push(0, 0, 1, 0, 1, 1, 0, 0, -1, 0, 0, -1, 0, 1, 1, 0, 1, -1);\n\n  for (var i = 0; i < 3; ++i) {\n    //Axis tick marks\n    var start = vertices.length / 3 | 0;\n\n    for (var j = 0; j < ticks[i].length; ++j) {\n      var x = +ticks[i][j].x;\n      vertices.push(x, 0, 1, x, 1, 1, x, 0, -1, x, 0, -1, x, 1, 1, x, 1, -1);\n    }\n\n    var end = vertices.length / 3 | 0;\n    tickOffset[i] = start;\n    tickCount[i] = end - start; //Grid lines\n\n    var start = vertices.length / 3 | 0;\n\n    for (var k = 0; k < ticks[i].length; ++k) {\n      var x = +ticks[i][k].x;\n      vertices.push(x, 0, 1, x, 1, 1, x, 0, -1, x, 0, -1, x, 1, 1, x, 1, -1);\n    }\n\n    var end = vertices.length / 3 | 0;\n    gridOffset[i] = start;\n    gridCount[i] = end - start;\n  } //Create cube VAO\n\n\n  var vertBuf = createBuffer(gl, new Float32Array(vertices));\n  var vao = createVAO(gl, [{\n    \"buffer\": vertBuf,\n    \"type\": gl.FLOAT,\n    \"size\": 3,\n    \"stride\": 0,\n    \"offset\": 0\n  }]);\n  var shader = createShader(gl);\n  shader.attributes.position.location = 0;\n  return new Lines(gl, vertBuf, vao, shader, tickCount, tickOffset, gridCount, gridOffset);\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/gl-axes3d/lib/lines.js"],"names":["module","exports","createLines","createBuffer","require","createVAO","createShader","line","MAJOR_AXIS","MINOR_AXIS","SCREEN_AXIS","OFFSET_VEC","SHAPE","zeroVec","a","copyVec","b","Lines","gl","vertBuffer","vao","shader","tickCount","tickOffset","gridCount","gridOffset","proto","prototype","bind","model","view","projection","uniforms","drawingBufferWidth","drawingBufferHeight","screenShape","unbind","drawAxisLine","j","bounds","offset","color","lineWidth","minorAxis","majorAxis","noffset","screenAxis","draw","TRIANGLES","drawAxisTicks","drawGrid","i","drawZero","dispose","ticks","vertices","push","start","length","x","end","k","vertBuf","Float32Array","FLOAT","attributes","position","location"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports    = createLines\n\nvar createBuffer  = require('gl-buffer')\nvar createVAO     = require('gl-vao')\nvar createShader  = require('./shaders').line\n\nvar MAJOR_AXIS = [0,0,0]\nvar MINOR_AXIS = [0,0,0]\nvar SCREEN_AXIS = [0,0,0]\nvar OFFSET_VEC = [0,0,0]\nvar SHAPE = [1,1]\n\nfunction zeroVec(a) {\n  a[0] = a[1] = a[2] = 0\n  return a\n}\n\nfunction copyVec(a,b) {\n  a[0] = b[0]\n  a[1] = b[1]\n  a[2] = b[2]\n  return a\n}\n\nfunction Lines(gl, vertBuffer, vao, shader, tickCount, tickOffset, gridCount, gridOffset) {\n  this.gl         = gl\n  this.vertBuffer = vertBuffer\n  this.vao        = vao\n  this.shader     = shader\n  this.tickCount  = tickCount\n  this.tickOffset = tickOffset\n  this.gridCount  = gridCount\n  this.gridOffset = gridOffset\n}\n\nvar proto = Lines.prototype\n\nproto.bind = function(model, view, projection) {\n  this.shader.bind()\n  this.shader.uniforms.model = model\n  this.shader.uniforms.view = view\n  this.shader.uniforms.projection = projection\n\n  SHAPE[0] = this.gl.drawingBufferWidth\n  SHAPE[1] = this.gl.drawingBufferHeight\n\n  this.shader.uniforms.screenShape = SHAPE\n  this.vao.bind()\n}\n\nproto.unbind = function() {\n  this.vao.unbind()\n}\n\nproto.drawAxisLine = function(j, bounds, offset, color, lineWidth) {\n  var minorAxis = zeroVec(MINOR_AXIS)\n  this.shader.uniforms.majorAxis = MINOR_AXIS\n\n  minorAxis[j] = bounds[1][j] - bounds[0][j]\n  this.shader.uniforms.minorAxis = minorAxis\n\n  var noffset = copyVec(OFFSET_VEC, offset)\n  noffset[j] += bounds[0][j]\n  this.shader.uniforms.offset = noffset\n\n  this.shader.uniforms.lineWidth = lineWidth\n\n  this.shader.uniforms.color = color\n\n  var screenAxis = zeroVec(SCREEN_AXIS)\n  screenAxis[(j+2)%3] = 1\n  this.shader.uniforms.screenAxis = screenAxis\n  this.vao.draw(this.gl.TRIANGLES, 6)\n\n  var screenAxis = zeroVec(SCREEN_AXIS)\n  screenAxis[(j+1)%3] = 1\n  this.shader.uniforms.screenAxis = screenAxis\n  this.vao.draw(this.gl.TRIANGLES, 6)\n}\n\nproto.drawAxisTicks = function(j, offset, minorAxis, color, lineWidth) {\n  if(!this.tickCount[j]) {\n    return\n  }\n\n  var majorAxis = zeroVec(MAJOR_AXIS)\n  majorAxis[j]  = 1\n  this.shader.uniforms.majorAxis = majorAxis\n  this.shader.uniforms.offset    = offset\n  this.shader.uniforms.minorAxis = minorAxis\n  this.shader.uniforms.color     = color\n  this.shader.uniforms.lineWidth = lineWidth\n\n  var screenAxis = zeroVec(SCREEN_AXIS)\n  screenAxis[j] = 1\n  this.shader.uniforms.screenAxis = screenAxis\n  this.vao.draw(this.gl.TRIANGLES, this.tickCount[j], this.tickOffset[j])\n}\n\n\nproto.drawGrid = function(i, j, bounds, offset, color, lineWidth) {\n  if(!this.gridCount[i]) {\n    return\n  }\n\n  var minorAxis = zeroVec(MINOR_AXIS)\n  minorAxis[j]  = bounds[1][j] - bounds[0][j]\n  this.shader.uniforms.minorAxis = minorAxis\n\n  var noffset = copyVec(OFFSET_VEC, offset)\n  noffset[j] += bounds[0][j]\n  this.shader.uniforms.offset = noffset\n\n  var majorAxis = zeroVec(MAJOR_AXIS)\n  majorAxis[i]  = 1\n  this.shader.uniforms.majorAxis = majorAxis\n\n  var screenAxis = zeroVec(SCREEN_AXIS)\n  screenAxis[i] = 1\n  this.shader.uniforms.screenAxis = screenAxis\n  this.shader.uniforms.lineWidth = lineWidth\n\n  this.shader.uniforms.color = color\n  this.vao.draw(this.gl.TRIANGLES, this.gridCount[i], this.gridOffset[i])\n}\n\nproto.drawZero = function(j, i, bounds, offset, color, lineWidth) {\n  var minorAxis = zeroVec(MINOR_AXIS)\n  this.shader.uniforms.majorAxis = minorAxis\n\n  minorAxis[j] = bounds[1][j] - bounds[0][j]\n  this.shader.uniforms.minorAxis = minorAxis\n\n  var noffset = copyVec(OFFSET_VEC, offset)\n  noffset[j] += bounds[0][j]\n  this.shader.uniforms.offset = noffset\n\n  var screenAxis = zeroVec(SCREEN_AXIS)\n  screenAxis[i] = 1\n  this.shader.uniforms.screenAxis = screenAxis\n  this.shader.uniforms.lineWidth = lineWidth\n\n  this.shader.uniforms.color = color\n  this.vao.draw(this.gl.TRIANGLES, 6)\n}\n\nproto.dispose = function() {\n  this.vao.dispose()\n  this.vertBuffer.dispose()\n  this.shader.dispose()\n}\n\nfunction createLines(gl, bounds, ticks) {\n  var vertices    = []\n  var tickOffset  = [0,0,0]\n  var tickCount   = [0,0,0]\n\n  //Create grid lines for each axis/direction\n  var gridOffset = [0,0,0]\n  var gridCount  = [0,0,0]\n\n  //Add zero line\n  vertices.push(\n    0,0,1,   0,1,1,   0,0,-1,\n    0,0,-1,  0,1,1,   0,1,-1)\n\n  for(var i=0; i<3; ++i) {\n    //Axis tick marks\n    var start = ((vertices.length / 3)|0)\n    for(var j=0; j<ticks[i].length; ++j) {\n      var x = +ticks[i][j].x\n      vertices.push(\n        x,0,1,   x,1,1,   x,0,-1,\n        x,0,-1,  x,1,1,   x,1,-1)\n    }\n    var end = ((vertices.length / 3)|0)\n    tickOffset[i] = start\n    tickCount[i]  = end - start\n\n    //Grid lines\n    var start = ((vertices.length / 3)|0)\n    for(var k=0; k<ticks[i].length; ++k) {\n      var x = +ticks[i][k].x\n      vertices.push(\n        x,0,1,   x,1,1,   x,0,-1,\n        x,0,-1,  x,1,1,   x,1,-1)\n    }\n    var end = ((vertices.length / 3)|0)\n    gridOffset[i] = start\n    gridCount[i]  = end - start\n  }\n\n  //Create cube VAO\n  var vertBuf = createBuffer(gl, new Float32Array(vertices))\n  var vao = createVAO(gl, [\n    { \"buffer\": vertBuf,\n      \"type\": gl.FLOAT,\n      \"size\": 3,\n      \"stride\": 0,\n      \"offset\": 0\n    }\n  ])\n  var shader = createShader(gl)\n  shader.attributes.position.location = 0\n  return new Lines(gl, vertBuf, vao, shader, tickCount, tickOffset, gridCount, gridOffset)\n}\n"]},"metadata":{},"sourceType":"script"}