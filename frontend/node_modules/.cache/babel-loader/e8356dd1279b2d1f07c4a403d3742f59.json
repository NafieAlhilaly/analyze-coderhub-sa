{"ast":null,"code":"'use strict';\n\nmodule.exports = createErrorBars;\n\nvar createBuffer = require('gl-buffer');\n\nvar createVAO = require('gl-vao');\n\nvar createShader = require('./shaders/index');\n\nvar IDENTITY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nfunction ErrorBars(gl, buffer, vao, shader) {\n  this.gl = gl;\n  this.shader = shader;\n  this.buffer = buffer;\n  this.vao = vao;\n  this.pixelRatio = 1;\n  this.bounds = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n  this.clipBounds = [[-Infinity, -Infinity, -Infinity], [Infinity, Infinity, Infinity]];\n  this.lineWidth = [1, 1, 1];\n  this.capSize = [10, 10, 10];\n  this.lineCount = [0, 0, 0];\n  this.lineOffset = [0, 0, 0];\n  this.opacity = 1;\n  this.hasAlpha = false;\n}\n\nvar proto = ErrorBars.prototype;\n\nproto.isOpaque = function () {\n  return !this.hasAlpha;\n};\n\nproto.isTransparent = function () {\n  return this.hasAlpha;\n};\n\nproto.drawTransparent = proto.draw = function (cameraParams) {\n  var gl = this.gl;\n  var uniforms = this.shader.uniforms;\n  this.shader.bind();\n  var view = uniforms.view = cameraParams.view || IDENTITY;\n  var projection = uniforms.projection = cameraParams.projection || IDENTITY;\n  uniforms.model = cameraParams.model || IDENTITY;\n  uniforms.clipBounds = this.clipBounds;\n  uniforms.opacity = this.opacity;\n  var cx = view[12];\n  var cy = view[13];\n  var cz = view[14];\n  var cw = view[15];\n  var isOrtho = cameraParams._ortho || false;\n  var orthoFix = isOrtho ? 2 : 1; // double up padding for orthographic ticks & labels\n\n  var pixelScaleF = orthoFix * this.pixelRatio * (projection[3] * cx + projection[7] * cy + projection[11] * cz + projection[15] * cw) / gl.drawingBufferHeight;\n  this.vao.bind();\n\n  for (var i = 0; i < 3; ++i) {\n    gl.lineWidth(this.lineWidth[i] * this.pixelRatio);\n    uniforms.capSize = this.capSize[i] * pixelScaleF;\n\n    if (this.lineCount[i]) {\n      gl.drawArrays(gl.LINES, this.lineOffset[i], this.lineCount[i]);\n    }\n  }\n\n  this.vao.unbind();\n};\n\nfunction updateBounds(bounds, point) {\n  for (var i = 0; i < 3; ++i) {\n    bounds[0][i] = Math.min(bounds[0][i], point[i]);\n    bounds[1][i] = Math.max(bounds[1][i], point[i]);\n  }\n}\n\nvar FACE_TABLE = function () {\n  var table = new Array(3);\n\n  for (var d = 0; d < 3; ++d) {\n    var row = [];\n\n    for (var j = 1; j <= 2; ++j) {\n      for (var s = -1; s <= 1; s += 2) {\n        var u = (j + d) % 3;\n        var y = [0, 0, 0];\n        y[u] = s;\n        row.push(y);\n      }\n    }\n\n    table[d] = row;\n  }\n\n  return table;\n}();\n\nfunction emitFace(verts, x, c, d) {\n  var offsets = FACE_TABLE[d];\n\n  for (var i = 0; i < offsets.length; ++i) {\n    var o = offsets[i];\n    verts.push(x[0], x[1], x[2], c[0], c[1], c[2], c[3], o[0], o[1], o[2]);\n  }\n\n  return offsets.length;\n}\n\nproto.update = function (options) {\n  options = options || {};\n\n  if ('lineWidth' in options) {\n    this.lineWidth = options.lineWidth;\n\n    if (!Array.isArray(this.lineWidth)) {\n      this.lineWidth = [this.lineWidth, this.lineWidth, this.lineWidth];\n    }\n  }\n\n  if ('capSize' in options) {\n    this.capSize = options.capSize;\n\n    if (!Array.isArray(this.capSize)) {\n      this.capSize = [this.capSize, this.capSize, this.capSize];\n    }\n  }\n\n  this.hasAlpha = false; // default to no transparent draw\n\n  if ('opacity' in options) {\n    this.opacity = +options.opacity;\n\n    if (this.opacity < 1) {\n      this.hasAlpha = true;\n    }\n  }\n\n  var color = options.color || [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n  var position = options.position;\n  var error = options.error;\n\n  if (!Array.isArray(color[0])) {\n    color = [color, color, color];\n  }\n\n  if (position && error) {\n    var verts = [];\n    var n = position.length;\n    var vertexCount = 0;\n    this.bounds = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n    this.lineCount = [0, 0, 0]; //Build geometry for lines\n\n    for (var j = 0; j < 3; ++j) {\n      this.lineOffset[j] = vertexCount;\n\n      i_loop: for (var i = 0; i < n; ++i) {\n        var p = position[i];\n\n        for (var k = 0; k < 3; ++k) {\n          if (isNaN(p[k]) || !isFinite(p[k])) {\n            continue i_loop;\n          }\n        }\n\n        var e = error[i];\n        var c = color[j];\n\n        if (Array.isArray(c[0])) {\n          c = color[i];\n        }\n\n        if (c.length === 3) {\n          c = [c[0], c[1], c[2], 1];\n        } else if (c.length === 4) {\n          c = [c[0], c[1], c[2], c[3]];\n          if (!this.hasAlpha && c[3] < 1) this.hasAlpha = true;\n        }\n\n        if (isNaN(e[0][j]) || isNaN(e[1][j])) {\n          continue;\n        }\n\n        if (e[0][j] < 0) {\n          var x = p.slice();\n          x[j] += e[0][j];\n          verts.push(p[0], p[1], p[2], c[0], c[1], c[2], c[3], 0, 0, 0, x[0], x[1], x[2], c[0], c[1], c[2], c[3], 0, 0, 0);\n          updateBounds(this.bounds, x);\n          vertexCount += 2 + emitFace(verts, x, c, j);\n        }\n\n        if (e[1][j] > 0) {\n          var x = p.slice();\n          x[j] += e[1][j];\n          verts.push(p[0], p[1], p[2], c[0], c[1], c[2], c[3], 0, 0, 0, x[0], x[1], x[2], c[0], c[1], c[2], c[3], 0, 0, 0);\n          updateBounds(this.bounds, x);\n          vertexCount += 2 + emitFace(verts, x, c, j);\n        }\n      }\n\n      this.lineCount[j] = vertexCount - this.lineOffset[j];\n    }\n\n    this.buffer.update(verts);\n  }\n};\n\nproto.dispose = function () {\n  this.shader.dispose();\n  this.buffer.dispose();\n  this.vao.dispose();\n};\n\nfunction createErrorBars(options) {\n  var gl = options.gl;\n  var buffer = createBuffer(gl);\n  var vao = createVAO(gl, [{\n    buffer: buffer,\n    type: gl.FLOAT,\n    size: 3,\n    offset: 0,\n    stride: 40\n  }, {\n    buffer: buffer,\n    type: gl.FLOAT,\n    size: 4,\n    offset: 12,\n    stride: 40\n  }, {\n    buffer: buffer,\n    type: gl.FLOAT,\n    size: 3,\n    offset: 28,\n    stride: 40\n  }]);\n  var shader = createShader(gl);\n  shader.attributes.position.location = 0;\n  shader.attributes.color.location = 1;\n  shader.attributes.offset.location = 2;\n  var result = new ErrorBars(gl, buffer, vao, shader);\n  result.update(options);\n  return result;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/gl-error3d/errorbars.js"],"names":["module","exports","createErrorBars","createBuffer","require","createVAO","createShader","IDENTITY","ErrorBars","gl","buffer","vao","shader","pixelRatio","bounds","Infinity","clipBounds","lineWidth","capSize","lineCount","lineOffset","opacity","hasAlpha","proto","prototype","isOpaque","isTransparent","drawTransparent","draw","cameraParams","uniforms","bind","view","projection","model","cx","cy","cz","cw","isOrtho","_ortho","orthoFix","pixelScaleF","drawingBufferHeight","i","drawArrays","LINES","unbind","updateBounds","point","Math","min","max","FACE_TABLE","table","Array","d","row","j","s","u","y","push","emitFace","verts","x","c","offsets","length","o","update","options","isArray","color","position","error","n","vertexCount","i_loop","p","k","isNaN","isFinite","e","slice","dispose","type","FLOAT","size","offset","stride","attributes","location","result"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = createErrorBars\n\nvar createBuffer  = require('gl-buffer')\nvar createVAO     = require('gl-vao')\nvar createShader  = require('./shaders/index')\n\nvar IDENTITY = [1,0,0,0,\n                0,1,0,0,\n                0,0,1,0,\n                0,0,0,1]\n\nfunction ErrorBars(gl, buffer, vao, shader) {\n  this.gl           = gl\n  this.shader       = shader\n  this.buffer       = buffer\n  this.vao          = vao\n  this.pixelRatio   = 1\n  this.bounds       = [[ Infinity, Infinity, Infinity], [-Infinity,-Infinity,-Infinity]]\n  this.clipBounds   = [[-Infinity,-Infinity,-Infinity], [ Infinity, Infinity, Infinity]]\n  this.lineWidth    = [1,1,1]\n  this.capSize      = [10,10,10]\n  this.lineCount    = [0,0,0]\n  this.lineOffset   = [0,0,0]\n  this.opacity      = 1\n  this.hasAlpha     = false\n}\n\nvar proto = ErrorBars.prototype\n\nproto.isOpaque = function() {\n  return !this.hasAlpha\n}\n\nproto.isTransparent = function() {\n  return this.hasAlpha\n}\n\nproto.drawTransparent = proto.draw = function(cameraParams) {\n  var gl = this.gl\n  var uniforms        = this.shader.uniforms\n\n  this.shader.bind()\n  var view       = uniforms.view       = cameraParams.view       || IDENTITY\n  var projection = uniforms.projection = cameraParams.projection || IDENTITY\n  uniforms.model      = cameraParams.model      || IDENTITY\n  uniforms.clipBounds = this.clipBounds\n  uniforms.opacity    = this.opacity\n\n\n  var cx = view[12]\n  var cy = view[13]\n  var cz = view[14]\n  var cw = view[15]\n\n  var isOrtho = cameraParams._ortho || false\n  var orthoFix = (isOrtho) ? 2 : 1 // double up padding for orthographic ticks & labels\n  var pixelScaleF = orthoFix * this.pixelRatio * (projection[3]*cx + projection[7]*cy + projection[11]*cz + projection[15]*cw) / gl.drawingBufferHeight\n\n  this.vao.bind()\n  for(var i=0; i<3; ++i) {\n    gl.lineWidth(this.lineWidth[i] * this.pixelRatio)\n    uniforms.capSize = this.capSize[i] * pixelScaleF\n    if (this.lineCount[i]) {\n      gl.drawArrays(gl.LINES, this.lineOffset[i], this.lineCount[i])\n    }\n  }\n  this.vao.unbind()\n}\n\nfunction updateBounds(bounds, point) {\n  for(var i=0; i<3; ++i) {\n    bounds[0][i] = Math.min(bounds[0][i], point[i])\n    bounds[1][i] = Math.max(bounds[1][i], point[i])\n  }\n}\n\nvar FACE_TABLE = (function(){\n  var table = new Array(3)\n  for(var d=0; d<3; ++d) {\n    var row = []\n    for(var j=1; j<=2; ++j) {\n      for(var s=-1; s<=1; s+=2) {\n        var u = (j+d) % 3\n        var y = [0,0,0]\n        y[u] = s\n        row.push(y)\n      }\n    }\n    table[d] = row\n  }\n  return table\n})()\n\n\nfunction emitFace(verts, x, c, d) {\n  var offsets = FACE_TABLE[d]\n  for(var i=0; i<offsets.length; ++i) {\n    var o = offsets[i]\n    verts.push(x[0], x[1], x[2],\n               c[0], c[1], c[2], c[3],\n               o[0], o[1], o[2])\n  }\n  return offsets.length\n}\n\nproto.update = function(options) {\n  options = options || {}\n\n  if('lineWidth' in options) {\n    this.lineWidth = options.lineWidth\n    if(!Array.isArray(this.lineWidth)) {\n      this.lineWidth = [this.lineWidth, this.lineWidth, this.lineWidth]\n    }\n  }\n  if('capSize' in options) {\n    this.capSize = options.capSize\n    if(!Array.isArray(this.capSize)) {\n      this.capSize = [this.capSize, this.capSize, this.capSize]\n    }\n  }\n\n  this.hasAlpha = false // default to no transparent draw\n  if('opacity' in options) {\n    this.opacity = +options.opacity\n    if(this.opacity < 1) {\n      this.hasAlpha = true;\n    }\n  }\n\n  var color    = options.color || [[0,0,0],[0,0,0],[0,0,0]]\n  var position = options.position\n  var error    = options.error\n  if(!Array.isArray(color[0])) {\n    color = [color,color,color]\n  }\n\n  if(position && error) {\n\n    var verts       = []\n    var n           = position.length\n    var vertexCount = 0\n    this.bounds     = [[ Infinity, Infinity, Infinity],\n                       [-Infinity,-Infinity,-Infinity]]\n    this.lineCount  = [0,0,0]\n\n    //Build geometry for lines\n    for(var j=0; j<3; ++j) {\n      this.lineOffset[j] = vertexCount\n\ni_loop:\n      for(var i=0; i<n; ++i) {\n        var p = position[i]\n\n        for(var k=0; k<3; ++k) {\n          if(isNaN(p[k]) || !isFinite(p[k])) {\n            continue i_loop\n          }\n        }\n\n        var e = error[i]\n        var c = color[j]\n        if(Array.isArray(c[0])) {\n          c = color[i]\n        }\n        if(c.length === 3) {\n          c = [c[0], c[1], c[2], 1]\n        } else if(c.length === 4) {\n          c = [c[0], c[1], c[2], c[3]]\n          if(!this.hasAlpha && c[3] < 1) this.hasAlpha = true\n        }\n\n        if(isNaN(e[0][j]) || isNaN(e[1][j])) {\n          continue\n        }\n        if(e[0][j] < 0) {\n          var x = p.slice()\n          x[j] += e[0][j]\n          verts.push(p[0], p[1], p[2],\n                     c[0], c[1], c[2], c[3],\n                        0,    0,    0,\n                     x[0], x[1], x[2],\n                     c[0], c[1], c[2], c[3],\n                        0,    0,    0)\n          updateBounds(this.bounds, x)\n          vertexCount += 2 + emitFace(verts, x, c, j)\n        }\n        if(e[1][j] > 0) {\n          var x = p.slice()\n          x[j] += e[1][j]\n          verts.push(p[0], p[1], p[2],\n                     c[0], c[1], c[2], c[3],\n                        0,    0,    0,\n                     x[0], x[1], x[2],\n                     c[0], c[1], c[2], c[3],\n                        0,    0,    0)\n          updateBounds(this.bounds, x)\n          vertexCount += 2 + emitFace(verts, x, c, j)\n        }\n      }\n      this.lineCount[j] = vertexCount - this.lineOffset[j]\n    }\n    this.buffer.update(verts)\n  }\n}\n\nproto.dispose = function() {\n  this.shader.dispose()\n  this.buffer.dispose()\n  this.vao.dispose()\n}\n\nfunction createErrorBars(options) {\n  var gl = options.gl\n  var buffer = createBuffer(gl)\n  var vao = createVAO(gl, [\n      {\n        buffer: buffer,\n        type:   gl.FLOAT,\n        size:   3,\n        offset: 0,\n        stride: 40\n      },\n      {\n        buffer: buffer,\n        type:   gl.FLOAT,\n        size:   4,\n        offset: 12,\n        stride: 40\n      },\n      {\n        buffer: buffer,\n        type:   gl.FLOAT,\n        size:   3,\n        offset: 28,\n        stride: 40\n      }\n    ])\n\n  var shader = createShader(gl)\n  shader.attributes.position.location = 0\n  shader.attributes.color.location    = 1\n  shader.attributes.offset.location   = 2\n\n  var result = new ErrorBars(gl, buffer, vao, shader)\n  result.update(options)\n  return result\n}\n"]},"metadata":{},"sourceType":"script"}