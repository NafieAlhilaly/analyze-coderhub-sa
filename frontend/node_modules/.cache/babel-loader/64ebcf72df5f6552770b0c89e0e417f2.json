{"ast":null,"code":"'use strict';\n\nvar FROM_BL = require('../../constants/alignment').FROM_BL;\n\nmodule.exports = function scaleZoom(ax, factor, centerFraction) {\n  if (centerFraction === undefined) {\n    centerFraction = FROM_BL[ax.constraintoward || 'center'];\n  }\n\n  var rangeLinear = [ax.r2l(ax.range[0]), ax.r2l(ax.range[1])];\n  var center = rangeLinear[0] + (rangeLinear[1] - rangeLinear[0]) * centerFraction;\n  ax.range = ax._input.range = [ax.l2r(center + (rangeLinear[0] - center) * factor), ax.l2r(center + (rangeLinear[1] - center) * factor)];\n  ax.setScale();\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/plots/cartesian/scale_zoom.js"],"names":["FROM_BL","require","module","exports","scaleZoom","ax","factor","centerFraction","undefined","constraintoward","rangeLinear","r2l","range","center","_input","l2r","setScale"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,2BAAD,CAAP,CAAqCD,OAAnD;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,EAAnB,EAAuBC,MAAvB,EAA+BC,cAA/B,EAA+C;AAC5D,MAAGA,cAAc,KAAKC,SAAtB,EAAiC;AAC7BD,IAAAA,cAAc,GAAGP,OAAO,CAACK,EAAE,CAACI,eAAH,IAAsB,QAAvB,CAAxB;AACH;;AAED,MAAIC,WAAW,GAAG,CAACL,EAAE,CAACM,GAAH,CAAON,EAAE,CAACO,KAAH,CAAS,CAAT,CAAP,CAAD,EAAsBP,EAAE,CAACM,GAAH,CAAON,EAAE,CAACO,KAAH,CAAS,CAAT,CAAP,CAAtB,CAAlB;AACA,MAAIC,MAAM,GAAGH,WAAW,CAAC,CAAD,CAAX,GAAiB,CAACA,WAAW,CAAC,CAAD,CAAX,GAAiBA,WAAW,CAAC,CAAD,CAA7B,IAAoCH,cAAlE;AAEAF,EAAAA,EAAE,CAACO,KAAH,GAAWP,EAAE,CAACS,MAAH,CAAUF,KAAV,GAAkB,CACzBP,EAAE,CAACU,GAAH,CAAOF,MAAM,GAAG,CAACH,WAAW,CAAC,CAAD,CAAX,GAAiBG,MAAlB,IAA4BP,MAA5C,CADyB,EAEzBD,EAAE,CAACU,GAAH,CAAOF,MAAM,GAAG,CAACH,WAAW,CAAC,CAAD,CAAX,GAAiBG,MAAlB,IAA4BP,MAA5C,CAFyB,CAA7B;AAIAD,EAAAA,EAAE,CAACW,QAAH;AACH,CAbD","sourcesContent":["'use strict';\n\nvar FROM_BL = require('../../constants/alignment').FROM_BL;\n\nmodule.exports = function scaleZoom(ax, factor, centerFraction) {\n    if(centerFraction === undefined) {\n        centerFraction = FROM_BL[ax.constraintoward || 'center'];\n    }\n\n    var rangeLinear = [ax.r2l(ax.range[0]), ax.r2l(ax.range[1])];\n    var center = rangeLinear[0] + (rangeLinear[1] - rangeLinear[0]) * centerFraction;\n\n    ax.range = ax._input.range = [\n        ax.l2r(center + (rangeLinear[0] - center) * factor),\n        ax.l2r(center + (rangeLinear[1] - center) * factor)\n    ];\n    ax.setScale();\n};\n"]},"metadata":{},"sourceType":"script"}