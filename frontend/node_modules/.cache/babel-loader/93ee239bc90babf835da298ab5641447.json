{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  visible: {\n    valType: 'boolean',\n    editType: 'calc',\n    description: ['Determines whether or not this set of error bars is visible.'].join(' ')\n  },\n  type: {\n    valType: 'enumerated',\n    values: ['percent', 'constant', 'sqrt', 'data'],\n    editType: 'calc',\n    description: ['Determines the rule used to generate the error bars.', 'If *constant`, the bar lengths are of a constant value.', 'Set this constant in `value`.', 'If *percent*, the bar lengths correspond to a percentage of', 'underlying data. Set this percentage in `value`.', 'If *sqrt*, the bar lengths correspond to the square of the', 'underlying data.', 'If *data*, the bar lengths are set with data set `array`.'].join(' ')\n  },\n  symmetric: {\n    valType: 'boolean',\n    editType: 'calc',\n    description: ['Determines whether or not the error bars have the same length', 'in both direction', '(top/bottom for vertical bars, left/right for horizontal bars.'].join(' ')\n  },\n  array: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['Sets the data corresponding the length of each error bar.', 'Values are plotted relative to the underlying data.'].join(' ')\n  },\n  arrayminus: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['Sets the data corresponding the length of each error bar in the', 'bottom (left) direction for vertical (horizontal) bars', 'Values are plotted relative to the underlying data.'].join(' ')\n  },\n  value: {\n    valType: 'number',\n    min: 0,\n    dflt: 10,\n    editType: 'calc',\n    description: ['Sets the value of either the percentage', '(if `type` is set to *percent*) or the constant', '(if `type` is set to *constant*) corresponding to the lengths of', 'the error bars.'].join(' ')\n  },\n  valueminus: {\n    valType: 'number',\n    min: 0,\n    dflt: 10,\n    editType: 'calc',\n    description: ['Sets the value of either the percentage', '(if `type` is set to *percent*) or the constant', '(if `type` is set to *constant*) corresponding to the lengths of', 'the error bars in the', 'bottom (left) direction for vertical (horizontal) bars'].join(' ')\n  },\n  traceref: {\n    valType: 'integer',\n    min: 0,\n    dflt: 0,\n    editType: 'style'\n  },\n  tracerefminus: {\n    valType: 'integer',\n    min: 0,\n    dflt: 0,\n    editType: 'style'\n  },\n  copy_ystyle: {\n    valType: 'boolean',\n    editType: 'plot'\n  },\n  copy_zstyle: {\n    valType: 'boolean',\n    editType: 'style'\n  },\n  color: {\n    valType: 'color',\n    editType: 'style',\n    description: 'Sets the stoke color of the error bars.'\n  },\n  thickness: {\n    valType: 'number',\n    min: 0,\n    dflt: 2,\n    editType: 'style',\n    description: 'Sets the thickness (in px) of the error bars.'\n  },\n  width: {\n    valType: 'number',\n    min: 0,\n    editType: 'plot',\n    description: ['Sets the width (in px) of the cross-bar at both ends', 'of the error bars.'].join(' ')\n  },\n  editType: 'calc',\n  _deprecated: {\n    opacity: {\n      valType: 'number',\n      editType: 'style',\n      description: ['Obsolete.', 'Use the alpha channel in error bar `color` to set the opacity.'].join(' ')\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/errorbars/attributes.js"],"names":["module","exports","visible","valType","editType","description","join","type","values","symmetric","array","arrayminus","value","min","dflt","valueminus","traceref","tracerefminus","copy_ystyle","copy_zstyle","color","thickness","width","_deprecated","opacity"],"mappings":"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","sourcesContent":["'use strict';\n\n\nmodule.exports = {\n    visible: {\n        valType: 'boolean',\n        editType: 'calc',\n        description: [\n            'Determines whether or not this set of error bars is visible.'\n        ].join(' ')\n    },\n    type: {\n        valType: 'enumerated',\n        values: ['percent', 'constant', 'sqrt', 'data'],\n        editType: 'calc',\n        description: [\n            'Determines the rule used to generate the error bars.',\n\n            'If *constant`, the bar lengths are of a constant value.',\n            'Set this constant in `value`.',\n\n            'If *percent*, the bar lengths correspond to a percentage of',\n            'underlying data. Set this percentage in `value`.',\n\n            'If *sqrt*, the bar lengths correspond to the square of the',\n            'underlying data.',\n\n            'If *data*, the bar lengths are set with data set `array`.'\n        ].join(' ')\n    },\n    symmetric: {\n        valType: 'boolean',\n        editType: 'calc',\n        description: [\n            'Determines whether or not the error bars have the same length',\n            'in both direction',\n            '(top/bottom for vertical bars, left/right for horizontal bars.'\n        ].join(' ')\n    },\n    array: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Sets the data corresponding the length of each error bar.',\n            'Values are plotted relative to the underlying data.'\n        ].join(' ')\n    },\n    arrayminus: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Sets the data corresponding the length of each error bar in the',\n            'bottom (left) direction for vertical (horizontal) bars',\n            'Values are plotted relative to the underlying data.'\n        ].join(' ')\n    },\n    value: {\n        valType: 'number',\n        min: 0,\n        dflt: 10,\n        editType: 'calc',\n        description: [\n            'Sets the value of either the percentage',\n            '(if `type` is set to *percent*) or the constant',\n            '(if `type` is set to *constant*) corresponding to the lengths of',\n            'the error bars.'\n        ].join(' ')\n    },\n    valueminus: {\n        valType: 'number',\n        min: 0,\n        dflt: 10,\n        editType: 'calc',\n        description: [\n            'Sets the value of either the percentage',\n            '(if `type` is set to *percent*) or the constant',\n            '(if `type` is set to *constant*) corresponding to the lengths of',\n            'the error bars in the',\n            'bottom (left) direction for vertical (horizontal) bars'\n        ].join(' ')\n    },\n    traceref: {\n        valType: 'integer',\n        min: 0,\n        dflt: 0,\n        editType: 'style'\n    },\n    tracerefminus: {\n        valType: 'integer',\n        min: 0,\n        dflt: 0,\n        editType: 'style'\n    },\n    copy_ystyle: {\n        valType: 'boolean',\n        editType: 'plot'\n    },\n    copy_zstyle: {\n        valType: 'boolean',\n        editType: 'style'\n    },\n    color: {\n        valType: 'color',\n        editType: 'style',\n        description: 'Sets the stoke color of the error bars.'\n    },\n    thickness: {\n        valType: 'number',\n        min: 0,\n        dflt: 2,\n        editType: 'style',\n        description: 'Sets the thickness (in px) of the error bars.'\n    },\n    width: {\n        valType: 'number',\n        min: 0,\n        editType: 'plot',\n        description: [\n            'Sets the width (in px) of the cross-bar at both ends',\n            'of the error bars.'\n        ].join(' ')\n    },\n    editType: 'calc',\n\n    _deprecated: {\n        opacity: {\n            valType: 'number',\n            editType: 'style',\n            description: [\n                'Obsolete.',\n                'Use the alpha channel in error bar `color` to set the opacity.'\n            ].join(' ')\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}