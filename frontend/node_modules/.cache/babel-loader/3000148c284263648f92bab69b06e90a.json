{"ast":null,"code":"'use strict';\n\nvar colorAttributes = require('../color/attributes');\n\nmodule.exports = {\n  bgcolor: {\n    valType: 'color',\n    dflt: colorAttributes.background,\n    editType: 'plot',\n    description: 'Sets the background color of the range slider.'\n  },\n  bordercolor: {\n    valType: 'color',\n    dflt: colorAttributes.defaultLine,\n    editType: 'plot',\n    description: 'Sets the border color of the range slider.'\n  },\n  borderwidth: {\n    valType: 'integer',\n    dflt: 0,\n    min: 0,\n    editType: 'plot',\n    description: 'Sets the border width of the range slider.'\n  },\n  autorange: {\n    valType: 'boolean',\n    dflt: true,\n    editType: 'calc',\n    impliedEdits: {\n      'range[0]': undefined,\n      'range[1]': undefined\n    },\n    description: ['Determines whether or not the range slider range is', 'computed in relation to the input data.', 'If `range` is provided, then `autorange` is set to *false*.'].join(' ')\n  },\n  range: {\n    valType: 'info_array',\n    items: [{\n      valType: 'any',\n      editType: 'calc',\n      impliedEdits: {\n        '^autorange': false\n      }\n    }, {\n      valType: 'any',\n      editType: 'calc',\n      impliedEdits: {\n        '^autorange': false\n      }\n    }],\n    editType: 'calc',\n    impliedEdits: {\n      'autorange': false\n    },\n    description: ['Sets the range of the range slider.', 'If not set, defaults to the full xaxis range.', 'If the axis `type` is *log*, then you must take the', 'log of your desired range.', 'If the axis `type` is *date*, it should be date strings,', 'like date data, though Date objects and unix milliseconds', 'will be accepted and converted to strings.', 'If the axis `type` is *category*, it should be numbers,', 'using the scale where each category is assigned a serial', 'number from zero in the order it appears.'].join(' ')\n  },\n  thickness: {\n    valType: 'number',\n    dflt: 0.15,\n    min: 0,\n    max: 1,\n    editType: 'plot',\n    description: ['The height of the range slider as a fraction of the', 'total plot area height.'].join(' ')\n  },\n  visible: {\n    valType: 'boolean',\n    dflt: true,\n    editType: 'calc',\n    description: ['Determines whether or not the range slider will be visible.', 'If visible, perpendicular axes will be set to `fixedrange`'].join(' ')\n  },\n  editType: 'calc'\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/rangeslider/attributes.js"],"names":["colorAttributes","require","module","exports","bgcolor","valType","dflt","background","editType","description","bordercolor","defaultLine","borderwidth","min","autorange","impliedEdits","undefined","join","range","items","thickness","max","visible"],"mappings":"AAAA;;AAEA,IAAIA,eAAe,GAAGC,OAAO,CAAC,qBAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,OADJ;AAELC,IAAAA,IAAI,EAAEN,eAAe,CAACO,UAFjB;AAGLC,IAAAA,QAAQ,EAAE,MAHL;AAILC,IAAAA,WAAW,EAAE;AAJR,GADI;AAObC,EAAAA,WAAW,EAAE;AACTL,IAAAA,OAAO,EAAE,OADA;AAETC,IAAAA,IAAI,EAAEN,eAAe,CAACW,WAFb;AAGTH,IAAAA,QAAQ,EAAE,MAHD;AAITC,IAAAA,WAAW,EAAE;AAJJ,GAPA;AAabG,EAAAA,WAAW,EAAE;AACTP,IAAAA,OAAO,EAAE,SADA;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTO,IAAAA,GAAG,EAAE,CAHI;AAITL,IAAAA,QAAQ,EAAE,MAJD;AAKTC,IAAAA,WAAW,EAAE;AALJ,GAbA;AAoBbK,EAAAA,SAAS,EAAE;AACPT,IAAAA,OAAO,EAAE,SADF;AAEPC,IAAAA,IAAI,EAAE,IAFC;AAGPE,IAAAA,QAAQ,EAAE,MAHH;AAIPO,IAAAA,YAAY,EAAE;AAAC,kBAAYC,SAAb;AAAwB,kBAAYA;AAApC,KAJP;AAKPP,IAAAA,WAAW,EAAE,CACT,qDADS,EAET,yCAFS,EAGT,6DAHS,EAIXQ,IAJW,CAIN,GAJM;AALN,GApBE;AA+BbC,EAAAA,KAAK,EAAE;AACHb,IAAAA,OAAO,EAAE,YADN;AAEHc,IAAAA,KAAK,EAAE,CACH;AAACd,MAAAA,OAAO,EAAE,KAAV;AAAiBG,MAAAA,QAAQ,EAAE,MAA3B;AAAmCO,MAAAA,YAAY,EAAE;AAAC,sBAAc;AAAf;AAAjD,KADG,EAEH;AAACV,MAAAA,OAAO,EAAE,KAAV;AAAiBG,MAAAA,QAAQ,EAAE,MAA3B;AAAmCO,MAAAA,YAAY,EAAE;AAAC,sBAAc;AAAf;AAAjD,KAFG,CAFJ;AAMHP,IAAAA,QAAQ,EAAE,MANP;AAOHO,IAAAA,YAAY,EAAE;AAAC,mBAAa;AAAd,KAPX;AAQHN,IAAAA,WAAW,EAAE,CACT,qCADS,EAET,+CAFS,EAGT,qDAHS,EAIT,4BAJS,EAKT,0DALS,EAMT,2DANS,EAOT,4CAPS,EAQT,yDARS,EAST,0DATS,EAUT,2CAVS,EAWXQ,IAXW,CAWN,GAXM;AARV,GA/BM;AAoDbG,EAAAA,SAAS,EAAE;AACPf,IAAAA,OAAO,EAAE,QADF;AAEPC,IAAAA,IAAI,EAAE,IAFC;AAGPO,IAAAA,GAAG,EAAE,CAHE;AAIPQ,IAAAA,GAAG,EAAE,CAJE;AAKPb,IAAAA,QAAQ,EAAE,MALH;AAMPC,IAAAA,WAAW,EAAE,CACT,qDADS,EAET,yBAFS,EAGXQ,IAHW,CAGN,GAHM;AANN,GApDE;AA+DbK,EAAAA,OAAO,EAAE;AACLjB,IAAAA,OAAO,EAAE,SADJ;AAELC,IAAAA,IAAI,EAAE,IAFD;AAGLE,IAAAA,QAAQ,EAAE,MAHL;AAILC,IAAAA,WAAW,EAAE,CACT,6DADS,EAET,4DAFS,EAGXQ,IAHW,CAGN,GAHM;AAJR,GA/DI;AAwEbT,EAAAA,QAAQ,EAAE;AAxEG,CAAjB","sourcesContent":["'use strict';\n\nvar colorAttributes = require('../color/attributes');\n\nmodule.exports = {\n    bgcolor: {\n        valType: 'color',\n        dflt: colorAttributes.background,\n        editType: 'plot',\n        description: 'Sets the background color of the range slider.'\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: colorAttributes.defaultLine,\n        editType: 'plot',\n        description: 'Sets the border color of the range slider.'\n    },\n    borderwidth: {\n        valType: 'integer',\n        dflt: 0,\n        min: 0,\n        editType: 'plot',\n        description: 'Sets the border width of the range slider.'\n    },\n    autorange: {\n        valType: 'boolean',\n        dflt: true,\n        editType: 'calc',\n        impliedEdits: {'range[0]': undefined, 'range[1]': undefined},\n        description: [\n            'Determines whether or not the range slider range is',\n            'computed in relation to the input data.',\n            'If `range` is provided, then `autorange` is set to *false*.'\n        ].join(' ')\n    },\n    range: {\n        valType: 'info_array',\n        items: [\n            {valType: 'any', editType: 'calc', impliedEdits: {'^autorange': false}},\n            {valType: 'any', editType: 'calc', impliedEdits: {'^autorange': false}}\n        ],\n        editType: 'calc',\n        impliedEdits: {'autorange': false},\n        description: [\n            'Sets the range of the range slider.',\n            'If not set, defaults to the full xaxis range.',\n            'If the axis `type` is *log*, then you must take the',\n            'log of your desired range.',\n            'If the axis `type` is *date*, it should be date strings,',\n            'like date data, though Date objects and unix milliseconds',\n            'will be accepted and converted to strings.',\n            'If the axis `type` is *category*, it should be numbers,',\n            'using the scale where each category is assigned a serial',\n            'number from zero in the order it appears.'\n        ].join(' ')\n    },\n    thickness: {\n        valType: 'number',\n        dflt: 0.15,\n        min: 0,\n        max: 1,\n        editType: 'plot',\n        description: [\n            'The height of the range slider as a fraction of the',\n            'total plot area height.'\n        ].join(' ')\n    },\n    visible: {\n        valType: 'boolean',\n        dflt: true,\n        editType: 'calc',\n        description: [\n            'Determines whether or not the range slider will be visible.',\n            'If visible, perpendicular axes will be set to `fixedrange`'\n        ].join(' ')\n    },\n    editType: 'calc'\n};\n"]},"metadata":{},"sourceType":"script"}