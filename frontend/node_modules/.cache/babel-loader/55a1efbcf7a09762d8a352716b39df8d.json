{"ast":null,"code":"\"use strict\";\n\nmodule.exports = segmentsIntersect;\n\nvar orient = require(\"robust-orientation\")[3];\n\nfunction checkCollinear(a0, a1, b0, b1) {\n  for (var d = 0; d < 2; ++d) {\n    var x0 = a0[d];\n    var y0 = a1[d];\n    var l0 = Math.min(x0, y0);\n    var h0 = Math.max(x0, y0);\n    var x1 = b0[d];\n    var y1 = b1[d];\n    var l1 = Math.min(x1, y1);\n    var h1 = Math.max(x1, y1);\n\n    if (h1 < l0 || h0 < l1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction segmentsIntersect(a0, a1, b0, b1) {\n  var x0 = orient(a0, b0, b1);\n  var y0 = orient(a1, b0, b1);\n\n  if (x0 > 0 && y0 > 0 || x0 < 0 && y0 < 0) {\n    return false;\n  }\n\n  var x1 = orient(b0, a0, a1);\n  var y1 = orient(b1, a0, a1);\n\n  if (x1 > 0 && y1 > 0 || x1 < 0 && y1 < 0) {\n    return false;\n  } //Check for degenerate collinear case\n\n\n  if (x0 === 0 && y0 === 0 && x1 === 0 && y1 === 0) {\n    return checkCollinear(a0, a1, b0, b1);\n  }\n\n  return true;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/robust-segment-intersect/segseg.js"],"names":["module","exports","segmentsIntersect","orient","require","checkCollinear","a0","a1","b0","b1","d","x0","y0","l0","Math","min","h0","max","x1","y1","l1","h1"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,iBAAjB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8B,CAA9B,CAAb;;AAEA,SAASC,cAAT,CAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC,EAAwC;AAEtC,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkB,EAAEA,CAApB,EAAuB;AACrB,QAAIC,EAAE,GAAGL,EAAE,CAACI,CAAD,CAAX;AACA,QAAIE,EAAE,GAAGL,EAAE,CAACG,CAAD,CAAX;AACA,QAAIG,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASJ,EAAT,EAAaC,EAAb,CAAT;AACA,QAAII,EAAE,GAAGF,IAAI,CAACG,GAAL,CAASN,EAAT,EAAaC,EAAb,CAAT;AAEA,QAAIM,EAAE,GAAGV,EAAE,CAACE,CAAD,CAAX;AACA,QAAIS,EAAE,GAAGV,EAAE,CAACC,CAAD,CAAX;AACA,QAAIU,EAAE,GAAGN,IAAI,CAACC,GAAL,CAASG,EAAT,EAAaC,EAAb,CAAT;AACA,QAAIE,EAAE,GAAGP,IAAI,CAACG,GAAL,CAASC,EAAT,EAAaC,EAAb,CAAT;;AAEA,QAAGE,EAAE,GAAGR,EAAL,IAAWG,EAAE,GAAGI,EAAnB,EAAuB;AACrB,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAED,SAASlB,iBAAT,CAA2BI,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2C;AACzC,MAAIE,EAAE,GAAGR,MAAM,CAACG,EAAD,EAAKE,EAAL,EAASC,EAAT,CAAf;AACA,MAAIG,EAAE,GAAGT,MAAM,CAACI,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAf;;AACA,MAAIE,EAAE,GAAG,CAAL,IAAUC,EAAE,GAAG,CAAhB,IAAuBD,EAAE,GAAG,CAAL,IAAUC,EAAE,GAAG,CAAzC,EAA6C;AAC3C,WAAO,KAAP;AACD;;AAED,MAAIM,EAAE,GAAGf,MAAM,CAACK,EAAD,EAAKF,EAAL,EAASC,EAAT,CAAf;AACA,MAAIY,EAAE,GAAGhB,MAAM,CAACM,EAAD,EAAKH,EAAL,EAASC,EAAT,CAAf;;AACA,MAAIW,EAAE,GAAG,CAAL,IAAUC,EAAE,GAAG,CAAhB,IAAuBD,EAAE,GAAG,CAAL,IAAUC,EAAE,GAAG,CAAzC,EAA6C;AAC3C,WAAO,KAAP;AACD,GAXwC,CAazC;;;AACA,MAAGR,EAAE,KAAK,CAAP,IAAYC,EAAE,KAAK,CAAnB,IAAwBM,EAAE,KAAK,CAA/B,IAAoCC,EAAE,KAAK,CAA9C,EAAiD;AAC/C,WAAOd,cAAc,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,CAArB;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["\"use strict\"\n\nmodule.exports = segmentsIntersect\n\nvar orient = require(\"robust-orientation\")[3]\n\nfunction checkCollinear(a0, a1, b0, b1) {\n\n  for(var d=0; d<2; ++d) {\n    var x0 = a0[d]\n    var y0 = a1[d]\n    var l0 = Math.min(x0, y0)\n    var h0 = Math.max(x0, y0)    \n\n    var x1 = b0[d]\n    var y1 = b1[d]\n    var l1 = Math.min(x1, y1)\n    var h1 = Math.max(x1, y1)    \n\n    if(h1 < l0 || h0 < l1) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction segmentsIntersect(a0, a1, b0, b1) {\n  var x0 = orient(a0, b0, b1)\n  var y0 = orient(a1, b0, b1)\n  if((x0 > 0 && y0 > 0) || (x0 < 0 && y0 < 0)) {\n    return false\n  }\n\n  var x1 = orient(b0, a0, a1)\n  var y1 = orient(b1, a0, a1)\n  if((x1 > 0 && y1 > 0) || (x1 < 0 && y1 < 0)) {\n    return false\n  }\n\n  //Check for degenerate collinear case\n  if(x0 === 0 && y0 === 0 && x1 === 0 && y1 === 0) {\n    return checkCollinear(a0, a1, b0, b1)\n  }\n\n  return true\n}"]},"metadata":{},"sourceType":"script"}