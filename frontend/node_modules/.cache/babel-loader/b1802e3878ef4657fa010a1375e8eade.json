{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n/**\n * Convert plotly.js 'textposition' to mapbox-gl 'anchor' and 'offset'\n * (with the help of the icon size).\n *\n * @param {string} textpostion : plotly.js textposition value\n * @param {number} iconSize : plotly.js icon size (e.g. marker.size for traces)\n *\n * @return {object}\n *      - anchor\n *      - offset\n */\n\n\nmodule.exports = function convertTextOpts(textposition, iconSize) {\n  var parts = textposition.split(' ');\n  var vPos = parts[0];\n  var hPos = parts[1]; // ballpack values\n\n  var factor = Lib.isArrayOrTypedArray(iconSize) ? Lib.mean(iconSize) : iconSize;\n  var xInc = 0.5 + factor / 100;\n  var yInc = 1.5 + factor / 100;\n  var anchorVals = ['', ''];\n  var offset = [0, 0];\n\n  switch (vPos) {\n    case 'top':\n      anchorVals[0] = 'top';\n      offset[1] = -yInc;\n      break;\n\n    case 'bottom':\n      anchorVals[0] = 'bottom';\n      offset[1] = yInc;\n      break;\n  }\n\n  switch (hPos) {\n    case 'left':\n      anchorVals[1] = 'right';\n      offset[0] = -xInc;\n      break;\n\n    case 'right':\n      anchorVals[1] = 'left';\n      offset[0] = xInc;\n      break;\n  } // Mapbox text-anchor must be one of:\n  //  center, left, right, top, bottom,\n  //  top-left, top-right, bottom-left, bottom-right\n\n\n  var anchor;\n  if (anchorVals[0] && anchorVals[1]) anchor = anchorVals.join('-');else if (anchorVals[0]) anchor = anchorVals[0];else if (anchorVals[1]) anchor = anchorVals[1];else anchor = 'center';\n  return {\n    anchor: anchor,\n    offset: offset\n  };\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/plots/mapbox/convert_text_opts.js"],"names":["Lib","require","module","exports","convertTextOpts","textposition","iconSize","parts","split","vPos","hPos","factor","isArrayOrTypedArray","mean","xInc","yInc","anchorVals","offset","anchor","join"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,YAAzB,EAAuCC,QAAvC,EAAiD;AAC9D,MAAIC,KAAK,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAZ;AACA,MAAIC,IAAI,GAAGF,KAAK,CAAC,CAAD,CAAhB;AACA,MAAIG,IAAI,GAAGH,KAAK,CAAC,CAAD,CAAhB,CAH8D,CAK9D;;AACA,MAAII,MAAM,GAAGX,GAAG,CAACY,mBAAJ,CAAwBN,QAAxB,IAAoCN,GAAG,CAACa,IAAJ,CAASP,QAAT,CAApC,GAAyDA,QAAtE;AACA,MAAIQ,IAAI,GAAG,MAAOH,MAAM,GAAG,GAA3B;AACA,MAAII,IAAI,GAAG,MAAOJ,MAAM,GAAG,GAA3B;AAEA,MAAIK,UAAU,GAAG,CAAC,EAAD,EAAK,EAAL,CAAjB;AACA,MAAIC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAb;;AAEA,UAAOR,IAAP;AACI,SAAK,KAAL;AACIO,MAAAA,UAAU,CAAC,CAAD,CAAV,GAAgB,KAAhB;AACAC,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAACF,IAAb;AACA;;AACJ,SAAK,QAAL;AACIC,MAAAA,UAAU,CAAC,CAAD,CAAV,GAAgB,QAAhB;AACAC,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAYF,IAAZ;AACA;AARR;;AAWA,UAAOL,IAAP;AACI,SAAK,MAAL;AACIM,MAAAA,UAAU,CAAC,CAAD,CAAV,GAAgB,OAAhB;AACAC,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAACH,IAAb;AACA;;AACJ,SAAK,OAAL;AACIE,MAAAA,UAAU,CAAC,CAAD,CAAV,GAAgB,MAAhB;AACAC,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAYH,IAAZ;AACA;AARR,GAxB8D,CAmC9D;AACA;AACA;;;AAEA,MAAII,MAAJ;AACA,MAAGF,UAAU,CAAC,CAAD,CAAV,IAAiBA,UAAU,CAAC,CAAD,CAA9B,EAAmCE,MAAM,GAAGF,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAAT,CAAnC,KACK,IAAGH,UAAU,CAAC,CAAD,CAAb,EAAkBE,MAAM,GAAGF,UAAU,CAAC,CAAD,CAAnB,CAAlB,KACA,IAAGA,UAAU,CAAC,CAAD,CAAb,EAAkBE,MAAM,GAAGF,UAAU,CAAC,CAAD,CAAnB,CAAlB,KACAE,MAAM,GAAG,QAAT;AAEL,SAAO;AAAEA,IAAAA,MAAM,EAAEA,MAAV;AAAkBD,IAAAA,MAAM,EAAEA;AAA1B,GAAP;AACH,CA9CD","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\n\n/**\n * Convert plotly.js 'textposition' to mapbox-gl 'anchor' and 'offset'\n * (with the help of the icon size).\n *\n * @param {string} textpostion : plotly.js textposition value\n * @param {number} iconSize : plotly.js icon size (e.g. marker.size for traces)\n *\n * @return {object}\n *      - anchor\n *      - offset\n */\nmodule.exports = function convertTextOpts(textposition, iconSize) {\n    var parts = textposition.split(' ');\n    var vPos = parts[0];\n    var hPos = parts[1];\n\n    // ballpack values\n    var factor = Lib.isArrayOrTypedArray(iconSize) ? Lib.mean(iconSize) : iconSize;\n    var xInc = 0.5 + (factor / 100);\n    var yInc = 1.5 + (factor / 100);\n\n    var anchorVals = ['', ''];\n    var offset = [0, 0];\n\n    switch(vPos) {\n        case 'top':\n            anchorVals[0] = 'top';\n            offset[1] = -yInc;\n            break;\n        case 'bottom':\n            anchorVals[0] = 'bottom';\n            offset[1] = yInc;\n            break;\n    }\n\n    switch(hPos) {\n        case 'left':\n            anchorVals[1] = 'right';\n            offset[0] = -xInc;\n            break;\n        case 'right':\n            anchorVals[1] = 'left';\n            offset[0] = xInc;\n            break;\n    }\n\n    // Mapbox text-anchor must be one of:\n    //  center, left, right, top, bottom,\n    //  top-left, top-right, bottom-left, bottom-right\n\n    var anchor;\n    if(anchorVals[0] && anchorVals[1]) anchor = anchorVals.join('-');\n    else if(anchorVals[0]) anchor = anchorVals[0];\n    else if(anchorVals[1]) anchor = anchorVals[1];\n    else anchor = 'center';\n\n    return { anchor: anchor, offset: offset };\n};\n"]},"metadata":{},"sourceType":"script"}