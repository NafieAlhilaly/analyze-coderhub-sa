{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar colorscaleCalc = require('../../components/colorscale/calc');\n\nfunction calc(gd, trace) {\n  trace._len = Math.min(trace.u.length, trace.v.length, trace.w.length, trace.x.length, trace.y.length, trace.z.length);\n  trace._u = filter(trace.u, trace._len);\n  trace._v = filter(trace.v, trace._len);\n  trace._w = filter(trace.w, trace._len);\n  trace._x = filter(trace.x, trace._len);\n  trace._y = filter(trace.y, trace._len);\n  trace._z = filter(trace.z, trace._len);\n  var grid = processGrid(trace);\n  trace._gridFill = grid.fill;\n  trace._Xs = grid.Xs;\n  trace._Ys = grid.Ys;\n  trace._Zs = grid.Zs;\n  trace._len = grid.len;\n  var slen = 0;\n  var startx, starty, startz;\n\n  if (trace.starts) {\n    startx = filter(trace.starts.x || []);\n    starty = filter(trace.starts.y || []);\n    startz = filter(trace.starts.z || []);\n    slen = Math.min(startx.length, starty.length, startz.length);\n  }\n\n  trace._startsX = startx || [];\n  trace._startsY = starty || [];\n  trace._startsZ = startz || [];\n  var normMax = 0;\n  var normMin = Infinity;\n  var i;\n\n  for (i = 0; i < trace._len; i++) {\n    var u = trace._u[i];\n    var v = trace._v[i];\n    var w = trace._w[i];\n    var norm = Math.sqrt(u * u + v * v + w * w);\n    normMax = Math.max(normMax, norm);\n    normMin = Math.min(normMin, norm);\n  }\n\n  colorscaleCalc(gd, trace, {\n    vals: [normMin, normMax],\n    containerStr: '',\n    cLetter: 'c'\n  });\n\n  for (i = 0; i < slen; i++) {\n    var sx = startx[i];\n    grid.xMax = Math.max(grid.xMax, sx);\n    grid.xMin = Math.min(grid.xMin, sx);\n    var sy = starty[i];\n    grid.yMax = Math.max(grid.yMax, sy);\n    grid.yMin = Math.min(grid.yMin, sy);\n    var sz = startz[i];\n    grid.zMax = Math.max(grid.zMax, sz);\n    grid.zMin = Math.min(grid.zMin, sz);\n  }\n\n  trace._slen = slen;\n  trace._normMax = normMax;\n  trace._xbnds = [grid.xMin, grid.xMax];\n  trace._ybnds = [grid.yMin, grid.yMax];\n  trace._zbnds = [grid.zMin, grid.zMax];\n}\n\nfunction processGrid(trace) {\n  var x = trace._x;\n  var y = trace._y;\n  var z = trace._z;\n  var len = trace._len;\n  var i, j, k;\n  var xMax = -Infinity;\n  var xMin = Infinity;\n  var yMax = -Infinity;\n  var yMin = Infinity;\n  var zMax = -Infinity;\n  var zMin = Infinity;\n  var gridFill = '';\n  var filledX;\n  var filledY;\n  var filledZ;\n  var firstX, lastX;\n  var firstY, lastY;\n  var firstZ, lastZ;\n\n  if (len) {\n    firstX = x[0];\n    firstY = y[0];\n    firstZ = z[0];\n  }\n\n  if (len > 1) {\n    lastX = x[len - 1];\n    lastY = y[len - 1];\n    lastZ = z[len - 1];\n  }\n\n  for (i = 0; i < len; i++) {\n    xMax = Math.max(xMax, x[i]);\n    xMin = Math.min(xMin, x[i]);\n    yMax = Math.max(yMax, y[i]);\n    yMin = Math.min(yMin, y[i]);\n    zMax = Math.max(zMax, z[i]);\n    zMin = Math.min(zMin, z[i]);\n\n    if (!filledX && x[i] !== firstX) {\n      filledX = true;\n      gridFill += 'x';\n    }\n\n    if (!filledY && y[i] !== firstY) {\n      filledY = true;\n      gridFill += 'y';\n    }\n\n    if (!filledZ && z[i] !== firstZ) {\n      filledZ = true;\n      gridFill += 'z';\n    }\n  } // fill if not filled - case of having dimension(s) with one item\n\n\n  if (!filledX) gridFill += 'x';\n  if (!filledY) gridFill += 'y';\n  if (!filledZ) gridFill += 'z';\n  var Xs = distinctVals(trace._x);\n  var Ys = distinctVals(trace._y);\n  var Zs = distinctVals(trace._z);\n  gridFill = gridFill.replace('x', (firstX > lastX ? '-' : '+') + 'x');\n  gridFill = gridFill.replace('y', (firstY > lastY ? '-' : '+') + 'y');\n  gridFill = gridFill.replace('z', (firstZ > lastZ ? '-' : '+') + 'z');\n\n  var empty = function empty() {\n    len = 0;\n    Xs = [];\n    Ys = [];\n    Zs = [];\n  }; // Over-specified mesh case, this would error in tube2mesh\n\n\n  if (!len || len < Xs.length * Ys.length * Zs.length) empty();\n\n  var getArray = function getArray(c) {\n    return c === 'x' ? x : c === 'y' ? y : z;\n  };\n\n  var getVals = function getVals(c) {\n    return c === 'x' ? Xs : c === 'y' ? Ys : Zs;\n  };\n\n  var getDir = function getDir(c) {\n    return c[len - 1] < c[0] ? -1 : 1;\n  };\n\n  var arrK = getArray(gridFill[1]);\n  var arrJ = getArray(gridFill[3]);\n  var arrI = getArray(gridFill[5]);\n  var nk = getVals(gridFill[1]).length;\n  var nj = getVals(gridFill[3]).length;\n  var ni = getVals(gridFill[5]).length;\n  var arbitrary = false;\n\n  var getIndex = function getIndex(_i, _j, _k) {\n    return nk * (nj * _i + _j) + _k;\n  };\n\n  var dirK = getDir(getArray(gridFill[1]));\n  var dirJ = getDir(getArray(gridFill[3]));\n  var dirI = getDir(getArray(gridFill[5]));\n\n  for (i = 0; i < ni - 1; i++) {\n    for (j = 0; j < nj - 1; j++) {\n      for (k = 0; k < nk - 1; k++) {\n        var q000 = getIndex(i, j, k);\n        var q001 = getIndex(i, j, k + 1);\n        var q010 = getIndex(i, j + 1, k);\n        var q100 = getIndex(i + 1, j, k);\n\n        if (!(arrK[q000] * dirK < arrK[q001] * dirK) || !(arrJ[q000] * dirJ < arrJ[q010] * dirJ) || !(arrI[q000] * dirI < arrI[q100] * dirI)) {\n          arbitrary = true;\n        }\n\n        if (arbitrary) break;\n      }\n\n      if (arbitrary) break;\n    }\n\n    if (arbitrary) break;\n  }\n\n  if (arbitrary) {\n    Lib.warn('Encountered arbitrary coordinates! Unable to input data grid.');\n    empty();\n  }\n\n  return {\n    xMin: xMin,\n    yMin: yMin,\n    zMin: zMin,\n    xMax: xMax,\n    yMax: yMax,\n    zMax: zMax,\n    Xs: Xs,\n    Ys: Ys,\n    Zs: Zs,\n    len: len,\n    fill: gridFill\n  };\n}\n\nfunction distinctVals(col) {\n  return Lib.distinctVals(col).vals;\n}\n\nfunction filter(arr, len) {\n  if (len === undefined) len = arr.length; // no need for casting typed arrays to numbers\n\n  if (Lib.isTypedArray(arr)) return arr.subarray(0, len);\n  var values = [];\n\n  for (var i = 0; i < len; i++) {\n    values[i] = +arr[i];\n  }\n\n  return values;\n}\n\nmodule.exports = {\n  calc: calc,\n  filter: filter,\n  processGrid: processGrid\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/streamtube/calc.js"],"names":["Lib","require","colorscaleCalc","calc","gd","trace","_len","Math","min","u","length","v","w","x","y","z","_u","filter","_v","_w","_x","_y","_z","grid","processGrid","_gridFill","fill","_Xs","Xs","_Ys","Ys","_Zs","Zs","len","slen","startx","starty","startz","starts","_startsX","_startsY","_startsZ","normMax","normMin","Infinity","i","norm","sqrt","max","vals","containerStr","cLetter","sx","xMax","xMin","sy","yMax","yMin","sz","zMax","zMin","_slen","_normMax","_xbnds","_ybnds","_zbnds","j","k","gridFill","filledX","filledY","filledZ","firstX","lastX","firstY","lastY","firstZ","lastZ","distinctVals","replace","empty","getArray","c","getVals","getDir","arrK","arrJ","arrI","nk","nj","ni","arbitrary","getIndex","_i","_j","_k","dirK","dirJ","dirI","q000","q001","q010","q100","warn","col","arr","undefined","isTypedArray","subarray","values","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar colorscaleCalc = require('../../components/colorscale/calc');\n\nfunction calc(gd, trace) {\n    trace._len = Math.min(\n        trace.u.length,\n        trace.v.length,\n        trace.w.length,\n        trace.x.length,\n        trace.y.length,\n        trace.z.length\n    );\n\n    trace._u = filter(trace.u, trace._len);\n    trace._v = filter(trace.v, trace._len);\n    trace._w = filter(trace.w, trace._len);\n    trace._x = filter(trace.x, trace._len);\n    trace._y = filter(trace.y, trace._len);\n    trace._z = filter(trace.z, trace._len);\n\n    var grid = processGrid(trace);\n    trace._gridFill = grid.fill;\n    trace._Xs = grid.Xs;\n    trace._Ys = grid.Ys;\n    trace._Zs = grid.Zs;\n    trace._len = grid.len;\n\n    var slen = 0;\n    var startx, starty, startz;\n    if(trace.starts) {\n        startx = filter(trace.starts.x || []);\n        starty = filter(trace.starts.y || []);\n        startz = filter(trace.starts.z || []);\n        slen = Math.min(startx.length, starty.length, startz.length);\n    }\n    trace._startsX = startx || [];\n    trace._startsY = starty || [];\n    trace._startsZ = startz || [];\n\n    var normMax = 0;\n    var normMin = Infinity;\n    var i;\n    for(i = 0; i < trace._len; i++) {\n        var u = trace._u[i];\n        var v = trace._v[i];\n        var w = trace._w[i];\n        var norm = Math.sqrt(u * u + v * v + w * w);\n\n        normMax = Math.max(normMax, norm);\n        normMin = Math.min(normMin, norm);\n    }\n\n    colorscaleCalc(gd, trace, {\n        vals: [normMin, normMax],\n        containerStr: '',\n        cLetter: 'c'\n    });\n\n    for(i = 0; i < slen; i++) {\n        var sx = startx[i];\n        grid.xMax = Math.max(grid.xMax, sx);\n        grid.xMin = Math.min(grid.xMin, sx);\n\n        var sy = starty[i];\n        grid.yMax = Math.max(grid.yMax, sy);\n        grid.yMin = Math.min(grid.yMin, sy);\n\n        var sz = startz[i];\n        grid.zMax = Math.max(grid.zMax, sz);\n        grid.zMin = Math.min(grid.zMin, sz);\n    }\n\n    trace._slen = slen;\n    trace._normMax = normMax;\n    trace._xbnds = [grid.xMin, grid.xMax];\n    trace._ybnds = [grid.yMin, grid.yMax];\n    trace._zbnds = [grid.zMin, grid.zMax];\n}\n\nfunction processGrid(trace) {\n    var x = trace._x;\n    var y = trace._y;\n    var z = trace._z;\n    var len = trace._len;\n\n    var i, j, k;\n\n    var xMax = -Infinity;\n    var xMin = Infinity;\n    var yMax = -Infinity;\n    var yMin = Infinity;\n    var zMax = -Infinity;\n    var zMin = Infinity;\n\n    var gridFill = '';\n    var filledX;\n    var filledY;\n    var filledZ;\n    var firstX, lastX;\n    var firstY, lastY;\n    var firstZ, lastZ;\n    if(len) {\n        firstX = x[0];\n        firstY = y[0];\n        firstZ = z[0];\n    }\n    if(len > 1) {\n        lastX = x[len - 1];\n        lastY = y[len - 1];\n        lastZ = z[len - 1];\n    }\n\n    for(i = 0; i < len; i++) {\n        xMax = Math.max(xMax, x[i]);\n        xMin = Math.min(xMin, x[i]);\n\n        yMax = Math.max(yMax, y[i]);\n        yMin = Math.min(yMin, y[i]);\n\n        zMax = Math.max(zMax, z[i]);\n        zMin = Math.min(zMin, z[i]);\n\n        if(!filledX && x[i] !== firstX) {\n            filledX = true;\n            gridFill += 'x';\n        }\n        if(!filledY && y[i] !== firstY) {\n            filledY = true;\n            gridFill += 'y';\n        }\n        if(!filledZ && z[i] !== firstZ) {\n            filledZ = true;\n            gridFill += 'z';\n        }\n    }\n    // fill if not filled - case of having dimension(s) with one item\n    if(!filledX) gridFill += 'x';\n    if(!filledY) gridFill += 'y';\n    if(!filledZ) gridFill += 'z';\n\n    var Xs = distinctVals(trace._x);\n    var Ys = distinctVals(trace._y);\n    var Zs = distinctVals(trace._z);\n\n    gridFill = gridFill.replace('x', (firstX > lastX ? '-' : '+') + 'x');\n    gridFill = gridFill.replace('y', (firstY > lastY ? '-' : '+') + 'y');\n    gridFill = gridFill.replace('z', (firstZ > lastZ ? '-' : '+') + 'z');\n\n    var empty = function() {\n        len = 0;\n        Xs = [];\n        Ys = [];\n        Zs = [];\n    };\n\n    // Over-specified mesh case, this would error in tube2mesh\n    if(!len || len < Xs.length * Ys.length * Zs.length) empty();\n\n    var getArray = function(c) { return c === 'x' ? x : c === 'y' ? y : z; };\n    var getVals = function(c) { return c === 'x' ? Xs : c === 'y' ? Ys : Zs; };\n    var getDir = function(c) { return c[len - 1] < c[0] ? -1 : 1; };\n\n    var arrK = getArray(gridFill[1]);\n    var arrJ = getArray(gridFill[3]);\n    var arrI = getArray(gridFill[5]);\n    var nk = getVals(gridFill[1]).length;\n    var nj = getVals(gridFill[3]).length;\n    var ni = getVals(gridFill[5]).length;\n\n    var arbitrary = false;\n\n    var getIndex = function(_i, _j, _k) {\n        return nk * (nj * _i + _j) + _k;\n    };\n\n    var dirK = getDir(getArray(gridFill[1]));\n    var dirJ = getDir(getArray(gridFill[3]));\n    var dirI = getDir(getArray(gridFill[5]));\n\n    for(i = 0; i < ni - 1; i++) {\n        for(j = 0; j < nj - 1; j++) {\n            for(k = 0; k < nk - 1; k++) {\n                var q000 = getIndex(i, j, k);\n                var q001 = getIndex(i, j, k + 1);\n                var q010 = getIndex(i, j + 1, k);\n                var q100 = getIndex(i + 1, j, k);\n\n                if(\n                    !(arrK[q000] * dirK < arrK[q001] * dirK) ||\n                    !(arrJ[q000] * dirJ < arrJ[q010] * dirJ) ||\n                    !(arrI[q000] * dirI < arrI[q100] * dirI)\n                ) {\n                    arbitrary = true;\n                }\n\n                if(arbitrary) break;\n            }\n            if(arbitrary) break;\n        }\n        if(arbitrary) break;\n    }\n\n    if(arbitrary) {\n        Lib.warn('Encountered arbitrary coordinates! Unable to input data grid.');\n        empty();\n    }\n\n    return {\n        xMin: xMin,\n        yMin: yMin,\n        zMin: zMin,\n        xMax: xMax,\n        yMax: yMax,\n        zMax: zMax,\n        Xs: Xs,\n        Ys: Ys,\n        Zs: Zs,\n        len: len,\n        fill: gridFill\n    };\n}\n\nfunction distinctVals(col) {\n    return Lib.distinctVals(col).vals;\n}\n\nfunction filter(arr, len) {\n    if(len === undefined) len = arr.length;\n\n    // no need for casting typed arrays to numbers\n    if(Lib.isTypedArray(arr)) return arr.subarray(0, len);\n\n    var values = [];\n    for(var i = 0; i < len; i++) {\n        values[i] = +arr[i];\n    }\n    return values;\n}\n\nmodule.exports = {\n    calc: calc,\n    filter: filter,\n    processGrid: processGrid\n};\n"]},"metadata":{},"sourceType":"script"}