{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\n\nvar Color = require('../../components/color');\n\nvar Colorscale = require('../../components/colorscale');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar makeBlank = require('../../lib/geojson_utils').makeBlank;\n\nmodule.exports = function convert(calcTrace) {\n  var trace = calcTrace[0].trace;\n  var isVisible = trace.visible === true && trace._length !== 0;\n  var heatmap = {\n    layout: {\n      visibility: 'none'\n    },\n    paint: {}\n  };\n  var opts = trace._opts = {\n    heatmap: heatmap,\n    geojson: makeBlank()\n  }; // early return if not visible or placeholder\n\n  if (!isVisible) return opts;\n  var features = [];\n  var i;\n  var z = trace.z;\n  var radius = trace.radius;\n  var hasZ = Lib.isArrayOrTypedArray(z) && z.length;\n  var hasArrayRadius = Lib.isArrayOrTypedArray(radius);\n\n  for (i = 0; i < calcTrace.length; i++) {\n    var cdi = calcTrace[i];\n    var lonlat = cdi.lonlat;\n\n    if (lonlat[0] !== BADNUM) {\n      var props = {};\n\n      if (hasZ) {\n        var zi = cdi.z;\n        props.z = zi !== BADNUM ? zi : 0;\n      }\n\n      if (hasArrayRadius) {\n        props.r = isNumeric(radius[i]) && radius[i] > 0 ? +radius[i] : 0;\n      }\n\n      features.push({\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: lonlat\n        },\n        properties: props\n      });\n    }\n  }\n\n  var cOpts = Colorscale.extractOpts(trace);\n  var scl = cOpts.reversescale ? Colorscale.flipScale(cOpts.colorscale) : cOpts.colorscale; // Add alpha channel to first colorscale step.\n  // If not, we would essentially color the entire map.\n  // See https://docs.mapbox.com/mapbox-gl-js/example/heatmap-layer/\n\n  var scl01 = scl[0][1];\n  var color0 = Color.opacity(scl01) < 1 ? scl01 : Color.addOpacity(scl01, 0);\n  var heatmapColor = ['interpolate', ['linear'], ['heatmap-density'], 0, color0];\n\n  for (i = 1; i < scl.length; i++) {\n    heatmapColor.push(scl[i][0], scl[i][1]);\n  } // Those \"weights\" have to be in [0, 1], we can do this either:\n  // - as here using a mapbox-gl expression\n  // - or, scale the 'z' property in the feature loop\n\n\n  var zExp = ['interpolate', ['linear'], ['get', 'z'], cOpts.min, 0, cOpts.max, 1];\n  Lib.extendFlat(opts.heatmap.paint, {\n    'heatmap-weight': hasZ ? zExp : 1 / (cOpts.max - cOpts.min),\n    'heatmap-color': heatmapColor,\n    'heatmap-radius': hasArrayRadius ? {\n      type: 'identity',\n      property: 'r'\n    } : trace.radius,\n    'heatmap-opacity': trace.opacity\n  });\n  opts.geojson = {\n    type: 'FeatureCollection',\n    features: features\n  };\n  opts.heatmap.layout.visibility = 'visible';\n  return opts;\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/densitymapbox/convert.js"],"names":["isNumeric","require","Lib","Color","Colorscale","BADNUM","makeBlank","module","exports","convert","calcTrace","trace","isVisible","visible","_length","heatmap","layout","visibility","paint","opts","_opts","geojson","features","i","z","radius","hasZ","isArrayOrTypedArray","length","hasArrayRadius","cdi","lonlat","props","zi","r","push","type","geometry","coordinates","properties","cOpts","extractOpts","scl","reversescale","flipScale","colorscale","scl01","color0","opacity","addOpacity","heatmapColor","zExp","min","max","extendFlat","property"],"mappings":"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","sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar Colorscale = require('../../components/colorscale');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar makeBlank = require('../../lib/geojson_utils').makeBlank;\n\nmodule.exports = function convert(calcTrace) {\n    var trace = calcTrace[0].trace;\n    var isVisible = (trace.visible === true && trace._length !== 0);\n\n    var heatmap = {\n        layout: {visibility: 'none'},\n        paint: {}\n    };\n\n    var opts = trace._opts = {\n        heatmap: heatmap,\n        geojson: makeBlank()\n    };\n\n    // early return if not visible or placeholder\n    if(!isVisible) return opts;\n\n    var features = [];\n    var i;\n\n    var z = trace.z;\n    var radius = trace.radius;\n    var hasZ = Lib.isArrayOrTypedArray(z) && z.length;\n    var hasArrayRadius = Lib.isArrayOrTypedArray(radius);\n\n    for(i = 0; i < calcTrace.length; i++) {\n        var cdi = calcTrace[i];\n        var lonlat = cdi.lonlat;\n\n        if(lonlat[0] !== BADNUM) {\n            var props = {};\n\n            if(hasZ) {\n                var zi = cdi.z;\n                props.z = zi !== BADNUM ? zi : 0;\n            }\n            if(hasArrayRadius) {\n                props.r = (isNumeric(radius[i]) && radius[i] > 0) ? +radius[i] : 0;\n            }\n\n            features.push({\n                type: 'Feature',\n                geometry: {type: 'Point', coordinates: lonlat},\n                properties: props\n            });\n        }\n    }\n\n    var cOpts = Colorscale.extractOpts(trace);\n    var scl = cOpts.reversescale ?\n        Colorscale.flipScale(cOpts.colorscale) :\n        cOpts.colorscale;\n\n    // Add alpha channel to first colorscale step.\n    // If not, we would essentially color the entire map.\n    // See https://docs.mapbox.com/mapbox-gl-js/example/heatmap-layer/\n    var scl01 = scl[0][1];\n    var color0 = Color.opacity(scl01) < 1 ? scl01 : Color.addOpacity(scl01, 0);\n\n    var heatmapColor = [\n        'interpolate', ['linear'],\n        ['heatmap-density'],\n        0, color0\n    ];\n    for(i = 1; i < scl.length; i++) {\n        heatmapColor.push(scl[i][0], scl[i][1]);\n    }\n\n    // Those \"weights\" have to be in [0, 1], we can do this either:\n    // - as here using a mapbox-gl expression\n    // - or, scale the 'z' property in the feature loop\n    var zExp = [\n        'interpolate', ['linear'],\n        ['get', 'z'],\n        cOpts.min, 0,\n        cOpts.max, 1\n    ];\n\n    Lib.extendFlat(opts.heatmap.paint, {\n        'heatmap-weight': hasZ ? zExp : 1 / (cOpts.max - cOpts.min),\n\n        'heatmap-color': heatmapColor,\n\n        'heatmap-radius': hasArrayRadius ?\n            {type: 'identity', property: 'r'} :\n            trace.radius,\n\n        'heatmap-opacity': trace.opacity\n    });\n\n    opts.geojson = {type: 'FeatureCollection', features: features};\n    opts.heatmap.layout.visibility = 'visible';\n\n    return opts;\n};\n"]},"metadata":{},"sourceType":"script"}