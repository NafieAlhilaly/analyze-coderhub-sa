{"ast":null,"code":"'use strict';\n\nmodule.exports = function makePath(xp, yp, isBicubic) {\n  // Prevent d3 errors that would result otherwise:\n  if (xp.length === 0) return '';\n  var i;\n  var path = [];\n  var stride = isBicubic ? 3 : 1;\n\n  for (i = 0; i < xp.length; i += stride) {\n    path.push(xp[i] + ',' + yp[i]);\n\n    if (isBicubic && i < xp.length - stride) {\n      path.push('C');\n      path.push([xp[i + 1] + ',' + yp[i + 1], xp[i + 2] + ',' + yp[i + 2] + ' '].join(' '));\n    }\n  }\n\n  return path.join(isBicubic ? '' : 'L');\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/carpet/makepath.js"],"names":["module","exports","makePath","xp","yp","isBicubic","length","i","path","stride","push","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,SAA1B,EAAqC;AAClD;AACA,MAAGF,EAAE,CAACG,MAAH,KAAc,CAAjB,EAAoB,OAAO,EAAP;AAEpB,MAAIC,CAAJ;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,MAAM,GAAGJ,SAAS,GAAG,CAAH,GAAO,CAA7B;;AACA,OAAIE,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGJ,EAAE,CAACG,MAAlB,EAA0BC,CAAC,IAAIE,MAA/B,EAAuC;AACnCD,IAAAA,IAAI,CAACE,IAAL,CAAUP,EAAE,CAACI,CAAD,CAAF,GAAQ,GAAR,GAAcH,EAAE,CAACG,CAAD,CAA1B;;AAEA,QAAGF,SAAS,IAAIE,CAAC,GAAGJ,EAAE,CAACG,MAAH,GAAYG,MAAhC,EAAwC;AACpCD,MAAAA,IAAI,CAACE,IAAL,CAAU,GAAV;AACAF,MAAAA,IAAI,CAACE,IAAL,CAAU,CACNP,EAAE,CAACI,CAAC,GAAG,CAAL,CAAF,GAAY,GAAZ,GAAkBH,EAAE,CAACG,CAAC,GAAG,CAAL,CADd,EAENJ,EAAE,CAACI,CAAC,GAAG,CAAL,CAAF,GAAY,GAAZ,GAAkBH,EAAE,CAACG,CAAC,GAAG,CAAL,CAApB,GAA8B,GAFxB,EAGRI,IAHQ,CAGH,GAHG,CAAV;AAIH;AACJ;;AACD,SAAOH,IAAI,CAACG,IAAL,CAAUN,SAAS,GAAG,EAAH,GAAQ,GAA3B,CAAP;AACH,CAnBD","sourcesContent":["'use strict';\n\nmodule.exports = function makePath(xp, yp, isBicubic) {\n    // Prevent d3 errors that would result otherwise:\n    if(xp.length === 0) return '';\n\n    var i;\n    var path = [];\n    var stride = isBicubic ? 3 : 1;\n    for(i = 0; i < xp.length; i += stride) {\n        path.push(xp[i] + ',' + yp[i]);\n\n        if(isBicubic && i < xp.length - stride) {\n            path.push('C');\n            path.push([\n                xp[i + 1] + ',' + yp[i + 1],\n                xp[i + 2] + ',' + yp[i + 2] + ' ',\n            ].join(' '));\n        }\n    }\n    return path.join(isBicubic ? '' : 'L');\n};\n"]},"metadata":{},"sourceType":"script"}