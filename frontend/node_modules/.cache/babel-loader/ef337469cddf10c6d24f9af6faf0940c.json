{"ast":null,"code":"'use strict';\n\nvar toPX = require('to-px');\n\nmodule.exports = mouseWheelListen;\n\nfunction mouseWheelListen(element, callback, noScroll) {\n  if (typeof element === 'function') {\n    noScroll = !!callback;\n    callback = element;\n    element = window;\n  }\n\n  var lineHeight = toPX('ex', element);\n\n  var listener = function (ev) {\n    if (noScroll) {\n      ev.preventDefault();\n    }\n\n    var dx = ev.deltaX || 0;\n    var dy = ev.deltaY || 0;\n    var dz = ev.deltaZ || 0;\n    var mode = ev.deltaMode;\n    var scale = 1;\n\n    switch (mode) {\n      case 1:\n        scale = lineHeight;\n        break;\n\n      case 2:\n        scale = window.innerHeight;\n        break;\n    }\n\n    dx *= scale;\n    dy *= scale;\n    dz *= scale;\n\n    if (dx || dy || dz) {\n      return callback(dx, dy, dz, ev);\n    }\n  };\n\n  element.addEventListener('wheel', listener);\n  return listener;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/mouse-wheel/wheel.js"],"names":["toPX","require","module","exports","mouseWheelListen","element","callback","noScroll","window","lineHeight","listener","ev","preventDefault","dx","deltaX","dy","deltaY","dz","deltaZ","mode","deltaMode","scale","innerHeight","addEventListener"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,OAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,gBAAjB;;AAEA,SAASA,gBAAT,CAA0BC,OAA1B,EAAmCC,QAAnC,EAA6CC,QAA7C,EAAuD;AACrD,MAAG,OAAOF,OAAP,KAAmB,UAAtB,EAAkC;AAChCE,IAAAA,QAAQ,GAAG,CAAC,CAACD,QAAb;AACAA,IAAAA,QAAQ,GAAGD,OAAX;AACAA,IAAAA,OAAO,GAAGG,MAAV;AACD;;AACD,MAAIC,UAAU,GAAGT,IAAI,CAAC,IAAD,EAAOK,OAAP,CAArB;;AACA,MAAIK,QAAQ,GAAG,UAASC,EAAT,EAAa;AAC1B,QAAGJ,QAAH,EAAa;AACXI,MAAAA,EAAE,CAACC,cAAH;AACD;;AACD,QAAIC,EAAE,GAAGF,EAAE,CAACG,MAAH,IAAa,CAAtB;AACA,QAAIC,EAAE,GAAGJ,EAAE,CAACK,MAAH,IAAa,CAAtB;AACA,QAAIC,EAAE,GAAGN,EAAE,CAACO,MAAH,IAAa,CAAtB;AACA,QAAIC,IAAI,GAAGR,EAAE,CAACS,SAAd;AACA,QAAIC,KAAK,GAAG,CAAZ;;AACA,YAAOF,IAAP;AACE,WAAK,CAAL;AACEE,QAAAA,KAAK,GAAGZ,UAAR;AACF;;AACA,WAAK,CAAL;AACEY,QAAAA,KAAK,GAAGb,MAAM,CAACc,WAAf;AACF;AANF;;AAQAT,IAAAA,EAAE,IAAIQ,KAAN;AACAN,IAAAA,EAAE,IAAIM,KAAN;AACAJ,IAAAA,EAAE,IAAII,KAAN;;AACA,QAAGR,EAAE,IAAIE,EAAN,IAAYE,EAAf,EAAmB;AACjB,aAAOX,QAAQ,CAACO,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaN,EAAb,CAAf;AACD;AACF,GAvBD;;AAwBAN,EAAAA,OAAO,CAACkB,gBAAR,CAAyB,OAAzB,EAAkCb,QAAlC;AACA,SAAOA,QAAP;AACD","sourcesContent":["'use strict'\n\nvar toPX = require('to-px')\n\nmodule.exports = mouseWheelListen\n\nfunction mouseWheelListen(element, callback, noScroll) {\n  if(typeof element === 'function') {\n    noScroll = !!callback\n    callback = element\n    element = window\n  }\n  var lineHeight = toPX('ex', element)\n  var listener = function(ev) {\n    if(noScroll) {\n      ev.preventDefault()\n    }\n    var dx = ev.deltaX || 0\n    var dy = ev.deltaY || 0\n    var dz = ev.deltaZ || 0\n    var mode = ev.deltaMode\n    var scale = 1\n    switch(mode) {\n      case 1:\n        scale = lineHeight\n      break\n      case 2:\n        scale = window.innerHeight\n      break\n    }\n    dx *= scale\n    dy *= scale\n    dz *= scale\n    if(dx || dy || dz) {\n      return callback(dx, dy, dz, ev)\n    }\n  }\n  element.addEventListener('wheel', listener)\n  return listener\n}\n"]},"metadata":{},"sourceType":"script"}