{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Template = require('../../plot_api/plot_template');\n\nvar colorScaleAttrs = require('./layout_attributes');\n\nvar colorScaleDefaults = require('./defaults');\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(layoutIn, layoutOut, colorScaleAttrs, attr, dflt);\n  }\n\n  coerce('colorscale.sequential');\n  coerce('colorscale.sequentialminus');\n  coerce('colorscale.diverging');\n  var colorAxes = layoutOut._colorAxes;\n  var colorAxIn, colorAxOut;\n\n  function coerceAx(attr, dflt) {\n    return Lib.coerce(colorAxIn, colorAxOut, colorScaleAttrs.coloraxis, attr, dflt);\n  }\n\n  for (var k in colorAxes) {\n    var stash = colorAxes[k];\n\n    if (stash[0]) {\n      colorAxIn = layoutIn[k] || {};\n      colorAxOut = Template.newContainer(layoutOut, k, 'coloraxis');\n      colorAxOut._name = k;\n      colorScaleDefaults(colorAxIn, colorAxOut, layoutOut, coerceAx, {\n        prefix: '',\n        cLetter: 'c'\n      });\n    } else {\n      // re-coerce colorscale attributes w/o coloraxis\n      for (var i = 0; i < stash[2].length; i++) {\n        stash[2][i]();\n      }\n\n      delete layoutOut._colorAxes[k];\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/colorscale/layout_defaults.js"],"names":["Lib","require","Template","colorScaleAttrs","colorScaleDefaults","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","coerce","attr","dflt","colorAxes","_colorAxes","colorAxIn","colorAxOut","coerceAx","coloraxis","k","stash","newContainer","_name","prefix","cLetter","i","length"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,8BAAD,CAAtB;;AAEA,IAAIE,eAAe,GAAGF,OAAO,CAAC,qBAAD,CAA7B;;AACA,IAAIG,kBAAkB,GAAGH,OAAO,CAAC,YAAD,CAAhC;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,QAA9B,EAAwCC,SAAxC,EAAmD;AAChE,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACxB,WAAOZ,GAAG,CAACU,MAAJ,CAAWF,QAAX,EAAqBC,SAArB,EAAgCN,eAAhC,EAAiDQ,IAAjD,EAAuDC,IAAvD,CAAP;AACH;;AAEDF,EAAAA,MAAM,CAAC,uBAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,4BAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,sBAAD,CAAN;AAEA,MAAIG,SAAS,GAAGJ,SAAS,CAACK,UAA1B;AACA,MAAIC,SAAJ,EAAeC,UAAf;;AAEA,WAASC,QAAT,CAAkBN,IAAlB,EAAwBC,IAAxB,EAA8B;AAC1B,WAAOZ,GAAG,CAACU,MAAJ,CAAWK,SAAX,EAAsBC,UAAtB,EAAkCb,eAAe,CAACe,SAAlD,EAA6DP,IAA7D,EAAmEC,IAAnE,CAAP;AACH;;AAED,OAAI,IAAIO,CAAR,IAAaN,SAAb,EAAwB;AACpB,QAAIO,KAAK,GAAGP,SAAS,CAACM,CAAD,CAArB;;AAEA,QAAGC,KAAK,CAAC,CAAD,CAAR,EAAa;AACTL,MAAAA,SAAS,GAAGP,QAAQ,CAACW,CAAD,CAAR,IAAe,EAA3B;AACAH,MAAAA,UAAU,GAAGd,QAAQ,CAACmB,YAAT,CAAsBZ,SAAtB,EAAiCU,CAAjC,EAAoC,WAApC,CAAb;AACAH,MAAAA,UAAU,CAACM,KAAX,GAAmBH,CAAnB;AACAf,MAAAA,kBAAkB,CAACW,SAAD,EAAYC,UAAZ,EAAwBP,SAAxB,EAAmCQ,QAAnC,EAA6C;AAACM,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,OAAO,EAAE;AAAtB,OAA7C,CAAlB;AACH,KALD,MAKO;AACH;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,KAAK,CAAC,CAAD,CAAL,CAASM,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCL,QAAAA,KAAK,CAAC,CAAD,CAAL,CAASK,CAAT;AACH;;AACD,aAAOhB,SAAS,CAACK,UAAV,CAAqBK,CAArB,CAAP;AACH;AACJ;AACJ,CAhCD","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Template = require('../../plot_api/plot_template');\n\nvar colorScaleAttrs = require('./layout_attributes');\nvar colorScaleDefaults = require('./defaults');\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(layoutIn, layoutOut, colorScaleAttrs, attr, dflt);\n    }\n\n    coerce('colorscale.sequential');\n    coerce('colorscale.sequentialminus');\n    coerce('colorscale.diverging');\n\n    var colorAxes = layoutOut._colorAxes;\n    var colorAxIn, colorAxOut;\n\n    function coerceAx(attr, dflt) {\n        return Lib.coerce(colorAxIn, colorAxOut, colorScaleAttrs.coloraxis, attr, dflt);\n    }\n\n    for(var k in colorAxes) {\n        var stash = colorAxes[k];\n\n        if(stash[0]) {\n            colorAxIn = layoutIn[k] || {};\n            colorAxOut = Template.newContainer(layoutOut, k, 'coloraxis');\n            colorAxOut._name = k;\n            colorScaleDefaults(colorAxIn, colorAxOut, layoutOut, coerceAx, {prefix: '', cLetter: 'c'});\n        } else {\n            // re-coerce colorscale attributes w/o coloraxis\n            for(var i = 0; i < stash[2].length; i++) {\n                stash[2][i]();\n            }\n            delete layoutOut._colorAxes[k];\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}