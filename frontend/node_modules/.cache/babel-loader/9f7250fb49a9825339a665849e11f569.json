{"ast":null,"code":"'use strict';\n\nmodule.exports = function orientText(trace, xaxis, yaxis, xy, dxy, refDxy) {\n  var dx = dxy[0] * trace.dpdx(xaxis);\n  var dy = dxy[1] * trace.dpdy(yaxis);\n  var flip = 1;\n  var offsetMultiplier = 1.0;\n\n  if (refDxy) {\n    var l1 = Math.sqrt(dxy[0] * dxy[0] + dxy[1] * dxy[1]);\n    var l2 = Math.sqrt(refDxy[0] * refDxy[0] + refDxy[1] * refDxy[1]);\n    var dot = (dxy[0] * refDxy[0] + dxy[1] * refDxy[1]) / l1 / l2;\n    offsetMultiplier = Math.max(0.0, dot);\n  }\n\n  var angle = Math.atan2(dy, dx) * 180 / Math.PI;\n\n  if (angle < -90) {\n    angle += 180;\n    flip = -flip;\n  } else if (angle > 90) {\n    angle -= 180;\n    flip = -flip;\n  }\n\n  return {\n    angle: angle,\n    flip: flip,\n    p: trace.c2p(xy, xaxis, yaxis),\n    offsetMultplier: offsetMultiplier\n  };\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/carpet/orient_text.js"],"names":["module","exports","orientText","trace","xaxis","yaxis","xy","dxy","refDxy","dx","dpdx","dy","dpdy","flip","offsetMultiplier","l1","Math","sqrt","l2","dot","max","angle","atan2","PI","p","c2p","offsetMultplier"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,EAAzC,EAA6CC,GAA7C,EAAkDC,MAAlD,EAA0D;AACvE,MAAIC,EAAE,GAAGF,GAAG,CAAC,CAAD,CAAH,GAASJ,KAAK,CAACO,IAAN,CAAWN,KAAX,CAAlB;AACA,MAAIO,EAAE,GAAGJ,GAAG,CAAC,CAAD,CAAH,GAASJ,KAAK,CAACS,IAAN,CAAWP,KAAX,CAAlB;AACA,MAAIQ,IAAI,GAAG,CAAX;AAEA,MAAIC,gBAAgB,GAAG,GAAvB;;AACA,MAAGN,MAAH,EAAW;AACP,QAAIO,EAAE,GAAGC,IAAI,CAACC,IAAL,CAAUV,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAxC,CAAT;AACA,QAAIW,EAAE,GAAGF,IAAI,CAACC,IAAL,CAAUT,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAlB,GAAwBA,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAApD,CAAT;AACA,QAAIW,GAAG,GAAG,CAACZ,GAAG,CAAC,CAAD,CAAH,GAASC,MAAM,CAAC,CAAD,CAAf,GAAqBD,GAAG,CAAC,CAAD,CAAH,GAASC,MAAM,CAAC,CAAD,CAArC,IAA4CO,EAA5C,GAAiDG,EAA3D;AACAJ,IAAAA,gBAAgB,GAAGE,IAAI,CAACI,GAAL,CAAS,GAAT,EAAcD,GAAd,CAAnB;AACH;;AAED,MAAIE,KAAK,GAAGL,IAAI,CAACM,KAAL,CAAWX,EAAX,EAAeF,EAAf,IAAqB,GAArB,GAA2BO,IAAI,CAACO,EAA5C;;AACA,MAAGF,KAAK,GAAG,CAAC,EAAZ,EAAgB;AACZA,IAAAA,KAAK,IAAI,GAAT;AACAR,IAAAA,IAAI,GAAG,CAACA,IAAR;AACH,GAHD,MAGO,IAAGQ,KAAK,GAAG,EAAX,EAAe;AAClBA,IAAAA,KAAK,IAAI,GAAT;AACAR,IAAAA,IAAI,GAAG,CAACA,IAAR;AACH;;AAED,SAAO;AACHQ,IAAAA,KAAK,EAAEA,KADJ;AAEHR,IAAAA,IAAI,EAAEA,IAFH;AAGHW,IAAAA,CAAC,EAAErB,KAAK,CAACsB,GAAN,CAAUnB,EAAV,EAAcF,KAAd,EAAqBC,KAArB,CAHA;AAIHqB,IAAAA,eAAe,EAAEZ;AAJd,GAAP;AAMH,CA5BD","sourcesContent":["'use strict';\n\nmodule.exports = function orientText(trace, xaxis, yaxis, xy, dxy, refDxy) {\n    var dx = dxy[0] * trace.dpdx(xaxis);\n    var dy = dxy[1] * trace.dpdy(yaxis);\n    var flip = 1;\n\n    var offsetMultiplier = 1.0;\n    if(refDxy) {\n        var l1 = Math.sqrt(dxy[0] * dxy[0] + dxy[1] * dxy[1]);\n        var l2 = Math.sqrt(refDxy[0] * refDxy[0] + refDxy[1] * refDxy[1]);\n        var dot = (dxy[0] * refDxy[0] + dxy[1] * refDxy[1]) / l1 / l2;\n        offsetMultiplier = Math.max(0.0, dot);\n    }\n\n    var angle = Math.atan2(dy, dx) * 180 / Math.PI;\n    if(angle < -90) {\n        angle += 180;\n        flip = -flip;\n    } else if(angle > 90) {\n        angle -= 180;\n        flip = -flip;\n    }\n\n    return {\n        angle: angle,\n        flip: flip,\n        p: trace.c2p(xy, xaxis, yaxis),\n        offsetMultplier: offsetMultiplier\n    };\n};\n"]},"metadata":{},"sourceType":"script"}