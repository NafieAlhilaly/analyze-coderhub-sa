{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\n\nvar name = 'images';\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n  var opts = {\n    name: name,\n    handleItemDefaults: imageDefaults\n  };\n  handleArrayContainerDefaults(layoutIn, layoutOut, opts);\n};\n\nfunction imageDefaults(imageIn, imageOut, fullLayout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(imageIn, imageOut, attributes, attr, dflt);\n  }\n\n  var source = coerce('source');\n  var visible = coerce('visible', !!source);\n  if (!visible) return imageOut;\n  coerce('layer');\n  coerce('xanchor');\n  coerce('yanchor');\n  coerce('sizex');\n  coerce('sizey');\n  coerce('sizing');\n  coerce('opacity');\n  var gdMock = {\n    _fullLayout: fullLayout\n  };\n  var axLetters = ['x', 'y'];\n\n  for (var i = 0; i < 2; i++) {\n    // 'paper' is the fallback axref\n    var axLetter = axLetters[i];\n    var axRef = Axes.coerceRef(imageIn, imageOut, gdMock, axLetter, 'paper', undefined);\n\n    if (axRef !== 'paper') {\n      var ax = Axes.getFromId(gdMock, axRef);\n\n      ax._imgIndices.push(imageOut._index);\n    }\n\n    Axes.coercePosition(imageOut, gdMock, coerce, axRef, axLetter, 0);\n  }\n\n  return imageOut;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/images/defaults.js"],"names":["Lib","require","Axes","handleArrayContainerDefaults","attributes","name","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","opts","handleItemDefaults","imageDefaults","imageIn","imageOut","fullLayout","coerce","attr","dflt","source","visible","gdMock","_fullLayout","axLetters","i","axLetter","axRef","coerceRef","undefined","ax","getFromId","_imgIndices","push","_index","coercePosition"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,4BAA4B,GAAGF,OAAO,CAAC,sCAAD,CAA1C;;AAEA,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAII,IAAI,GAAG,QAAX;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,QAA9B,EAAwCC,SAAxC,EAAmD;AAChE,MAAIC,IAAI,GAAG;AACPN,IAAAA,IAAI,EAAEA,IADC;AAEPO,IAAAA,kBAAkB,EAAEC;AAFb,GAAX;AAKAV,EAAAA,4BAA4B,CAACM,QAAD,EAAWC,SAAX,EAAsBC,IAAtB,CAA5B;AACH,CAPD;;AAUA,SAASE,aAAT,CAAuBC,OAAvB,EAAgCC,QAAhC,EAA0CC,UAA1C,EAAsD;AAClD,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACxB,WAAOnB,GAAG,CAACiB,MAAJ,CAAWH,OAAX,EAAoBC,QAApB,EAA8BX,UAA9B,EAA0Cc,IAA1C,EAAgDC,IAAhD,CAAP;AACH;;AAED,MAAIC,MAAM,GAAGH,MAAM,CAAC,QAAD,CAAnB;AACA,MAAII,OAAO,GAAGJ,MAAM,CAAC,SAAD,EAAY,CAAC,CAACG,MAAd,CAApB;AAEA,MAAG,CAACC,OAAJ,EAAa,OAAON,QAAP;AAEbE,EAAAA,MAAM,CAAC,OAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,SAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,SAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,OAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,OAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,QAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,SAAD,CAAN;AAEA,MAAIK,MAAM,GAAG;AAAEC,IAAAA,WAAW,EAAEP;AAAf,GAAb;AACA,MAAIQ,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,CAAhB;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACvB;AACA,QAAIC,QAAQ,GAAGF,SAAS,CAACC,CAAD,CAAxB;AACA,QAAIE,KAAK,GAAGzB,IAAI,CAAC0B,SAAL,CAAed,OAAf,EAAwBC,QAAxB,EAAkCO,MAAlC,EAA0CI,QAA1C,EAAoD,OAApD,EAA6DG,SAA7D,CAAZ;;AAEA,QAAGF,KAAK,KAAK,OAAb,EAAsB;AAClB,UAAIG,EAAE,GAAG5B,IAAI,CAAC6B,SAAL,CAAeT,MAAf,EAAuBK,KAAvB,CAAT;;AACAG,MAAAA,EAAE,CAACE,WAAH,CAAeC,IAAf,CAAoBlB,QAAQ,CAACmB,MAA7B;AACH;;AAEDhC,IAAAA,IAAI,CAACiC,cAAL,CAAoBpB,QAApB,EAA8BO,MAA9B,EAAsCL,MAAtC,EAA8CU,KAA9C,EAAqDD,QAArD,EAA+D,CAA/D;AACH;;AAED,SAAOX,QAAP;AACH","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\nvar name = 'images';\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n    var opts = {\n        name: name,\n        handleItemDefaults: imageDefaults\n    };\n\n    handleArrayContainerDefaults(layoutIn, layoutOut, opts);\n};\n\n\nfunction imageDefaults(imageIn, imageOut, fullLayout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(imageIn, imageOut, attributes, attr, dflt);\n    }\n\n    var source = coerce('source');\n    var visible = coerce('visible', !!source);\n\n    if(!visible) return imageOut;\n\n    coerce('layer');\n    coerce('xanchor');\n    coerce('yanchor');\n    coerce('sizex');\n    coerce('sizey');\n    coerce('sizing');\n    coerce('opacity');\n\n    var gdMock = { _fullLayout: fullLayout };\n    var axLetters = ['x', 'y'];\n\n    for(var i = 0; i < 2; i++) {\n        // 'paper' is the fallback axref\n        var axLetter = axLetters[i];\n        var axRef = Axes.coerceRef(imageIn, imageOut, gdMock, axLetter, 'paper', undefined);\n\n        if(axRef !== 'paper') {\n            var ax = Axes.getFromId(gdMock, axRef);\n            ax._imgIndices.push(imageOut._index);\n        }\n\n        Axes.coercePosition(imageOut, gdMock, coerce, axRef, axLetter, 0);\n    }\n\n    return imageOut;\n}\n"]},"metadata":{},"sourceType":"script"}