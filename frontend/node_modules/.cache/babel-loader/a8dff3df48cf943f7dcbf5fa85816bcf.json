{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Color = require('../../components/color');\n\nvar DESELECTDIM = require('../../constants/interactions').DESELECTDIM;\n\nfunction styleTextSelection(cd) {\n  var cd0 = cd[0];\n  var trace = cd0.trace;\n  var stash = cd0.t;\n  var scene = stash._scene;\n  var index = stash.index;\n  var els = scene.selectBatch[index];\n  var unels = scene.unselectBatch[index];\n  var baseOpts = scene.textOptions[index];\n  var selOpts = scene.textSelectedOptions[index] || {};\n  var unselOpts = scene.textUnselectedOptions[index] || {};\n  var opts = Lib.extendFlat({}, baseOpts);\n  var i, j;\n\n  if (els.length || unels.length) {\n    var stc = selOpts.color;\n    var utc = unselOpts.color;\n    var base = baseOpts.color;\n    var hasArrayBase = Array.isArray(base);\n    opts.color = new Array(trace._length);\n\n    for (i = 0; i < els.length; i++) {\n      j = els[i];\n      opts.color[j] = stc || (hasArrayBase ? base[j] : base);\n    }\n\n    for (i = 0; i < unels.length; i++) {\n      j = unels[i];\n      var basej = hasArrayBase ? base[j] : base;\n      opts.color[j] = utc ? utc : stc ? basej : Color.addOpacity(basej, DESELECTDIM);\n    }\n  }\n\n  scene.glText[index].update(opts);\n}\n\nmodule.exports = {\n  styleTextSelection: styleTextSelection\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/scattergl/edit_style.js"],"names":["Lib","require","Color","DESELECTDIM","styleTextSelection","cd","cd0","trace","stash","t","scene","_scene","index","els","selectBatch","unels","unselectBatch","baseOpts","textOptions","selOpts","textSelectedOptions","unselOpts","textUnselectedOptions","opts","extendFlat","i","j","length","stc","color","utc","base","hasArrayBase","Array","isArray","_length","basej","addOpacity","glText","update","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,wBAAD,CAAnB;;AAEA,IAAIE,WAAW,GAAGF,OAAO,CAAC,8BAAD,CAAP,CAAwCE,WAA1D;;AAEA,SAASC,kBAAT,CAA4BC,EAA5B,EAAgC;AAC5B,MAAIC,GAAG,GAAGD,EAAE,CAAC,CAAD,CAAZ;AACA,MAAIE,KAAK,GAAGD,GAAG,CAACC,KAAhB;AACA,MAAIC,KAAK,GAAGF,GAAG,CAACG,CAAhB;AACA,MAAIC,KAAK,GAAGF,KAAK,CAACG,MAAlB;AACA,MAAIC,KAAK,GAAGJ,KAAK,CAACI,KAAlB;AACA,MAAIC,GAAG,GAAGH,KAAK,CAACI,WAAN,CAAkBF,KAAlB,CAAV;AACA,MAAIG,KAAK,GAAGL,KAAK,CAACM,aAAN,CAAoBJ,KAApB,CAAZ;AACA,MAAIK,QAAQ,GAAGP,KAAK,CAACQ,WAAN,CAAkBN,KAAlB,CAAf;AACA,MAAIO,OAAO,GAAGT,KAAK,CAACU,mBAAN,CAA0BR,KAA1B,KAAoC,EAAlD;AACA,MAAIS,SAAS,GAAGX,KAAK,CAACY,qBAAN,CAA4BV,KAA5B,KAAsC,EAAtD;AACA,MAAIW,IAAI,GAAGvB,GAAG,CAACwB,UAAJ,CAAe,EAAf,EAAmBP,QAAnB,CAAX;AACA,MAAIQ,CAAJ,EAAOC,CAAP;;AAEA,MAAGb,GAAG,CAACc,MAAJ,IAAcZ,KAAK,CAACY,MAAvB,EAA+B;AAC3B,QAAIC,GAAG,GAAGT,OAAO,CAACU,KAAlB;AACA,QAAIC,GAAG,GAAGT,SAAS,CAACQ,KAApB;AACA,QAAIE,IAAI,GAAGd,QAAQ,CAACY,KAApB;AACA,QAAIG,YAAY,GAAGC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAnB;AACAR,IAAAA,IAAI,CAACM,KAAL,GAAa,IAAII,KAAJ,CAAU1B,KAAK,CAAC4B,OAAhB,CAAb;;AAEA,SAAIV,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGZ,GAAG,CAACc,MAAnB,EAA2BF,CAAC,EAA5B,EAAgC;AAC5BC,MAAAA,CAAC,GAAGb,GAAG,CAACY,CAAD,CAAP;AACAF,MAAAA,IAAI,CAACM,KAAL,CAAWH,CAAX,IAAgBE,GAAG,KAAKI,YAAY,GAAGD,IAAI,CAACL,CAAD,CAAP,GAAaK,IAA9B,CAAnB;AACH;;AACD,SAAIN,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGV,KAAK,CAACY,MAArB,EAA6BF,CAAC,EAA9B,EAAkC;AAC9BC,MAAAA,CAAC,GAAGX,KAAK,CAACU,CAAD,CAAT;AACA,UAAIW,KAAK,GAAGJ,YAAY,GAAGD,IAAI,CAACL,CAAD,CAAP,GAAaK,IAArC;AACAR,MAAAA,IAAI,CAACM,KAAL,CAAWH,CAAX,IAAgBI,GAAG,GAAGA,GAAH,GACfF,GAAG,GAAGQ,KAAH,GAAWlC,KAAK,CAACmC,UAAN,CAAiBD,KAAjB,EAAwBjC,WAAxB,CADlB;AAEH;AACJ;;AAEDO,EAAAA,KAAK,CAAC4B,MAAN,CAAa1B,KAAb,EAAoB2B,MAApB,CAA2BhB,IAA3B;AACH;;AAEDiB,MAAM,CAACC,OAAP,GAAiB;AACbrC,EAAAA,kBAAkB,EAAEA;AADP,CAAjB","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\n\nvar DESELECTDIM = require('../../constants/interactions').DESELECTDIM;\n\nfunction styleTextSelection(cd) {\n    var cd0 = cd[0];\n    var trace = cd0.trace;\n    var stash = cd0.t;\n    var scene = stash._scene;\n    var index = stash.index;\n    var els = scene.selectBatch[index];\n    var unels = scene.unselectBatch[index];\n    var baseOpts = scene.textOptions[index];\n    var selOpts = scene.textSelectedOptions[index] || {};\n    var unselOpts = scene.textUnselectedOptions[index] || {};\n    var opts = Lib.extendFlat({}, baseOpts);\n    var i, j;\n\n    if(els.length || unels.length) {\n        var stc = selOpts.color;\n        var utc = unselOpts.color;\n        var base = baseOpts.color;\n        var hasArrayBase = Array.isArray(base);\n        opts.color = new Array(trace._length);\n\n        for(i = 0; i < els.length; i++) {\n            j = els[i];\n            opts.color[j] = stc || (hasArrayBase ? base[j] : base);\n        }\n        for(i = 0; i < unels.length; i++) {\n            j = unels[i];\n            var basej = hasArrayBase ? base[j] : base;\n            opts.color[j] = utc ? utc :\n                stc ? basej : Color.addOpacity(basej, DESELECTDIM);\n        }\n    }\n\n    scene.glText[index].update(opts);\n}\n\nmodule.exports = {\n    styleTextSelection: styleTextSelection\n};\n"]},"metadata":{},"sourceType":"script"}