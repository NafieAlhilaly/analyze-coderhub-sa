{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib'); // arrayOk attributes, merge them into calcdata array\n\n\nmodule.exports = function arraysToCalcdata(cd, trace) {\n  // so each point knows which index it originally came from\n  for (var i = 0; i < cd.length; i++) {\n    cd[i].i = i;\n  }\n\n  Lib.mergeArray(trace.text, cd, 'tx');\n  Lib.mergeArray(trace.texttemplate, cd, 'txt');\n  Lib.mergeArray(trace.hovertext, cd, 'htx');\n  Lib.mergeArray(trace.customdata, cd, 'data');\n  Lib.mergeArray(trace.textposition, cd, 'tp');\n\n  if (trace.textfont) {\n    Lib.mergeArrayCastPositive(trace.textfont.size, cd, 'ts');\n    Lib.mergeArray(trace.textfont.color, cd, 'tc');\n    Lib.mergeArray(trace.textfont.family, cd, 'tf');\n  }\n\n  var marker = trace.marker;\n\n  if (marker) {\n    Lib.mergeArrayCastPositive(marker.size, cd, 'ms');\n    Lib.mergeArrayCastPositive(marker.opacity, cd, 'mo');\n    Lib.mergeArray(marker.symbol, cd, 'mx');\n    Lib.mergeArray(marker.color, cd, 'mc');\n    var markerLine = marker.line;\n\n    if (marker.line) {\n      Lib.mergeArray(markerLine.color, cd, 'mlc');\n      Lib.mergeArrayCastPositive(markerLine.width, cd, 'mlw');\n    }\n\n    var markerGradient = marker.gradient;\n\n    if (markerGradient && markerGradient.type !== 'none') {\n      Lib.mergeArray(markerGradient.type, cd, 'mgt');\n      Lib.mergeArray(markerGradient.color, cd, 'mgc');\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/scatter/arrays_to_calcdata.js"],"names":["Lib","require","module","exports","arraysToCalcdata","cd","trace","i","length","mergeArray","text","texttemplate","hovertext","customdata","textposition","textfont","mergeArrayCastPositive","size","color","family","marker","opacity","symbol","markerLine","line","width","markerGradient","gradient","type"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB,C,CAGA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,EAA1B,EAA8BC,KAA9B,EAAqC;AAClD;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,EAAE,CAACG,MAAtB,EAA8BD,CAAC,EAA/B;AAAmCF,IAAAA,EAAE,CAACE,CAAD,CAAF,CAAMA,CAAN,GAAUA,CAAV;AAAnC;;AAEAP,EAAAA,GAAG,CAACS,UAAJ,CAAeH,KAAK,CAACI,IAArB,EAA2BL,EAA3B,EAA+B,IAA/B;AACAL,EAAAA,GAAG,CAACS,UAAJ,CAAeH,KAAK,CAACK,YAArB,EAAmCN,EAAnC,EAAuC,KAAvC;AACAL,EAAAA,GAAG,CAACS,UAAJ,CAAeH,KAAK,CAACM,SAArB,EAAgCP,EAAhC,EAAoC,KAApC;AACAL,EAAAA,GAAG,CAACS,UAAJ,CAAeH,KAAK,CAACO,UAArB,EAAiCR,EAAjC,EAAqC,MAArC;AACAL,EAAAA,GAAG,CAACS,UAAJ,CAAeH,KAAK,CAACQ,YAArB,EAAmCT,EAAnC,EAAuC,IAAvC;;AACA,MAAGC,KAAK,CAACS,QAAT,EAAmB;AACff,IAAAA,GAAG,CAACgB,sBAAJ,CAA2BV,KAAK,CAACS,QAAN,CAAeE,IAA1C,EAAgDZ,EAAhD,EAAoD,IAApD;AACAL,IAAAA,GAAG,CAACS,UAAJ,CAAeH,KAAK,CAACS,QAAN,CAAeG,KAA9B,EAAqCb,EAArC,EAAyC,IAAzC;AACAL,IAAAA,GAAG,CAACS,UAAJ,CAAeH,KAAK,CAACS,QAAN,CAAeI,MAA9B,EAAsCd,EAAtC,EAA0C,IAA1C;AACH;;AAED,MAAIe,MAAM,GAAGd,KAAK,CAACc,MAAnB;;AACA,MAAGA,MAAH,EAAW;AACPpB,IAAAA,GAAG,CAACgB,sBAAJ,CAA2BI,MAAM,CAACH,IAAlC,EAAwCZ,EAAxC,EAA4C,IAA5C;AACAL,IAAAA,GAAG,CAACgB,sBAAJ,CAA2BI,MAAM,CAACC,OAAlC,EAA2ChB,EAA3C,EAA+C,IAA/C;AACAL,IAAAA,GAAG,CAACS,UAAJ,CAAeW,MAAM,CAACE,MAAtB,EAA8BjB,EAA9B,EAAkC,IAAlC;AACAL,IAAAA,GAAG,CAACS,UAAJ,CAAeW,MAAM,CAACF,KAAtB,EAA6Bb,EAA7B,EAAiC,IAAjC;AAEA,QAAIkB,UAAU,GAAGH,MAAM,CAACI,IAAxB;;AACA,QAAGJ,MAAM,CAACI,IAAV,EAAgB;AACZxB,MAAAA,GAAG,CAACS,UAAJ,CAAec,UAAU,CAACL,KAA1B,EAAiCb,EAAjC,EAAqC,KAArC;AACAL,MAAAA,GAAG,CAACgB,sBAAJ,CAA2BO,UAAU,CAACE,KAAtC,EAA6CpB,EAA7C,EAAiD,KAAjD;AACH;;AAED,QAAIqB,cAAc,GAAGN,MAAM,CAACO,QAA5B;;AACA,QAAGD,cAAc,IAAIA,cAAc,CAACE,IAAf,KAAwB,MAA7C,EAAqD;AACjD5B,MAAAA,GAAG,CAACS,UAAJ,CAAeiB,cAAc,CAACE,IAA9B,EAAoCvB,EAApC,EAAwC,KAAxC;AACAL,MAAAA,GAAG,CAACS,UAAJ,CAAeiB,cAAc,CAACR,KAA9B,EAAqCb,EAArC,EAAyC,KAAzC;AACH;AACJ;AACJ,CAlCD","sourcesContent":["'use strict';\n\nvar Lib = require('../../lib');\n\n\n// arrayOk attributes, merge them into calcdata array\nmodule.exports = function arraysToCalcdata(cd, trace) {\n    // so each point knows which index it originally came from\n    for(var i = 0; i < cd.length; i++) cd[i].i = i;\n\n    Lib.mergeArray(trace.text, cd, 'tx');\n    Lib.mergeArray(trace.texttemplate, cd, 'txt');\n    Lib.mergeArray(trace.hovertext, cd, 'htx');\n    Lib.mergeArray(trace.customdata, cd, 'data');\n    Lib.mergeArray(trace.textposition, cd, 'tp');\n    if(trace.textfont) {\n        Lib.mergeArrayCastPositive(trace.textfont.size, cd, 'ts');\n        Lib.mergeArray(trace.textfont.color, cd, 'tc');\n        Lib.mergeArray(trace.textfont.family, cd, 'tf');\n    }\n\n    var marker = trace.marker;\n    if(marker) {\n        Lib.mergeArrayCastPositive(marker.size, cd, 'ms');\n        Lib.mergeArrayCastPositive(marker.opacity, cd, 'mo');\n        Lib.mergeArray(marker.symbol, cd, 'mx');\n        Lib.mergeArray(marker.color, cd, 'mc');\n\n        var markerLine = marker.line;\n        if(marker.line) {\n            Lib.mergeArray(markerLine.color, cd, 'mlc');\n            Lib.mergeArrayCastPositive(markerLine.width, cd, 'mlw');\n        }\n\n        var markerGradient = marker.gradient;\n        if(markerGradient && markerGradient.type !== 'none') {\n            Lib.mergeArray(markerGradient.type, cd, 'mgt');\n            Lib.mergeArray(markerGradient.color, cd, 'mgc');\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}