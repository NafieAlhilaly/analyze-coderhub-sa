{"ast":null,"code":"'use strict';\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar Color = require('../../components/color');\n\nvar handleStyleDefaults = require('../bar/style_defaults');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var x = coerce('x');\n  var y = coerce('y');\n  var cumulative = coerce('cumulative.enabled');\n\n  if (cumulative) {\n    coerce('cumulative.direction');\n    coerce('cumulative.currentbin');\n  }\n\n  coerce('text');\n  coerce('hovertext');\n  coerce('hovertemplate');\n  coerce('xhoverformat');\n  coerce('yhoverformat');\n  var orientation = coerce('orientation', y && !x ? 'h' : 'v');\n  var sampleLetter = orientation === 'v' ? 'x' : 'y';\n  var aggLetter = orientation === 'v' ? 'y' : 'x';\n  var len = x && y ? Math.min(Lib.minRowLength(x) && Lib.minRowLength(y)) : Lib.minRowLength(traceOut[sampleLetter] || []);\n\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  }\n\n  traceOut._length = len;\n  var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleTraceDefaults');\n  handleCalendarDefaults(traceIn, traceOut, ['x', 'y'], layout);\n  var hasAggregationData = traceOut[aggLetter];\n  if (hasAggregationData) coerce('histfunc');\n  coerce('histnorm'); // Note: bin defaults are now handled in Histogram.crossTraceDefaults\n  // autobin(x|y) are only included here to appease Plotly.validate\n\n  coerce('autobin' + sampleLetter);\n  handleStyleDefaults(traceIn, traceOut, coerce, defaultColor, layout);\n  Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n  var lineColor = (traceOut.marker.line || {}).color; // override defaultColor for error bars with defaultLine\n\n  var errorBarsSupplyDefaults = Registry.getComponentMethod('errorbars', 'supplyDefaults');\n  errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {\n    axis: 'y'\n  });\n  errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {\n    axis: 'x',\n    inherit: 'y'\n  });\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/histogram/defaults.js"],"names":["Registry","require","Lib","Color","handleStyleDefaults","attributes","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","layout","coerce","attr","dflt","x","y","cumulative","orientation","sampleLetter","aggLetter","len","Math","min","minRowLength","visible","_length","handleCalendarDefaults","getComponentMethod","hasAggregationData","coerceSelectionMarkerOpacity","lineColor","marker","line","color","errorBarsSupplyDefaults","defaultLine","axis","inherit"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\n\nvar handleStyleDefaults = require('../bar/style_defaults');\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var x = coerce('x');\n    var y = coerce('y');\n\n    var cumulative = coerce('cumulative.enabled');\n    if(cumulative) {\n        coerce('cumulative.direction');\n        coerce('cumulative.currentbin');\n    }\n\n    coerce('text');\n    coerce('hovertext');\n    coerce('hovertemplate');\n    coerce('xhoverformat');\n    coerce('yhoverformat');\n\n    var orientation = coerce('orientation', (y && !x) ? 'h' : 'v');\n    var sampleLetter = orientation === 'v' ? 'x' : 'y';\n    var aggLetter = orientation === 'v' ? 'y' : 'x';\n\n    var len = (x && y) ?\n        Math.min(Lib.minRowLength(x) && Lib.minRowLength(y)) :\n        Lib.minRowLength(traceOut[sampleLetter] || []);\n\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    traceOut._length = len;\n\n    var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleTraceDefaults');\n    handleCalendarDefaults(traceIn, traceOut, ['x', 'y'], layout);\n\n    var hasAggregationData = traceOut[aggLetter];\n    if(hasAggregationData) coerce('histfunc');\n    coerce('histnorm');\n\n    // Note: bin defaults are now handled in Histogram.crossTraceDefaults\n    // autobin(x|y) are only included here to appease Plotly.validate\n    coerce('autobin' + sampleLetter);\n\n    handleStyleDefaults(traceIn, traceOut, coerce, defaultColor, layout);\n\n    Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n\n    var lineColor = (traceOut.marker.line || {}).color;\n\n    // override defaultColor for error bars with defaultLine\n    var errorBarsSupplyDefaults = Registry.getComponentMethod('errorbars', 'supplyDefaults');\n    errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {axis: 'y'});\n    errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {axis: 'x', inherit: 'y'});\n};\n"]},"metadata":{},"sourceType":"script"}