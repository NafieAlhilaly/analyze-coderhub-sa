{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Drawing = require('../../components/drawing');\n\nvar Registry = require('../../registry');\n\nfunction style(gd) {\n  var s = d3.select(gd).selectAll('g.trace.scatter');\n  s.style('opacity', function (d) {\n    return d[0].trace.opacity;\n  });\n  s.selectAll('g.points').each(function (d) {\n    var sel = d3.select(this);\n    var trace = d.trace || d[0].trace;\n    stylePoints(sel, trace, gd);\n  });\n  s.selectAll('g.text').each(function (d) {\n    var sel = d3.select(this);\n    var trace = d.trace || d[0].trace;\n    styleText(sel, trace, gd);\n  });\n  s.selectAll('g.trace path.js-line').call(Drawing.lineGroupStyle);\n  s.selectAll('g.trace path.js-fill').call(Drawing.fillGroupStyle);\n  Registry.getComponentMethod('errorbars', 'style')(s);\n}\n\nfunction stylePoints(sel, trace, gd) {\n  Drawing.pointStyle(sel.selectAll('path.point'), trace, gd);\n}\n\nfunction styleText(sel, trace, gd) {\n  Drawing.textPointStyle(sel.selectAll('text'), trace, gd);\n}\n\nfunction styleOnSelect(gd, cd, sel) {\n  var trace = cd[0].trace;\n\n  if (trace.selectedpoints) {\n    Drawing.selectedPointStyle(sel.selectAll('path.point'), trace);\n    Drawing.selectedTextStyle(sel.selectAll('text'), trace);\n  } else {\n    stylePoints(sel, trace, gd);\n    styleText(sel, trace, gd);\n  }\n}\n\nmodule.exports = {\n  style: style,\n  stylePoints: stylePoints,\n  styleText: styleText,\n  styleOnSelect: styleOnSelect\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/traces/scatter/style.js"],"names":["d3","require","Drawing","Registry","style","gd","s","select","selectAll","d","trace","opacity","each","sel","stylePoints","styleText","call","lineGroupStyle","fillGroupStyle","getComponentMethod","pointStyle","textPointStyle","styleOnSelect","cd","selectedpoints","selectedPointStyle","selectedTextStyle","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar d3 = require('@plotly/d3');\nvar Drawing = require('../../components/drawing');\nvar Registry = require('../../registry');\n\nfunction style(gd) {\n    var s = d3.select(gd).selectAll('g.trace.scatter');\n\n    s.style('opacity', function(d) {\n        return d[0].trace.opacity;\n    });\n\n    s.selectAll('g.points').each(function(d) {\n        var sel = d3.select(this);\n        var trace = d.trace || d[0].trace;\n        stylePoints(sel, trace, gd);\n    });\n\n    s.selectAll('g.text').each(function(d) {\n        var sel = d3.select(this);\n        var trace = d.trace || d[0].trace;\n        styleText(sel, trace, gd);\n    });\n\n    s.selectAll('g.trace path.js-line')\n        .call(Drawing.lineGroupStyle);\n\n    s.selectAll('g.trace path.js-fill')\n        .call(Drawing.fillGroupStyle);\n\n    Registry.getComponentMethod('errorbars', 'style')(s);\n}\n\nfunction stylePoints(sel, trace, gd) {\n    Drawing.pointStyle(sel.selectAll('path.point'), trace, gd);\n}\n\nfunction styleText(sel, trace, gd) {\n    Drawing.textPointStyle(sel.selectAll('text'), trace, gd);\n}\n\nfunction styleOnSelect(gd, cd, sel) {\n    var trace = cd[0].trace;\n\n    if(trace.selectedpoints) {\n        Drawing.selectedPointStyle(sel.selectAll('path.point'), trace);\n        Drawing.selectedTextStyle(sel.selectAll('text'), trace);\n    } else {\n        stylePoints(sel, trace, gd);\n        styleText(sel, trace, gd);\n    }\n}\n\nmodule.exports = {\n    style: style,\n    stylePoints: stylePoints,\n    styleText: styleText,\n    styleOnSelect: styleOnSelect\n};\n"]},"metadata":{},"sourceType":"script"}