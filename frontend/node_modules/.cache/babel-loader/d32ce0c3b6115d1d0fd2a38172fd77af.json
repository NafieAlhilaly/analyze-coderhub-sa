{"ast":null,"code":"'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\n\nvar colorAttrs = require('../color/attributes');\n\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar buttonAttrs = templatedArray('button', {\n  visible: {\n    valType: 'boolean',\n    dflt: true,\n    editType: 'plot',\n    description: 'Determines whether or not this button is visible.'\n  },\n  step: {\n    valType: 'enumerated',\n    values: ['month', 'year', 'day', 'hour', 'minute', 'second', 'all'],\n    dflt: 'month',\n    editType: 'plot',\n    description: ['The unit of measurement that the `count` value will set the range by.'].join(' ')\n  },\n  stepmode: {\n    valType: 'enumerated',\n    values: ['backward', 'todate'],\n    dflt: 'backward',\n    editType: 'plot',\n    description: ['Sets the range update mode.', 'If *backward*, the range update shifts the start of range', 'back *count* times *step* milliseconds.', 'If *todate*, the range update shifts the start of range', 'back to the first timestamp from *count* times', '*step* milliseconds back.', 'For example, with `step` set to *year* and `count` set to *1*', 'the range update shifts the start of the range back to', 'January 01 of the current year.', 'Month and year *todate* are currently available only', 'for the built-in (Gregorian) calendar.'].join(' ')\n  },\n  count: {\n    valType: 'number',\n    min: 0,\n    dflt: 1,\n    editType: 'plot',\n    description: ['Sets the number of steps to take to update the range.', 'Use with `step` to specify the update interval.'].join(' ')\n  },\n  label: {\n    valType: 'string',\n    editType: 'plot',\n    description: 'Sets the text label to appear on the button.'\n  },\n  editType: 'plot',\n  description: ['Sets the specifications for each buttons.', 'By default, a range selector comes with no buttons.'].join(' ')\n});\nmodule.exports = {\n  visible: {\n    valType: 'boolean',\n    editType: 'plot',\n    description: ['Determines whether or not this range selector is visible.', 'Note that range selectors are only available for x axes of', '`type` set to or auto-typed to *date*.'].join(' ')\n  },\n  buttons: buttonAttrs,\n  x: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    editType: 'plot',\n    description: 'Sets the x position (in normalized coordinates) of the range selector.'\n  },\n  xanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'left', 'center', 'right'],\n    dflt: 'left',\n    editType: 'plot',\n    description: ['Sets the range selector\\'s horizontal position anchor.', 'This anchor binds the `x` position to the *left*, *center*', 'or *right* of the range selector.'].join(' ')\n  },\n  y: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    editType: 'plot',\n    description: 'Sets the y position (in normalized coordinates) of the range selector.'\n  },\n  yanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'top', 'middle', 'bottom'],\n    dflt: 'bottom',\n    editType: 'plot',\n    description: ['Sets the range selector\\'s vertical position anchor', 'This anchor binds the `y` position to the *top*, *middle*', 'or *bottom* of the range selector.'].join(' ')\n  },\n  font: fontAttrs({\n    editType: 'plot',\n    description: 'Sets the font of the range selector button text.'\n  }),\n  bgcolor: {\n    valType: 'color',\n    dflt: colorAttrs.lightLine,\n    editType: 'plot',\n    description: 'Sets the background color of the range selector buttons.'\n  },\n  activecolor: {\n    valType: 'color',\n    editType: 'plot',\n    description: 'Sets the background color of the active range selector button.'\n  },\n  bordercolor: {\n    valType: 'color',\n    dflt: colorAttrs.defaultLine,\n    editType: 'plot',\n    description: 'Sets the color of the border enclosing the range selector.'\n  },\n  borderwidth: {\n    valType: 'number',\n    min: 0,\n    dflt: 0,\n    editType: 'plot',\n    description: 'Sets the width (in px) of the border enclosing the range selector.'\n  },\n  editType: 'plot'\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/components/rangeselector/attributes.js"],"names":["fontAttrs","require","colorAttrs","templatedArray","buttonAttrs","visible","valType","dflt","editType","description","step","values","join","stepmode","count","min","label","module","exports","buttons","x","max","xanchor","y","yanchor","font","bgcolor","lightLine","activecolor","bordercolor","defaultLine","borderwidth"],"mappings":"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","sourcesContent":["'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar colorAttrs = require('../color/attributes');\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar buttonAttrs = templatedArray('button', {\n    visible: {\n        valType: 'boolean',\n        dflt: true,\n        editType: 'plot',\n        description: 'Determines whether or not this button is visible.'\n    },\n    step: {\n        valType: 'enumerated',\n        values: ['month', 'year', 'day', 'hour', 'minute', 'second', 'all'],\n        dflt: 'month',\n        editType: 'plot',\n        description: [\n            'The unit of measurement that the `count` value will set the range by.'\n        ].join(' ')\n    },\n    stepmode: {\n        valType: 'enumerated',\n        values: ['backward', 'todate'],\n        dflt: 'backward',\n        editType: 'plot',\n        description: [\n            'Sets the range update mode.',\n            'If *backward*, the range update shifts the start of range',\n            'back *count* times *step* milliseconds.',\n            'If *todate*, the range update shifts the start of range',\n            'back to the first timestamp from *count* times',\n            '*step* milliseconds back.',\n            'For example, with `step` set to *year* and `count` set to *1*',\n            'the range update shifts the start of the range back to',\n            'January 01 of the current year.',\n            'Month and year *todate* are currently available only',\n            'for the built-in (Gregorian) calendar.'\n        ].join(' ')\n    },\n    count: {\n        valType: 'number',\n        min: 0,\n        dflt: 1,\n        editType: 'plot',\n        description: [\n            'Sets the number of steps to take to update the range.',\n            'Use with `step` to specify the update interval.'\n        ].join(' ')\n    },\n    label: {\n        valType: 'string',\n        editType: 'plot',\n        description: 'Sets the text label to appear on the button.'\n    },\n    editType: 'plot',\n    description: [\n        'Sets the specifications for each buttons.',\n        'By default, a range selector comes with no buttons.'\n    ].join(' ')\n});\n\nmodule.exports = {\n    visible: {\n        valType: 'boolean',\n        editType: 'plot',\n        description: [\n            'Determines whether or not this range selector is visible.',\n            'Note that range selectors are only available for x axes of',\n            '`type` set to or auto-typed to *date*.'\n        ].join(' ')\n    },\n\n    buttons: buttonAttrs,\n\n    x: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        editType: 'plot',\n        description: 'Sets the x position (in normalized coordinates) of the range selector.'\n    },\n    xanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'left', 'center', 'right'],\n        dflt: 'left',\n        editType: 'plot',\n        description: [\n            'Sets the range selector\\'s horizontal position anchor.',\n            'This anchor binds the `x` position to the *left*, *center*',\n            'or *right* of the range selector.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        editType: 'plot',\n        description: 'Sets the y position (in normalized coordinates) of the range selector.'\n    },\n    yanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'top', 'middle', 'bottom'],\n        dflt: 'bottom',\n        editType: 'plot',\n        description: [\n            'Sets the range selector\\'s vertical position anchor',\n            'This anchor binds the `y` position to the *top*, *middle*',\n            'or *bottom* of the range selector.'\n        ].join(' ')\n    },\n\n    font: fontAttrs({\n        editType: 'plot',\n        description: 'Sets the font of the range selector button text.'\n    }),\n\n    bgcolor: {\n        valType: 'color',\n        dflt: colorAttrs.lightLine,\n        editType: 'plot',\n        description: 'Sets the background color of the range selector buttons.'\n    },\n    activecolor: {\n        valType: 'color',\n        editType: 'plot',\n        description: 'Sets the background color of the active range selector button.'\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        editType: 'plot',\n        description: 'Sets the color of the border enclosing the range selector.'\n    },\n    borderwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 0,\n        editType: 'plot',\n        description: 'Sets the width (in px) of the border enclosing the range selector.'\n    },\n    editType: 'plot'\n};\n"]},"metadata":{},"sourceType":"script"}