{"ast":null,"code":"'use strict';\n\nvar scatterPlot = require('../scatter/plot');\n\nmodule.exports = function plot(gd, ternary, moduleCalcData) {\n  var plotContainer = ternary.plotContainer; // remove all nodes inside the scatter layer\n\n  plotContainer.select('.scatterlayer').selectAll('*').remove(); // mimic cartesian plotinfo\n\n  var plotinfo = {\n    xaxis: ternary.xaxis,\n    yaxis: ternary.yaxis,\n    plot: plotContainer,\n    layerClipId: ternary._hasClipOnAxisFalse ? ternary.clipIdRelative : null\n  };\n  var scatterLayer = ternary.layers.frontplot.select('g.scatterlayer');\n  scatterPlot(gd, plotinfo, moduleCalcData, scatterLayer);\n};","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/scatterternary/plot.js"],"names":["scatterPlot","require","module","exports","plot","gd","ternary","moduleCalcData","plotContainer","select","selectAll","remove","plotinfo","xaxis","yaxis","layerClipId","_hasClipOnAxisFalse","clipIdRelative","scatterLayer","layers","frontplot"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,iBAAD,CAAzB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,EAAd,EAAkBC,OAAlB,EAA2BC,cAA3B,EAA2C;AACxD,MAAIC,aAAa,GAAGF,OAAO,CAACE,aAA5B,CADwD,CAGxD;;AACAA,EAAAA,aAAa,CAACC,MAAd,CAAqB,eAArB,EAAsCC,SAAtC,CAAgD,GAAhD,EAAqDC,MAArD,GAJwD,CAMxD;;AACA,MAAIC,QAAQ,GAAG;AACXC,IAAAA,KAAK,EAAEP,OAAO,CAACO,KADJ;AAEXC,IAAAA,KAAK,EAAER,OAAO,CAACQ,KAFJ;AAGXV,IAAAA,IAAI,EAAEI,aAHK;AAIXO,IAAAA,WAAW,EAAET,OAAO,CAACU,mBAAR,GAA8BV,OAAO,CAACW,cAAtC,GAAuD;AAJzD,GAAf;AAOA,MAAIC,YAAY,GAAGZ,OAAO,CAACa,MAAR,CAAeC,SAAf,CAAyBX,MAAzB,CAAgC,gBAAhC,CAAnB;AAEAT,EAAAA,WAAW,CAACK,EAAD,EAAKO,QAAL,EAAeL,cAAf,EAA+BW,YAA/B,CAAX;AACH,CAjBD","sourcesContent":["'use strict';\n\nvar scatterPlot = require('../scatter/plot');\n\nmodule.exports = function plot(gd, ternary, moduleCalcData) {\n    var plotContainer = ternary.plotContainer;\n\n    // remove all nodes inside the scatter layer\n    plotContainer.select('.scatterlayer').selectAll('*').remove();\n\n    // mimic cartesian plotinfo\n    var plotinfo = {\n        xaxis: ternary.xaxis,\n        yaxis: ternary.yaxis,\n        plot: plotContainer,\n        layerClipId: ternary._hasClipOnAxisFalse ? ternary.clipIdRelative : null\n    };\n\n    var scatterLayer = ternary.layers.frontplot.select('g.scatterlayer');\n\n    scatterPlot(gd, plotinfo, moduleCalcData, scatterLayer);\n};\n"]},"metadata":{},"sourceType":"script"}