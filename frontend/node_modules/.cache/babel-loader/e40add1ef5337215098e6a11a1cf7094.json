{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar tinycolor = require('tinycolor2');\n\nvar rgba = require('color-normalize');\n\nvar Colorscale = require('../components/colorscale');\n\nvar colorDflt = require('../components/color/attributes').defaultLine;\n\nvar isArrayOrTypedArray = require('./array').isArrayOrTypedArray;\n\nvar colorDfltRgba = rgba(colorDflt);\nvar opacityDflt = 1;\n\nfunction calculateColor(colorIn, opacityIn) {\n  var colorOut = colorIn;\n  colorOut[3] *= opacityIn;\n  return colorOut;\n}\n\nfunction validateColor(colorIn) {\n  if (isNumeric(colorIn)) return colorDfltRgba;\n  var colorOut = rgba(colorIn);\n  return colorOut.length ? colorOut : colorDfltRgba;\n}\n\nfunction validateOpacity(opacityIn) {\n  return isNumeric(opacityIn) ? opacityIn : opacityDflt;\n}\n\nfunction formatColor(containerIn, opacityIn, len) {\n  var colorIn = containerIn.color;\n  var isArrayColorIn = isArrayOrTypedArray(colorIn);\n  var isArrayOpacityIn = isArrayOrTypedArray(opacityIn);\n  var cOpts = Colorscale.extractOpts(containerIn);\n  var colorOut = [];\n  var sclFunc, getColor, getOpacity, colori, opacityi;\n\n  if (cOpts.colorscale !== undefined) {\n    sclFunc = Colorscale.makeColorScaleFuncFromTrace(containerIn);\n  } else {\n    sclFunc = validateColor;\n  }\n\n  if (isArrayColorIn) {\n    getColor = function getColor(c, i) {\n      // FIXME: there is double work, considering that sclFunc does the opposite\n      return c[i] === undefined ? colorDfltRgba : rgba(sclFunc(c[i]));\n    };\n  } else getColor = validateColor;\n\n  if (isArrayOpacityIn) {\n    getOpacity = function getOpacity(o, i) {\n      return o[i] === undefined ? opacityDflt : validateOpacity(o[i]);\n    };\n  } else getOpacity = validateOpacity;\n\n  if (isArrayColorIn || isArrayOpacityIn) {\n    for (var i = 0; i < len; i++) {\n      colori = getColor(colorIn, i);\n      opacityi = getOpacity(opacityIn, i);\n      colorOut[i] = calculateColor(colori, opacityi);\n    }\n  } else colorOut = calculateColor(rgba(colorIn), opacityIn);\n\n  return colorOut;\n}\n\nfunction parseColorScale(cont) {\n  var cOpts = Colorscale.extractOpts(cont);\n  var colorscale = cOpts.colorscale;\n  if (cOpts.reversescale) colorscale = Colorscale.flipScale(cOpts.colorscale);\n  return colorscale.map(function (elem) {\n    var index = elem[0];\n    var color = tinycolor(elem[1]);\n    var rgb = color.toRgb();\n    return {\n      index: index,\n      rgb: [rgb.r, rgb.g, rgb.b, rgb.a]\n    };\n  });\n}\n\nmodule.exports = {\n  formatColor: formatColor,\n  parseColorScale: parseColorScale\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/lib/gl_format_color.js"],"names":["isNumeric","require","tinycolor","rgba","Colorscale","colorDflt","defaultLine","isArrayOrTypedArray","colorDfltRgba","opacityDflt","calculateColor","colorIn","opacityIn","colorOut","validateColor","length","validateOpacity","formatColor","containerIn","len","color","isArrayColorIn","isArrayOpacityIn","cOpts","extractOpts","sclFunc","getColor","getOpacity","colori","opacityi","colorscale","undefined","makeColorScaleFuncFromTrace","c","i","o","parseColorScale","cont","reversescale","flipScale","map","elem","index","rgb","toRgb","r","g","b","a","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar tinycolor = require('tinycolor2');\nvar rgba = require('color-normalize');\n\nvar Colorscale = require('../components/colorscale');\nvar colorDflt = require('../components/color/attributes').defaultLine;\nvar isArrayOrTypedArray = require('./array').isArrayOrTypedArray;\n\nvar colorDfltRgba = rgba(colorDflt);\nvar opacityDflt = 1;\n\nfunction calculateColor(colorIn, opacityIn) {\n    var colorOut = colorIn;\n    colorOut[3] *= opacityIn;\n    return colorOut;\n}\n\nfunction validateColor(colorIn) {\n    if(isNumeric(colorIn)) return colorDfltRgba;\n\n    var colorOut = rgba(colorIn);\n\n    return colorOut.length ? colorOut : colorDfltRgba;\n}\n\nfunction validateOpacity(opacityIn) {\n    return isNumeric(opacityIn) ? opacityIn : opacityDflt;\n}\n\nfunction formatColor(containerIn, opacityIn, len) {\n    var colorIn = containerIn.color;\n    var isArrayColorIn = isArrayOrTypedArray(colorIn);\n    var isArrayOpacityIn = isArrayOrTypedArray(opacityIn);\n    var cOpts = Colorscale.extractOpts(containerIn);\n    var colorOut = [];\n\n    var sclFunc, getColor, getOpacity, colori, opacityi;\n\n    if(cOpts.colorscale !== undefined) {\n        sclFunc = Colorscale.makeColorScaleFuncFromTrace(containerIn);\n    } else {\n        sclFunc = validateColor;\n    }\n\n    if(isArrayColorIn) {\n        getColor = function(c, i) {\n            // FIXME: there is double work, considering that sclFunc does the opposite\n            return c[i] === undefined ? colorDfltRgba : rgba(sclFunc(c[i]));\n        };\n    } else getColor = validateColor;\n\n    if(isArrayOpacityIn) {\n        getOpacity = function(o, i) {\n            return o[i] === undefined ? opacityDflt : validateOpacity(o[i]);\n        };\n    } else getOpacity = validateOpacity;\n\n    if(isArrayColorIn || isArrayOpacityIn) {\n        for(var i = 0; i < len; i++) {\n            colori = getColor(colorIn, i);\n            opacityi = getOpacity(opacityIn, i);\n            colorOut[i] = calculateColor(colori, opacityi);\n        }\n    } else colorOut = calculateColor(rgba(colorIn), opacityIn);\n\n    return colorOut;\n}\n\nfunction parseColorScale(cont) {\n    var cOpts = Colorscale.extractOpts(cont);\n\n    var colorscale = cOpts.colorscale;\n    if(cOpts.reversescale) colorscale = Colorscale.flipScale(cOpts.colorscale);\n\n    return colorscale.map(function(elem) {\n        var index = elem[0];\n        var color = tinycolor(elem[1]);\n        var rgb = color.toRgb();\n        return {\n            index: index,\n            rgb: [rgb.r, rgb.g, rgb.b, rgb.a]\n        };\n    });\n}\n\nmodule.exports = {\n    formatColor: formatColor,\n    parseColorScale: parseColorScale\n};\n"]},"metadata":{},"sourceType":"script"}