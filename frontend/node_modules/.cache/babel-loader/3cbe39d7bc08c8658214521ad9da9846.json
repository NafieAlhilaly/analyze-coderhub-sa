{"ast":null,"code":"\"use strict\";\n\nvar robustDot = require(\"robust-dot-product\");\n\nvar robustSum = require(\"robust-sum\");\n\nmodule.exports = splitPolygon;\nmodule.exports.positive = positive;\nmodule.exports.negative = negative;\n\nfunction planeT(p, plane) {\n  var r = robustSum(robustDot(p, plane), [plane[plane.length - 1]]);\n  return r[r.length - 1];\n} //Can't do this exactly and emit a floating point result\n\n\nfunction lerpW(a, wa, b, wb) {\n  var d = wb - wa;\n  var t = -wa / d;\n\n  if (t < 0.0) {\n    t = 0.0;\n  } else if (t > 1.0) {\n    t = 1.0;\n  }\n\n  var ti = 1.0 - t;\n  var n = a.length;\n  var r = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    r[i] = t * a[i] + ti * b[i];\n  }\n\n  return r;\n}\n\nfunction splitPolygon(points, plane) {\n  var pos = [];\n  var neg = [];\n  var a = planeT(points[points.length - 1], plane);\n\n  for (var s = points[points.length - 1], t = points[0], i = 0; i < points.length; ++i, s = t) {\n    t = points[i];\n    var b = planeT(t, plane);\n\n    if (a < 0 && b > 0 || a > 0 && b < 0) {\n      var p = lerpW(s, b, t, a);\n      pos.push(p);\n      neg.push(p.slice());\n    }\n\n    if (b < 0) {\n      neg.push(t.slice());\n    } else if (b > 0) {\n      pos.push(t.slice());\n    } else {\n      pos.push(t.slice());\n      neg.push(t.slice());\n    }\n\n    a = b;\n  }\n\n  return {\n    positive: pos,\n    negative: neg\n  };\n}\n\nfunction positive(points, plane) {\n  var pos = [];\n  var a = planeT(points[points.length - 1], plane);\n\n  for (var s = points[points.length - 1], t = points[0], i = 0; i < points.length; ++i, s = t) {\n    t = points[i];\n    var b = planeT(t, plane);\n\n    if (a < 0 && b > 0 || a > 0 && b < 0) {\n      pos.push(lerpW(s, b, t, a));\n    }\n\n    if (b >= 0) {\n      pos.push(t.slice());\n    }\n\n    a = b;\n  }\n\n  return pos;\n}\n\nfunction negative(points, plane) {\n  var neg = [];\n  var a = planeT(points[points.length - 1], plane);\n\n  for (var s = points[points.length - 1], t = points[0], i = 0; i < points.length; ++i, s = t) {\n    t = points[i];\n    var b = planeT(t, plane);\n\n    if (a < 0 && b > 0 || a > 0 && b < 0) {\n      neg.push(lerpW(s, b, t, a));\n    }\n\n    if (b <= 0) {\n      neg.push(t.slice());\n    }\n\n    a = b;\n  }\n\n  return neg;\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/split-polygon/clip-poly.js"],"names":["robustDot","require","robustSum","module","exports","splitPolygon","positive","negative","planeT","p","plane","r","length","lerpW","a","wa","b","wb","d","t","ti","n","Array","i","points","pos","neg","s","push","slice"],"mappings":"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","sourcesContent":["\"use strict\"\n\nvar robustDot = require(\"robust-dot-product\")\nvar robustSum = require(\"robust-sum\")\n\nmodule.exports = splitPolygon\nmodule.exports.positive = positive\nmodule.exports.negative = negative\n\nfunction planeT(p, plane) {\n  var r = robustSum(robustDot(p, plane), [plane[plane.length-1]])\n  return r[r.length-1]\n}\n\n\n//Can't do this exactly and emit a floating point result\nfunction lerpW(a, wa, b, wb) {\n  var d = wb - wa\n  var t = -wa / d\n  if(t < 0.0) {\n    t = 0.0\n  } else if(t > 1.0) {\n    t = 1.0\n  }\n  var ti = 1.0 - t\n  var n = a.length\n  var r = new Array(n)\n  for(var i=0; i<n; ++i) {\n    r[i] = t * a[i] + ti * b[i]\n  }\n  return r\n}\n\nfunction splitPolygon(points, plane) {\n  var pos = []\n  var neg = []\n  var a = planeT(points[points.length-1], plane)\n  for(var s=points[points.length-1], t=points[0], i=0; i<points.length; ++i, s=t) {\n    t = points[i]\n    var b = planeT(t, plane)\n    if((a < 0 && b > 0) || (a > 0 && b < 0)) {\n      var p = lerpW(s, b, t, a)\n      pos.push(p)\n      neg.push(p.slice())\n    }\n    if(b < 0) {\n      neg.push(t.slice())\n    } else if(b > 0) {\n      pos.push(t.slice())\n    } else {\n      pos.push(t.slice())\n      neg.push(t.slice())\n    }\n    a = b\n  }\n  return { positive: pos, negative: neg }\n}\n\nfunction positive(points, plane) {\n  var pos = []\n  var a = planeT(points[points.length-1], plane)\n  for(var s=points[points.length-1], t=points[0], i=0; i<points.length; ++i, s=t) {\n    t = points[i]\n    var b = planeT(t, plane)\n    if((a < 0 && b > 0) || (a > 0 && b < 0)) {\n      pos.push(lerpW(s, b, t, a))\n    }\n    if(b >= 0) {\n      pos.push(t.slice())\n    }\n    a = b\n  }\n  return pos\n}\n\nfunction negative(points, plane) {\n  var neg = []\n  var a = planeT(points[points.length-1], plane)\n  for(var s=points[points.length-1], t=points[0], i=0; i<points.length; ++i, s=t) {\n    t = points[i]\n    var b = planeT(t, plane)\n    if((a < 0 && b > 0) || (a > 0 && b < 0)) {\n      neg.push(lerpW(s, b, t, a))\n    }\n    if(b <= 0) {\n      neg.push(t.slice())\n    }\n    a = b\n  }\n  return neg\n}"]},"metadata":{},"sourceType":"script"}