{"ast":null,"code":"'use strict';\n\nexports.version = require('./version').version; // inject promise polyfill\n\nrequire('native-promise-only'); // inject plot css\n\n\nrequire('../build/plotcss'); // include registry module and expose register method\n\n\nvar Registry = require('./registry');\n\nvar register = exports.register = Registry.register; // expose plot api methods\n\nvar plotApi = require('./plot_api');\n\nvar methodNames = Object.keys(plotApi);\n\nfor (var i = 0; i < methodNames.length; i++) {\n  var name = methodNames[i]; // _ -> private API methods, but still registered for internal use\n\n  if (name.charAt(0) !== '_') exports[name] = plotApi[name];\n  register({\n    moduleType: 'apiMethod',\n    name: name,\n    fn: plotApi[name]\n  });\n} // scatter is the only trace included by default\n\n\nregister(require('./traces/scatter')); // register all registrable components modules\n\nregister([require('./components/legend'), require('./components/fx'), // fx needs to come after legend\nrequire('./components/annotations'), require('./components/annotations3d'), require('./components/shapes'), require('./components/images'), require('./components/updatemenus'), require('./components/sliders'), require('./components/rangeslider'), require('./components/rangeselector'), require('./components/grid'), require('./components/errorbars'), require('./components/colorscale'), require('./components/colorbar'), require('./components/modebar')]); // locales en and en-US are required for default behavior\n\nregister([require('./locale-en'), require('./locale-en-us')]); // locales that are present in the window should be loaded\n\nif (window.PlotlyLocales && Array.isArray(window.PlotlyLocales)) {\n  register(window.PlotlyLocales);\n  delete window.PlotlyLocales;\n} // plot icons\n\n\nexports.Icons = require('./fonts/ploticon'); // unofficial 'beta' plot methods, use at your own risk\n\nvar Fx = require('./components/fx');\n\nvar Plots = require('./plots/plots');\n\nexports.Plots = {\n  resize: Plots.resize,\n  graphJson: Plots.graphJson,\n  sendDataToCloud: Plots.sendDataToCloud\n};\nexports.Fx = {\n  hover: Fx.hover,\n  unhover: Fx.unhover,\n  loneHover: Fx.loneHover,\n  loneUnhover: Fx.loneUnhover\n};\nexports.Snapshot = require('./snapshot');\nexports.PlotSchema = require('./plot_api/plot_schema');","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/core.js"],"names":["exports","version","require","Registry","register","plotApi","methodNames","Object","keys","i","length","name","charAt","moduleType","fn","window","PlotlyLocales","Array","isArray","Icons","Fx","Plots","resize","graphJson","sendDataToCloud","hover","unhover","loneHover","loneUnhover","Snapshot","PlotSchema"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.version = require('./version').version;\n\n// inject promise polyfill\nrequire('native-promise-only');\n\n// inject plot css\nrequire('../build/plotcss');\n\n// include registry module and expose register method\nvar Registry = require('./registry');\nvar register = exports.register = Registry.register;\n\n// expose plot api methods\nvar plotApi = require('./plot_api');\nvar methodNames = Object.keys(plotApi);\nfor(var i = 0; i < methodNames.length; i++) {\n    var name = methodNames[i];\n    // _ -> private API methods, but still registered for internal use\n    if(name.charAt(0) !== '_') exports[name] = plotApi[name];\n    register({\n        moduleType: 'apiMethod',\n        name: name,\n        fn: plotApi[name]\n    });\n}\n\n// scatter is the only trace included by default\nregister(require('./traces/scatter'));\n\n// register all registrable components modules\nregister([\n    require('./components/legend'),\n    require('./components/fx'), // fx needs to come after legend\n    require('./components/annotations'),\n    require('./components/annotations3d'),\n    require('./components/shapes'),\n    require('./components/images'),\n    require('./components/updatemenus'),\n    require('./components/sliders'),\n    require('./components/rangeslider'),\n    require('./components/rangeselector'),\n    require('./components/grid'),\n    require('./components/errorbars'),\n    require('./components/colorscale'),\n    require('./components/colorbar'),\n    require('./components/modebar')\n]);\n\n// locales en and en-US are required for default behavior\nregister([\n    require('./locale-en'),\n    require('./locale-en-us')\n]);\n\n// locales that are present in the window should be loaded\nif(window.PlotlyLocales && Array.isArray(window.PlotlyLocales)) {\n    register(window.PlotlyLocales);\n    delete window.PlotlyLocales;\n}\n\n// plot icons\nexports.Icons = require('./fonts/ploticon');\n\n// unofficial 'beta' plot methods, use at your own risk\nvar Fx = require('./components/fx');\nvar Plots = require('./plots/plots');\n\nexports.Plots = {\n    resize: Plots.resize,\n    graphJson: Plots.graphJson,\n    sendDataToCloud: Plots.sendDataToCloud\n};\nexports.Fx = {\n    hover: Fx.hover,\n    unhover: Fx.unhover,\n    loneHover: Fx.loneHover,\n    loneUnhover: Fx.loneUnhover\n};\nexports.Snapshot = require('./snapshot');\nexports.PlotSchema = require('./plot_api/plot_schema');\n"]},"metadata":{},"sourceType":"script"}