{"ast":null,"code":"'use strict';\n\nvar colorMix = require('tinycolor2').mix;\n\nvar lightFraction = require('../../components/color/attributes').lightFraction;\n\nvar Lib = require('../../lib');\n/**\n * @param {object} opts :\n *   - dfltColor {string} : default axis color\n *   - bgColor {string} : combined subplot bg color\n *   - blend {number, optional} : blend percentage (to compute dflt grid color)\n *   - showLine {boolean} : show line by default\n *   - showGrid {boolean} : show grid by default\n *   - noZeroLine {boolean} : don't coerce zeroline* attributes\n *   - attributes {object} : attribute object associated with input containers\n */\n\n\nmodule.exports = function handleLineGridDefaults(containerIn, containerOut, coerce, opts) {\n  opts = opts || {};\n  var dfltColor = opts.dfltColor;\n\n  function coerce2(attr, dflt) {\n    return Lib.coerce2(containerIn, containerOut, opts.attributes, attr, dflt);\n  }\n\n  var lineColor = coerce2('linecolor', dfltColor);\n  var lineWidth = coerce2('linewidth');\n  var showLine = coerce('showline', opts.showLine || !!lineColor || !!lineWidth);\n\n  if (!showLine) {\n    delete containerOut.linecolor;\n    delete containerOut.linewidth;\n  }\n\n  var gridColorDflt = colorMix(dfltColor, opts.bgColor, opts.blend || lightFraction).toRgbString();\n  var gridColor = coerce2('gridcolor', gridColorDflt);\n  var gridWidth = coerce2('gridwidth');\n  var showGridLines = coerce('showgrid', opts.showGrid || !!gridColor || !!gridWidth);\n\n  if (!showGridLines) {\n    delete containerOut.gridcolor;\n    delete containerOut.gridwidth;\n  }\n\n  if (!opts.noZeroLine) {\n    var zeroLineColor = coerce2('zerolinecolor', dfltColor);\n    var zeroLineWidth = coerce2('zerolinewidth');\n    var showZeroLine = coerce('zeroline', opts.showGrid || !!zeroLineColor || !!zeroLineWidth);\n\n    if (!showZeroLine) {\n      delete containerOut.zerolinecolor;\n      delete containerOut.zerolinewidth;\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/plotly.js/src/plots/cartesian/line_grid_defaults.js"],"names":["colorMix","require","mix","lightFraction","Lib","module","exports","handleLineGridDefaults","containerIn","containerOut","coerce","opts","dfltColor","coerce2","attr","dflt","attributes","lineColor","lineWidth","showLine","linecolor","linewidth","gridColorDflt","bgColor","blend","toRgbString","gridColor","gridWidth","showGridLines","showGrid","gridcolor","gridwidth","noZeroLine","zeroLineColor","zeroLineWidth","showZeroLine","zerolinecolor","zerolinewidth"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,GAArC;;AACA,IAAIC,aAAa,GAAGF,OAAO,CAAC,mCAAD,CAAP,CAA6CE,aAAjE;;AACA,IAAIC,GAAG,GAAGH,OAAO,CAAC,WAAD,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAI,MAAM,CAACC,OAAP,GAAiB,SAASC,sBAAT,CAAgCC,WAAhC,EAA6CC,YAA7C,EAA2DC,MAA3D,EAAmEC,IAAnE,EAAyE;AACtFA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;;AAEA,WAASC,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AACzB,WAAOX,GAAG,CAACS,OAAJ,CAAYL,WAAZ,EAAyBC,YAAzB,EAAuCE,IAAI,CAACK,UAA5C,EAAwDF,IAAxD,EAA8DC,IAA9D,CAAP;AACH;;AAED,MAAIE,SAAS,GAAGJ,OAAO,CAAC,WAAD,EAAcD,SAAd,CAAvB;AACA,MAAIM,SAAS,GAAGL,OAAO,CAAC,WAAD,CAAvB;AACA,MAAIM,QAAQ,GAAGT,MAAM,CAAC,UAAD,EAAaC,IAAI,CAACQ,QAAL,IAAiB,CAAC,CAACF,SAAnB,IAAgC,CAAC,CAACC,SAA/C,CAArB;;AAEA,MAAG,CAACC,QAAJ,EAAc;AACV,WAAOV,YAAY,CAACW,SAApB;AACA,WAAOX,YAAY,CAACY,SAApB;AACH;;AAED,MAAIC,aAAa,GAAGtB,QAAQ,CAACY,SAAD,EAAYD,IAAI,CAACY,OAAjB,EAA0BZ,IAAI,CAACa,KAAL,IAAcrB,aAAxC,CAAR,CAA+DsB,WAA/D,EAApB;AACA,MAAIC,SAAS,GAAGb,OAAO,CAAC,WAAD,EAAcS,aAAd,CAAvB;AACA,MAAIK,SAAS,GAAGd,OAAO,CAAC,WAAD,CAAvB;AACA,MAAIe,aAAa,GAAGlB,MAAM,CAAC,UAAD,EAAaC,IAAI,CAACkB,QAAL,IAAiB,CAAC,CAACH,SAAnB,IAAgC,CAAC,CAACC,SAA/C,CAA1B;;AAEA,MAAG,CAACC,aAAJ,EAAmB;AACf,WAAOnB,YAAY,CAACqB,SAApB;AACA,WAAOrB,YAAY,CAACsB,SAApB;AACH;;AAED,MAAG,CAACpB,IAAI,CAACqB,UAAT,EAAqB;AACjB,QAAIC,aAAa,GAAGpB,OAAO,CAAC,eAAD,EAAkBD,SAAlB,CAA3B;AACA,QAAIsB,aAAa,GAAGrB,OAAO,CAAC,eAAD,CAA3B;AACA,QAAIsB,YAAY,GAAGzB,MAAM,CAAC,UAAD,EAAaC,IAAI,CAACkB,QAAL,IAAiB,CAAC,CAACI,aAAnB,IAAoC,CAAC,CAACC,aAAnD,CAAzB;;AAEA,QAAG,CAACC,YAAJ,EAAkB;AACd,aAAO1B,YAAY,CAAC2B,aAApB;AACA,aAAO3B,YAAY,CAAC4B,aAApB;AACH;AACJ;AACJ,CAtCD","sourcesContent":["'use strict';\n\nvar colorMix = require('tinycolor2').mix;\nvar lightFraction = require('../../components/color/attributes').lightFraction;\nvar Lib = require('../../lib');\n\n/**\n * @param {object} opts :\n *   - dfltColor {string} : default axis color\n *   - bgColor {string} : combined subplot bg color\n *   - blend {number, optional} : blend percentage (to compute dflt grid color)\n *   - showLine {boolean} : show line by default\n *   - showGrid {boolean} : show grid by default\n *   - noZeroLine {boolean} : don't coerce zeroline* attributes\n *   - attributes {object} : attribute object associated with input containers\n */\nmodule.exports = function handleLineGridDefaults(containerIn, containerOut, coerce, opts) {\n    opts = opts || {};\n\n    var dfltColor = opts.dfltColor;\n\n    function coerce2(attr, dflt) {\n        return Lib.coerce2(containerIn, containerOut, opts.attributes, attr, dflt);\n    }\n\n    var lineColor = coerce2('linecolor', dfltColor);\n    var lineWidth = coerce2('linewidth');\n    var showLine = coerce('showline', opts.showLine || !!lineColor || !!lineWidth);\n\n    if(!showLine) {\n        delete containerOut.linecolor;\n        delete containerOut.linewidth;\n    }\n\n    var gridColorDflt = colorMix(dfltColor, opts.bgColor, opts.blend || lightFraction).toRgbString();\n    var gridColor = coerce2('gridcolor', gridColorDflt);\n    var gridWidth = coerce2('gridwidth');\n    var showGridLines = coerce('showgrid', opts.showGrid || !!gridColor || !!gridWidth);\n\n    if(!showGridLines) {\n        delete containerOut.gridcolor;\n        delete containerOut.gridwidth;\n    }\n\n    if(!opts.noZeroLine) {\n        var zeroLineColor = coerce2('zerolinecolor', dfltColor);\n        var zeroLineWidth = coerce2('zerolinewidth');\n        var showZeroLine = coerce('zeroline', opts.showGrid || !!zeroLineColor || !!zeroLineWidth);\n\n        if(!showZeroLine) {\n            delete containerOut.zerolinecolor;\n            delete containerOut.zerolinewidth;\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}