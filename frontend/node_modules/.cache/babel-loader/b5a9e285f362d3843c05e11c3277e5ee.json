{"ast":null,"code":"module.exports = getCanvasContext;\n\nfunction getCanvasContext(type, opts) {\n  if (typeof type !== 'string') {\n    throw new TypeError('must specify type string');\n  }\n\n  opts = opts || {};\n\n  if (typeof document === 'undefined' && !opts.canvas) {\n    return null; // check for Node\n  }\n\n  var canvas = opts.canvas || document.createElement('canvas');\n\n  if (typeof opts.width === 'number') {\n    canvas.width = opts.width;\n  }\n\n  if (typeof opts.height === 'number') {\n    canvas.height = opts.height;\n  }\n\n  var attribs = opts;\n  var gl;\n\n  try {\n    var names = [type]; // prefix GL contexts\n\n    if (type.indexOf('webgl') === 0) {\n      names.push('experimental-' + type);\n    }\n\n    for (var i = 0; i < names.length; i++) {\n      gl = canvas.getContext(names[i], attribs);\n      if (gl) return gl;\n    }\n  } catch (e) {\n    gl = null;\n  }\n\n  return gl || null; // ensure null on fail\n}","map":{"version":3,"sources":["C:/Projects/reactApp/frontend/node_modules/get-canvas-context/index.js"],"names":["module","exports","getCanvasContext","type","opts","TypeError","document","canvas","createElement","width","height","attribs","gl","names","indexOf","push","i","length","getContext","e"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,gBAAjB;;AACA,SAASA,gBAAT,CAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;AACrC,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIE,SAAJ,CAAc,0BAAd,CAAN;AACD;;AAEDD,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AAEA,MAAI,OAAOE,QAAP,KAAoB,WAApB,IAAmC,CAACF,IAAI,CAACG,MAA7C,EAAqD;AACnD,WAAO,IAAP,CADmD,CACvC;AACb;;AAED,MAAIA,MAAM,GAAGH,IAAI,CAACG,MAAL,IAAeD,QAAQ,CAACE,aAAT,CAAuB,QAAvB,CAA5B;;AACA,MAAI,OAAOJ,IAAI,CAACK,KAAZ,KAAsB,QAA1B,EAAoC;AAClCF,IAAAA,MAAM,CAACE,KAAP,GAAeL,IAAI,CAACK,KAApB;AACD;;AACD,MAAI,OAAOL,IAAI,CAACM,MAAZ,KAAuB,QAA3B,EAAqC;AACnCH,IAAAA,MAAM,CAACG,MAAP,GAAgBN,IAAI,CAACM,MAArB;AACD;;AAED,MAAIC,OAAO,GAAGP,IAAd;AACA,MAAIQ,EAAJ;;AACA,MAAI;AACF,QAAIC,KAAK,GAAG,CAAEV,IAAF,CAAZ,CADE,CAEF;;AACA,QAAIA,IAAI,CAACW,OAAL,CAAa,OAAb,MAA0B,CAA9B,EAAiC;AAC/BD,MAAAA,KAAK,CAACE,IAAN,CAAW,kBAAkBZ,IAA7B;AACD;;AAED,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCJ,MAAAA,EAAE,GAAGL,MAAM,CAACW,UAAP,CAAkBL,KAAK,CAACG,CAAD,CAAvB,EAA4BL,OAA5B,CAAL;AACA,UAAIC,EAAJ,EAAQ,OAAOA,EAAP;AACT;AACF,GAXD,CAWE,OAAOO,CAAP,EAAU;AACVP,IAAAA,EAAE,GAAG,IAAL;AACD;;AACD,SAAQA,EAAE,IAAI,IAAd,CAnCqC,CAmCjB;AACrB","sourcesContent":["module.exports = getCanvasContext\nfunction getCanvasContext (type, opts) {\n  if (typeof type !== 'string') {\n    throw new TypeError('must specify type string')\n  }\n\n  opts = opts || {}\n\n  if (typeof document === 'undefined' && !opts.canvas) {\n    return null // check for Node\n  }\n\n  var canvas = opts.canvas || document.createElement('canvas')\n  if (typeof opts.width === 'number') {\n    canvas.width = opts.width\n  }\n  if (typeof opts.height === 'number') {\n    canvas.height = opts.height\n  }\n\n  var attribs = opts\n  var gl\n  try {\n    var names = [ type ]\n    // prefix GL contexts\n    if (type.indexOf('webgl') === 0) {\n      names.push('experimental-' + type)\n    }\n\n    for (var i = 0; i < names.length; i++) {\n      gl = canvas.getContext(names[i], attribs)\n      if (gl) return gl\n    }\n  } catch (e) {\n    gl = null\n  }\n  return (gl || null) // ensure null on fail\n}\n"]},"metadata":{},"sourceType":"script"}