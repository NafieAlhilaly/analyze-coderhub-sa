{"ast":null,"code":"'use strict';\n\nvar baseAttrs = require('../../plots/attributes');\n\nvar scatterAttrs = require('../scatter/attributes');\n\nvar axisHoverFormat = require('../../plots/cartesian/axis_format_attributes').axisHoverFormat;\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar sortObjectKeys = require('../../lib/sort_object_keys');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nvar DASHES = require('./constants').DASHES;\n\nvar scatterLineAttrs = scatterAttrs.line;\nvar scatterMarkerAttrs = scatterAttrs.marker;\nvar scatterMarkerLineAttrs = scatterMarkerAttrs.line;\nvar attrs = module.exports = overrideAll({\n  x: scatterAttrs.x,\n  x0: scatterAttrs.x0,\n  dx: scatterAttrs.dx,\n  y: scatterAttrs.y,\n  y0: scatterAttrs.y0,\n  dy: scatterAttrs.dy,\n  xperiod: scatterAttrs.xperiod,\n  yperiod: scatterAttrs.yperiod,\n  xperiod0: scatterAttrs.xperiod0,\n  yperiod0: scatterAttrs.yperiod0,\n  xperiodalignment: scatterAttrs.xperiodalignment,\n  yperiodalignment: scatterAttrs.yperiodalignment,\n  xhoverformat: axisHoverFormat('x'),\n  yhoverformat: axisHoverFormat('y'),\n  text: scatterAttrs.text,\n  hovertext: scatterAttrs.hovertext,\n  textposition: scatterAttrs.textposition,\n  textfont: scatterAttrs.textfont,\n  mode: {\n    valType: 'flaglist',\n    flags: ['lines', 'markers', 'text'],\n    extras: ['none'],\n    description: ['Determines the drawing mode for this scatter trace.'].join(' ')\n  },\n  line: {\n    color: scatterLineAttrs.color,\n    width: scatterLineAttrs.width,\n    shape: {\n      valType: 'enumerated',\n      values: ['linear', 'hv', 'vh', 'hvh', 'vhv'],\n      dflt: 'linear',\n      editType: 'plot',\n      description: ['Determines the line shape.', 'The values correspond to step-wise line shapes.'].join(' ')\n    },\n    dash: {\n      valType: 'enumerated',\n      values: sortObjectKeys(DASHES),\n      dflt: 'solid',\n      description: 'Sets the style of the lines.'\n    }\n  },\n  marker: extendFlat({}, colorScaleAttrs('marker'), {\n    symbol: scatterMarkerAttrs.symbol,\n    size: scatterMarkerAttrs.size,\n    sizeref: scatterMarkerAttrs.sizeref,\n    sizemin: scatterMarkerAttrs.sizemin,\n    sizemode: scatterMarkerAttrs.sizemode,\n    opacity: scatterMarkerAttrs.opacity,\n    colorbar: scatterMarkerAttrs.colorbar,\n    line: extendFlat({}, colorScaleAttrs('marker.line'), {\n      width: scatterMarkerLineAttrs.width\n    })\n  }),\n  connectgaps: scatterAttrs.connectgaps,\n  fill: extendFlat({}, scatterAttrs.fill, {\n    dflt: 'none'\n  }),\n  fillcolor: scatterAttrs.fillcolor,\n  // no hoveron\n  selected: {\n    marker: scatterAttrs.selected.marker,\n    textfont: scatterAttrs.selected.textfont\n  },\n  unselected: {\n    marker: scatterAttrs.unselected.marker,\n    textfont: scatterAttrs.unselected.textfont\n  },\n  opacity: baseAttrs.opacity\n}, 'calc', 'nested');\nattrs.x.editType = attrs.y.editType = attrs.x0.editType = attrs.y0.editType = 'calc+clearAxisTypes';\nattrs.hovertemplate = scatterAttrs.hovertemplate;\nattrs.texttemplate = scatterAttrs.texttemplate;","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/scattergl/attributes.js"],"names":["baseAttrs","require","scatterAttrs","axisHoverFormat","colorScaleAttrs","sortObjectKeys","extendFlat","overrideAll","DASHES","scatterLineAttrs","line","scatterMarkerAttrs","marker","scatterMarkerLineAttrs","attrs","module","exports","x","x0","dx","y","y0","dy","xperiod","yperiod","xperiod0","yperiod0","xperiodalignment","yperiodalignment","xhoverformat","yhoverformat","text","hovertext","textposition","textfont","mode","valType","flags","extras","description","join","color","width","shape","values","dflt","editType","dash","symbol","size","sizeref","sizemin","sizemode","opacity","colorbar","connectgaps","fill","fillcolor","selected","unselected","hovertemplate","texttemplate"],"mappings":"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","sourcesContent":["'use strict';\n\nvar baseAttrs = require('../../plots/attributes');\nvar scatterAttrs = require('../scatter/attributes');\nvar axisHoverFormat = require('../../plots/cartesian/axis_format_attributes').axisHoverFormat;\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar sortObjectKeys = require('../../lib/sort_object_keys');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar DASHES = require('./constants').DASHES;\n\nvar scatterLineAttrs = scatterAttrs.line;\nvar scatterMarkerAttrs = scatterAttrs.marker;\nvar scatterMarkerLineAttrs = scatterMarkerAttrs.line;\n\nvar attrs = module.exports = overrideAll({\n    x: scatterAttrs.x,\n    x0: scatterAttrs.x0,\n    dx: scatterAttrs.dx,\n    y: scatterAttrs.y,\n    y0: scatterAttrs.y0,\n    dy: scatterAttrs.dy,\n\n    xperiod: scatterAttrs.xperiod,\n    yperiod: scatterAttrs.yperiod,\n    xperiod0: scatterAttrs.xperiod0,\n    yperiod0: scatterAttrs.yperiod0,\n    xperiodalignment: scatterAttrs.xperiodalignment,\n    yperiodalignment: scatterAttrs.yperiodalignment,\n    xhoverformat: axisHoverFormat('x'),\n    yhoverformat: axisHoverFormat('y'),\n\n    text: scatterAttrs.text,\n    hovertext: scatterAttrs.hovertext,\n\n    textposition: scatterAttrs.textposition,\n    textfont: scatterAttrs.textfont,\n\n    mode: {\n        valType: 'flaglist',\n        flags: ['lines', 'markers', 'text'],\n        extras: ['none'],\n        description: [\n            'Determines the drawing mode for this scatter trace.'\n        ].join(' ')\n    },\n    line: {\n        color: scatterLineAttrs.color,\n        width: scatterLineAttrs.width,\n        shape: {\n            valType: 'enumerated',\n            values: ['linear', 'hv', 'vh', 'hvh', 'vhv'],\n            dflt: 'linear',\n            editType: 'plot',\n            description: [\n                'Determines the line shape.',\n                'The values correspond to step-wise line shapes.'\n            ].join(' ')\n        },\n        dash: {\n            valType: 'enumerated',\n            values: sortObjectKeys(DASHES),\n            dflt: 'solid',\n            description: 'Sets the style of the lines.'\n        }\n    },\n    marker: extendFlat({}, colorScaleAttrs('marker'), {\n        symbol: scatterMarkerAttrs.symbol,\n        size: scatterMarkerAttrs.size,\n        sizeref: scatterMarkerAttrs.sizeref,\n        sizemin: scatterMarkerAttrs.sizemin,\n        sizemode: scatterMarkerAttrs.sizemode,\n        opacity: scatterMarkerAttrs.opacity,\n        colorbar: scatterMarkerAttrs.colorbar,\n        line: extendFlat({}, colorScaleAttrs('marker.line'), {\n            width: scatterMarkerLineAttrs.width\n        })\n    }),\n    connectgaps: scatterAttrs.connectgaps,\n    fill: extendFlat({}, scatterAttrs.fill, {dflt: 'none'}),\n    fillcolor: scatterAttrs.fillcolor,\n\n    // no hoveron\n\n    selected: {\n        marker: scatterAttrs.selected.marker,\n        textfont: scatterAttrs.selected.textfont\n    },\n    unselected: {\n        marker: scatterAttrs.unselected.marker,\n        textfont: scatterAttrs.unselected.textfont\n    },\n\n    opacity: baseAttrs.opacity\n\n}, 'calc', 'nested');\n\nattrs.x.editType = attrs.y.editType = attrs.x0.editType = attrs.y0.editType = 'calc+clearAxisTypes';\nattrs.hovertemplate = scatterAttrs.hovertemplate;\nattrs.texttemplate = scatterAttrs.texttemplate;\n"]},"metadata":{},"sourceType":"script"}