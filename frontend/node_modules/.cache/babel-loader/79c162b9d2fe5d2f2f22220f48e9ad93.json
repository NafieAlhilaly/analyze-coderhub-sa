{"ast":null,"code":"'use strict';\n\nmodule.exports = function selectPoints(searchInfo, selectionTester) {\n  var cd = searchInfo.cd;\n  var xa = searchInfo.xaxis;\n  var ya = searchInfo.yaxis;\n  var trace = cd[0].trace;\n  var isFunnel = trace.type === 'funnel';\n  var isHorizontal = trace.orientation === 'h';\n  var selection = [];\n  var i;\n\n  if (selectionTester === false) {\n    // clear selection\n    for (i = 0; i < cd.length; i++) {\n      cd[i].selected = 0;\n    }\n  } else {\n    for (i = 0; i < cd.length; i++) {\n      var di = cd[i];\n      var ct = 'ct' in di ? di.ct : getCentroid(di, xa, ya, isHorizontal, isFunnel);\n\n      if (selectionTester.contains(ct, false, i, searchInfo)) {\n        selection.push({\n          pointNumber: i,\n          x: xa.c2d(di.x),\n          y: ya.c2d(di.y)\n        });\n        di.selected = 1;\n      } else {\n        di.selected = 0;\n      }\n    }\n  }\n\n  return selection;\n};\n\nfunction getCentroid(d, xa, ya, isHorizontal, isFunnel) {\n  var x0 = xa.c2p(isHorizontal ? d.s0 : d.p0, true);\n  var x1 = xa.c2p(isHorizontal ? d.s1 : d.p1, true);\n  var y0 = ya.c2p(isHorizontal ? d.p0 : d.s0, true);\n  var y1 = ya.c2p(isHorizontal ? d.p1 : d.s1, true);\n\n  if (isFunnel) {\n    return [(x0 + x1) / 2, (y0 + y1) / 2];\n  } else {\n    if (isHorizontal) {\n      return [x1, (y0 + y1) / 2];\n    } else {\n      return [(x0 + x1) / 2, y1];\n    }\n  }\n}","map":{"version":3,"sources":["C:/Projects/reactApp/analyse_coderhub/node_modules/plotly.js/src/traces/bar/select.js"],"names":["module","exports","selectPoints","searchInfo","selectionTester","cd","xa","xaxis","ya","yaxis","trace","isFunnel","type","isHorizontal","orientation","selection","i","length","selected","di","ct","getCentroid","contains","push","pointNumber","x","c2d","y","d","x0","c2p","s0","p0","x1","s1","p1","y0","y1"],"mappings":"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","sourcesContent":["'use strict';\n\nmodule.exports = function selectPoints(searchInfo, selectionTester) {\n    var cd = searchInfo.cd;\n    var xa = searchInfo.xaxis;\n    var ya = searchInfo.yaxis;\n    var trace = cd[0].trace;\n    var isFunnel = (trace.type === 'funnel');\n    var isHorizontal = (trace.orientation === 'h');\n    var selection = [];\n    var i;\n\n    if(selectionTester === false) {\n        // clear selection\n        for(i = 0; i < cd.length; i++) {\n            cd[i].selected = 0;\n        }\n    } else {\n        for(i = 0; i < cd.length; i++) {\n            var di = cd[i];\n            var ct = 'ct' in di ? di.ct : getCentroid(di, xa, ya, isHorizontal, isFunnel);\n\n            if(selectionTester.contains(ct, false, i, searchInfo)) {\n                selection.push({\n                    pointNumber: i,\n                    x: xa.c2d(di.x),\n                    y: ya.c2d(di.y)\n                });\n                di.selected = 1;\n            } else {\n                di.selected = 0;\n            }\n        }\n    }\n\n    return selection;\n};\n\nfunction getCentroid(d, xa, ya, isHorizontal, isFunnel) {\n    var x0 = xa.c2p(isHorizontal ? d.s0 : d.p0, true);\n    var x1 = xa.c2p(isHorizontal ? d.s1 : d.p1, true);\n    var y0 = ya.c2p(isHorizontal ? d.p0 : d.s0, true);\n    var y1 = ya.c2p(isHorizontal ? d.p1 : d.s1, true);\n\n    if(isFunnel) {\n        return [(x0 + x1) / 2, (y0 + y1) / 2];\n    } else {\n        if(isHorizontal) {\n            return [x1, (y0 + y1) / 2];\n        } else {\n            return [(x0 + x1) / 2, y1];\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"script"}