[{"C:\\Projects\\reactApp\\frontend\\src\\index.js":"1","C:\\Projects\\reactApp\\frontend\\src\\reportWebVitals.js":"2","C:\\Projects\\reactApp\\frontend\\src\\App.js":"3","C:\\Projects\\reactApp\\frontend\\src\\components\\Home.js":"4","C:\\Projects\\reactApp\\frontend\\src\\components\\Navbar.js":"5","C:\\Projects\\reactApp\\frontend\\src\\components\\plots\\plot.js":"6","C:\\Projects\\reactApp\\frontend\\src\\components\\tables\\Top10Table.js":"7","C:\\Projects\\reactApp\\frontend\\src\\components\\tables\\Top1Table.js":"8","C:\\Projects\\reactApp\\frontend\\src\\components\\About.js":"9","C:\\Projects\\reactApp\\frontend\\src\\components\\Downloads.js":"10","C:\\Projects\\reactApp\\frontend\\src\\components\\welcome.js":"11","C:\\Projects\\reactApp\\frontend\\src\\components\\NotFound.js":"12"},{"size":500,"mtime":1633150305346,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1633150305346,"results":"15","hashOfConfig":"14"},{"size":988,"mtime":1634228955890,"results":"16","hashOfConfig":"14"},{"size":19095,"mtime":1634187772478,"results":"17","hashOfConfig":"14"},{"size":2096,"mtime":1634226799277,"results":"18","hashOfConfig":"14"},{"size":388,"mtime":1633941591198,"results":"19","hashOfConfig":"14"},{"size":2883,"mtime":1633680750747,"results":"20","hashOfConfig":"14"},{"size":1287,"mtime":1633930014558,"results":"21","hashOfConfig":"14"},{"size":375,"mtime":1633949175555,"results":"22","hashOfConfig":"14"},{"size":1946,"mtime":1633949441258,"results":"23","hashOfConfig":"14"},{"size":3953,"mtime":1634226708765,"results":"24","hashOfConfig":"14"},{"size":226,"mtime":1634229066719,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"vx6s9j",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\reactApp\\frontend\\src\\index.js",[],["55","56"],"C:\\Projects\\reactApp\\frontend\\src\\reportWebVitals.js",[],"C:\\Projects\\reactApp\\frontend\\src\\App.js",[],"C:\\Projects\\reactApp\\frontend\\src\\components\\Home.js",["57","58","59","60","61","62","63"],"import { Col, Container, Row, Card, Button} from \"react-bootstrap\";\r\nimport \"../styles/home.css\"\r\nimport DataPlot from \"./plots/plot\"\r\nimport { useEffect, useState } from 'react'\r\nimport { Bar, Line, Doughnut} from 'react-chartjs-2';\r\nimport Plot from \"react-plotly.js\";\r\nimport Top10Table from './tables/Top10Table'\r\nimport Top1Table from './tables/Top1Table'\r\n\r\n\r\nconst Home = () => {\r\n    const [visibiliity, setVisibility] = useState(true)\r\n    const [plotSize, setPlotSize] = useState(9)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const handleVisibility = () => {\r\n        setVisibility(!visibiliity)\r\n        if(!visibiliity){\r\n            setPlotSize(9)\r\n        }else{\r\n            setPlotSize(12)\r\n        }\r\n        \r\n    } \r\n\r\n    const [top10Data, setTop10Data] = useState({\"users\":{\"0\":\"ahmed0ksa\",\"1\":\"alxd7my\",\"2\":\"iX901\",\"3\":\"ahmadajr1\",\"4\":\"vdotup\",\"5\":\"LulwahAlmisfer\",\"6\":\"iam.that.1\",\"7\":\"fayadh\",\"8\":\"eengmaher\",\"9\":\"f.babkoor\",\"10\":\"TheAwiteb\",\"11\":\"hamoud47\",\"12\":\"dssaggaf\",\"13\":\"fahad.alharthi\",\"14\":\"maldum\",\"15\":\"snap-aaa.saq\",\"16\":\"thenajjar\",\"17\":\"nnoaid\",\"18\":\"asma94\",\"19\":\"saud1983\",\"20\":\"shuruqsaeed\",\"21\":\"Ibrahim_Alrubayyi\",\"22\":\"x7md\",\"23\":\"ghadyana\",\"24\":\"masha\",\"25\":\"qabdull4h\",\"26\":\"salehalibrahim\",\"27\":\"aisha_j\",\"28\":\"lum\",\"29\":\"abdulrahmansbq\",\"30\":\"sircaesar\",\"31\":\"musaadtech\",\"32\":\"abdullahmq\",\"33\":\"haider_dev94\",\"34\":\"alsenani\",\"35\":\"alharbi\",\"36\":\"jstsercuz\",\"37\":\"arwa\",\"38\":\"bandaralrooqi\",\"39\":\"asma94\",\"40\":\"salman\",\"41\":\"shuruqsaeed\",\"42\":\"amjad.a\",\"43\":\"ib.subaie\",\"44\":\"golag7\",\"45\":\"reham721\",\"46\":\"abdulrahmansbq\",\"47\":\"TheAwiteb\",\"48\":\"asma94\",\"49\":\"dssaggaf\",\"50\":\"salman\",\"51\":\"abdulrahmansbq\",\"52\":\"golag7\",\"53\":\"reham721\",\"54\":\"ahmadshahal\",\"55\":\"amjad.a\",\"56\":\"amira\",\"57\":\"sal7one\",\"58\":\"haider_dev94\",\"59\":\"TheAwiteb\"},\"points\":{\"0\":921.0,\"1\":911.0,\"2\":906.0,\"3\":906.0,\"4\":906.0,\"5\":906.0,\"6\":901.0,\"7\":891.0,\"8\":846.0,\"9\":820.0,\"10\":926.0,\"11\":926.0,\"12\":921.0,\"13\":916.0,\"14\":916.0,\"15\":911.0,\"16\":906.0,\"17\":906.0,\"18\":906.0,\"19\":906.0,\"20\":931.0,\"21\":931.0,\"22\":931.0,\"23\":926.0,\"24\":921.0,\"25\":916.0,\"26\":911.0,\"27\":911.0,\"28\":911.0,\"29\":906.0,\"30\":916.0,\"31\":916.0,\"32\":911.0,\"33\":911.0,\"34\":911.0,\"35\":911.0,\"36\":911.0,\"37\":911.0,\"38\":911.0,\"39\":906.0,\"40\":91.0,\"41\":91.0,\"42\":91.0,\"43\":91.0,\"44\":91.0,\"45\":91.0,\"46\":91.0,\"47\":91.0,\"48\":91.0,\"49\":91.0,\"50\":91.0,\"51\":91.0,\"52\":91.0,\"53\":91.0,\"54\":91.0,\"55\":91.0,\"56\":91.0,\"57\":91.0,\"58\":91.0,\"59\":91.0},\"rank\":{\"0\":1,\"1\":2,\"2\":3,\"3\":4,\"4\":5,\"5\":6,\"6\":7,\"7\":8,\"8\":9,\"9\":10,\"10\":1,\"11\":2,\"12\":3,\"13\":4,\"14\":5,\"15\":6,\"16\":7,\"17\":8,\"18\":9,\"19\":10,\"20\":1,\"21\":2,\"22\":3,\"23\":4,\"24\":5,\"25\":6,\"26\":7,\"27\":8,\"28\":9,\"29\":10,\"30\":1,\"31\":2,\"32\":3,\"33\":4,\"34\":5,\"35\":6,\"36\":7,\"37\":8,\"38\":9,\"39\":10,\"40\":1,\"41\":2,\"42\":3,\"43\":4,\"44\":5,\"45\":6,\"46\":7,\"47\":8,\"48\":9,\"49\":10,\"50\":1,\"51\":2,\"52\":3,\"53\":4,\"54\":5,\"55\":6,\"56\":7,\"57\":8,\"58\":9,\"59\":10},\"language\":{\"0\":\"swift\",\"1\":\"swift\",\"2\":\"swift\",\"3\":\"swift\",\"4\":\"swift\",\"5\":\"swift\",\"6\":\"swift\",\"7\":\"swift\",\"8\":\"swift\",\"9\":\"swift\",\"10\":\"python\",\"11\":\"python\",\"12\":\"python\",\"13\":\"python\",\"14\":\"python\",\"15\":\"python\",\"16\":\"python\",\"17\":\"python\",\"18\":\"python\",\"19\":\"python\",\"20\":\"javascript\",\"21\":\"javascript\",\"22\":\"javascript\",\"23\":\"javascript\",\"24\":\"javascript\",\"25\":\"javascript\",\"26\":\"javascript\",\"27\":\"javascript\",\"28\":\"javascript\",\"29\":\"javascript\",\"30\":\"java\",\"31\":\"java\",\"32\":\"java\",\"33\":\"java\",\"34\":\"java\",\"35\":\"java\",\"36\":\"java\",\"37\":\"java\",\"38\":\"java\",\"39\":\"java\",\"40\":\"c#\",\"41\":\"c#\",\"42\":\"c#\",\"43\":\"c#\",\"44\":\"c#\",\"45\":\"c#\",\"46\":\"c#\",\"47\":\"c#\",\"48\":\"c#\",\"49\":\"c#\",\"50\":\"kotlin\",\"51\":\"kotlin\",\"52\":\"kotlin\",\"53\":\"kotlin\",\"54\":\"kotlin\",\"55\":\"kotlin\",\"56\":\"kotlin\",\"57\":\"kotlin\",\"58\":\"kotlin\",\"59\":\"kotlin\"},\"total_challenges_solved\":{\"0\":107,\"1\":106,\"2\":105,\"3\":105,\"4\":105,\"5\":105,\"6\":105,\"7\":103,\"8\":101,\"9\":100,\"10\":108,\"11\":108,\"12\":107,\"13\":107,\"14\":107,\"15\":106,\"16\":105,\"17\":\"private\",\"18\":105,\"19\":\"private\",\"20\":109,\"21\":109,\"22\":109,\"23\":108,\"24\":108,\"25\":106,\"26\":\"private\",\"27\":106,\"28\":\"private\",\"29\":105,\"30\":107,\"31\":107,\"32\":106,\"33\":106,\"34\":106,\"35\":106,\"36\":106,\"37\":106,\"38\":106,\"39\":105,\"40\":6,\"41\":6,\"42\":6,\"43\":\"private\",\"44\":\"private\",\"45\":\"private\",\"46\":6,\"47\":6,\"48\":6,\"49\":6,\"50\":6,\"51\":6,\"52\":\"private\",\"53\":\"private\",\"54\":\"private\",\"55\":6,\"56\":\"private\",\"57\":6,\"58\":6,\"59\":6},\"total_challenges_solved_all_languages\":{\"0\":107,\"1\":114,\"2\":105,\"3\":105,\"4\":213,\"5\":107,\"6\":146,\"7\":103,\"8\":102,\"9\":100,\"10\":165,\"11\":129,\"12\":146,\"13\":113,\"14\":179,\"15\":110,\"16\":105,\"17\":\"private\",\"18\":237,\"19\":\"private\",\"20\":144,\"21\":120,\"22\":125,\"23\":114,\"24\":141,\"25\":191,\"26\":\"private\",\"27\":108,\"28\":\"private\",\"29\":135,\"30\":214,\"31\":113,\"32\":110,\"33\":118,\"34\":120,\"35\":233,\"36\":113,\"37\":205,\"38\":142,\"39\":237,\"40\":85,\"41\":144,\"42\":84,\"43\":\"private\",\"44\":\"private\",\"45\":\"private\",\"46\":135,\"47\":165,\"48\":237,\"49\":146,\"50\":85,\"51\":135,\"52\":\"private\",\"53\":\"private\",\"54\":\"private\",\"55\":84,\"56\":\"private\",\"57\":6,\"58\":118,\"59\":165},\"total_easy_solved\":{\"0\":60,\"1\":64,\"2\":59,\"3\":59,\"4\":131,\"5\":60,\"6\":88,\"7\":57,\"8\":60,\"9\":58,\"10\":88,\"11\":82,\"12\":79,\"13\":66,\"14\":112,\"15\":63,\"16\":59,\"17\":\"private\",\"18\":129,\"19\":\"private\",\"20\":79,\"21\":68,\"22\":76,\"23\":67,\"24\":74,\"25\":116,\"26\":\"private\",\"27\":61,\"28\":\"private\",\"29\":69,\"30\":125,\"31\":67,\"32\":64,\"33\":64,\"34\":69,\"35\":134,\"36\":67,\"37\":117,\"38\":79,\"39\":129,\"40\":44,\"41\":79,\"42\":35,\"43\":\"private\",\"44\":\"private\",\"45\":\"private\",\"46\":69,\"47\":88,\"48\":129,\"49\":79,\"50\":44,\"51\":69,\"52\":\"private\",\"53\":\"private\",\"54\":\"private\",\"55\":35,\"56\":\"private\",\"57\":2,\"58\":64,\"59\":88},\"total_medium_solved\":{\"0\":34,\"1\":35,\"2\":33,\"3\":33,\"4\":59,\"5\":34,\"6\":42,\"7\":33,\"8\":31,\"9\":31,\"10\":54,\"11\":34,\"12\":44,\"13\":34,\"14\":49,\"15\":34,\"16\":33,\"17\":\"private\",\"18\":74,\"19\":\"private\",\"20\":44,\"21\":36,\"22\":35,\"23\":34,\"24\":44,\"25\":51,\"26\":\"private\",\"27\":34,\"28\":\"private\",\"29\":43,\"30\":65,\"31\":33,\"32\":33,\"33\":37,\"34\":35,\"35\":74,\"36\":33,\"37\":64,\"38\":41,\"39\":74,\"40\":24,\"41\":44,\"42\":30,\"43\":\"private\",\"44\":\"private\",\"45\":\"private\",\"46\":43,\"47\":54,\"48\":74,\"49\":44,\"50\":24,\"51\":43,\"52\":\"private\",\"53\":\"private\",\"54\":\"private\",\"55\":30,\"56\":\"private\",\"57\":2,\"58\":37,\"59\":54},\"total_hard_solved\":{\"0\":13,\"1\":15,\"2\":13,\"3\":13,\"4\":23,\"5\":13,\"6\":16,\"7\":13,\"8\":11,\"9\":11,\"10\":23,\"11\":13,\"12\":23,\"13\":13,\"14\":18,\"15\":13,\"16\":13,\"17\":\"private\",\"18\":34,\"19\":\"private\",\"20\":21,\"21\":16,\"22\":14,\"23\":13,\"24\":23,\"25\":24,\"26\":\"private\",\"27\":13,\"28\":\"private\",\"29\":23,\"30\":24,\"31\":13,\"32\":13,\"33\":17,\"34\":16,\"35\":25,\"36\":13,\"37\":24,\"38\":22,\"39\":34,\"40\":17,\"41\":21,\"42\":19,\"43\":\"private\",\"44\":\"private\",\"45\":\"private\",\"46\":23,\"47\":23,\"48\":34,\"49\":23,\"50\":17,\"51\":23,\"52\":\"private\",\"53\":\"private\",\"54\":\"private\",\"55\":19,\"56\":\"private\",\"57\":2,\"58\":17,\"59\":23},\"total_points_all_challenges\":{\"0\":900,\"1\":970,\"2\":885,\"3\":885,\"4\":1705,\"5\":900,\"6\":1180,\"7\":875,\"8\":830,\"9\":820,\"10\":1440,\"11\":1010,\"12\":1295,\"13\":930,\"14\":1410,\"15\":915,\"16\":885,\"17\":\"private\",\"18\":2065,\"19\":\"private\",\"20\":1255,\"21\":1020,\"22\":1010,\"23\":935,\"24\":1270,\"25\":1570,\"26\":\"private\",\"27\":905,\"28\":\"private\",\"29\":1235,\"30\":1755,\"31\":925,\"32\":910,\"33\":1030,\"34\":1015,\"35\":1910,\"36\":925,\"37\":1705,\"38\":1245,\"39\":2065,\"40\":800,\"41\":1255,\"42\":855,\"43\":\"private\",\"44\":\"private\",\"45\":\"private\",\"46\":1235,\"47\":1440,\"48\":2065,\"49\":1295,\"50\":800,\"51\":1235,\"52\":\"private\",\"53\":\"private\",\"54\":\"private\",\"55\":855,\"56\":\"private\",\"57\":70,\"58\":1030,\"59\":1440}}) \r\n    const [top1Data, setTop1Data] = useState({\"users\":{\"0\":\"ahmed0ksa\",\"10\":\"TheAwiteb\",\"20\":\"shuruqsaeed\",\"30\":\"sircaesar\",\"40\":\"salman\",\"50\":\"salman\"},\"points\":{\"0\":921.0,\"10\":926.0,\"20\":931.0,\"30\":916.0,\"40\":91.0,\"50\":91.0},\"rank\":{\"0\":1,\"10\":1,\"20\":1,\"30\":1,\"40\":1,\"50\":1},\"language\":{\"0\":\"swift\",\"10\":\"python\",\"20\":\"javascript\",\"30\":\"java\",\"40\":\"c#\",\"50\":\"kotlin\"},\"total_challenges_solved\":{\"0\":107,\"10\":108,\"20\":109,\"30\":107,\"40\":6,\"50\":6},\"total_challenges_solved_all_languages\":{\"0\":107,\"10\":165,\"20\":144,\"30\":214,\"40\":85,\"50\":85},\"total_easy_solved\":{\"0\":60,\"10\":88,\"20\":79,\"30\":125,\"40\":44,\"50\":44},\"total_medium_solved\":{\"0\":34,\"10\":54,\"20\":44,\"30\":65,\"40\":24,\"50\":24},\"total_hard_solved\":{\"0\":13,\"10\":23,\"20\":21,\"30\":24,\"40\":17,\"50\":17},\"total_points_all_challenges\":{\"0\":900,\"10\":1440,\"20\":1255,\"30\":1755,\"40\":800,\"50\":800}})\r\n    const [challengesData, setChallengesData] = useState([50, 31, 11, 98])\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://analyze-coderhub.herokuapp.com/challenges_data\")\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setChallengesData(\r\n                [\r\n                    data.easy_challenges, \r\n                    data.medium_challenges,\r\n                    data.hard_challenges,\r\n                    data.all_challenges,\r\n                ])})\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        fetch(\"https://analyze-coderhub.herokuapp.com/top1_users_data\")\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setTop1Data(data)})\r\n    }, \r\n    [])\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://analyze-coderhub.herokuapp.com/top10_users_data\")\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setTop10Data(data)\r\n            setIsLoading(false)})\r\n    }, \r\n    [])\r\n    const langs = [...new Set(Object.values(top10Data.language))]\r\n\r\n    const [selectedLang, setSelectedLang] = useState(langs[0])\r\n    const [plot, setPlot] = useState(0)\r\n    \r\n    \r\n    const qryUsersPerLang = [Object.values(top10Data.users), Object.values(top10Data.language)]\r\n    const qryAllPoints = [Object.values(top10Data.total_points_all_challenges), Object.values(top10Data.language)]\r\n    const qryPoints = [Object.values(top10Data.points), Object.values(top10Data.language)]\r\n    const qryEasySolved = [Object.values(top10Data.total_easy_solved), Object.values(top10Data.language)]\r\n    const qryMedSolved = [Object.values(top10Data.total_medium_solved), Object.values(top10Data.language)]\r\n    const qryHardSolved = [Object.values(top10Data.total_hard_solved), Object.values(top10Data.language)]\r\n    \r\n    \r\n    const user_lang = []\r\n    const rank1PerLang = []\r\n    const user_language_points = []\r\n    const user_total_points = []\r\n\r\n    const user_easy_solved_points = []\r\n    const user_easy_solved_count = []\r\n\r\n    const user_med_solved_points = []\r\n    const user_med_solved_count = []\r\n\r\n    const user_hard_solved_points = []\r\n    const user_hard_solved_count = []\r\n\r\n    const rank1Users = []\r\n\r\n    for(let i = 0; i < langs.length; i++){\r\n        let counter = 0\r\n        qryUsersPerLang[1].forEach((itm, inx)=> {\r\n            if(itm === langs[i] && counter < 1){\r\n                rank1PerLang.push(qryUsersPerLang[0][inx])\r\n                counter += 1\r\n            }\r\n        })\r\n    }\r\n\r\n    qryUsersPerLang[1].forEach((itm, inx)=> {\r\n        if(itm === selectedLang){\r\n            user_lang.push(qryUsersPerLang[0][inx])\r\n        }\r\n    })\r\n\r\n    qryAllPoints[1].forEach((itm, inx)=> {\r\n        if(itm === selectedLang){\r\n            if(qryAllPoints[0][inx] != \"private\"){\r\n                user_total_points.push(qryAllPoints[0][inx])\r\n            }else{\r\n                user_total_points.push(0)\r\n            }\r\n        }\r\n    })\r\n\r\n    qryPoints[1].forEach((itm, inx)=> {\r\n        if(itm === selectedLang){\r\n            user_language_points.push(qryPoints[0][inx])\r\n        }\r\n    })\r\n\r\n    qryEasySolved[1].forEach((itm, inx)=> {\r\n        if(itm === selectedLang){\r\n            if(qryEasySolved[0][inx] != \"private\"){\r\n                user_easy_solved_points.push((qryEasySolved[0][inx])*5)\r\n                user_easy_solved_count.push(qryEasySolved[0][inx])\r\n            }else{\r\n                user_easy_solved_points.push(0)\r\n                user_easy_solved_count.push(0)\r\n            }\r\n        }\r\n    })\r\n\r\n    qryMedSolved[1].forEach((itm, inx)=> {\r\n        if(itm === selectedLang){\r\n            if(qryMedSolved[0][inx] != \"private\"){\r\n                user_med_solved_points.push((qryMedSolved[0][inx])*10)\r\n                user_med_solved_count.push(qryMedSolved[0][inx])\r\n            }else{\r\n                user_med_solved_points.push(0)\r\n                user_med_solved_count.push(0)\r\n            }\r\n        }\r\n    })\r\n\r\n    qryHardSolved[1].forEach((itm, inx)=> {\r\n        if(itm === selectedLang){\r\n            if(qryHardSolved[0][inx] != \"private\"){\r\n                user_hard_solved_points.push((qryHardSolved[0][inx])*20)\r\n                user_hard_solved_count.push(qryHardSolved[0][inx])\r\n            }else{\r\n                user_hard_solved_points.push(0)\r\n                user_hard_solved_count.push(0)\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    const genPointsData = () => {\r\n        return {\r\n        labels: user_lang,\r\n        datasets: [\r\n            {\r\n            label: 'Totel points for all challenges',\r\n            backgroundColor: \"#abb8c3\",\r\n            data: user_total_points,\r\n            },\r\n            {\r\n            label: 'Totel points for easy challenges',\r\n            backgroundColor: \"#008b02\",\r\n            data: user_easy_solved_points,\r\n            },\r\n            {\r\n            label: 'Totel points for medium challenges',\r\n            backgroundColor: \"#fcb900\",\r\n            data: user_med_solved_points,\r\n            },\r\n            {\r\n            label: 'Totel points for hard challenges',\r\n            backgroundColor: \"#b80000\",\r\n            data: user_hard_solved_points,\r\n            }\r\n        ],\r\n        };\r\n    };\r\n\r\n    const genChallengesData = () => {\r\n        return {\r\n        labels: user_lang,\r\n        datasets: [\r\n            {\r\n            label: 'Totel solved easy challenges',\r\n            backgroundColor: \"#008b02\",\r\n            data: user_easy_solved_count,\r\n            },\r\n            {\r\n            label: 'Totel solved medium challenges',\r\n            backgroundColor: \"#fcb900\",\r\n            data: user_med_solved_count,\r\n            },\r\n            {\r\n            label: 'Totel solved hard challenges',\r\n            backgroundColor: \"#b80000\",\r\n            data: user_hard_solved_count,\r\n            }\r\n        ],\r\n        };\r\n    };\r\n\r\n    const genPieData = () => {\r\n        return {\r\n        datasets: [\r\n            {\r\n            data: [\r\n                challengesData[0],\r\n                challengesData[1],\r\n                challengesData[2]\r\n            ],\r\n            backgroundColor: ['#33bb35', '#fcb900', '#b80000'],\r\n            label: 'Challenges',\r\n            },\r\n        ],\r\n        labels: ['Easy', 'Medium', 'Hard'],\r\n        };\r\n    };\r\n\r\n    const handleLangChange = (e)=> {\r\n        setSelectedLang(e.target.value);\r\n    }\r\n\r\n    const bar_points = <Bar data={genPointsData()} options= {\r\n        //Customize chart options\r\n        {responsive: true,\r\n        rotation:90,\r\n        maxRotation: 90\r\n        }\r\n      }/>\r\n    const bar_challenges = <Bar data={genChallengesData()} />\r\n\r\n    const plots = [bar_points, bar_challenges]\r\n\r\n    const handlePlotChange = (e) => {\r\n        setPlot(e.target.value)\r\n    }\r\n    const tables = [<Top10Table id=\"top10-table\" langs={langs} user_lang={user_lang} \r\n                                user_language_points={user_language_points}\r\n                                handleLangChange={handleLangChange}\r\n                                handlePlotChange={handlePlotChange} />,\r\n                    <Top1Table langs={langs} users={top1Data.users} \r\n                                            rank1PerLang ={rank1PerLang}\r\n                                            total_points = {Object.values(top1Data.total_points_all_challenges)} />]\r\n    \r\n    \r\n    const [selectedTable, setSelectedTable] = useState(0)\r\n    \r\n    const vizOptionsLst = [<Card  className=\"slow-tran shadow p-2 shadow-lg rounded\">\r\n                        <Row>\r\n                            <Col xs={1}>\r\n                            <Button variant=\"btn d-none d-md-block\" onClick={handleVisibility}><i class=\"bi bi-arrows-fullscreen\"></i></Button>\r\n                            </Col>\r\n                            <Col md={11}>\r\n                                <select className=\"form-select\" onClick={handlePlotChange}>\r\n                                    <option value={0}>Points</option>\r\n                                    <option value={1}>Challenges</option>  \r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        {plots[plot]}\r\n                    </Card>,\r\n\r\n                    <Card  className=\"shadow p-2 shadow-lg rounded\">\r\n                        <Button variant=\"btn d-none d-md-block expand-btn\" onClick={handleVisibility}><i class=\"bi bi-arrows-fullscreen\"></i></Button>\r\n                        <DataPlot \r\n                            users={top1Data.users}\r\n                            points={Object.values(top1Data.total_points_all_challenges)}\r\n                        ></DataPlot>\r\n                    </Card>]\r\n\r\n    const [selectedViz, setSelectedViz] = useState(0)\r\n    \r\n\r\n    const handViewChang = (e) => {\r\n        setSelectedTable(e.target.value)\r\n        setSelectedViz(e.target.value)\r\n    }\r\n    return (\r\n        <Container fluid>\r\n            { isLoading && <p>updating data ...</p>}\r\n            <Row >\r\n                <Col xs={12} md={3}>\r\n                    <Card className=\"h-75 shadow p-2 bg-success rounded  text-light d-none d-md-block\">\r\n                        <h2>{challengesData[0]}</h2>\r\n                        <p>Easy challenges</p>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={12} md={3}>\r\n                    <Card className=\"h-75 shadow p-2 bg-warning rounded  text-light d-none d-md-block\">\r\n                        <h2>{challengesData[1]}</h2>\r\n                        <p>Medium challenges</p>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={12} md={3}>\r\n                    <Card className=\"h-75 shadow p-2 pb-3 bg-danger rounded  text-light d-none d-md-block\">\r\n                        <h2>{challengesData[2]}</h2>\r\n                        <p>Hard challenges</p>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={12} md={3}>\r\n                    <Card className=\"h-75 shadow p-2 rounded d-none d-md-block \">\r\n                        <h2>{challengesData[3]}</h2>\r\n                        <p>All challenges</p>\r\n                    </Card>\r\n                </Col>\r\n                <Card className=\"d-block d-md-none d-flex \">\r\n                    <h3 className=\"align-self-center\">All challenges 98</h3>\r\n                    <Doughnut data={genPieData()} />\r\n                </Card>\r\n                <Col lg={3} ml={1}>\r\n                    <select className=\"form-select\" onClick={handViewChang}>\r\n                        <option value={0}>Top 10</option>\r\n                        <option value={1}>Rank 1</option>  \r\n                    </select>\r\n                    { visibiliity && tables[selectedTable]}\r\n                </Col>\r\n                <Col lg={plotSize}>\r\n                    {vizOptionsLst[selectedViz]}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Projects\\reactApp\\frontend\\src\\components\\Navbar.js",["64","65"],"import { Col, Container, Row , Button} from \"react-bootstrap\";\r\nimport \"../styles/navbar.css\"\r\nimport { useState } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\n\r\n\r\nconst Navbar = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    return (\r\n        <nav className = \"navbar-1 shadow-lg mb-3 \">\r\n            <div className=\"upper-line\"></div>\r\n            <Row>\r\n                <Col xs={10} md={6} lg={8}><h1 className=\"p-2\"><a href=\"/\">Analyse Coderhub</a></h1></Col>\r\n\r\n                <Col xs={2} md={5} lg={4}>\r\n                    {/* hide on small screen */}\r\n                    <div className=\"mt-3 links d-none d-md-block \">\r\n                        <a href=\"/home\" className=\"navbar-item\"><i className=\"bi bi-house-door-fill\"></i> Home</a>\r\n                        <a href=\"/about\" className=\"navbar-item\"><i className=\"bi bi-info-circle\"></i> About</a>\r\n                        <a href=\"/downloads\" className=\"navbar-item\"><i className=\"bi bi-file-earmark-spreadsheet\"></i> Downlaods</a>\r\n                    </div>\r\n\r\n                    {/*hide on medium and larger screens*/}\r\n                    <div className=\"d-block d-md-none d-flex \">\r\n                        <Button className=\"btn-light mt-1 btn btn-outline-dark\" \r\n                                onClick={() => setVisible(!visible)}>{visible ? '' : ''}<i \r\n                                className=\"bi bi-list\"></i></Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            {visible &&\r\n                <div id=\"menu\" className=\"card border border-dark d-block d-md-none\">\r\n                <Row>\r\n                    <a href=\"/home\" className=\"navbar-item\"><i className=\"bi bi-house-door-fill\"></i> Home</a>\r\n                    <a href=\"/about\" className=\"navbar-item\"><i className=\"bi bi-info-circle\"></i> About</a>\r\n                    <a href=\"/downloads\" className=\"navbar-item\"><i className=\"bi bi-file-earmark-spreadsheet\"></i> Downlaods</a>\r\n                </Row>\r\n                </div>\r\n            }\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","C:\\Projects\\reactApp\\frontend\\src\\components\\plots\\plot.js",[],"C:\\Projects\\reactApp\\frontend\\src\\components\\tables\\Top10Table.js",[],"C:\\Projects\\reactApp\\frontend\\src\\components\\tables\\Top1Table.js",[],"C:\\Projects\\reactApp\\frontend\\src\\components\\About.js",[],"C:\\Projects\\reactApp\\frontend\\src\\components\\Downloads.js",["66"],"import { Card, Container, Button, Col, Row } from \"react-bootstrap\";\r\n\r\nconst Downlaods = () => {\r\n    return (\r\n        <Container>\r\n                <Card className=\"shadow p-2 shadow-lg rounded mt-5 w-75 m-auto\">\r\n                    <Row>\r\n                        <Col xs={10} md={11}>\r\n                            <h3>Top 10 users</h3>\r\n                        </Col>\r\n                        <Col >\r\n                            <a href=\"https://analyze-coderhub.herokuapp.com/top10_file\" className=\"w-25\"><i className=\"bi bi-download\"></i></a>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <p>A sheet file containing dataset of coderhub.sa <b>top 10 users</b> in the <a href=\"https://coderhub.sa/leaderboard\">leaderboard</a> for every programming language available.</p>\r\n                </Card>\r\n                <Card className=\"shadow p-2 shadow-lg rounded mt-5 w-75 m-auto\">\r\n                    <Row>\r\n                        <Col xs={10} md={11}>\r\n                            <h3>Rank 1 users</h3>\r\n                        </Col>\r\n                        <Col >\r\n                            <a href=\"https://analyze-coderhub.herokuapp.com/rank1_file\" className=\"w-25\"><i className=\"bi bi-download\"></i></a>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <p>A sheet file containing dataset of coderhub.sa <b>rank 1 users</b> in the <a href=\"https://coderhub.sa/leaderboard\">leaderboard</a> every programming language available.</p>\r\n                </Card>\r\n                <hr></hr>\r\n                <footer>\r\n                    <p >Interested in getting more data from <a href=\"https://coderhub.sa/home\">Coderhub.sa</a> APIs ? check out my <a href=\"https://github.com/NafieAlhilaly/coderHub\">repo</a> on Gethub</p>\r\n                </footer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Downlaods;","C:\\Projects\\reactApp\\frontend\\src\\components\\welcome.js",["67","68","69","70","71","72","73","74","75","76"],"import \"../styles/welcome.css\"\r\nimport { plot } from \"plotly.js\";\r\nimport { Card, Container, Button, Col, Row } from \"react-bootstrap\";\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\nimport home_img from \"../statics/imgs/home_scrn.jpg\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Welcome = () => {\r\n    return (\r\n        <section className=\"bg-image\">\r\n            <div className=\"welc-div\">\r\n                <Row>\r\n                    <div className=\"p-2 \">\r\n                        <Row>\r\n                            <h1 className=\"large-text d-flex justify-content-center\"><b>Get a wider angle</b></h1>\r\n                            <h5 className=\" d-flex justify-content-center\">Explore coderhub.sa leaderboard data in a better way and gain more insights</h5>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"mt-2 d-flex justify-content-center mt-5 \">\r\n                        <img className=\"image shadow-lg d-block d-sm-none\" src={home_img} height={150} width={340}></img>\r\n                        <img className=\"image shadow-lg d-none d-sx-none d-sm-block d-lg-none\" src={home_img} height={200} width={400}></img>\r\n                        <img className=\"image shadow-lg d-none d-lg-none \" src={home_img} height={300} width={500}></img>\r\n                        <img className=\"image shadow-lg d-none d-lg-block\" src={home_img} height={500} width={900}></img>\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n                <Row>\r\n                    <Col md={4}>\r\n                    <article className=\"p-2\">\r\n                        <h3 className=\"d-flex justify-content-center\"><b>Explore in-depth</b></h3>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                        <ul>\r\n                            <li>Top 10 for any language</li>\r\n                            <li>Rank 1 in all language</li>\r\n                        </ul>\r\n                        </div>\r\n                    </article>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <article className=\"p-2\">\r\n                        <h3 className=\"d-flex justify-content-center\"><b>Download files</b></h3>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                        <ul>\r\n                            <li>Top 10 users dataset for all languages</li>\r\n                            <li>Rank 1 users dataset for all languages</li>\r\n                        </ul>\r\n                        </div>\r\n                    </article>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <article className=\"p-2\">\r\n                        <h3 className=\"d-flex justify-content-center\"><b>Search by username</b></h3>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                        <p>Soon</p>\r\n                        </div>\r\n                    </article>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <section className=\"mt-4 d-flex justify-content-center\">\r\n                <a href=\"/home\" className =\"start-btn\">Get started</a>\r\n            </section>\r\n            <hr></hr>\r\n            <footer className=\"mt-4 d-flex justify-content-center\">\r\n                <Row>\r\n                <p className=\"d-flex justify-content-center\">Devoleped by Nafie Alhelaly</p>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <h1 className=\"m-1\"><a className=\"link-white\" href=\"https://www.linkedin.com/in/nafie-alhilaly/\"><i class=\"bi bi-linkedin\"></i></a></h1>\r\n                    <h1 className=\"m-1\"><a className=\"link-white\" href=\"https://github.com/NafieAlhilaly\"><i class=\"bi bi-github\"></i></a></h1>\r\n                </div>\r\n                </Row>\r\n            </footer>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Welcome;","C:\\Projects\\reactApp\\frontend\\src\\components\\NotFound.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":5,"column":15,"nodeType":"83","messageId":"84","endLine":5,"endColumn":19},{"ruleId":"81","severity":1,"message":"85","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":12},{"ruleId":"81","severity":1,"message":"86","line":93,"column":11,"nodeType":"83","messageId":"84","endLine":93,"endColumn":21},{"ruleId":"87","severity":1,"message":"88","line":113,"column":37,"nodeType":"89","messageId":"90","endLine":113,"endColumn":39},{"ruleId":"87","severity":1,"message":"88","line":129,"column":38,"nodeType":"89","messageId":"90","endLine":129,"endColumn":40},{"ruleId":"87","severity":1,"message":"88","line":141,"column":37,"nodeType":"89","messageId":"90","endLine":141,"endColumn":39},{"ruleId":"87","severity":1,"message":"88","line":153,"column":38,"nodeType":"89","messageId":"90","endLine":153,"endColumn":40},{"ruleId":"81","severity":1,"message":"91","line":1,"column":15,"nodeType":"83","messageId":"84","endLine":1,"endColumn":24},{"ruleId":"81","severity":1,"message":"92","line":4,"column":9,"nodeType":"83","messageId":"84","endLine":4,"endColumn":13},{"ruleId":"81","severity":1,"message":"93","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":33},{"ruleId":"81","severity":1,"message":"94","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"81","severity":1,"message":"95","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"81","severity":1,"message":"91","line":3,"column":16,"nodeType":"83","messageId":"84","endLine":3,"endColumn":25},{"ruleId":"81","severity":1,"message":"93","line":3,"column":27,"nodeType":"83","messageId":"84","endLine":3,"endColumn":33},{"ruleId":"81","severity":1,"message":"96","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":25},{"ruleId":"81","severity":1,"message":"92","line":6,"column":9,"nodeType":"83","messageId":"84","endLine":6,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":20,"column":25,"nodeType":"99","endLine":20,"endColumn":116},{"ruleId":"97","severity":1,"message":"98","line":21,"column":25,"nodeType":"99","endLine":21,"endColumn":136},{"ruleId":"97","severity":1,"message":"98","line":22,"column":25,"nodeType":"99","endLine":22,"endColumn":116},{"ruleId":"97","severity":1,"message":"98","line":23,"column":25,"nodeType":"99","endLine":23,"endColumn":116},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Line' is defined but never used.","Identifier","unusedVar","'Plot' is defined but never used.","'rank1Users' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Container' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'plot' is defined but never used.","'Card' is defined but never used.","'SimpleImageSlider' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]